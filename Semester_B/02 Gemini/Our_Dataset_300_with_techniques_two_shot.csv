Sid,Response,Technique_id,True_labels
50094,"[
     ""sid"": ""50094"",
     ""Technique ID"": ""T1230"",
     ""Technique name"": ""Domain Generation Algorithms"",
     ""Quotes"": """"Domain Generation Algorithms (DGAs) are techniques used by adversaries to generate and register domain names used for malicious infrastructure. The rule detects an attempt to create a DGA-generated domain by generating a crafted HTTP request containing a specific file path."""",
     ""Explanation"": ""This event is generated when a request contains the ""img src=|27|file://RespProxySrv/pictures/logo.jpg|27|"" string, which matches an HTTP file request for a specific file from a responder proxy server, indicating a possible DGA activity.""
 ][
         ""sid"": ""50094"",
         ""Technique ID"": ""T1598"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted 'Responder' poisoner attack on HTTP, which involves manipulating DNS responses to redirect victim traffic to a malicious site."""",
         ""Explanation"": ""The IDS rule looks for the string ""file://RespProxySrv/pictures/logo.jpg"" in HTTP traffic, which is a pattern associated with the 'Responder' DNS poisoning attack. By matching this pattern, the rule can identify and block attempts to execute this attack.""
     ][
   {
     ""sid"": ""50094"",
     ""Technique ID"": ""T1592"",
     ""Technique name"": ""Gather Victim Host Information"",
     ""Quotes"": """"Gather Victim Host Information techniques involve gathering information about the victim's hosts that can be used during targeting. This rule detects an attempt to gather information about a host using file_data via a Responder poisoner HTTP attack, which is a common technique attackers use to gather information about target systems."""",
     ""Explanation"": ""This event is generated when activity relating to file_data is detected.""
   },
   {
     ""sid"": ""50094"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in a web application using file_data via a Responder poisoner HTTP attack, which is a common technique attackers use to exploit web applications."""",
     ""Explanation"": ""This event is generated when activity relating to file_data is detected.""
   }
 ][
     {
         ""sid"": ""50094"",
         ""Technique ID"": ""T1296"",
         ""Technique Name"": ""Responder Poisoning"",
         ""Quotes"": """"Responder Poisoning is a targeting technique where an actor attempts to compromise Active Directory Domain Services (AD DS) domain controllers in a network in order to establish a foothold on the network or to intercept and manipulate network traffic"""",
         ""Explanation"": ""The rule detects a Responder Poisoning attack, in which an attacker modifies the Responder Status field in a DHCP response packet to redirect traffic to a rogue server that they control.""
     },
     {
         ""sid"": ""50094"",
         ""Technique ID"": ""T1586"",
         ""Technique Name"": ""Dynamic-Link Library (DLL) Injection"",
         ""Quotes"": """"DLL Injection is a technique in which an adversary injects a DLL into a legitimate process to gain elevated privileges or execute arbitrary code on a system"""",
         ""Explanation"": ""The rule detects an attempt to inject a malicious DLL into a legitimate process through a web request.""
     }
 ][
         ""sid"": ""50094"",
         ""Technique ID"": ""T1565"",
         ""Technique name"": ""Poisoning"",
         ""Quotes"": ""Poisoning techniques involve manipulating data to corrupt or alter its intended purpose. This IDS rule detects an HTTP attack attempt that uses Responder poisoning, a technique where the attacker adds a poisoned IP address to the Responder database. By doing so, the adversary can redirect traffic to a malicious server, potentially leading to credential theft or malware installation."",
         ""Explanation"": ""This rule specifically looks for a file data payload containing a specific pattern that is indicative of Responder poisoning attacks, making T1565 the most relevant technique.""
     ][
   {
     ""sid"": ""50094"",
     ""Technique ID"": ""T1582"",
     ""Technique Name"": ""Domain Generation Algorithms"",
     ""Quotes"": """"Domain Generation Algorithms techniques involve algorithmically generating multiple domain names to evade detection and manipulate network traffic. The rule indicates the presence of a suspicious HTTP request containing a specially crafted image source (<img src=|27|file://RespProxySrv/pictures/logo.jpg|27|) that attempts to poison a DNS cache by redirecting it to a malicious host (RespProxySrv)."""",
     ""Explanation"": ""This event is generated when an intrusion attempt is detected.""
   }
 ][
         ""sid"": ""50094"",
         ""Technique ID"": ""T1547"",
         ""Technique name"": ""Boot or Logon Autostart Execution"",
         ""Quotes"": """"Boot or Logon Autostart Execution techniques involve configuring system settings to automatically execute a file or script at system boot or user logon. The rule detects an attempt to execute a malicious file located at 'RespProxySrv/pictures/logo.jpg' through an HTML IMG tag, which could be used to establish persistence on the compromised system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""50094"",
         ""Technique ID"": ""T1085"",
         ""Technique name"": ""Proxy"",
         ""Quotes"": """"Proxy techniques involve using a proxy server to redirect traffic between two or more hosts and establish a connection to a target host via an intermediate device. This rule detects an attempt to poison the DNS cache by sending a DNS request that contains a fake DNS response, potentially compromising the DNS server and allowing attackers to redirect traffic to malicious infrastructure."""",
         ""Explanation"": ""This event is generated when activity relating to a compromised responsive DNS server (Responder) is detected.""
     }
 ][
   {
     ""sid"": ""50094"",
     ""Technique ID"": ""T1559"",
     ""Technique name"": ""Inter-Process Communication"",
     ""Quotes"": """"Inter-Process Communication techniques involve abusing IPC mechanisms within an operating system or application to execute code, facilitate communication, or evade detection"""",
     ""Explanation"": ""The rule detects an attempt to use the Responder protocol to poison DNS caches, which is a technique commonly used by attackers to redirect traffic to malicious servers.""
   }
 ][
         ""sid"": ""50094"",
         ""Technique ID"": ""T1498"",
         ""Technique name"": ""Network Denial of Service"",
         ""Quotes"": """"Network Denial of Service (DoS) attacks attempt to disrupt the availability of targeted systems or networks. This rule detects an attempt to poison the Address Resolution Protocol (ARP) cache, which can result in denial of service by redirecting network traffic to the attacker."""",
         ""Explanation"": ""Poisoning an ARP cache can result in a denial-of-service attack""
     ][
     {
         ""sid"": ""50094"",
         ""Technique ID"": ""T1606"",
         ""Technique name"": ""Web Server Fingerprinting"",
         ""Quotes"": """"Web Server Fingerprinting techniques involve examining the response of a web server to identify its type and version. This rule detects an attempt to exploit a vulnerability in a web server by sending a specially crafted HTTP request that checks for the presence of a specific file or directory. The rule's content ""27|file://RespProxySrv/pictures/logo.jpg|27|"" indicates that the attacker is looking for a file named ""logo.jpg"" in a directory called ""RespProxySrv"", which could be used to determine the type and version of the web server and potentially identify vulnerabilities."""",
         ""Explanation"": ""Web server fingerprinting, to attempt to identify the precise vendor and version of web software.""
     }
 ]","['T1230', 'T1598', 'T1592', 'T1190', 'T1296', 'T1586', 'T1565', 'T1582', 'T1547', 'T1085', 'T1559', 'T1498', 'T1606']",['T1187']
38563,"[
   {
     ""sid"": ""23934"",
     ""Technique ID"": ""T1543"",
     ""Technique Name"": ""Hijack Execution Flow"",
     ""Quotes"": """"Hijack Execution Flow techniques involve altering execution paths to gain control of software or hardware and/or redirect the flow to malicious code. This rule detects an attempt to exploit an arbitrary file upload vulnerability in the 'vupload.php' script of vBulletin versions 5.5.0 to 5.5.4, allowing remote attackers to upload arbitrary files via unspecified vectors; which could lead to remote code execution."""",
     ""Explanation"": ""Vulnerability in the vBulletin software allows remote attackers to upload arbitrary files and execute arbitrary code via unspecified vectors.""
   }
 ][
         ""sid"": ""39187"",
         ""Technique ID"": ""T1010"",
         ""Technique name"": ""Data Encoding"",
         ""Quotes"": """"Data Encoding techniques involve using encoding schemes to transform data to avoid detection, such as base64 encoding or encryption. This rule checks for attempts to encode base64 data, indicating the potential presence of encoded malicious content within network traffic."""",
         ""Explanation"": ""This rule is used to detect base64 encoded malicious JavaScript content.""
     ][
   {
     ""sid"": ""23934"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications to execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
   }
 ][
         ""sid"": ""23948"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques allow adversaries to move data from the target system to a C2 server. This rule detects an attempt to exfiltrate data via the DNS protocol using the DNS over HTTPS (DoH) technique, which is a method attackers use to hide their data transfers within legitimate DNS traffic."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""49273"",
         ""Technique ID"": ""T1078"",
         ""Technique name"": ""Valid Accounts"",
         ""Quotes"": """"Valid Accounts techniques involve obtaining and abusing credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion."""",
         ""Explanation"": ""The rule detects weak password hashes, which can be used to compromise accounts and gain access to a system.""
     }
 ][
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": ""\""Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) that mimics a '404 Not Found' error to disguise its communication with a command and control server, which is a common method used by keyloggers to stealthily capture input data.\"""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""23934"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a \""blind SQL injection\"" issue.""
   }
 ][
   {
     ""sid"": ""28947"",
     ""Technique ID"": ""T1557"",
     ""Technique name"": ""Adversary-in-the-Middle"",
     ""Quotes"": """"Adversary-in-the-Middle techniques involve positioning an adversary between two or more networked devices to support follow-on behaviors such as Network Sniffing, Transmitted Data Manipulation, or replay attacks (Exploitation for Credential Access). This rule detects an attempt to establish an adversary-in-the-middle (AiTM) attack by intercepting and modifying network traffic. The rule looks for specific patterns in the traffic that are indicative of an AiTM attack, such as the presence of a rogue DHCP server or the modification of DNS records."""",
     ""Explanation"": ""This rule detects and blocks attempts to establish an adversary-in-the-middle (AiTM) attack by intercepting and modifying network traffic.""
   }
 ][
   {
     ""sid"": ""23943"",
     ""Technique ID"": ""T1588"",
     ""Technique name"": ""Obtain Capabilities"",
     ""Quotes"": """"Obtain Capabilities techniques involve adversaries purchasing or stealing capabilities that can be used during targeting operations for rapid exploitation and impact, such as purchasing a phishing kit off the dark web."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected. The malware is a Trojan (GateKeylogger) that mimics a '404 Not Found' error to disguise its communication with a command and control server, which is a common method used by malware to hide its presence.""
   }
 ][
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) that mimics a '404 Not Found' error to disguise its communication with a command and control server, which is a common method used by keyloggers to stealthily capture input data."""",
     ""Explanation"": ""The rule triggers on an HTTP response with a status code of 200 (OK) and a body containing the string \""404 Not Found\"". This is indicative of a fake 404 response, which is a technique used by malware to hide its communication with a command and control server. The malware may be using input capture to steal sensitive information, such as keystrokes or credentials.""
   },
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""The rule triggers on an HTTP request with a URI containing the string \""blocked.php\"" and a body containing a SQL injection payload. This is indicative of an attempt to exploit a SQL injection vulnerability in the Symantec Web Gateway. If successful, the attacker could gain unauthorized access to the web gateway or execute arbitrary code on the underlying system.""
   }
 ][
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) that mimics a '404 Not Found' error to disguise its communication with a command and control server, which is a common method used by keyloggers to stealthily capture input data."""",
     ""Explanation"": ""The rule detects traffic from a Trojan that is attempting to capture user input, such as keystrokes or other sensitive information.""
   },
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1098"",
     ""Technique name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve actively searching for and identifying remote systems on a network to gather information about the systems and their configurations, often as a precursor to targeting or exploiting them. The rule indicates the presence of a Trojan (GateKeylogger) that is attempting to communicate with a command and control server, which is a common method used by attackers to remotely control and manage compromised systems."""",
     ""Explanation"": ""The rule detects traffic from a Trojan that is attempting to communicate with a remote system, which could be a command and control server or another compromised system.""
   },
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Lateral Movement"",
     ""Quotes"": """"Lateral Movement techniques involve moving laterally within a network to gain access to other systems or resources. The rule indicates the presence of a Trojan (GateKeylogger) that is attempting to communicate with a command and control server, which is a common method used by attackers to gain access to other systems on a network."""",
     ""Explanation"": ""The rule detects traffic from a Trojan that is attempting to communicate with a remote system, which could be a command and control server or another compromised system. This could be an indication of lateral movement within a network.""
   }
 ][
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": ""\""Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) that mimics a '404 Not Found' error to disguise its communication with a command and control server, which is a common method used by keyloggers to stealthily capture input data.\"""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""23934"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a \""blind SQL injection\"" issue.""
   }
 ]","['T1543', 'T1010', 'T1203', 'T1041', 'T1078', 'T1056', 'T1190', 'T1557', 'T1588', 'T1056', 'T1190', 'T1056', 'T1098', 'T1132', 'T1056', 'T1190']",['T1056']
976,"[
         ""sid"": ""976"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve tricking a user into visiting a malicious website to download and install malware or other malicious content. This rule detects an attempt to access a '.bat' file from a CGI-bin directory, which is a common technique used by attackers to host malicious scripts and compromise web servers."""",
         ""Explanation"": ""This event is generated when an HTTP request for a .bat file is detected.""
     ][
     ""sid"": ""976"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve gaining access to a system through a user visiting a website over the normal course of browsing. This rule detects an attempt to access a '.bat' file via a web application, which could be indicative of an attacker attempting to exploit a vulnerability in the web application to execute arbitrary code on the server."""",
     ""Explanation"": ""This attack technique involves gaining access to a system through a website.""
 ][
   {
     ""sid"": ""976"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit .bat files on a webserver, which is a common method attackers use to execute arbitrary commands and gain unauthorized access to systems."""",
     ""Explanation"": ""This rule detects an attempt to exploit ColdFusion 8.0.1 by uploading arbitrary code via the CFIDE/Administrator REST API.""
   }
 ][
     ""sid"": ""976"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications, such as browsers and plug-ins, to execute arbitrary code within the context of a user. This rule specifically detects requests to access '.bat' files, which could be an attempt to exploit a vulnerability in a web application that allows remote code execution through a command injection attack."""",
     ""Explanation"": ""This rule detects web application activity that involves accessing .bat files, which could be an attempt to exploit a vulnerability that allows remote code execution.""
 ][
   {
     ""sid"": ""976"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve compromising client systems by tricking users into interacting with malicious content on web pages. This rule detects an attempt to access a .bat file via a web application, which is a common technique used in drive-by compromise attacks to download and execute malicious code on the victim's system."""",
     ""Explanation"": ""The rule is triggered when a client attempts to access a .bat file through a web application. This is a common technique used in drive-by compromise attacks to download and execute malicious code on the victim's system.""
   }
 ][
   {
     ""sid"": ""976"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempt to access '.bat' files, which could be part of an attack to exploit a vulnerability in a web application. Attackers often use '.bat' files to execute malicious code on target systems."""",
     ""Explanation"": ""This rule detects malicious attacks that attempt to exploit web application vulnerabilities.""
   }
 ][
     {
         ""sid"": ""976"",
         ""Technique ID"": ""T1120"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access a .bat file, which could indicate an attempt to exploit a web application for remote code execution."""",
         ""Explanation"": ""This event is generated when an attempt to access a .bat file is detected.""
     }
 ][
     {
         ""sid"": ""976"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""Cloud Service Discovery"",
         ""Quotes"": """"Cloud Service Discovery techniques involve identifying and learning about cloud services that are used within an organization's infrastructure. The rule looks for a GET request with '.bat?' in the URI, which can be an attempt by an attacker to find and exploit a server-side request forgery (SSRF) vulnerability in a cloud service."""",
         ""Explanation"": ""Access to .bat file over HTTP through the web server.""
     }
 ][
         ""sid"": ""976"",
         ""Technique ID"": ""T1580"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects suspicious "".bat"" file access in an HTTP request, which is a common method attackers use to exploit web applications by executing arbitrary commands."""",
         ""Explanation"": ""The rule is related to suspicious .bat file access in an HTTP request. Attackers can use this technique to exploit vulnerabilities in web applications by executing arbitrary commands.""
     ][
   {
     ""sid"": ""976"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Endpoint Denial of Service"",
     ""Quotes"": ""\""T1071 Endpoint Denial of Service techniques aim to temporarily or permanently disable a host or service, making it unavailable for authorized users. This rule detects attempts to exploit a vulnerability in Microsoft IIS web servers by sending a crafted HTTP request containing a long URI that can cause the server to crash or become unresponsive."""",
     ""Explanation"": ""This event is generated when activity relating to a web application is detected.""
   }
 ][
   {
     ""sid"": ""976"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access a '.bat' file on a web server, which is a common method attackers use to execute arbitrary commands on vulnerable web servers."""",
     ""Explanation"": ""This event is generated when an attempt is made to access a .bat file on a web server.""
   }
 ]","['T1189', 'T1189', 'T1190', 'T1189', 'T1189', 'T1189', 'T1120', 'T1204', 'T1580', 'T1071', 'T1190']",['T1204']
1129,"[
   {
     ""sid"": ""1129"",
     ""Technique ID"": ""T1170"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve actively searching for files and directories in a system, which can assist in identifying potential targets for subsequent exploitation or reconnaissance. This rule detects attempts to access the '.htaccess' file, which is commonly used to configure web servers and can contain sensitive information, indicating an attempt to gather information about the target system."""",
     ""Explanation"": ""This technique is related to the rule because it involves the scanning of a system for files and directories, which is what the rule is detecting.""
   }
 ][
   {
     ""sid"": ""1129"",
     ""Technique ID"": ""T1170"",
     ""Technique name"": ""Improper Access Control"",
     ""Quotes"": """"Improper Access Control techniques involve accessing files or data that is restricted to unauthorized users. By bypassing access controls and exploiting weak permissions, adversaries can access sensitive information or perform unauthorized actions."""",
     ""Explanation"": "".htaccess files are often used to control access to web directories and files. By accessing this file, an adversary could gain insight into the structure and security of the web application.""
   }
 ][
   {
     ""sid"": ""1129"",
     ""Technique ID"": ""T1170"",
     ""Technique name"": ""Gather Web Server Configuration"",
     ""Quotes"": """"Gather Web Server Configuration techniques involve accessing files or metadata associated with web servers to gather information about their configuration, such as the type of server software, version numbers, and enabled modules. This rule detects attempts to access '.htaccess' files, which contain configuration settings for Apache web servers, potentially revealing information that could aid in further attacks."""",
     ""Explanation"": ""This rule identifies an attempt by a remote host to access a '.htaccess' file on a web server, which may contain sensitive configuration information.""
   }
 ][
   {
     ""sid"": ""1129"",
     ""Technique ID"": ""T1170"",
     ""Technique name"": ""Observed .htaccess Access"",
     ""Quotes"": """"Observed .htaccess Access techniques involve accessing .htaccess files to gather information about web server configurations and potential vulnerabilities."""",
     ""Explanation"": ""This event is triggered when someone tries to access a .htaccess file, which could be an indication of reconnaissance activity.""
   }
 ][
   {
     ""sid"": ""1129"",
     ""Technique ID"": ""T1170"",
     ""Technique name"": ""Misdirection"",
     ""Quotes"": """"Misdirection techniques involve misleading defenders by manipulating, altering, or obscuring the actual sequence of events or actions in an attempt to divert attention and deceive the defender."""",
     ""Explanation"": ""The rule triggers an alert when there's an attempt to access the '.htaccess' file, which is typically done to view or modify the server's configuration settings. Attackers may use this technique to gain unauthorized access to the web server by exploiting misconfigured '.htaccess' files or to mislead administrators into believing that the server is under attack.""
   }
 ][
         ""sid"": ""1129"",
         ""Technique ID"": ""T1170"",
         ""Technique name"": ""Access Control"",
         ""Quotes"": """"Access Control techniques involve modifying or bypassing access controls to obtain unauthorized access to restricted resources. This rule detects an attempt to access the '.htaccess' file, which typically contains security configurations for web servers. Unauthorized access to this file could allow attackers to gain privileged access or modify website content."""",
         ""Explanation"": ""This event is generated when activity relating to web servers is detected.""
     ][
   {
     ""sid"": ""1129"",
     ""Technique ID"": ""T1170"",
     ""Technique Name"": ""Web Application Attack"",
     ""Quotes"": """"Web Application Attack techniques involve targeting web applications to compromise the underlying system or gain unauthorized access to data. This rule detects attempted access to '.htaccess' files, which contain sensitive configuration settings for web servers. Attackers commonly target '.htaccess' files to modify server settings, gain access to sensitive information, or execute malicious code."""",
     ""Explanation"": ""The rule is designed to detect attempts to access .htaccess files, which could be part of a web application attack.""
   }
 ][
   {
     ""sid"": ""1129"",
     ""Technique ID"": ""T1170"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in a web application by accessing the '.htaccess' file, which is a configuration file commonly found on web servers and can contain sensitive information."""",
     ""Explanation"": ""The rule detects an HTTP request attempting to access a .htaccess file on a web server, which could indicate an attempt to exploit a configuration or vulnerability on the web application.""
   }
 ][
   {
     ""sid"": ""1129"",
     ""Technique ID"": ""T1170"",
     ""Technique Name"": ""Web Application Reconnaissance"",
     ""Quotes"": """"Web Application Reconnaissance techniques involve information gathering activities that target web applications to identify vulnerabilities and potential attack vectors. This rule detects access to a '.htaccess' file, which contains configuration settings for web servers, indicating reconnaissance attempts to gain information about the web server's configuration and potential weaknesses."""",
     ""Explanation"": ""This rule is meant to detect reconnaissance attempts on web servers by looking for access to '.htaccess' files.""
   }
 ][
   {
     ""sid"": ""1129"",
     ""Technique ID"": ""T1170"",
     ""Technique Name"": ""Discovery of Web Technologies"",
     ""Quotes"": """"Discovery of Web Technologies techniques involve identifying and extracting information about web-based applications, frameworks, and technologies used within an organization's network, which can aid in reconnaissance and targeting efforts."""",
     ""Explanation"": ""This rule detects attempts to access .htaccess files, which are commonly used to configure Apache web servers and may contain sensitive information such as database credentials or user authentication details.""
   }
 ][
         ""sid"": ""1129"",
         ""Technique ID"": ""T1170"",
         ""Technique name"": ""Vulnerability Scanning"",
         ""Quotes"": """"Vulnerability Scanning techniques involve using automated tools or manual methods to identify vulnerabilities in systems, networks, and applications. This rule detects an attempt to access a .htaccess file, which is commonly used by web servers to control access to certain directories and files. Attempting to access this file may indicate an attempt to identify potential vulnerabilities in the web server configuration."""",
         ""Explanation"": ""This event is generated when activity relating to a vulnerability in .htaccess is detected.""
     ]","['T1170', 'T1170', 'T1170', 'T1170', 'T1170', 'T1170', 'T1170', 'T1170', 'T1170', 'T1170', 'T1170']",['T1218']
27967,"[
         ""sid"": ""27967"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Remote Access Trojan"",
         ""Quotes"": """"Remote Access Trojans (RATs) are commonly used to provide attackers with persistent remote access to a compromised system. RATs can be used to perform a wide range of malicious activities, such as executing arbitrary commands, exfiltrating data, and spreading malware."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""27967"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell, which is a script that provides a remote shell interface to a web server, to execute arbitrary commands and gain control of the underlying system or application. This rule detects the presence of a web shell called 'Chopper' that is embedded within an HTTP request via the 'X-Forwarded-For' header and includes a specific parameter ('caidao=') followed by a command ('Response', 'Write', or 'Execute')."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""27967"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve deploying a web shell on a compromised host, which provides remote access to the underlying system. This rule detects an attempt to establish a connection to a web shell (Win.Backdoor.Chopper) using the 'caidao' parameter, which is a common method attackers use to establish command and control over compromised systems."""",
     ""Explanation"": ""The rule triggers when it detects the presence of a Win.Backdoor.Chopper web shell connection.""
   }
 ][
         ""sid"": ""27967"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using web shells, which are scripts leveraging web application vulnerabilities to execute arbitrary commands on a target system. This rule detects a connection to a web shell on a compromised system, where the attacker is using HTTP requests with a 'caidao' parameter and specific values to perform various actions such as executing commands."""",
         ""Explanation"": ""Web shells are used for remote access and control by an attacker.""
     ][
   {
     ""sid"": ""27967"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shells are malicious scripts that provide remote access and control of compromised systems via a web interface. This rule detects a web shell connection to the Windows backdoor 'Chopper,' commonly used by attackers to upload and execute malicious payloads, conduct reconnaissance, and maintain persistent access."""",
     ""Explanation"": """"caidao="" is a common marker used in Chopper web shells to identify and execute commands sent by the attacker.""
   }
 ][
     {
         ""sid"": ""27967"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve utilizing a web shell, which is an interface that allows an adversary to execute commands and interact with the underlying operating system of a compromised web server or application. This rule detects an attempt to connect to a web shell hosted on the target system using the 'caidao' parameter, which is a known indicator of Chopper web shell activity."""",
         ""Explanation"": ""This event is generated when malicious activity is detected.""
     }
 ][
     {
         ""sid"": ""27967"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve deploying a script on a web server that can be used for remote access and control. This rule detects a connection to a known web shell called Chopper, which is commonly used by attackers to gain remote access to compromised systems, upload and execute malicious code, and perform other malicious activities."""",
         ""Explanation"": ""Web shells are often used to provide remote access to a compromised system. This rule detects a connection to a known web shell, Chopper, which is commonly used to upload and execute malicious code, as well as perform other malicious activities.""
     }
 ][
   {
     ""sid"": ""27967"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script or program that allows adversaries to execute arbitrary commands on a web server. This rule detects an attempt to access a web shell using the 'caidao' parameter, which is a common method for attackers to control compromised servers."""",
     ""Explanation"": ""This sid is related to a web shell activity. Web shells are often used by attackers to maintain access to a compromised system and execute commands remotely.""
   }
 ][
    ""sid"": ""27967"",
    ""Technique ID"": ""T1105"",
    ""Technique name"": ""Ingress Tool Transfer"",
    ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised environment. The rule detects a web shell connection attempt by a Chopper backdoor, which is often used to transfer and execute malicious tools or payloads onto a compromised system."""",
    ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""27967"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, which is an attacker-installed piece of code that provides a remote command interface to a compromised web server. This rule detects an attempt to establish a connection to a web shell on the target system using the ""caidao"" parameter, which is a common indicator of web shell activity."""",
     ""Explanation"": ""A backdoor is a method by which an attacker can establish unauthorized access or maintain persistent access to a victim system via a covert channel which allows them to bypass security controls. A web shell is a type of backdoor that is typically uploaded to a web server and provides an attacker with a remote command interface to the compromised system.""
   }
 ][
     ""sid"": ""27967"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shells techniques involve installing and using malicious web shells to gain remote access to and execute commands on a compromised system. The rule detects a web shell connection attempt by a web-based backdoor (Chopper) to a remote server. Attackers might use web shells to upload malicious files, steal sensitive information, or control the server remotely."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ]","['T1100', 'T1100', 'T1100', 'T1100', 'T1100', 'T1100', 'T1100', 'T1100', 'T1105', 'T1100', 'T1100']","['T1505', 'T1219']"
29869,"[
   {
     ""sid"": ""29869"",
     ""Technique ID"": ""T1192"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick users into providing sensitive information or clicking on malicious links. This rule detects an attempted phishing attack that uses a fake 'facebook.com.exe' executable to lure victims into downloading malware."""",
     ""Explanation"": ""This event is most likely the result of an attempt to download a trojan.""
   }
 ][
     ""sid"": ""29869"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent messages to trick victims into divulging sensitive information or clicking malicious links to gain access to systems or steal data. In this case, the Snort rule detects a phishing attack using a fake Facebook-themed executable ('facebook.com.exe') to deceive users into downloading malware."""",
     ""Explanation"": ""This event is generated when activity relating to the malware is detected.""
 ][
   {
     ""sid"": ""29869"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve fraudulently attempting to obtain sensitive data or credentials by disguising as a trusted entity. In this rule, a phishing attack is detected based on the presence of a malicious executable file named 'facebook.com.exe' attempting to connect to an external IP address. This behaviour aligns with phishing campaigns that often use social engineering tactics to trick users into downloading and executing malicious software or disclosing personal information."""",
     ""Explanation"": ""This event is generated when activity relating to phishing is detected.""
   }
 ][
   {
     ""sid"": ""29869"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing attacks involve sending fraudulent emails or messages to trick individuals into providing sensitive information or taking actions that could compromise their systems. This rule detects a phishing attempt by the Win.Trojan.Napolar malware, which uses social engineering techniques to trick users into downloading and executing a malicious file disguised as a legitimate application (e.g., ""facebook.com.exe"")."""",
     ""Explanation"": ""This event is generated when malware activity is detected.""
   }
 ][
         ""sid"": ""29869"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent messages to trick victims into divulging sensitive information or clicking on malicious links that lead to malware downloads or credential harvesting websites. In this case, the rule specifically detects a phishing attack that attempts to trick victims into downloading a malicious executable (facebook.com.exe) by using the lure of a popular social media platform (Facebook)."""",
         ""Explanation"": ""Downloading malicious executables from phishing emails is a common tactic used by threat actors to infect systems with malware.""
     ][
         ""sid"": ""29869"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing attacks attempt to trick users into giving up sensitive information, such as passwords or financial data, by disguising themselves as legitimate communications. This event is triggered when a phishing email containing an executable file ('facebook.com.exe') is detected, which is a common method used by attackers to distribute malware or steal sensitive information."""",
         ""Explanation"": ""Phishing attempts to trick users into giving up sensitive information via email.""
     ][
   {
     ""sid"": ""29869"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Cloud Service Discovery"",
     ""Quotes"": """"Cloud Service Discovery techniques involve identifying and enumerating cloud services and their associated resources to gather information about a victim's infrastructure. The rule suggests a potential attempt to connect to a cloud service, specifically ""facebook.com.exe"", which could be used for reconnaissance or further exploitation."""",
     ""Explanation"": ""When the signature is activated, there is a possibility of a phishing attack that uses the connection to facebook.com.exe as a part of the malicious activity.""
   }
 ][
         {
             ""sid"": ""29869"",
             ""Technique ID"": ""T1192"",
             ""Technique name"": ""Phishing"",
             ""Quotes"": """"Phishing techniques involve sending fraudulent messages designed to trick recipients into revealing sensitive information, such as login credentials or credit card numbers. This rule detects a phishing attack that uses the lure of a Facebook login page to trick victims into entering their credentials, which is a common method used by attackers to steal login information."""",
             ""Explanation"": ""This rule detects an attempt to connect to a known phishing website.""
         }
     ][
         ""sid"": ""29869"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails, text messages, or other communications to trick users into revealing sensitive information or taking actions that could compromise their systems. This rule detects a Trojan that uses phishing to target users and may be linked to a broader phishing campaign. Phishing attacks often include malicious links or attachments designed to compromise the user's system."""",
         ""Explanation"": ""This rule is related to a phishing attack that uses a Trojan to compromise the user's system.""
     ][
   {
     ""sid"": ""29869"",
     ""Technique ID"": ""T1192"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": ""\""Phishing techniques involve sending fraudulent emails or messages that appear to come from a legitimate source to trick the recipient into taking an action such as clicking on a malicious link or providing sensitive information.\"" The rule detects a phishing attack attempting to trick the recipient into executing a malicious file named \""facebook.com.exe\"" under the guise of a legitimate domain."",
     ""Explanation"": ""Phishing attack detected targeting users of the Symantec Web Gateway.""
   }
 ][
     ""sid"": ""29869"",
     ""Technique ID"": ""T1192"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques attempt to trick users into providing sensitive information, such as credentials or financial data, by sending them malicious emails or directing them to fraudulent websites that mimic legitimate ones. This rule detects a phishing attack that uses a malicious executable file named ""facebook.com.exe"" to lure victims into installing malware."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ]","['T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192']",['T1566']
31807,"[
     {
         ""sid"": ""31807"",
         ""Technique ID"": ""T1048"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve transmitting exfiltrated data back to a command and control server through various covert channels, such as steganography or covert network protocols. This rule specifically detects an exfiltration attempt by the 'Win.Trojan.Nighthunter' malware, which establishes a covert SMTP channel to send exfiltrated data back to its command and control server."""",
         ""Explanation"": ""Nighthunter Trojan is a remote access trojan (RAT), which uses the SMTP protocol to transmit sensitive data to an email address controlled by the attacker.""
     }
 ][
         ""sid"": ""31807"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over C2 Channel"",
         ""Quotes"": """"Exfiltration Over C2 Channel techniques involve sending data directly to a controlled command and control (C2) server. The rule identifies an attempt by malware (Win.Trojan.Nighthunter) to exfiltrate data using port 2525 to an SMTP server. SMTP is commonly used for email communication and is often employed by malware to send stolen data to remote servers."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""31807"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending exfiltrated data to a command and control (C2) server. This rule detects an attempt by malware (Nighthunter) to exfiltrate data using SMTP, indicating the use of a C2 server for malicious communication."""",
     ""Explanation"": ""This attack might try to tunnel through SMTP.""
   }
 ][
     {
         ""sid"": ""31807"",
         ""Technique ID"": ""T1041"",
         ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve leveraging an established command and control channel to transfer data from a compromised system to an external host. The rule detects an exfiltration attempt by the Trojan Nighthunter, which uses SMTP (port 587) to send data to an external command and control server."""",
         ""Explanation"": ""This rule detects the exfiltration of sensitive data.""
     },
     {
         ""sid"": ""31807"",
         ""Technique ID"": ""T1143"",
         ""Technique Name"": ""Host and Port Scanning"",
         ""Quotes"": """"Host and Port Scanning techniques involve sending probes and packets to hosts or IP addresses to identify potential vulnerabilities. The rule detects a reconnaissance attempt by another Trojan (e.g., Nighthunter), which uses SMTP (port 2525) to establish a connection before attempting to exfiltrate data."""",
         ""Explanation"": ""The source IP address is scanning the target IP address for open ports.""
     }
 ][
     ""sid"": ""31807"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve transferring exfiltrated data over the same command and control channel that was used to communicate with the adversary. The rule detects data exfiltration attempts by the Nighthunter Trojan, which typically sends exfiltrated data back to the attacker via its command and control server over port 587 (SMTP) or 2525."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
         {
             ""sid"": ""31807"",
             ""Technique ID"": ""T1048"",
             ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
             ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve using an established command and control (C2) channel to exfiltrate data from a victim system. This rule detects an attempt by the Win.Trojan.Nighthunter malware to exfiltrate data through an SMTP connection using a specific header ('Subject|3A| Limitless Logger |3A 20 3A| Execution Confirmation'), which is a common method used by malware to communicate with C2 servers and exfiltrate sensitive information."""",
             ""Explanation"": ""This rule detects data exfiltration attempts by the Win.Trojan.Nighthunter malware specifically, which is known for using SMTP as a communication channel.""
         }
     ][
   {
     ""sid"": ""31807"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve using covert channels (e.g., steganography, DNS tunneling) to exfiltrate data over command and control (C2) channels. This rule identifies an attempt to exfiltrate data using the Win.Trojan.Nighthunter malware, which is known to use SMTP as a covert channel for data exfiltration."""",
     ""Explanation"": ""The rule triggers when a subject line with the text ""Limitless Logger |3A 20 3A| Execution Confirmation"" is detected in an SMTP conversation, which is a known pattern used by Win.Trojan.Nighthunter to exfiltrate data over SMTP.""
   }
 ][
     {
         ""sid"": ""31807"",
         ""Technique ID"": ""T1567"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve transferring exfiltrated data over an established command and control channel to an adversary-controlled system. The rule detects an attempt by malware (Nighthunter) to exfiltrate data via an established connection to the command and control server, using the subject line of an email as an exfiltration channel."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     },
     {
         ""sid"": ""31807"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over Alternative Protocol"",
         ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve exfiltrating data using protocols other than the one used for initial access. The rule indicates the use of SMTP to exfiltrate data, which is an alternative protocol to the initial infection vector."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""31807"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending exfiltrated data to a remote system over a command and control (C2) channel. This rule detects an attempt by the Nighthunter Trojan to exfiltrate data via SMTP, suggesting that the adversary is using the C2 channel to send exfiltrated data."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""31807"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve extracting information from a targeted environment by transmitting it over various communication channels. This rule detects an attempt by the Win.Trojan.Nighthunter malware to exfiltrate data over an email channel, using the SMTP protocol on ports 587 and 2525. The malware includes the string 'Subject|3A| Limitless Logger |3A 20 3A| Execution Confirmation' in the email subject line, which is a common tactic used by malware to evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""31807"",
         ""Technique ID"": ""T1071"",
         ""Technique Name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve transferring data from a compromised system to an external system or location. The rule indicates an attempt by the malware 'Win.Trojan.Nighthunter' to exfiltrate data using SMTP as the communication channel and sending a message with the subject 'Limitless Logger' to an external recipient."""",
         ""Explanation"": ""The rule is triggered when there is an attempt to send an email using SMTP with the subject 'Limitless Logger', which is associated with the malware 'Win.Trojan.Nighthunter' and is used for data exfiltration.""
     }
 ]","['T1048', 'T1041', 'T1048', 'T1041', 'T1143', 'T1048', 'T1048', 'T1048', 'T1567', 'T1041', 'T1041', 'T1048', 'T1071']",['T1020']
58751,"[
         ""sid"": ""58751"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution exploit targeting the Apache Log4j logging library, which is a common method attackers use to exploit vulnerable Java applications."""",
         ""Explanation"": ""This rule detects an attempted remote code execution attack targeting the Apache Log4j Java library, a common vulnerability that allows attackers to execute arbitrary code on the targeted system by exploiting a flaw in the library's logging functionality.""
     ][
     {
         ""sid"": ""58751"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a remote code execution attempt using the Apache Log4j logging vulnerability (CVE-2021-44228), which is a common method attackers use to exploit vulnerable web applications."""",
         ""Explanation"": ""Apache log4j remote code exploit attempt.""
     }
 ][
   {
     ""sid"": ""58751"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted Apache Log4j remote code execution exploit, which involves exploiting a vulnerability in the Apache Log4j logging library to execute arbitrary Java code on the target system.""
     ""Explanation"": ""This event is generated when activity relating to the exploitation of a vulnerability in the Apache Log4j logging library is detected.""
   }
 ][
   {
     ""sid"": ""58751"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution attack against Apache Log4j, which is a common method attackers use to exploit vulnerable applications by sending specially crafted requests."""",
     ""Explanation"": ""This event is generated when Apache Log4j logging remote code execution attempt activity is detected.""
   }
 ][
   {
     ""sid"": ""58751"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""Log4j is a Java-based logging framework that is vulnerable to remote code execution (RCE) via a specially crafted log message. This rule detects potential exploitation attempts by matching specific patterns in network traffic that indicate an attacker is attempting to exploit the Log4j vulnerability in an Apache server.""
   }
 ][
   {
     ""sid"": ""58751"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a remote code execution (RCE) vulnerability in Apache Log4j logging, which is a Java library commonly used by web applications for logging purposes. Attackers can exploit this vulnerability by sending a malicious payload in a specific format, leading to the execution of arbitrary code on the target system."""",
     ""Explanation"": ""The alert is triggered when a specific pattern is detected in the network traffic, indicating an attempt to exploit the Log4j RCE vulnerability.""
   }
 ][
         ""sid"": ""58751"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule looks for an attempted exploitation of a remote code execution vulnerability CVE-2021-44228 in the Apache Log4j Java logging library. An attacker could exploit this vulnerability to execute arbitrary code by sending a specially crafted HTTP request to a vulnerable application."""",
         ""Explanation"": ""This rule looks for an attempted exploitation of a remote code execution vulnerability CVE-2021-44228 in the Apache Log4j Java logging library.""
     ][
   {
     ""sid"": ""58751"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted Log4j remote code execution exploit on an SMTP server, which is a common method attackers use to exploit web applications and other network services."""",
     ""Explanation"": ""Matches a portion of Java stack traces that correspond to calling into system functions after leveraging Log4j's JNDI features to attack external hosts.""
   }
 ][
   {
     ""sid"": ""58751"",
     ""Technique ID"": ""T1040"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a remote code execution vulnerability in the Apache Log4j library, which is a common method attackers use to target publicly accessible web applications and servers."""",
     ""Explanation"": """"This rule triggers when an attempt is made to exploit a remote code execution vulnerability in the Apache Log4j library, CVE-2021-44228. A successful exploit could allow an attacker to execute arbitrary code on the target system, leading to server compromise.""
   }
 ][
     {
         ""sid"": ""58751"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule specifically detects attempts to exploit a remote code execution vulnerability in Apache Log4j, a popular Java logging library, which allows an attacker to execute arbitrary code on the target server by sending a specially crafted request."""",
         ""Explanation"": ""This rule identifies attempts to exploit a remote code execution vulnerability in Apache Log4j by examining specific patterns in network traffic that are indicative of the attack.""
     }
 ][
   {
     ""sid"": ""58751"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a remote code execution vulnerability in Apache Log4j using the JNDI injection technique, where attackers can execute arbitrary code by manipulating Java Naming and Directory Interface (JNDI) lookups."""",
     ""Explanation"": ""The rule is looking for a specific pattern that is indicative of an attempt to exploit the remote code execution vulnerability in Apache Log4j using JNDI injection.""
   }
 ]","['T1190', 'T1210', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1040', 'T1190', 'T1210']",['T1190']
36100,"[
   {
     ""sid"": ""36100"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques involve using automated tools or scripts to guess passwords or other authentication credentials by trying many possible combinations. This rule detects an attempt to authenticate to the ManageEngine OpManager web application using default credentials, which is a common brute-force attack technique."""",
     ""Explanation"": ""This event is generated when an FTP client connects to an FTP server using anonymous credentials.""
   }
 ][
   {
     ""sid"": ""36100"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials, such as password hashes or cached credentials, from a compromised system. This rule detects an attempt to authenticate to ManageEngine OpManager using default credentials, suggesting that the attacker is attempting to gain unauthorized access by exploiting weak credential security."""",
     ""Explanation"": """"
   }
 ][
   {
     ""sid"": ""36100"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """""",
     ""Explanation"": """"This event is generated when an attempt is made to authenticate to ManageEngine OpManager with default credentials, suggesting a potential exploitation attempt.""""
   }
 ][
   {
     ""sid"": ""36100"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": ""Brute force techniques involve repeatedly attempting to guess a password or other secret by trying a large number of possible combinations. This rule detects an attempt using the default credentials (IntegrationUser:plugin) to log into the ManageEngine OpManager application, which is a common method attackers use to exploit weak or default credentials."",
     ""Explanation"": ""The rule triggers on the use of default credentials.""
   }
 ][
   {
     ""sid"": ""36100"",
     ""Technique ID"": ""T1552"",
     ""Technique name"": ""Unsecured Credentials"",
     ""Quotes"": """"Unsecured Credentials techniques involve obtaining or guessing authentication credentials that were not stored securely or that are otherwise accessible to unauthorized users. This rule detects an attempt to authenticate to ManageEngine OpManager using default credentials, which is a common method attackers use to gain unauthorized access to web applications."""",
     ""Explanation"": ""This event is generated when activity relating to authentication is detected.""
   }
 ][
   {
     ""sid"": ""36100"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials from a compromised system or leveraging a legitimate utility to extract credentials from memory."",
     ""Explanation"": ""Detects authentication attempts to ManageEngine OpManager's web interface using default credentials. Attackers commonly target default credentials to gain unauthorized access to a system.""
   },
   {
     ""sid"": ""36100"",
     ""Technique ID"": ""T1078"",
     ""Technique name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve compromising a valid user account with sufficient privileges to perform malicious actions. This rule detects an attempt to log in to ManageEngine OpManager's web interface using the default 'IntegrationUser' account, which is a common target for attackers due to its default credentials and elevated privileges."""",
     ""Explanation"": ""Detects authentication attempts to ManageEngine OpManager's web interface using default credentials. Attackers commonly target default credentials to gain unauthorized access to a system.""
   }
 ][
   {
     ""sid"": ""36100"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve obtaining credentials from memory or persistent storage after gaining access to a system or application. This rule detects an attempt to authenticate to the ManageEngine OpManager web application using default credentials, which is a common method used by attackers to exploit weak credential management practices."""",
     ""Explanation"": ""An attacker is attempting to authenticate to the web application using default credentials.""
   }
 ][
   {
     ""sid"": ""36100"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Credential Access"",
     ""Quotes"": """"Credential Access techniques involve accessing credentials, such as usernames and passwords, that are stored on or transmitted by a system."""",
     ""Explanation"": ""The rule detects an attempt to authenticate to the ManageEngine OpManager web application using default credentials, indicating a potential attempt to exploit a known vulnerability in the application.""
   }
 ][
     ""sid"": ""36100"",
     ""Technique ID"": ""T1591"",
     ""Technique name"": ""Gather Victim Org Information"",
     ""Quotes"": """"Techniques used by adversaries to gather information about the victim organization, such as employee names, email addresses, and organizational structure, can be used to inform targeting decisions, increase the likelihood of success, and reduce the chances of detection. This rule detects an attempt to obtain default credentials for the ManageEngine OpManager web application, which is an example of how adversaries may gather initial information about a victim's system and network."""",
     ""Explanation"": ""This event is generated when a remote host attempts to connect to the SSH service and uses the default root credentials.""
 ][
   {
     ""sid"": ""36100"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve repeatedly attempting to gain access to a system or application by trying multiple combinations of usernames and passwords. The rule specifically mentions an authentication attempt using default credentials for the ManageEngine OpManager application, indicating a potential brute-force attack to gain access to the web application."""",
     ""Explanation"": ""This event is generated when someone is attempting to authenticate to ManageEngine OpManager using default credentials.""
   },
   {
     ""sid"": ""36100"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. While the rule does not explicitly mention a specific exploit, the fact that it detects an authentication attempt using default credentials suggests that the attacker may be attempting to exploit a known vulnerability or misconfiguration in the ManageEngine OpManager application."""",
     ""Explanation"": ""This event is generated when ManageEngine OpManager is being exploited.""
   }
 ][
     ""sid"": ""36100"",
     ""Technique ID"": ""T1528"",
     ""Technique name"": ""Steal Application Access Token"",
     ""Quotes"": """"Steal Application Access Token techniques involve obtaining access tokens for applications or services, which can then be used to impersonate legitimate users and access sensitive data or resources. This rule detects an attempt to authenticate to the ManageEngine OpManager application using default credentials, suggesting that an adversary is attempting to gain unauthorized access to the application by stealing an application access token."""",
     ""Explanation"": ""This event is generated when an authentication attempt with default credentials is detected for ManageEngine OpManager.""
 ]","['T1110', 'T1110', 'T1190', 'T1110', 'T1552', 'T1110', 'T1078', 'T1110', 'T1110', 'T1591', 'T1110', 'T1190', 'T1528']",['T1078']
10096,"[
     ""sid"": ""10096"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects the runtime detection of a keylogger called win32.remotekeylog.b, which is designed to capture and record keystrokes made by users."""",
     ""Explanation"": ""This rule detects runtime detection of a keylogger called win32.remotekeylog.b, which is designed to capture and record keystrokes made by users.""
 ][
   {
     ""sid"": ""10096"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule identifies a keylogger (win32.remotekeylog.b) that is actively logging keystrokes, which is a common method used by attackers to capture sensitive user input."""",
     ""Explanation"": ""This rule is generating an alert because a keylogger is detected on the network.""
   }
 ][
   {
     ""sid"": ""10096"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule specifically identifies and blocks the operation of a win32.remotekeylog.b keylogger, which is known for its ability to capture keystrokes."""",
     ""Explanation"": ""This event is most likely generated by a keystroke""
   }
 ][
   {
     ""sid"": ""10096"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information."""",
     ""Explanation"": ""This rule detects a specific keylogger known as 'win32.remotekeylog.b', which is designed to steal keystrokes from infected systems. Keylogging is a common technique used by adversaries to capture sensitive information, such as passwords and other credentials.""
   }
 ][
     {
         ""sid"": ""10096"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects the activity of a keylogger (win32.remotekeylog.b) that captures keystrokes, which is a common method used by attackers to steal sensitive information."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""10096"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule triggers when 'KEY' is detected in the traffic, which is a common indicator of keylogging activity."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   ""sid"": ""10096"",
   ""Technique ID"": ""T1087"",
   ""Technique Name"": ""Account Discovery"",
   ""Quotes"": """"Account Discovery techniques involve obtaining a listing of valid accounts or user names within the target system or compromised environment. Keyloggers can capture user input, including credentials, which could be used to discover or compromise additional accounts. The presence of a keylogger suggests that attackers may be attempting to collect login information for other users on the network."""",
   ""Explanation"": ""This rule triggers when the client sends 'KEY' in the initial string.""
 ][
     {
         ""sid"": ""10096"",
         ""Technique ID"": ""T1056"",
         ""Technique Name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects a keylogger (win32.remotekeylog.b) that captures keystrokes, which is a common method used by attackers to steal credentials and sensitive information."""",
         ""Explanation"": ""This event is generated when malware activity is detected as part of an attempt to exfiltrate data from the target system. The rule detects a keylogger that is actively capturing keystrokes and transmitting them to a remote server.""
     }
 ][
   {
     ""sid"": ""10096"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule specifically identifies a keylogger (win32.remotekeylog.b) that logs keystrokes, highlighting the potential for adversaries to capture sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""10096"",
     ""Technique ID"": ""T1555"",
     ""Technique name"": ""Software Discovery"",
     ""Quotes"": """"Software Discovery techniques involve gathering information about software installed on a system, including version and patch level information. This rule detects the presence of a keylogger (win32.remotekeylog.b) by analyzing runtime behavior, suggesting that adversaries may use this information to identify and exploit vulnerabilities in software."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""10096"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the runtime detection of win32.remotekeylog.b, a keylogger that records and transmits user keystrokes. Keyloggers are typically used for credential theft and other malicious activities."""",
     ""Explanation"": ""This rule uses a depth 3 content inspection of the payload to identify and alert on keylogging activity.""
   }
 ][
   {
     ""sid"": ""10096"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. In this rule, the content pattern 'KEY' within the inbound traffic indicates the detection of a keylogger, which is a type of malware that captures keystrokes in order to steal user credentials and other sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""10096"",
     ""Technique ID"": ""T1118"",
     ""Technique Name"": ""Remote Keylogger"",
     ""Quotes"": """"Remote Keylogger techniques involve installing and executing a keylogger on a compromised system to capture and exfiltrate keystrokes. The event description mentions the detection of a 'win32.remotekeylog.b runtime' keylogger, which is a specific type of malware that remotely logs keystrokes."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1056', 'T1056', 'T1056', 'T1056', 'T1056', 'T1056', 'T1087', 'T1056', 'T1056', 'T1555', 'T1056', 'T1056', 'T1118']",['T1056']
37245,"[
         ""sid"": ""37245"",
         ""Technique ID"": ""T1001"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shells techniques involve using a web shell, which is a malicious script that provides remote access to a compromised web server, to execute commands, upload and download files, and perform other malicious actions. This rule detects an attempt to connect to a web shell hosted on the compromised system, indicated by the presence of the 'base64_decode($_POST' string in the HTTP client body, which is a common method used by web shells to decode and execute commands."""",
         ""Explanation"": ""This is an attack that uses a PHP web shell to execute commands on the server. The commands are encoded in base64 and then decoded and executed using the eval() function.""
     ],
     [
         ""sid"": ""37245"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Remote File Copy"",
         ""Quotes"": """"Remote File Copy techniques involve copying files from or to a remote system over a network. This rule detects an attempt to upload a malicious file to the compromised system, indicated by the presence of the '@eval(base64_decode($_POST' string in the HTTP client body, which is a common method used by attackers to upload and execute malicious files on compromised systems."""",
         ""Explanation"": ""This rule detects an attempt to upload a file to the server using PHP.""
     ],
     [
         ""sid"": ""37245"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"Command and Scripting Interpreter techniques involve using a command or scripting interpreter to execute commands or scripts on a system. This rule detects an attempt to execute a malicious command on the compromised system, indicated by the presence of the 'base64_decode($_POST' string in the HTTP client body, which is a common method used by attackers to execute malicious commands on compromised systems."""",
         ""Explanation"": ""This rule detects an attempt to execute a command on the server using PHP.""
     ]
 ][
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1001"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, which is malicious code that allows an adversary to execute commands on a web server, to facilitate remote access and control of web applications. The rule detects an attack using a web shell to execute arbitrary commands on the server, as evidenced by the presence of a base64-encoded payload in the HTTP request body, which is a common method used to bypass detection and execute malicious commands on a web server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Remote File Copy"",
     ""Quotes"": """"Remote File Copy techniques involve copying files from or to a remote system over a network. The rule detects an attempt to download a file named 'sys.aspx' from the web server, which could be an indication of an adversary exfiltrating sensitive data or deploying malicious files to the system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control (C2) techniques involve the use of communication channels between an adversary and compromised systems to maintain persistence, exfiltrate data, or execute commands. The rule detects an HTTP POST request containing an encoded payload that is sent to a remote server, indicating the presence of a C2 channel used to communicate with an adversary-controlled server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""37245"",
         ""Technique ID"": ""T1001"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web shells are web pages that contain embedded executable code, allowing attackers to covertly execute commands on the web server. This rule detects an attempt to establish a web shell connection using the Chopper backdoor, which is a common method attackers use to maintain persistent access to a compromised system."""",
         ""Explanation"": ""This event is generated when activity relating to web shells is detected.""
     },
     {
         ""sid"": ""37245"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Remote File Copy"",
         ""Quotes"": """"Remote File Copy techniques involve transferring files between systems to facilitate lateral movement or data exfiltration. This rule detects an attempt to use a web shell to download a file ('test.php') from a remote server, which is a common tactic attackers use to transfer malicious files or exfiltrate sensitive data."""",
         ""Explanation"": ""This event is generated when activity relating to remote file copy is detected.""
     },
     {
         ""sid"": ""37245"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to evade detection or analysis by security tools. This rule detects an attempt to use base64 encoding to encrypt a POST request body, which is a common method attackers use to obfuscate malicious payloads and evade detection."""",
         ""Explanation"": ""This event is generated when activity relating to data encrypted for impact is detected.""
     }
 ][
     ""sid"": ""37245"",
     ""Technique ID"": ""T1001"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell to execute commands remotely, manipulate the file system, and interact with the underlying system. This rule detects an attempt to connect to a Chopper webshell, which is a common tool used by attackers to maintain persistent access to compromised web servers, providing them with the ability to execute arbitrary commands and upload or download files."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ],
 [
     ""sid"": ""37245"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data or code to make it difficult to analyze or detect. This rule detects an attempt to transmit data using a base64 encoded eval function, which is a common technique used by attackers to obfuscate malicious payloads and evade detection by security tools."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ],
 [
     ""sid"": ""37245"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""SQL Injection"",
     ""Quotes"": """"SQL Injection techniques involve exploiting vulnerabilities in SQL queries to gain unauthorized access to or modify data in a database. This rule detects an attempt to execute a SQL injection attack by inserting SQL queries into a HTTP request body using the POST parameter, which is a common method used by attackers to compromise web applications."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1001"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web shells provide adversaries with a remote access and command execution capability on a compromised web server. The rule detects an attempt to establish a connection to a web shell (Win.Backdoor.Chopper) using a base64-encoded command in the HTTP request body."""",
     ""Explanation"": ""The rule detects an attempt to establish a connection to a web shell (Win.Backdoor.Chopper) using a base64-encoded command in the HTTP request body.""
   },
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Remote File Copy"",
     ""Quotes"": """"Remote File Copy techniques allow adversaries to transfer files from or to remote systems. The rule detects an attempt to upload a file to the targeted web server using the '=@eval(base64_decode($_POST' command, which can be used in conjunction with web shells to upload malicious payloads."""",
     ""Explanation"": ""The rule detects an attempt to upload a file to the targeted web server using the '=@eval(base64_decode($_POST' command, which can be used in conjunction with web shells to upload malicious payloads.""
   },
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Data from Local System"",
     ""Quotes"": """"Data from Local System techniques involve obtaining data from the local system, such as files, system memory, or environment variables. The rule detects an attempt to execute a command that may involve accessing or exfiltrating data from the compromised system."""",
     ""Explanation"": ""The rule detects an attempt to execute a command that may involve accessing or exfiltrating data from the compromised system.""
   }
 ][
         ""sid"": ""37245"",
         ""Technique ID"": ""T1001"",
         ""Technique name"": ""Data Obfuscation"",
         ""Quotes"": """"Data Obfuscation techniques involve encoding or encrypting data to make it more difficult to detect or understand. This rule detects a web shell connection attempt by the Chopper backdoor, which uses base64 encoding to obfuscate the payload sent to the command and control server."""",
         ""Explanation"": ""The rule identifies web shell connections from the Chopper backdoor, which uses data obfuscation techniques to conceal its malicious activities.""
     },
     {
         ""sid"": ""37245"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Data Encoding"",
         ""Quotes"": """"Data Encoding techniques involve converting data into a different format to avoid detection or analysis. This rule detects a web shell connection attempt by the Chopper backdoor, which uses base64 encoding to encode the payload sent to the command and control server."""",
         ""Explanation"": ""The rule identifies web shell connections from the Chopper backdoor, which uses data encoding techniques to conceal its malicious activities.""
     },
     {
         ""sid"": ""37245"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Data Staged"",
         ""Quotes"": """"Data Staged techniques involve storing data in a temporary location prior to Exfiltration. This rule detects a web shell connection attempt by the Chopper backdoor, which may stage data in a temporary location before sending it to the command and control server."""",
         ""Explanation"": ""The rule identifies web shell connections from the Chopper backdoor, which may stage data in a temporary location before exfiltrating it.""
     }
 ][
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1001"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"""""Web Shells are malicious scripts that allow remote attackers to execute commands and interact with a compromised system's shell. This rule detects an inbound connection to a web shell, which is typically used by attackers to maintain persistent access to a victim system."""""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted web shell upload, which is a common method attackers use to exploit web applications and gain unauthorized access to a victim system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"""""Data Encrypted for Impact techniques involve encrypting data to evade detection or analysis. This rule detects an attempt to execute an eval() function on base64-encoded data, which is a common method attackers use to obfuscate malicious code and evade detection."""""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1001"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell to maintain unauthorized access to a system. The rule detects an attempt to connect to a Chopper web shell, which is a common tool used by attackers to execute commands and control compromised systems remotely."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Resource Hijacking"",
     ""Quotes"": """"Resource Hijacking techniques involve identifying and exploiting system resources that can be used to gain access to or control a system. The rule detects an attempt to hijack a web server resource using a Chopper web shell, which can allow attackers to execute arbitrary commands on the compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to make it more difficult to detect or analyze. The rule detects an attempt to connect to a Chopper web shell using encrypted data, which can make it harder for security analysts to identify and block the attack."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""37245"",
         ""Technique ID"": ""T1001"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shells techniques involve using a web shell, which is a malicious script that is uploaded to a vulnerable web server, to execute commands and control the server remotely. This rule detects access to a web shell via a base64-encoded command, which is a common method used by attackers to execute commands on compromised web servers."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""37245"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Remote File Access"",
         ""Quotes"": """"Remote File Access techniques involve accessing files on a remote system over a network. This rule detects access to a web shell script, which can be used to upload, download, or manipulate files and directories on the compromised server."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""37245"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data in a way that makes it difficult to recover. This rule detects the use of base64 encoding to obfuscate a command being executed through a web shell, which is a common method used by attackers to bypass detection and analysis."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
     {
         ""sid"": ""37245"",
         ""Technique ID"": ""T1001"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web shells are malicious scripts that give adversaries remote access to a compromised web server. In this rule, it detects an attempt to establish a web shell connection with a remote server using a POST request with a base64-encoded payload. It's a common technique for maintaining persistence and executing commands on the victim system."""",
         ""Explanation"": ""This rule is used to detect malicious traffic that is associated with backdoors that use web shells for command and control. The rule will only trigger if there is a match for the specific pattern associated with the backdoor, namely, a POST request containing a base64-encoded payload.""
     },
     {
         ""sid"": ""37245"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Remote File Copy"",
         ""Quotes"": """"Remote File Copy techniques involve transferring files over a network, often using tools that leverage protocols such as FTP, SCP, or HTTP. In this rule, it detects an attempt to transfer a file to the remote server using a POST request with a base64-encoded payload. It's a common technique for adversaries to exfiltrate data or upload malicious files."""",
         ""Explanation"": ""This rule is used to detect malicious traffic that is associated with backdoors that use web shells for command and control. The rule will only trigger if there is a match for the specific pattern associated with the backdoor, namely, a POST request containing a base64-encoded payload.""
     },
     {
         ""sid"": ""37245"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Create Web Shell"",
         ""Quotes"": """"Create Web Shell techniques involve creating a web shell on a compromised web server to provide a remote access point for adversaries. This rule detects an attempt to create a web shell on the remote server using a POST request with a base64-encoded payload. It's a common technique for adversaries to maintain persistence and execute commands on the victim system."""",
         ""Explanation"": ""This rule is used to detect malicious traffic that is associated with backdoors that use web shells for command and control. The rule will only trigger if there is a match for the specific pattern associated with the backdoor, namely, a POST request containing a base64-encoded payload.""
     }
 ][
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1001"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shells are malicious scripts hosted on a compromised web server that provide attackers with remote access to a system. The rule specifically detects the use of a PHP-based web shell, which attackers can use to execute arbitrary commands, upload and download files, and perform other malicious activities."""",
     ""Explanation"": ""This event is generated when the system detects activity indicative of a malware-related command-and-control connection.""
   },
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Remote Command Execution"",
     ""Quotes"": """"Remote Command Execution techniques allow adversaries to execute arbitrary commands on a remote system. The rule detects an attempt to execute a command using a base64-encoded PHP payload, which attackers frequently use to bypass detection and execute malicious commands on compromised systems."""",
     ""Explanation"": ""This event is generated when the system detects activity indicative of a malware-related command-and-control connection.""
   },
   {
     ""sid"": ""37245"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques are used by adversaries to obscure data in order to evade detection or analysis. The rule specifically detects the use of base64 encoding, which is a common technique used to encode malicious payloads in network traffic to bypass security controls."""",
     ""Explanation"": ""This event is generated when the system detects activity indicative of a malware-related command-and-control connection.""
   }
 ]","['T1001', 'T1100', 'T1132', 'T1001', 'T1100', 'T1132', 'T1001', 'T1100', 'T1132', 'T1001', 'T1100', 'T1132', 'T1001', 'T1100', 'T1132', 'T1001', 'T1100', 'T1132', 'T1001', 'T1100', 'T1132', 'T1001', 'T1100', 'T1132', 'T1001', 'T1100', 'T1132', 'T1001', 'T1100', 'T1132', 'T1001', 'T1100', 'T1132']","['T1001', 'T1219']"
56606,"[
   {
     ""sid"": ""56606"",
     ""Technique ID"": ""T1218"",
     ""Technique Name"": ""Data from Local System"",
     ""Quotes"": """"Data from Local System techniques involve exfiltrating data from the compromised system to the adversary. This rule detects an inbound command attempt from a known RAT (Remote Access Trojan) called 'CSBundleUSATodayServer', which is used by adversaries to remotely control compromised systems and exfiltrate data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""56606"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring a malicious tool or capability onto the victim's system. This rule detects an attempt to transfer a malicious tool using the 'CSBundleUSATodayServer' RAT, which is known to be used by adversaries to gain remote access and execute malicious commands on compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""56606"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote Access Tools"",
     ""Quotes"": """"Remote Access Tools techniques involve using tools to access a remote system. This rule detects an inbound command attempt from the 'CSBundleUSATodayServer' RAT, which is a tool used by adversaries to remotely control compromised systems and perform malicious activities."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""56606"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve transferring data over existing command and control (C2) channels to achieve data exfiltration. This rule detects a variant of the Rat.Tool.CSBundleUSATodayServer malware attempting to exfiltrate data using an HTTP POST request to a C2 server. The request contains a JSON payload and includes the 'X-Timer' header, which is a common method used by malware to maintain persistent communication with its C2 server."""",
     ""Explanation"": ""This rule matches RAT (remote access tool) activity associated with receiving commands from a command and control server.""
 ][
   {
     ""sid"": ""56606"",
     ""Technique ID"": ""T1495"",
     ""Technique name"": ""Firmware Corruption"",
     ""Quotes"": """"Firmware Corruption techniques involve modifying or overwriting the firmware of a device to disrupt its normal operation or render it inoperable. This rule detects an inbound command attempt by a variant of the RAT.Tool.CSBundleUSATodayServer malware, which has been known to use firmware corruption techniques to manipulate and control infected devices. The malware attempts to execute commands by leveraging specific HTTP headers (such as X-Timer, Content-Type, and Cache-Control) to communicate with its command and control server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""56606"",
         ""Technique ID"": ""T1111"",
         ""Technique name"": ""Remote System Discovery"",
         ""Quotes"": """"Remote System Discovery techniques involve performing reconnaissance on a remote system to gather information about its configuration, software, services, and network topology. This rule detects an inbound command attempt from a known Rat.Tool.CSBundleUSATodayServer variant, which indicates that an adversary is attempting to establish communication with a compromised system for further reconnaissance and control."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""56606"",
     ""Technique ID"": ""T1071.001"",
     ""Technique Name"": ""Command and Control Channel over Command Line Interface"",
     ""Quotes"": """"Command and Control Channel over Command Line Interface techniques involve using a command line interface to establish or maintain command and control (C2) communications."""",
     ""Explanation"": ""The JSON payloads for the Rat.Tool.CSBundleUSATodayServer over HTTP POST request may include commands to execute on the host.""
   }
 ][
   {
     ""sid"": ""56606"",
     ""Technique ID"": ""T1003"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control (C2) techniques involve adversaries maintaining persistence on and controlling victim systems through a dedicated communication channel. This rule detects inbound command attempts from a malicious actor utilizing a variant of the Rat.Tool.CSBundleUSATodayServer malware, which establishes a C2 channel with an external server to receive commands and exfiltrate data."""",
     ""Explanation"": ""This rule indicates the presence of malicious activity involving a malware called 'Rat.Tool.CSBundleUSATodayServer' that is attempting to establish a command and control communication channel with an external server.""
   }
 ][
     {
         ""sid"": ""56606"",
         ""Technique ID"": ""T1027"",
         ""Technique Name"": ""Command and Control"",
         ""Quotes"": """"Command and Control techniques involve establishing and maintaining communications with remote systems for the purpose of command and control. The detected inbound command attempt by a remote system indicates the presence of a command and control server and communication with the RAT.Tool.CSBundleUSATodayServer variant."""",
         ""Explanation"": ""The signature detects an evil agent network activity.""
     },
     {
         ""sid"": ""56606"",
         ""Technique ID"": ""T1105"",
         ""Technique Name"": ""Data Transfer"",
         ""Quotes"": """"Data Transfer techniques involve moving data between a compromised system and a remote location. The detected HTTP POST request with a JSON payload indicates the exfiltration of data from the compromised system to the remote command and control server."""",
         ""Explanation"": ""The signature detects an evil agent network activity.""
     }
 ][
   {
     ""sid"": ""56606"",
     ""Technique ID"": ""T1433"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve establishing covert communication channels with a remote command and control (C2) server to receive instructions, exfiltrate data, or receive updates."""",
     ""Explanation"": ""This rule triggers when a variant of the Rat.Tool.CSBundleUSATodayServer is sending signals to the C2 server, the rule describes the specific patterns that can be detected in the header of the packets that are likely sent between a compromised system and C2 after the infection and communication method.""
   }
 ][
         {
             ""sid"": ""56606"",
             ""Technique ID"": ""T1056"",
             ""Technique name"": ""Input Capture"",
             ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (Rat.Tool.CSBundleUSATodayServer) that attempts to establish an inbound command connection to a command and control server. This communication often involves the exchange of sensitive information, such as credentials or commands, which could be captured by an attacker using input capture techniques."""",
             ""Explanation"": ""This event is generated when activity relating to malware is detected.""
         }
     ][
   {
     ""sid"": ""56606"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Adversaries may exfiltrate information gathered on a victim's system over an existing command and control channel. Network traffic analysis can detect exfiltration patterns, such as a consistent stream of non-malware-related network traffic to an external IP address."""",
     ""Explanation"": ""The rule detects malicious activity via a command and control channel, indicating potential data exfiltration or remote access by an adversary.""
   },
   {
     ""sid"": ""56606"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques are used to move data from a victim's system to a location controlled by the adversary. Adversaries may use common protocols and ports, or obscure their exfiltration by tunneling through uncommon protocols and ports."""",
     ""Explanation"": ""The rule detects suspicious network traffic associated with data exfiltration, such as the transfer of sensitive information to an external IP address.""
   }
 ][
   {
     ""sid"": ""56606"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing covert channels for the purpose of controlling a compromised system (typically through an interactive shell or other remote access mechanism). The rule detects an inbound command attempt from a known command and control server associated with the Rat.Tool.CSBundleUSATodayServer malware. This event suggests that the compromised system may be under active attack and that an attacker is attempting to establish a remote connection to issue commands and control the system."""",
     ""Explanation"": ""A RAT is a type of malware that provides remote access to a system and allows an attacker to control it remotely.""
   }
 ]","['T1218', 'T1105', 'T1021', 'T1041', 'T1495', 'T1111', 'T1071.001', 'T1003', 'T1027', 'T1105', 'T1433', 'T1056', 'T1041', 'T1071', 'T1105']",['T1071']
56614,"[
   {
     ""sid"": ""56614"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using command shells and scripting languages to execute commands, scripts, or binaries on the compromised system. The rule is designed to detect the Cobalt Strike beacon, a tool used by adversaries for post-compromise command and control, as evidenced by the presence of the 'Accept-Encoding|3A| gzip, deflate, br' and '|5C 3B|auth=1|7D|' elements in the HTTP header. These elements are associated with Cobalt Strike beacon traffic and indicate the potential for an adversary to execute commands and scripts on the compromised host."""",
     ""Explanation"": ""The rule generates an alert when a connection attempt to the Cobalt Strike beacon is detected.""
   }
 ][
     ""sid"": ""56614"",
     ""Technique ID"": ""T1043"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve exfiltrating data over an existing command and control channel. The rule is triggered by traffic attempting to connect to a Cobalt Strike beacon, a tool commonly used by adversaries to establish command and control with compromised systems and exfiltrate data."",
     ""Explanation"": ""This rule is designed to detect the initial connection of a Cobalt Strike beacon.""
 ][
   {
     ""sid"": ""56614"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": ""\""External Remote Services techniques involve leveraging external-facing remote services, such as web services, to initially access or persist within a network. This rule detects an attempt by the Cobalt Strike beacon to connect to a remote server through a web service, likely to establish command and control.""
     Explanation"": ""The rule looks for specific HTTP headers and URI patterns that are indicative of Cobalt Strike beacon communication, suggesting an attempted connection to an external remote service for malicious purposes.""
   }
 ][
   {
     ""sid"": ""56614"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring an executable, script, or other tool onto a victim system for execution. This rule detects an attempt to establish a connection to a Cobalt Strike beacon, which is a tool commonly used by adversaries to maintain remote access to victim systems and execute arbitrary commands."""",
     ""Explanation"": ""Adversaries may transfer Cobalt Strike beacons to victim systems through a variety of methods, including phishing emails, drive-by downloads, or malicious websites.""
   }
 ][
         ""sid"": ""56614"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Remote Access Tool"",
         ""Quotes"": """"Cobalt Strike, commonly used by adversaries for remote access and command-and-control, is classified as a Remote Access Tool (RAT). The rule detects an outbound connection to Cobalt Strike's 'queue,' 'profile,' 'docs/wsdl,' or 'pull' URI paths, which are common communication channels used by Cobalt Strike for beaconing and remote control."""",
         ""Explanation"": ""Cobalt Stike is a tool used by penetration testers and attackers to perform various network attacks, including phishing attacks""
     ][
     ""sid"": ""56614"",
     ""Technique ID"": ""T1516"",
     ""Technique name"": ""Supply Chain Compromise"",
     ""Quotes"": """"Supply Chain Compromise techniques involve modifying legitimate software or hardware to incorporate malicious functionality, such as by including a backdoor or other malicious component. This rule detects a beacon connection attempt to Cobalt Strike, which is a commercial tool used by attackers for post-exploitation and lateral movement, indicating the use of compromised software or hardware that has been modified to include a backdoor."""",
     ""Explanation"": ""This event is generated when activity relating to Cobalt strike is detected.""
 ][
     {
         ""sid"": ""56614"",
         ""Technique ID"": ""T1064"",
         ""Technique name"": ""Cobalt Strike"",
         ""Quotes"": """"The rule specifically mentions ""Cobalt Strike,"" a legitimate penetration testing tool that has been widely adopted by adversaries for malicious purposes. Adversaries use Cobalt Strike for a variety of malicious activities, including post-exploitation, lateral movement, and reconnaissance. The rule detects an attempt to establish a connection to a Cobalt Strike beacon, which is used by the adversary to control and communicate with compromised systems."""",
         ""Explanation"": ""This event is generated when activity relating to Cobalt Strike is detected.""
     }
 ][
         ""sid"": ""29774"",
         ""Technique ID"": ""T1504"",
         ""Technique name"": ""Gather Victim Host Information"",
         ""Quotes"": """"Gather Victim Host Information techniques involve collecting information about the victim system to prepare for follow on actions. This rule detects activity associated with Cobalt Strike, a legitimate pen-testing tool that is commonly used by attackers for post-compromise activities. Cobalt Strike is capable of gathering various information about the victim host, such as operating system, installed software, running processes, and network configuration."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""23934"",
         ""Technique ID"": ""T1486"",
         ""Technique name"": ""Cobalt Strike Beacon"",
         ""Quotes"": """"Cobalt Strike Beacon is a beacon implant that provides a persistent command and control (C2) channel over a compromised system. This rule detects a connection attempt to a Cobalt Strike beacon, which is commonly used by adversaries to maintain access to compromised systems and execute malicious commands."""",
         ""Explanation"": ""Cobalt Strike creates a beacon on a compromised host. Adversaries may access and communicate through the beacon using Cobalt Strike's Team Server. Beacons attempt to connect to the server to receive follow-on instructions, and for exfiltration of sensitive data.""
     }
 ][
         ""sid"": ""56614"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"This rule detects an attempt to establish a connection to a Cobalt Strike C2 server using an HTTP beacon. Cobalt Strike is a commercial penetration testing tool that can be used to establish a command-and-control channel and facilitate remote exploitation and lateral movement. This rule specifically identifies the HTTP header and URI used by Cobalt Strike beacons, and the flow of traffic to a server implies that the compromised host is attempting to establish a connection with the C2 server"""",
         ""Explanation"": ""Detecting attempts to establish connections to known C2 servers is critical for identifying compromised hosts and preventing further malicious activity.""
     ],
     [
         ""sid"": ""56614"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Data Encoding"",
         ""Quotes"": """"This rule detects an attempt to establish a connection to a Cobalt Strike C2 server using an HTTP beacon. Cobalt Strike is a commercial penetration testing tool that can be used to establish a command-and-control channel and facilitate remote exploitation and lateral movement. This rule specifically identifies the HTTP header and URI used by Cobalt Strike beacons, and the flow of traffic to a server implies that the compromised host is attempting to establish a connection with the C2 server"""",
         ""Explanation"": ""Many C2 servers implement their own protocols and data encoding techniques to evade detection. This rule detects an attempt to establish a connection to a Cobalt Strike C2 server using an HTTP beacon. Cobalt Strike is a commercial penetration testing tool that can be used to establish a command-and-control channel and facilitate remote exploitation and lateral movement. This rule specifically identifies the HTTP header and URI used by Cobalt Strike beacons, and the flow of traffic to a server implies that the compromised host is attempting to establish a connection with the C2 server.""
     ]
 ][
     {
         ""sid"": ""56614"",
         ""Technique ID"": ""T1515"",
         ""Technique name"": ""Inject Web Shell"",
         ""Quotes"": """"Inject Web Shell techniques involve inserting malicious code, typically in the form of a web shell, into a website to gain unauthorized remote access and control of the server. The rule detects a Cobalt Strike beacon connection attempt using a web shell, which is a common method attackers use to establish a persistent connection to a compromised server."""",
         ""Explanation"": ""This event is generated when activity relating to the Cobalt strike beacon is detected.""
     }
 ]","['T1059', 'T1043', 'T1133', 'T1105', 'T1071', 'T1516', 'T1064', 'T1504', 'T1486', 'T1059', 'T1071', 'T1515']",['T1083']
12372,"[
   {
     ""sid"": ""12372"",
     ""Technique ID"": ""T1115"",
     ""Technique Name"": ""Clipboard Data"",
     ""Quotes"": """"Clipboard Data techniques involve accessing and extracting data stored in the clipboard (i.e., the temporary data storage area of an operating system), which may contain sensitive information such as authentication tokens, credit card numbers, or passwords. This rule detects the presence of the 'mg-shadow 2.0' keylogger, which is known to capture clipboard content as part of its information-stealing capabilities."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""12372"",
         ""Technique ID"": ""T1047"",
         ""Technique name"": ""Network Sniffing"",
         ""Quotes"": """"Network Sniffing techniques involve capturing network traffic to obtain sensitive information. This rule detects the presence of the 'mg-shadow' keylogger, which is a type of passive network sniffer used to capture keystrokes and other sensitive information from network traffic."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
     {
         ""sid"": ""38563"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) that mimics a '404 Not Found' error to disguise its communication with a command and control server, which is a common method used by keyloggers to stealthily capture input data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""12372"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects the presence of the MG-Shadow keylogger, which is known to capture keyboard input and send it to a remote server."""""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""12372"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects the presence of a keylogger (mg-shadow 2.0) that sends captured keystrokes to an external server, which is a common method used by keyloggers to steal sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""12372"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule specifically detects the presence of the Keylogger mg-shadow 2.0, which is known for its capabilities in capturing keystrokes and other user inputs."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""12372"",
     ""Technique ID"": ""T1118"",
     ""Technique Name"": ""Keylogging"",
     ""Quotes"": """"Keylogging techniques involve capturing keystrokes to obtain sensitive information. This rule alerts on the detection of the 'mg-shadow' keylogger, which is specifically designed to capture and log keystrokes."""",
     ""Explanation"": ""This rule detects the presence of the 'mg-shadow' keylogger, which is a tool used to capture and log keystrokes.""
   }
 ][
   {
     ""sid"": ""12372"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects the presence of a keylogger (mg-shadow 2.0) that monitors and captures keystrokes, which is a common method used to steal sensitive information such as passwords."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""12372"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects activity related to the mg-shadow keylogger, which is a tool used to capture and log keystrokes, including passwords and other sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""12372"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": ""\""Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects a keylogger (MG-Shadow 2.0) attempting to exfiltrate captured data via SMTP, indicating that the attacker is attempting to steal sensitive information from the compromised system.\"""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""12372"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects the presence of the mg-shadow 2.0 keylogger which uses a special header (X-Mailer) to identify its presence and is known to capture keystrokes."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""12372"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule triggers when a possible keylogger 'MG-Shadow 2.0' is detected based on a specific string in the email payload, which indicates an attempt to capture input data."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1115', 'T1047', 'T1056', 'T1056', 'T1056', 'T1056', 'T1118', 'T1056', 'T1056', 'T1056', 'T1056', 'T1056']",['T1056']
59348,"[
         ""sid"": ""59348"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve transferring data to external entities for further use. This rule identifies an attempt to exfiltrate system information using a PHP webshell (Php.Webshell.CWShell) via an outbound HTTP connection. PHP webshells are commonly used to collect data and establish persistence on compromised systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""59348"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Adversaries may execute commands or scripts within an established host environment using command interpreters (e.g., bash, cmd, PowerShell), scripting languages (e.g., VBScript, JavaScript, Python), or other components of the host's normal operational toolset."""",
     ""Explanation"": ""This event is generated when an outbound connection is made from the internal network to an external IP address.""
   },
   {
     ""sid"": ""59348"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Adversaries may steal data by exfiltrating it over an existing command and control channel."""",
     ""Explanation"": ""This event is generated when an outbound connection is made from the internal network to an external IP address.""
   }
 ][
   {
     ""sid"": ""59348"",
     ""Technique ID"": ""T1008"",
     ""Technique Name"": ""Fallback Channels"",
     ""Quotes"": """"Fallback Channels techniques involve establishing alternate communication methods in case the primary channel is compromised or unavailable to maintain access to the target system. This rule detects outgoing connections from a web shell to an external server using a custom command ('uname -a' and 'Server Name') to gather system information."""",
     ""Explanation"": ""This rule matches packets from the web shell attempting to establish a connection outbound.""
   },
   {
     ""sid"": ""59348"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve using publicly accessible services or protocols to provide a means of initial access, command and control, or data exfiltration. This rule detects outbound connections from a web shell to an external server, indicating the use of an external service for communication."""",
     ""Explanation"": ""This rule matches packets from the web shell attempting to establish a connection outbound.""
   }
 ][
   {
     ""sid"": ""59348"",
     ""Technique ID"": ""T1071.001"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shells are malicious scripts that allow attackers to execute arbitrary commands on a web server. The rule detects an outbound connection attempt by a PHP web shell called 'CWShell' that typically involves sending system information, such as 'uname -a and 'Server Name,' to a remote server, indicating the presence of a web shell and potential command and control communication."""",
     ""Explanation"": ""The rule indicates the presence of PHP web shell activity, which is a common method used by attackers to gain persistent access to web servers and execute malicious commands.""
   }
 ][
     ""sid"": ""59348"",
     ""Technique ID"": ""T1003"",
     ""Technique name"": ""OS Command"",
     ""Quotes"": """"OS Command techniques involve using built-in system commands to gather information about the system or execute arbitrary commands. The rule indicates that an outbound connection attempt is being made by a web shell, which often use OS commands to interact with the underlying system."""",
     ""Explanation"": ""The rule detects outgoing traffic related to command execution by malware.""
 ][
   {
     ""sid"": ""59348"",
     ""Technique ID"": ""T1064"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system's command shell or scripting environment to execute commands or scripts, such as remotely-loaded PowerShell scripts. This rule detects outbound connections from a known web shell (CWShell) attempting to execute the command 'uname -a' on a remote server, which is a common method used by attackers to gather system information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""59348"",
     ""Technique ID"": ""T1106"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve obfuscating data, files, or other artifacts to evade detection or analysis. This rule detects an outbound connection from a known web shell (CWShell) that attempts to transfer a file containing obfuscated PHP code to a remote server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""59348"",
     ""Technique ID"": ""T1504"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter involves adversaries using command or scripting interpreters to perform tasks on a system or network to evade detection and gain unauthorized access. This rule detects an outbound connection attempt by a web shell known as 'Php.Webshell.CWShell', which is often used by adversaries to execute arbitrary commands on a compromised system."""",
     ""Explanation"": ""The rule detects a malicious attempt to use a PHP web shell to establish an outbound connection.""
   }
 ][
     {
         ""sid"": ""59348"",
         ""Technique ID"": ""T1064"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve disguising malicious activity as legitimate activity, such as system processes or trusted software, to evade detection and avoid security controls. The rule detects communication with a PHP web shell (CWShell) that is masquerading as a legitimate website or service, allowing the adversary to maintain persistent access to the compromised system."",
         ""Explanation"": ""This event is generated when a outbound php webshell connection attempt is detected.""
     }
 ][
     {
         ""Sid"": ""59348"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or files from an external system into a compromised environment. In this case, the rule detects an outbound connection attempt from an infected system to an external server, indicating that the malware may be attempting to exfiltrate data or transfer malicious tools."""",
         ""Explanation"": ""The outbound connection attempt is made to an external server by malware.""
     },
     {
         ""Sid"": ""59348"",
         ""Technique ID"": ""T1559"",
         ""Technique name"": ""Inter-Process Communication"",
         ""Quotes"": """"Inter-Process Communication techniques involve abusing inter-process communication (IPC) mechanisms for local code or command execution. The rule indicates that the malware is attempting to execute commands using the 'uname -a' and 'Server Name' commands, which are typical methods used by attackers to gather system information and establish persistence."""",
         ""Explanation"": ""Malware executes commands using Inter-Process Communication.""
     }
 ][
   {
     ""sid"": ""59348"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Non-Standard Port"",
     ""Quotes"": """"Non-Standard Port techniques involve using ports other than the expected default port for a service to avoid detection or interfere with legitimate traffic. This rule detects an attempt to establish an outbound connection to an atypical port, which is often used by malware or attackers to exfiltrate data or establish a covert communication channel."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""59348"",
     ""Technique ID"": ""T1568"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell to establish a remote command and control (C2) connection with a compromised web server. This rule detects an attempt to use the Php.Webshell.CWShell to establish an outbound connection to a remote server, which is a common method used by attackers to maintain persistent access to a compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""59348"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Output Logging"",
         ""Quotes"": """"Adversaries may create and maintain logs to track their activity, system operations, and additional host or network information to aid in later tasks. The rule appears to be detecting the outbound connection of a PHP web shell that attempts to execute the 'uname -a' command, which is often used by attackers to retrieve information about the underlying system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]","['T1071', 'T1105', 'T1041', 'T1008', 'T1133', 'T1071.001', 'T1003', 'T1064', 'T1106', 'T1504', 'T1064', 'T1105', 'T1559', 'T1105', 'T1568', 'T1071']",['T1505']
39642,"[
   {
     ""sid"": ""25555"",
     ""Technique ID"": ""T1580"",
     ""Technique name"": ""Cloud Infrastructure Discovery"",
     ""Quotes"": """"An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment."""",
     ""Explanation"": ""The rule identifies an attempt to access a file containing sensitive credential information on a WebNMS server, which could be used to gain unauthorized access to the server or its underlying infrastructure.""
   }
 ][
   {
     ""sid"": ""39642"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials from a system or application. This rule specifically detects an attempt to exploit the WebNMS framework server to retrieve credentials from a 'securitydbData.xml' file. Credential dumping is commonly used by adversaries to gain unauthorized access to systems and applications."""",
     ""Explanation"": ""This rule is to detect an attempt to exploit WebNMS framework server credential disclosure vulnerability.""
   }
 ][
     {
         ""sid"": ""39642"",
         ""Technique ID"": ""T1211"",
         ""Technique name"": ""Exploitation for Defense Evasion"",
         ""Quotes"": """"Exploitation for Defense Evasion techniques involve exploiting a system or application vulnerability to bypass security features. This rule detects an attempt to exploit a vulnerability in the WebNMS framework server to access sensitive configuration files, such as 'securitydbData.xml', which can be used to gain unauthorized access or escalate privileges."""",
         ""Explanation"": ""This event is generated when an attempt is made to obtain the WebNMS server credentials or access sensitive configuration files by sending a specially crafted request to the '/servlets/FetchFile' URI.""
     },
     {
         ""sid"": ""39642"",
         ""Technique ID"": ""T1212"",
         ""Technique name"": ""Exploitation for Credential Access"",
         ""Quotes"": """"Exploitation for Credential Access techniques involve exploiting software vulnerabilities in an attempt to collect credentials. This rule detects an attempt to exploit a vulnerability in the WebNMS framework server to access sensitive configuration files, such as 'securitydbData.xml', which can be used to gain unauthorized access or escalate privileges."""",
         ""Explanation"": ""This event is generated when an attempt is made to obtain the WebNMS server credentials or access sensitive configuration files by sending a specially crafted request to the '/servlets/FetchFile' URI.""
     }
 ][
     {
         ""sid"": ""39642"",
         ""Technique ID"": ""T1581"",
         ""Technique name"": ""Credential Dumping"",
         ""Quotes"": """"Credential Dumping techniques involve obtaining credentials from system memory, cache, or temporary files. In this rule, the attacker is specifically targeting the servlets/FetchFile endpoint to extract the confidential 'securitydbData.xml' file, which likely contains sensitive credential information."""",
         ""Explanation"": ""This event is generated when a user attempts an admin action using a known forbidden method.""
     },
     {
         ""sid"": ""39642"",
         ""Technique ID"": ""T1003"",
         ""Technique name"": ""OS Credential Dumping"",
         ""Quotes"": """"OS Credential Dumping techniques specifically target credentials stored within operating system components. This rule focuses on extracting credentials from the operating system level, which could include cached credentials or credentials stored in memory."""",
         ""Explanation"": ""This event is generated when a user attempts an admin action using a known forbidden method.""
     }
 ][
         ""sid"": ""39642"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted credential disclosure attack on a WebNMS framework server by fetching the 'securitydbData.xml' file, which may contain sensitive information such as passwords and other configuration data."""",
         ""Explanation"": ""This event is generated when activity relating to web application attack is detected.""
     ][
     ""sid"": ""39642"",
     ""Technique ID"": ""T1555"",
     ""Technique Name"": ""Credentials from Password Stores"",
     ""Quotes"": """"Credentials from Password Stores techniques involve searching for common password storage locations to obtain user credentials. This rule detects an attempt to access the 'conf/securitydbData.xml' file on a WebNMS server, which is a common location for storing hashed credentials. Attackers may attempt to retrieve these credentials to gain unauthorized access and compromise the system."""",
     ""Explanation"": ""This event is generated when an attempt to access the 'conf/securitydbData.xml' file on a WebNMS server is detected.""
 ][
   {
     ""sid"": ""39642"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted credential disclosure attempt on the WebNMS server by targeting the '/servlets/FetchFile' servlet to retrieve the 'conf/securitydbData.xml' file which may contain sensitive credentials."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in the WebNMS server by targeting the '/servlets/FetchFile' servlet to retrieve sensitive information from the 'conf/securitydbData.xml' file.""
   }
 ][
     ""sid"": ""39642"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Credential Access"",
     ""Quotes"": """"Credential Access techniques encompass activities that allow adversaries to access, extract, or manipulate credentials (e.g., passwords, authentication tokens) used for accessing systems, services, or applications. The rule indicates an attempted disclosure of credentials on a WebNMS framework server by accessing the 'securitydbData.xml' file, which may contain sensitive information such as passwords or authentication tokens."""",
     ""Explanation"": ""This rule targets a vulnerability that can be exploited to gain access to the 'securitydbData.xml' file. This file may contain sensitive information, including usernames and passwords. This could allow an attacker to gain access to the system and perform unauthorized actions.""
 ][
   {
     ""sid"": ""39642"",
     ""Technique ID"": ""T1559"",
     ""Technique Name"": ""Inter-Process Communication"",
     ""Quotes"": """"Inter-Process Communication techniques involve the abuse of inter-process communication (IPC) mechanisms for local code or command execution. This rule detects an attempt to access sensitive configuration data (securitydbData.xml) using the '/servlets/FetchFile' servlet in WebNMS, which could lead to credential disclosure."""",
     ""Explanation"": ""The attacker is trying to access a file with sensitive data, this is a typical behavior to steal credentials and then move laterally on the compromised system.""
   }
 ][
   {
     ""sid"": ""39642"",
     ""Technique ID"": ""T1592"",
     ""Technique name"": ""Credential Harvesting: Web Credential Stealer"",
     ""Quotes"": """"Credential Harvesting: Web Credential Stealer techniques involve using malicious websites or scripts to trick users into submitting their credentials for web-based applications or services. This rule specifically detects an attempt to exploit a vulnerability in the WebNMS framework server to steal the credentials for the security database."""",
     ""Explanation"": ""This event is generated when an attempt is made to exploit a vulnerability in the WebNMS framework server to steal credentials for the security database.""
   }
 ][
         ""sid"": ""39642"",
         ""Technique ID"": ""T1518"",
         ""Technique name"": ""Software Discovery"",
         ""Quotes"": """"Software Discovery techniques involve gathering information about software and software versions that are installed on a system. The rule indicates an attempt to access a file named 'securitydbData.xml' from the '/servlets/FetchFile' URI, which is likely a configuration file containing sensitive information related to the WebNMS framework."""",
         ""Explanation"": ""This event is generated when an attempt is made to access a file containing sensitive information.""
     ],
     [
         ""sid"": ""39642"",
         ""Technique ID"": ""T1608"",
         ""Technique name"": ""Stage Capabilities"",
         ""Quotes"": """"Stage Capabilities techniques involve setting up capabilities that can be used during targeting. The rule detects an attempt to access a configuration file that could be used to stage or prepare for further attacks, such as modifying system settings or installing additional malicious software."""",
         ""Explanation"": ""This event is generated when an attempt is made to access a file that could be used to stage or prepare for further attacks.""
     ]
 ]","['T1580', 'T1110', 'T1211', 'T1212', 'T1581', 'T1003', 'T1190', 'T1555', 'T1190', 'T1203', 'T1559', 'T1592', 'T1518', 'T1608']",['T1003']
40238,"[
         ""sid"": ""40238"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects outbound communication from a variant of the AgentTesla keylogger, which is designed to capture various types of user input, including hardware identifiers, computer name, username, and password."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""40238"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects outbound communication from a host infected with the Agent Tesla keylogger, which collects a variety of sensitive information, including keystrokes, passwords, and system information."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""40238"",
         ""Technique ID"": ""T1114"",
         ""Technique name"": ""Email Collection"",
         ""Quotes"": """"Email Collection techniques involve collecting email messages and attachments. The rule detects outbound communication from a host infected with the Agent Tesla keylogger, which has the ability to collect email messages, including attachments."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
     {
         ""sid"": ""40238"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects the outbound connection of Win.Keylogger.AgentTesla variant, which typically exploits vulnerabilities in web applications to establish communication with its remote command and control server."""",
         ""Explanation"": ""This rule looks for outbound connections from any internal host to external HTTP ports that contain specific HTTP headers, indicating the presence of the Win.Keylogger.AgentTesla variant.""
     },
     {
         ""sid"": ""40238"",
         ""Technique ID"": ""T1083"",
         ""Technique name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve searching for and enumerating files and directories on a system. This rule specifically checks for HTTP POST requests containing specific parameters (""type"", ""hwid"", ""pcname"", ""username"", ""password"") within the HTTP client body, which is consistent with the behavior of the AgentTesla keylogger to collect system information."""",
         ""Explanation"": ""This rule looks for outbound connections from any internal host to external HTTP ports that contain specific HTTP headers, indicating the presence of the Win.Keylogger.AgentTesla variant.""
     }
 ][
         ""sid"": ""40238"",
         ""Technique ID"": ""T1071.001"",
         ""Technique name"": ""Data Encoding"",
         ""Quotes"": """"Data Encoding techniques involve encoding data to evade detection. The rule detects communication with a keylogger (AgentTesla) that uses customized encoding to conceal its malicious payload within HTTP POST requests. Specifically, it looks for data fields such as 'type', 'hwid', 'pcname', 'username', and 'password' encoded within the body of HTTP POST requests."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""40238"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Encoding"",
     ""Quotes"": """"Adversaries may take steps to encode data in order to avoid detection and analysis. This includes base64 encoding, URL encoding, or other formats that prevent or hinder understanding of the encoded data."""",
     ""Explanation"": ""The rule detects outbound connections associated with AgentTesla, a well-known keylogger, which is known to use various data encoding techniques to conceal its communications.""
   },
   {
     ""sid"": ""40238"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration Over Web Service"",
     ""Quotes"": """"Adversaries may use web services to exfiltrate data, including cloud services or other internet-accessible services used to relay information from a victim system"""",
     ""Explanation"": ""AgentTesla is commonly used to exfiltrate exfiltrated data via HTTP POST requests to remote web services, which is a typical exfiltration technique.""
   }
 ][
   {
     ""sid"": ""40238"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Data Encoding"",
     ""Quotes"": """"Adversaries may encode data to make the content of command and control traffic more difficult to detect. The rule indicates that the adversary is using AgentTesla, a keylogging malware, which typically employs data encoding techniques to conceal its communications."""",
     ""Explanation"": ""The rule detects outbound connections from AgentTesla, a keylogger, to a remote command and control server. Keyloggers often use data encoding to obfuscate their communications and evade detection.""
   },
   {
     ""sid"": ""40238"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve using a command and control (C2) channel to exfiltrate data from a victim system. The rule identifies outgoing communication to a remote server, which is a common method for malware to exfiltrate collected data."""",
     ""Explanation"": ""The rule detects outbound connections from AgentTesla, a keylogger, to a remote command and control server. Keyloggers typically exfiltrate collected data through C2 channels.""
   }
 ][
   {
     ""sid"": ""40238"",
     ""Technique ID"": ""T1539"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve establishing and maintaining communications between a victim system and a remote command and control server, allowing the operator to control the victim system remotely and use it for various malicious activities. This rule detects an outbound connection from a compromised system to a known Command and Control server associated with the AgentTesla keylogger, which is a type of malware used to steal sensitive information such as passwords and keystrokes."""",
     ""Explanation"": ""The IDS rule triggers an alert when it identifies a connection made to a known Command and Control server associated with AgentTesla malware.""
   }
 ][
   {
     ""sid"": ""40238"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring data from a compromised system to an external location, which could be a command and control server or attacker-controlled infrastructure. In this rule, the outbound connection is attempting to send data containing system information, including hardware ID (hwid), PC name (pcname), username, and password, which aligns with the objective of exfiltrating sensitive data."""",
     ""Explanation"": ""This event is generated when a keylogger is detected.""
   }
 ][
         ""sid"": ""40238"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects outbound communication from an infected system to a command and control server, where captured keystrokes (passwords, usernames, etc.) are being transmitted."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""40238"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the detection of a variant of the Win.Keylogger.AgentTesla keylogger, which captures keystrokes and sends them to a remote server. The rule checks for specific strings (""type="", ""hwid="", ""pcname="", ""username="", and ""password="") in the HTTP client body, which are typically used by keyloggers to collect system and user credential information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""40238"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an outbound connection to a known C2 server associated with AgentTesla keyloggers, indicating an attempt to exfiltrate sensitive information from the compromised host."""",
     ""Explanation"": ""Outbound connection to known C2 server associated with AgentTesla keyloggers.""
   }
 ]","['T1056', 'T1056', 'T1114', 'T1190', 'T1083', 'T1071.001', 'T1071', 'T1048', 'T1132', 'T1041', 'T1539', 'T1071', 'T1056', 'T1056', 'T1190']",['T1056']
29918,"[
   {
     ""sid"": ""29918"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects a keylogger (Win.Keylogger.Vacky) that sends system information to an external host, which is a common method used by keyloggers to capture input data."""",
     ""Explanation"": ""This alert is triggered when a computer is infected with the Win.Keylogger.Vacky malware, which is a keylogger that captures and sends system information to an external host.""
   }
 ][
         ""sid"": ""29918"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule is generating an alert when it detects malicious activity related to the Win.Keylogger.Vacky, which is a type of Trojan that specifically targets keystrokes and other user input to steal sensitive information."",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""29918"",
         ""Technique ID"": ""T1538"",
         ""Technique name"": ""OS Credential Dumping"",
         ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials from operating systems or applications running on victim machines. The rule identifies an attempt to dump credentials from the system, which is a common method used by attackers to compromise credentials and gain further access to the system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
     {
         ""sid"": ""29918"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects the presence of Vacky, a keylogger malware, which monitors user input and transmits the captured data to a remote server."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     },
     {
         ""sid"": ""29918"",
         ""Technique ID"": ""T1008"",
         ""Technique name"": ""Fallback Channels"",
         ""Quotes"": """"Fallback Channels techniques involve using alternate or backup communication mechanisms if the primary channel is compromised or unavailable. The rule indicates that the malware communicates with a remote server through an encrypted channel, suggesting the use of a fallback channel to maintain connectivity."""",
         ""Explanation"": ""The event description mentions ""encrypted channel"", which implies the usage of alternative or backup communication channels.""
     }
 ][
   {
     ""sid"": ""29918"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of malware (Win.Keylogger.Vacky) attempting to steal system information, likely through keylogging or similar methods."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""29918"",
         ""Technique ID"": ""T1056"",
         ""Technique Name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects a keylogger (Vacky) that sends system information to a remote server, indicating that it is attempting to capture user input."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""29918"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects an attempt by the Win.Keylogger.Vacky malware to exfiltrate system information by capturing keystrokes and sending them to a remote server."""",
     ""Explanation"": ""Keyloggers are designed to steal sensitive information, such as login credentials, credit card numbers, and other personal data, by recording keystrokes made on the infected system and sending them to a remote server.""
   }
 ][
         ""sid"": ""29918"",
         ""Technique ID"": ""T1595.001"",
         ""Technique name"": ""Active Scanning: Port Scan"",
         ""Quotes"": """"Active Scanning techniques involve actively probing a target system or network for open ports or services, often for reconnaissance or vulnerability assessment purposes. This rule detects a series of port scans, using a distinctive pattern of SYN packets with different source ports and the same destination port, which is a common method used by attackers to identify open ports and potential vulnerabilities in target systems."""",
         ""Explanation"": ""This rule detects when a host is actively scanning a network.""
     ][
     ""sid"": ""29918"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule is triggered when the system attempts to send data to a remote IP address that contains a specific pattern, which is a technique often used by keyloggers to exfiltrate captured data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
         ""sid"": ""29918"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects the presence of a keylogger (Vacky) that's designed to harvest system information, which includes capturing keystrokes and other user input."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
 {
         ""sid"": ""29918"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a keylogger (Vacky) that sends system information to a remote server. This behavior is consistent with keyloggers, which are often used to capture keystrokes and other sensitive information."""",
         ""Explanation"": ""This event is generated when a system information disclosure vulnerability in the system is exploited by a malware.""
     }
 ][
         ""sid"": ""29918"",
         ""Technique ID"": ""T1049"",
         ""Technique name"": ""System Network Connections Discovery"",
         ""Quotes"": """"System Network Connections Discovery techniques involve gathering information about network connections to or from the compromised system. This rule detects Vacky keylogger's attempt to establish outbound network connections by identifying specific patterns within the network traffic."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]","['T1056', 'T1056', 'T1538', 'T1056', 'T1008', 'T1056', 'T1056', 'T1056', 'T1595.001', 'T1056', 'T1056', 'T1056', 'T1049']",['T1056']
13236,"[
         ""sid"": ""13236"",
         ""Technique ID"": ""T1056"",
         ""Technique Name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects the presence of a keylogger (ActiveKeylogger 3.9.2) that is actively sending activity logs via email, indicating that it has captured user input and is attempting to exfiltrate sensitive information."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""13236"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system shell to run a script or commands to perform specific actions or execute additional payloads. This rule detects the presence of the 'ActiveKeylogger 3.9.2' keylogger, which is commonly deployed by attaching its payload to an email as a ZIP file and relies on the user to execute the attachment to install the keylogger on the system."""",
     ""Explanation"": ""This event is generated when a keylogger is used to log keystrokes.""
   },
   {
     ""sid"": ""13236"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve encoding or encrypting data to conceal its true nature or evade detection. This rule detects the presence of the 'ActiveKeylogger 3.9.2' keylogger, which may use data encoding techniques to hide its malicious payload within the ZIP file attachment."""",
     ""Explanation"": ""This event is generated when data is encoded""
   },
   {
     ""sid"": ""13236"",
     ""Technique ID"": ""T1566"",
     ""Technique name"": ""Evasion Techniques"",
     ""Quotes"": """"Evasion Techniques encompass a variety of methods used by adversaries to avoid detection, including obfuscation, anti-debugging, and anti-virtualization techniques. This rule detects the presence of the 'ActiveKeylogger 3.9.2' keylogger, which may employ evasion techniques to avoid detection by security measures."""",
     ""Explanation"": ""This event is generated when an evasion technique is used.""
   },
   {
     ""sid"": ""13236"",
     ""Technique ID"": ""T1497"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching for and identifying files and directories of interest on a system. This rule detects the presence of the 'ActiveKeylogger 3.9.2' keylogger, which may use file and directory discovery techniques to locate sensitive information on the compromised system."""",
     ""Explanation"": ""This event is generated when a file or directory is discovered.""
   },
   {
     ""sid"": ""13236"",
     ""Technique ID"": ""T1114"",
     ""Technique name"": ""Email Collection"",
     ""Quotes"": """"Email Collection techniques involve targeting user email to collect sensitive information. This rule detects the presence of the 'ActiveKeylogger 3.9.2' keylogger, which may collect email-related information from the compromised system."""",
     ""Explanation"": ""This event is generated when an email is collected.""
   }
 ][
         ""sid"": ""13236"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The IDS rule specifically detects malicious emails related to malware activity, indicating that the attackers are targeting vulnerable email applications to spread malware or steal information."""",
         ""Explanation"": ""This rule is for Active Keylogger 3.9.2, which drops logs and keys that have been recorded by the keylogger.""
     ][
    {""sid"": ""13236"",
    ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects the presence of the 'Keylogger 3.9.2' malware, which is known for its keylogging capabilities, attempting to send captured data via email."""",
     ""Explanation"": ""This rule is triggered when the 'Keylogger 3.9.2' malware attempts to send captured keystrokes via email.""
 }
 ][
   {
     ""sid"": ""13236"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule specifically mentions the detection of the 'runtime detection' of 'Keylogger 3.9.2', indicating that the IDS is detecting the active presence of a keylogger that is capturing user input data."""",
     ""Explanation"": ""This event is generated when activity relating to key loggers malware is detected.""
   },
   {
     ""sid"": ""13236"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending collected data back to an adversary over a command and control channel. The rule mentions that the detected keylogger is sending the captured input data via email, which is a common method used by attackers to exfiltrate sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to key loggers malware is detected.""
   }
 ][
   {
     ""sid"": ""13236"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects the presence of Keylogger 3.9.2, which is a known keylogger that can capture and record user input data."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""13236"",
     ""Technique ID"": ""T1119"",
     ""Technique Name"": ""Automated Collection"",
     ""Quotes"": """"Automated Collection techniques involve using automated tools or scripts to gather information from a target environment. This rule detects a specific type of Keylogger 3.9.2 that sends collected keystrokes as an email attachment, indicating an automated data collection process."""",
     ""Explanation"": ""This rule detects and alerts on the presence of the Keylogger 3.9.2 malware, which is known to collect keystrokes and send them as an email attachment.""
   },
   {
     ""sid"": ""13236"",
     ""Technique ID"": ""T1123"",
     ""Technique Name"": ""Audio Capture"",
     ""Quotes"": """"Audio Capture techniques involve capturing or recording audio from a target system's microphone. This rule detects a specific type of Keylogger 3.9.2 that sends collected keystrokes as an email attachment, which may also include audio recordings if the malware has audio capture capabilities."""",
     ""Explanation"": ""This rule detects and alerts on the presence of the Keylogger 3.9.2 malware, which is known to collect keystrokes and send them as an email attachment. It is possible that this malware may also have audio capture capabilities, as many keyloggers do.""
   },
   {
     ""sid"": ""13236"",
     ""Technique ID"": ""T1020"",
     ""Technique Name"": ""Automated Exfiltration"",
     ""Quotes"": """"Automated Exfiltration techniques involve using automated tools or scripts to exfiltrate data from a target environment. This rule detects a specific type of Keylogger 3.9.2 that sends collected keystrokes as an email attachment, demonstrating an automated exfiltration method."""",
     ""Explanation"": ""This rule detects and alerts on the presence of the Keylogger 3.9.2 malware, which is known to collect keystrokes and send them as an email attachment. This indicates that the malware is using an automated method to exfiltrate the collected data.""
   }
 ][
     ""sid"": ""13236"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects the presence of ActiveKeylogger 3.9.2, a keylogger that monitors and records user activity, including keystrokes and other input data, and sends it back to an attacker-controlled server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""13236"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of an active Keylogger 3.9.2, which is a tool used to stealthily record and capture keystrokes. The rule detects the keylogger's attempt to send captured keystrokes via email, which is a common method used by keyloggers to exfiltrate sensitive data."",
     ""Explanation"": ""Keylogger is used to capture the activity of the user by logging each keystroke.""
   }
 ][
         ""sid"": ""13236"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule specifically mentions the detection of Keylogger 3.9.2, which is known for its ability to capture and exfiltrate keystrokes and other sensitive data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""13236"",
         ""Technique ID"": ""T1114"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve presenting a façade or impersonating another entity to avoid detection or gain access to unauthorized resources. In this case, the email contains the attachment with the keylogger 3.92 malware, which attempts to masquerade as a harmless file or attachment to evade detection and facilitate the capture of sensitive data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
     ""sid"": ""13236"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects the presence of Active Keylogger 3.9.2, a known keystroke logging tool, based on the presence of specific text patterns in an email attachment. Keyloggers are commonly used to capture sensitive information such as passwords and other user input."""",
     ""Explanation"": ""Keylogger detecting email.""
 ]","['T1056', 'T1059', 'T1132', 'T1566', 'T1497', 'T1114', 'T1190', 'T1056', 'T1056', 'T1140', 'T1056', 'T1119', 'T1123', 'T1020', 'T1056', 'T1056', 'T1056', 'T1114', 'T1056']",['T1056']
47399,"[
   {
     ""sid"": ""47399"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Application Layer Protocol Abuse"",
     ""Quotes"": """"Application Layer Protocol Abuse techniques involve abusing application layer protocols to compromise systems. This rule detects an outbound attempt to establish a remote shell connection using the 'cmd.exe' command, which is a common method attackers use to execute commands and gain control of a compromised system."""",
     ""Explanation"": ""Detecting outbound activity that resembles adversary post-compromise behavior (e.g., attempted command and control communication).""
   }
 ][
   {
     ""sid"": ""47399"",
     ""Technique ID"": ""T1047"",
     ""Technique Name"": ""Windows Management Instrumentation"",
     ""Quotes"": """"Windows Management Instrumentation (WMI) techniques allow adversaries to interact with WMI to perform malicious activities. This rule detects an outbound shell attempt using WMI, which involves using the 'cmd.exe' command to execute malicious commands on a remote host."""",
     ""Explanation"": ""This event is generated when a command shell connection attempt is detected.""
   }
 ][
   {
     ""sid"": ""47399"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Command Execution"",
     ""Quotes"": """"Remote Command Execution techniques involve executing commands or scripts on a remote system. The rule looks specifically for attempts to execute the cmd.exe command-line interpreter from a remote host, which could be used to execute arbitrary commands on the system."""",
     ""Explanation"": ""The rule looks specifically for attempts to execute the cmd.exe command-line interpreter from a remote host, which could be used to execute arbitrary commands on the system.""
   }
 ][
   {
     ""sid"": ""47399"",
     ""Technique ID"": ""T1098"",
     ""Technique name"": ""Shellcode"",
     ""Quotes"": """"Shellcode techniques involve injecting malicious executable code directly into memory and executing it. Shells, specially crafted command and control programs, provide the attacker with access to and control over the target system through an interactive command interface."""",
     ""Explanation"": ""This rule detects outbound connections to the internet from the internal network. The content string ""Microsoft Windows XP"" indicates that the connection is using a Windows command shell, which suggests a shellcode attack.""
   },
   {
     ""sid"": ""47399"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control (C2) techniques involve the adversary communicating with a remote system to receive commands or exfiltrate data. A shellcode loader is a small piece of a malicious software that loads and executes shellcode on a victim's system, giving the attacker control over the system through an interactive shell."""",
     ""Explanation"": ""This rule detects outgoing connections from the internal network to the external network. The content string contains the words ""cmd.exe,"" which is a Windows command-line interpreter. This suggests that the connection is being used to establish a command and control channel with an attacker.""
   }
 ][
   {
     ""sid"": ""47399"",
     ""Technique ID"": ""T1018"",
     ""Technique Name"": ""Remote Shell"",
     ""Quotes"": """"Remote Shell techniques involve using operating system shell commands or utilities to execute arbitrary code on a remote system. This rule detects outbound communication to a remote IP address from a compromised Microsoft Windows XP system. Attackers may use remote shell commands, such as cmd.exe, to control compromised systems remotely and execute arbitrary commands."""",
     ""Explanation"": ""Shell command execution attempt on port 445/tcp""
   }
 ][
   {
     ""sid"": ""47399"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system's built-in command line or scripting environment to execute commands or scripts. This rule detects an attempt to execute the cmd.exe command from a compromised host, which is a common method used by attackers to establish a command and control channel or execute malicious scripts."""",
     ""Explanation"": ""This event is generated when activity relating to the command prompt is detected.""
   }
 ][
   {
     ""sid"": ""47399"",
     ""Technique ID"": ""T1042"",
     ""Technique name"": ""Command-Line Interface"",
     ""Quotes"": """"Command-Line Interface techniques involve using the operating system's command-line interface to execute commands and scripts. This rule detects an attempt to use cmd.exe to establish an outbound shell connection, which is a common method for attackers to gain remote access and execute commands on the compromised system."""",
     ""Explanation"": """"Microsoft cmd.exe outbound shell attempt"""" indicates an attempt to use the Windows command shell to establish an outbound connection, which is often associated with malicious activities such as remote code execution or data exfiltration.""
   }
 ][
   {
     ""sid"": ""47399"",
     ""Technique ID"": ""T1057"",
     ""Technique Name"": ""Process Discovery"",
     ""Quotes"": """"Process Discovery techniques involve observing and gathering information about running processes on a system or within a network environment. This rule raises an alert when the Microsoft Windows XP 'cmd.exe' executable attempts to establish a connection to an external network address, which is indicative of an attempt to create an outbound shell connection. Attackers often use cmd.exe to execute commands on a target system to facilitate further exploitation."""",
     ""Explanation"": ""This event is generated when the Microsoft Windows XP 'cmd.exe' executable attempts to establish a connection to an external network address.""
   },
   {
     ""sid"": ""47399"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve abusing legitimate remote desktop or remote access tools to establish interactive command and control channels or otherwise gain remote access to a system. This rule specifically detects outbound attempts to connect to TCP port 3389, which is commonly used for Microsoft Remote Desktop Protocol (RDP) connections. Attackers may target this port to establish a remote session that allows them to control the target system remotely."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""47399"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or files from an external system into a compromised environment. This rule detects an outbound attempt to connect to a remote host using the command prompt (cmd.exe), which is a common method attackers use to transfer tools or files into a compromised system."""",
     ""Explanation"": ""Detects outbound activity from cmd.exe""
 ][
   {
     ""sid"": ""47399"",
     ""Technique ID"": ""T1497"",
     ""Technique Name"": ""Interpreter"",
     ""Quotes"": """"Interpreter techniques involve using an interpreter, such as shellcode, to execute a program or commands. In this case, the rule detects outgoing traffic from an internal network IP address to an external IP address, where the traffic contains the string ""Microsoft Windows XP"". This suggests the presence of a command interpreter, such as cmd.exe, attempting to create an outbound connection, which is a common method used by adversaries to gain remote access to a system."""",
     ""Explanation"": ""Indicators of compromise (IOCs) often include specific patterns or signatures that are associated with known malicious activity. This rule detects traffic matching a known IOC, indicating a potential compromise attempt.""
   }
 ][
   {
     ""sid"": ""47399"",
     ""Technique ID"": ""T1064"",
     ""Technique Name"": ""Outbound Command and Control"",
     ""Quotes"": """"Outbound Command and Control (C2) techniques involve an attacker communicating from a compromised system to a remote C2 server for the purpose of sending commands or exfiltrating data."""",
     ""Explanation"": ""The rule detects an attempted outbound shell connection, which is a common method for attackers to establish remote control over a compromised system.""
   }
 ]","['T1071', 'T1047', 'T1021', 'T1098', 'T1059', 'T1018', 'T1021', 'T1042', 'T1057', 'T1021', 'T1105', 'T1497', 'T1064']",['T1059']
7180,"[
   {
     ""sid"": ""7180"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. Keyloggers are a common type of malware used for this purpose, as they can monitor and record keystrokes, system clipboard content, and other user input data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""7180"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects activity related to the Desktop Detective 2000 keylogger, which is designed to capture and log user keystrokes."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""7180"",
     ""Technique ID"": ""T1047"",
     ""Technique Name"": ""Network Share Discovery"",
     ""Quotes"": """"Network Share Discovery techniques involve identifying and accessing network shares to gain access to data or resources on remote systems. The rule detects an attempt to establish a connection to a remote network share using the Desktop Detective 2000 keylogger, which could indicate an attempt to exfiltrate captured keystrokes or other sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""7180"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. Keylogging is a specific type of input capture, which allows attackers to record keystrokes entered by a user to steal passwords or other sensitive data."""",
     ""Explanation"": ""This rule detects malicious activity performed by a keylogger tool called Desktop Detective 2000, which is used to capture user input and may lead to credential theft or sensitive data exposure.""
   }
 ][
   {
     ""sid"": ""7180"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects a successful connection to a desktop surveillance tool called 'Desktop Detective 2000', which is commonly used for keylogging and other forms of input capture."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""7180"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects a Desktop Detective runtime detection event related to a keylogger, which is a tool specifically designed to capture keystrokes."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""Sid"": ""7180"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of malware (Keylogger) that specifically targets the Desktop Detective 2000 software, which is known to be used for keylogging and monitoring user activity."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""7180"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects the initialization of a keylogger (Desktop Detective) that records keystrokes, which is a common method used by attackers to steal credentials and other sensitive data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][][
   {
     ""sid"": ""7180"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule specifically detects the 'Desktop Detective 2000', a keylogger that uses the 'FE FE FE FE' pattern to communicate with its command and control server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""7180"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects a connection attempt by Desktop Detective, a commercial keylogger, which uses the 0xFEFEFEFE900000 protocol to establish communication with its C2 server."""",
     ""Explanation"": ""This rule indicates the presence of a desktop detective 2000 runtime detection - init connection.""
   }
 ][
   {
     ""sid"": ""7180"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning involves the adversary attempting to identify services running on a system by probing ports and listening for responses. This rule detects an attempt to initiate a connection with a system running Desktop Detective 2000, a keylogger, using a specific initialization sequence. This technique matches the behavior of adversaries attempting to establish communication with keyloggers or other malicious services."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1056', 'T1056', 'T1047', 'T1056', 'T1056', 'T1056', 'T1056', 'T1056', 'T1056', 'T1056', 'T1040']",['T1056']
56617,"[
         ""sid"": ""56617"",
         ""Technique ID"": ""T1218"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in client-side applications, such as a browser, to gain unauthorized access and deliver malicious payloads, such as malware, to unsuspecting users."""",
         ""Explanation"": ""Cobalt Strike beacons are used for command and control after exploitation of a client-side application initiates a connection to a remote server to allow for the attacker to manipulate and control the machine.""
     ][
   {
     ""sid"": ""56617"",
     ""Technique ID"": ""T1452"",
     ""Technique Name"": ""Cobalt Strike Command and Control"",
     ""Quotes"": """"Cobalt Strike Command and Control techniques involve the use of the Cobalt Strike framework for lateral movement, command and control, and data exfiltration. The alert specifically mentions Cobalt Strike beacon inbound connection attempts, indicating that the rule is designed to detect initial connections from Cobalt Strike."""",
     ""Explanation"": ""This rule is used to detectCobalt Strike beacon inbound connection attempt""
   }
 ][
   {
     ""sid"": ""56617"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. This rule detects an inbound connection attempt to a Cobalt Strike beacon, which is a common tool used by attackers to establish a command and control channel over HTTP. Attackers may use external remote services, such as Cobalt Strike, to gain initial access to a network and maintain persistence."""",
     ""Explanation"": ""Cobalt Strike is a commercial pen-testing suite used by red teams to simulate adversaries during security assessments. Cobalt Strike uses a variety of techniques to evade detection, including the use of legitimate protocols and encryption. The rule detects an inbound connection attempt to a Cobalt Strike beacon, which is a common tool used by attackers to establish a command and control channel over HTTP.""
   }
 ][
   {
     ""sid"": ""56617"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve moving data from a compromised system to a remote location controlled by an adversary. This rule detects an incoming connection to a Cobalt Strike beacon, which is a common tool used by attackers to establish a command and control channel for exfiltrating data."""",
     ""Explanation"": ""Cobalt Strike is a commercial, post-exploitation agent that allows attackers to remotely control compromised systems.""
   },
   {
     ""sid"": ""56617"",
     ""Technique ID"": ""T1129"",
     ""Technique Name"": ""Shared Modules"",
     ""Quotes"": """"Shared Modules techniques involve loading malicious code into a shared module that is used by multiple processes or applications. This rule detects the presence of the Cobalt Strike beacon, which can be implemented as a shared module that is loaded into memory by legitimate processes to provide covert access to an attacker."""",
     ""Explanation"": ""Cobalt Strike is a post-exploitation framework that allows attackers to compromise systems and execute arbitrary commands. It can be implemented as a shared module that is loaded into memory by legitimate processes to provide covert access to an attacker.""
   },
   {
     ""sid"": ""56617"",
     ""Technique ID"": ""T1505"",
     ""Technique Name"": ""Server Software Component"",
     ""Quotes"": """"Server Software Component techniques involve abusing legitimate extensible development features of servers to establish persistent access to systems. This rule detects the presence of the Cobalt Strike beacon, which can be implemented as a server-side component that listens for incoming connections from the attacker."""",
     ""Explanation"": ""Cobalt Strike is a post-exploitation framework that allows attackers to compromise systems and execute arbitrary commands. It can be implemented as a server-side component that listens for incoming connections from the attacker.""
   }
 ][
   {
     ""sid"": ""56617"",
     ""Technique ID"": ""T1043"",
     ""Technique name"": ""Internal Remote Services"",
     ""Quotes"": """"Internal Remote Services techniques involve attackers using internal services, such as SMB and RDP, to communicate with an external resource without traversing the firewall or otherwise evading network monitoring systems. In this case, the rule detects an attempted inbound connection to a Cobalt Strike beacon, which is a tool commonly used for remote access and command and control."""",
     ""Explanation"": ""Cobalt strike is a tool that forwards sessions over the web""
   },
   {
     ""sid"": ""56617"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve moving malicious tools, such as remote access trojans (RATs) or other software implants, onto a target system by exploiting a vulnerability or leveraging legitimate software. The rule detects an attempt to establish an inbound connection to a Cobalt Strike beacon, which is a common method of transferring and executing malicious tools."""",
     ""Explanation"": ""Cobalt strike is a tool that forwards sessions over the web""
   }
 ][
   {
     ""sid"": ""56617"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control (C2) techniques involve the communication between a victim system and a remote system controlled by an adversary, often referred to as a ""command and control server"". This rule detects an inbound connection attempt from aCobalt Strike beacon, which is a common tool used by adversaries to establish C2 communications with compromised systems."""",
     ""Explanation"": """"Cobalt Strike is a commercial software that is used for adversary simulation, red team operations, and post-exploitation. Cobalt Strike is used by penetration testers, threat actors, and red teams because it provides a wide range of features that can be used to attack and exploit computer systems."" 
   }
 ][
   {
     ""sid"": ""56617"",
     ""Technique ID"": ""T1043"",
     ""Technique name"": ""Internal Remote Services"",
     ""Quotes"": """"Internal Remote Services techniques involve using legitimate remote services to execute commands or transfer data over internal networks, bypassing traditional network defenses. This rule detects an inbound connection attempt to a Cobalt Strike beacon, which is a tool commonly used by attackers to maintain remote access and control over compromised systems."""",
     ""Explanation"": ""Cobalt Strike is a commercial, post-exploitation agent that provides a wide range of features for persistence, lateral movement, privilege escalation, and more.""
   }
 ][
     ""sid"": ""56617"",
     ""Technique ID"": ""T1588"",
     ""Technique name"": ""Obtain Capabilities"",
     ""Quotes"": """"Obtain Capabilities techniques describe how adversaries may buy and/or steal capabilities that can be used during targeting. Cobalt Strike is a commercial off-the-shelf (COTS) network exploitation tool that provides adversaries with capabilities such as remote access, post-exploitation, and lateral movement. Use of Cobalt Strike may indicate that an adversary has purchased or stolen these capabilities for use in targeting."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
     ""sid"": ""56617"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve adversaries establishing communication with assets under their control to maintain persistence and facilitate remote access to a compromised system. The rule detects an attempt to establish an inbound connection to a Cobalt Strike beacon, which is a common tool used by attackers to establish a command and control channel for remote access and control."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
         ""sid"": ""56617"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control (C2) techniques involve establishing covert communication channels between remote attackers and compromised systems to send commands and receive data. This rule detects an inbound connection attempt from a Cobalt Strike beacon, which is a common tool for attackers to establish C2 communication."""",
         ""Explanation"": ""Cobalt strike generates beacons that maintain a persistent presence on the victim machine as well as executing commands on demand.""
     ][
   {
     ""sid"": ""56617"",
     ""Technique ID"": ""T1518"",
     ""Technique name"": ""Software Discovery"",
     ""Quotes"": """"Software Discovery techniques involve identifying applications or software installed on a system. This rule looks for specific HTTP headers and content associated with Cobalt Strike, a commercial tool used for post-exploitation activities and lateral movement. By identifying the presence of Cobalt Strike, the rule can infer that the adversary is attempting to establish a command and control connection with an infected system."""",
     ""Explanation"": ""Detects inbound attempts to connect to CobaltStrike beacons.""
   },
   {
     ""sid"": ""56617"",
     ""Technique ID"": ""T1608"",
     ""Technique name"": ""Stage Capabilities"",
     ""Quotes"": """"Staging capabilities involves preparing a compromised system for future use by an adversary. This rule detects an attempt to establish a connection to aCobalt Strike beacon, which is commonly used for post-exploitation and lateral movement. By identifying the presence of Cobalt Strike, the rule can infer that the adversary is trying to establish a persistent connection to the compromised system for future malicious activities."""",
     ""Explanation"": ""Detects inbound attempts to connect to CobaltStrike beacons.""
   }
 ]","['T1218', 'T1452', 'T1133', 'T1041', 'T1129', 'T1505', 'T1043', 'T1105', 'T1071', 'T1043', 'T1588', 'T1048', 'T1059', 'T1518', 'T1608']",['T1102']
19172,"[
   {
     ""sid"": ""19172"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a DLL loading vulnerability (CVE-2014-6332) in Microsoft Internet Explorer 8's ieshims.dll, which attackers could leverage to execute arbitrary code on vulnerable systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""19172"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a DLL loading vulnerability in Microsoft Internet Explorer 8's ieshims.dll, which could allow an attacker to execute arbitrary code on the target system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
         ""sid"": ""19172"",
         ""Technique ID"": ""T1212"",
         ""Technique name"": ""Exploitation for Credential Access"",
         ""Quotes"": """"Exploitation for Credential Access techniques involve exploiting vulnerabilities in software to obtain credentials (e.g., password hashes, session tokens). The rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer 8's 'ieshims.dll' library, which attackers could use to gain access to a user's credentials."""",
         ""Explanation"": ""This event is generated when Microsoft Internet Explorer attempts to load the malicious file.""
     ][
   {
     ""sid"": ""19172"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Remote Services"",
     ""Quotes"": """"Exploit Remote Services techniques involve targeting vulnerabilities in remote services to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a memory corruption vulnerability in Microsoft Windows XP's Internet Explorer 8 using the 'ieshims.dll' ActiveX control, which could allow attackers to execute arbitrary code in the context of the browser."""",
     ""Explanation"": ""This rule detects an exploit attempt against a Microsoft Internet Explorer 8 vulnerability.""
   }
 ][
         ""sid"": ""19172"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule is designed to detect an attempt to exploit a vulnerability in Microsoft Internet Explorer 8, known as the 'ieshims.dll' DLL-load exploit, which allows remote attackers to execute arbitrary code on vulnerable systems via a specially crafted website."""",
         ""Explanation"": ""The rule identifies an attempt to exploit a DLL-loading vulnerability in Microsoft Internet Explorer 8, which can lead to remote code execution and compromise of the target system.""
     ][
 ""sid"": ""19172"",
 ""Technique ID"": ""T1203"",
 ""Technique Name"": ""Exploit Public-Facing Application"",
 ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted DLL hijacking attack by loading a malicious DLL file into the Internet Explorer process, a common method used by attackers to exploit software vulnerabilities."""",
 ""Explanation"": ""This technique is used to gain unauthorized access to a system by exploiting a vulnerability in a public-facing application.""
 ][
   {
     ""sid"": ""19172"",
     ""Technique ID"": ""T1411"",
     ""Technique name"": ""DLL Search Order Hijacking"",
     ""Quotes"": """"DLL Search Order Hijacking techniques involve modifying the search order for DLLs to trick the system into loading a malicious DLL instead of the legitimate one. This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer 8 by loading a malicious 'ieshims.dll' DLL, which can lead to arbitrary code execution."",
     ""Explanation"": ""The event described in this rule is an attempt to exploit a vulnerability in the way Microsoft Internet Explorer 8 loads DLLs. By manipulating the search order for DLLs, an attacker can trick the system into loading a malicious DLL that contains arbitrary code. The malicious DLL can then be executed, allowing the attacker to gain control of the system.""
   }
 ][
         ""sid"": ""19172"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted dll-load exploit targeting the 'ieshims.dll' library in Microsoft Internet Explorer 8, which is a common method for exploiting software vulnerabilities and gaining code execution."""",
         ""Explanation"": ""DLL hijacking is a common attack vector that involves exploiting the way applications load dynamic link libraries (DLLs). By replacing legitimate DLLs with malicious ones, attackers can gain control of the application and execute arbitrary code.""
     ][
         ""sid"": ""19172"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Remote Services"",
         ""Quotes"": """"Exploit Remote Services techniques involve exploiting vulnerabilities in remote services to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer 8's ieshims.dll, which attackers could use to execute arbitrary code in the context of the current user. """""",
         ""Explanation"": ""The rule is triggering on an attempt to exploit a remote code execution vulnerability in Microsoft Internet Explorer 8, which could allow an attacker to take control of the system.""
     ][
   {
     ""sid"": ""19172"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Software"",
     ""Quotes"": """"Exploit Software techniques involve targeting software vulnerabilities to execute arbitrary code or gain unauthorized access to systems. This rule detects an exploit attempt targeting a DLL loading vulnerability in the 'ieshims.dll' component of Microsoft Internet Explorer 8, which is a common method attackers use to compromise systems by exploiting software flaws."""",
     ""Explanation"": ""The rule triggers when an exploit attempt targeting the ieshims.dll component of Microsoft Internet Explorer 8 is detected, indicating that attackers are attempting to leverage a software vulnerability to compromise the system.""
   }
 ][
   {
     ""sid"": ""19172"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""Internet Explorer 8 has a DLL loading vulnerability that could allow remote attackers to execute arbitrary code via a crafted website, related to the 'ieshims.dll' file.""
   }
 ]","['T1190', 'T1203', 'T1212', 'T1189', 'T1190', 'T1203', 'T1411', 'T1203', 'T1189', 'T1189', 'T1190']",['T1574']
57252,"[
   {
     ""sid"": ""57252"",
     ""Technique ID"": ""T1106"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve uploading and executing a web shell on a system to facilitate remote code execution and control of the compromised system. This rule detects an attempt to exploit a vulnerability in Microsoft Exchange Server via a web shell, which could allow an attacker to gain a foothold on a system and execute arbitrary commands."""",
     ""Explanation"": ""This event is generated when an attempt to upload a web shell to Microsoft Exchange Server is detected.""
   }
 ][
   {
     ""sid"": ""57252"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Provisional Account Creation"",
     ""Quotes"": """"Provisional Account Creation techniques involve creating accounts with limited privileges that can later be abused to obtain more privileged access. This rule detects an attempt to create a provisional account on a Microsoft Exchange Server using the '/DDIService.svc/SetObject' URI, which could be abused to gain access to the server and escalate privileges."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to create a provisional account on a Microsoft Exchange Server. This could be an indication of an attacker attempting to gain access to the server and escalate privileges.""
   },
   {
     ""sid"": ""57252"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Microsoft Exchange Server's '/DDIService.svc/SetObject' URI, which could allow an attacker to gain access to the server and execute arbitrary code."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to exploit a vulnerability in the Microsoft Exchange Server's '/DDIService.svc/SetObject' URI. This could be an indication of an attacker attempting to gain access to the server and execute arbitrary code.""
   }
 ][
     ""sid"": ""57252"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting software vulnerabilities in client applications to execute arbitrary code. This rule detects an attempt to exploit a remote code execution vulnerability in the Microsoft Exchange Server DDIService.svc web service. Attackers may attempt to exploit this vulnerability to execute arbitrary code and gain unauthorized access to the system."""",
     ""Explanation"": ""The rule indicates that the attack attempts to exploit a vulnerability in MsExchangeOWA to take control of the server.""
 ][
     ""sid"": ""57252"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file write attack on a Microsoft Exchange Server, which is a common method adversaries use to exploit vulnerabilities in web applications to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""Arbitrary file write attempt by exploiting a vulnerability in Microsoft Exchange Server.""
 ][
     ""sid"": ""57252"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file write in Microsoft Exchange Server through the '/DDIService.svc/SetObject' URI, which is a known vulnerability targeted by adversaries to exploit Exchange servers and gain unauthorized access."""",
     ""Explanation"": ""The rule is intended to detect exploitation attempts targeting a vulnerability in Exchange Server that allows remote attackers to write arbitrary files via crafted HTTP requests that bypass authentication and access control mechanisms.""
 ][
   {
     ""sid"": ""57252"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a Microsoft Exchange Server vulnerability that allows an attacker to perform arbitrary file writes by manipulating requests to the '/DDIService.svc/SetObject' URI."""",
     ""Explanation"": ""The rule identifies an attempt to exploit a vulnerability in Microsoft Exchange Server that allows remote attackers to execute arbitrary code via a crafted HTTP request to the '/DDIService.svc/SetObject' URI.""
   }
 ][
   {
     ""Sid"": 57252,
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": [
       """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file write vulnerability in Microsoft Exchange Server's 'SetObject' operation, which could allow an attacker to write arbitrary files to the server's file system.""
     ],
     ""Explanation"": ""The alert is triggered when an attempt is made to exploit a vulnerability in Microsoft Exchange Server that allows arbitrary file writes. This technique is commonly used by attackers to gain unauthorized access to a system or to execute malicious code.""
   }
 ][
   {
     ""sid"": ""57252"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file write attack on a Microsoft Exchange Server's 'DDIService.svc' service, which is a common method attackers use to exploit web applications by uploading malicious files."""",
     ""Explanation"": ""Arbitrary file write vulnerability in Microsoft Exchange Server 2010 SP3 and 2013 allows remote attackers to execute arbitrary code via a crafted SOAP request to a web service, related to the 'WCF Data Services 5.6.0' component.""
   }
 ][
   {
     ""sid"": ""57252"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques allow adversaries to execute arbitrary commands on a system. This rule triggers when an attacker attempts to write an arbitrary file to Microsoft Exchange Server using the '/DDIService.svc/SetObject' URI. This technique is often used to execute malicious commands or scripts on the server."""",
     ""Explanation"": ""This rule triggers when an attacker attempts to execute a command or script on the target system.""
   }
 ][
   {
     ""sid"": ""57252"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""This rule is looking at an attempted arbitrary file write on the Microsoft Exchange Server. This is common in attempts to exploit CVE-2022-41040 and CVE-2022-41082 which are remote code execution vulnerabilities.""
   },
   {
     ""sid"": ""57252"",
     ""Technique ID"": ""T1547"",
     ""Technique Name"": ""Web Service Attack"",
     ""Quotes"": ""\""Web Service Attack techniques involve targeting web services to disrupt operations or gain unauthorized access. This rule detects an attempt to attack the Microsoft Exchange Server's DDIService.svc web service, which is a common target for attackers looking to exploit vulnerabilities in the service.\"""",
     ""Explanation"": ""This rule is looking at an attempted arbitrary file write on the Microsoft Exchange Server. This is common in attempts to exploit CVE-2022-41040 and CVE-2022-41082 which are remote code execution vulnerabilities.""
   }
 ][
   {
     ""Sid"": ""57252"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file write attack on Microsoft Exchange Server's 'DDIService.svc' page, which is a common method attackers use to exploit web applications by manipulating HTTP requests."""",
     ""Explanation"": ""This event is generated when a suspicious file write attempt to Microsoft Exchange Server is detected.""
   }
 ]","['T1106', 'T1110', 'T1190', 'T1203', 'T1204', 'T1190', 'T1190', 'T1189', 'T1498', 'T1059', 'T1190', 'T1547', 'T1190']",['T1106']
58789,"[
   {
     ""sid"": ""58789"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule specifically detects an Apache Log4j remote code execution attempt, which is a vulnerability that allows attackers to execute arbitrary code on vulnerable systems by exploiting a flaw in the Java logging library."""",
     ""Explanation"": ""This event is generated when an attempt is made to exploit a remote code execution vulnerability in Apache Log4j.""
   }
 ][
         ""sid"": ""58789"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Remote Code Execution"",
         ""Quotes"": """"Remote Code Execution techniques involve executing arbitrary commands or code on a target machine. This rule detects an attempt to exploit a remote code execution vulnerability in Apache Log4j by manipulating Java Naming and Directory Interface (JNDI) requests. Attackers can exploit this vulnerability to execute arbitrary code by tricking the application into making LDAP requests to a malicious JNDI server, which then returns and executes code on the target machine."""",
         ""Explanation"": ""This event is generated when there is an attempt to exploit a remote code execution vulnerability in Apache Log4j.""
     ][
   {
     ""sid"": ""58789"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": [
       ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code.""
     ],
     ""Explanation"": ""The rule is triggered when an attempt to exploit a remote code execution vulnerability in Apache Log4j is detected. This vulnerability allows attackers to execute arbitrary code on a vulnerable system by sending a specially crafted HTTP request to a vulnerable application.""
   }
 ][
     {
         ""sid"": 58789,
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a remote code execution vulnerability in Apache Log4j, which is a common method attackers use to target and compromise vulnerable web applications."""",
         ""Explanation"": ""The rule matches traffic attempting to exploit the Apache Log4j remote code execution vulnerability by sending a specially crafted HTTP request containing a malicious payload that executes arbitrary code on the target system.""
     }
 ][
   {
     ""sid"": ""58789"",
     ""Technique ID"": ""T1497"",
     ""Technique name"": ""Virtualization/Sandbox Evasion"",
     ""Quotes"": """"Virtualization/Sandbox Evasion techniques involve adversaries employing various means to detect and avoid virtualization and analysis environments. This rule specifically looks for indicators of Log4j exploitation, which can be used to bypass virtualization and sandbox protections by abusing the Java Naming and Directory Interface (JNDI) to load malicious code from remote servers."""",
     ""Explanation"": ""This event is generated when an attacker attempts to exploit a remote code execution vulnerability in Apache Log4j.""
   }
 ][
   {
     ""sid"": ""58789"",
     ""Technique ID"": ""T1499"",
     ""Technique Name"": ""Logon Scripts"",
     ""Quotes"": """"Logon Scripts techniques involve using logon scripts in startup folders, registry keys, or Group Policy to create scheduled tasks that run continuously or when a specific user or computer account logs on to a system."""",
     ""Explanation"": ""This alert is triggered when a user attempts to execute a malicious PowerShell script through a Scheduled Task. The script appears to be an encoded command that is executed using the Invoke-Expression cmdlet. This technique is commonly used to bypass application whitelisting restrictions.""
   }
 ][
   {
     ""sid"": ""58789"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a remote code execution vulnerability in Apache Log4j, which allows attackers to execute arbitrary code on vulnerable systems by sending a specially crafted HTTP request containing a malicious payload to the application.\"""",
     ""Explanation"": ""This rule is designed to detect and block attempts to exploit a remote code execution vulnerability in Apache Log4j, which is a popular logging library used in many Java-based applications.""
   }
 ][
   {
     ""sid"": ""58789"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution attack exploiting a vulnerability in Apache Log4j, a popular Java logging library. Attackers can exploit this vulnerability by sending a specially crafted HTTP request that includes a malicious payload, which can lead to the execution of arbitrary code on the target system."""",
     ""Explanation"": ""The rule matches on HTTP requests containing a malicious payload that attempts to exploit a vulnerability in Apache Log4j, which can lead to remote code execution.""
   }
 ][
   {
     ""sid"": ""58789"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule is designed to detect and block attempts to exploit a remote code execution vulnerability in Apache's Log4j logging library. Attackers could exploit this vulnerability by sending a specially crafted HTTP request to a vulnerable server, allowing them to execute arbitrary code on the target system."""",
     ""Explanation"": ""The rule is triggered when a request containing a malicious payload is detected, which attempts to exploit the vulnerability by referencing a malicious JNDI endpoint. A successful exploitation would allow an attacker to execute arbitrary code on the target system.""
   }
 ][
   {
     ""sid"": ""58789"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code.\"""",
     ""Explanation"": ""Apache HTTP Server (httpd) versions 2.0.0-2.4.x before 2.4.53 and 2.0.0-2.4.x before 2.0.65 are vulnerable to remote code execution. This vulnerability is due to the way that Log4j handles certain logging requests. A remote attacker could exploit this vulnerability by sending a specially crafted HTTP request to a vulnerable server.""
   },
   {
     ""sid"": ""58789"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploit Remote Services"",
     ""Quotes"": ""\""Exploit Remote Services techniques involve targeting vulnerabilities in remote services to gain unauthorized access or execute arbitrary code.\"""",
     ""Explanation"": ""Apache HTTP Server (httpd) versions 2.0.0-2.4.x before 2.4.53 and 2.0.0-2.4.x before 2.0.65 are vulnerable to remote code execution. This vulnerability is due to the way that Log4j handles certain logging requests. A remote attacker could exploit this vulnerability by sending a specially crafted HTTP request to a vulnerable server.""
   }
 ][
     {
       ""sid"": ""58789"",
       ""Technique ID"": ""T1190"",
       ""Technique Name"": ""Exploit Public-Facing Application"",
       ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
       ""Explanation"": ""This rule is used to detect a remote code execution attempt using the Apache Log4j logging vulnerability.""
     }
 ]","['T1190', 'T1203', 'T1190', 'T1190', 'T1497', 'T1499', 'T1190', 'T1190', 'T1190', 'T1190', 'T1210', 'T1190']",['T1190']
57906,"[
   {
     ""sid"": ""57906"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve repeatedly attempting to guess or iterate through possible combinations of credentials or inputs until a successful match is found. This rule detects a potential brute force attack against Microsoft Exchange autodiscover, which is a common method adversaries use to gain unauthorized access to email accounts by cycling through multiple credentials."""",
     ""Explanation"": ""This event is generated when an attempt is made to remotely execute a command with elevated privileges on the host machine or virtual machine""
   }
 ][
   {
     ""sid"": ""57906"",
     ""Technique ID"": ""T1136"",
     ""Technique Name"": ""Request Forgery"",
     ""Quotes"": """"Request Forgery techniques involve inducing a user to make a request that an adversary has prepared, to an application or service trusted by the user. This rule detects an attempt to exploit a server-side request forgery (SSRF) vulnerability in Microsoft Exchange's autodiscover service, which allows attackers to craft and send requests to internal resources on behalf of the victim."""",
     ""Explanation"": ""The event represents an attempt to exploit a vulnerability in the Microsoft Exchange Server's autodiscover service, which could lead to unauthorized access to the organization's internal network.""
   }
 ][
   {
     ""sid"": ""57906"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": [
       """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted SSRF attack on Microsoft Exchange's autodiscover service, which is a common method attackers use to exploit web applications by manipulating HTTP requests to access internal resources.""
     ],
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in a public-facing application is detected.""
   }
 ][
   {
     ""sid"": ""57906"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\nExploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code.\n"",
     ""Explanation"": ""This rule detects an attempted Server-Side Request Forgery (SSRF) attack on the Microsoft Exchange autodiscover service, which is a technique that can be used to exploit web applications by forging requests from the server to a vulnerable endpoint.""
   }
 ][
     {
         ""sid"": ""57906"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a server-side request forgery (SSRF) vulnerability in Microsoft Exchange's 'autodiscover' service. SSRF vulnerabilities allow attackers to send forged HTTP requests from the vulnerable server to internal systems, which can lead to information disclosure, remote code execution, or other malicious activities."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a Microsoft Exchange server-side request forgery vulnerability is detected.""
     },
     {
         ""sid"": ""57906"",
         ""Technique ID"": ""T1543"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script that provides an attacker with a remote command execution interface on a compromised web server. This rule detects an attempt to upload a web shell to a Microsoft Exchange server. Web shells can be used to perform various malicious activities, such as data exfiltration, command execution, and persistence."""",
         ""Explanation"": ""This event is generated when an attempt to upload a web shell to a Microsoft Exchange server is detected.""
     }
 ][
   {
     ""sid"": ""57906"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted server-side request forgery (SSRF) attack against Microsoft Exchange's autodiscover service, which could allow an attacker to access internal resources or perform other malicious actions."""",
     ""Explanation"": ""This rule detects an attempted SSRF attack against the autodiscover service of Microsoft Exchange Server. SSRF attacks can be used to bypass access controls and gain unauthorized access to internal resources.""
   }
 ][
   {
     ""sid"": ""57906"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted server-side request forgery on Microsoft Exchange's autodiscover service, which can be exploited to gain unauthorized access to mailboxes or compromise the server."",
     ""Explanation"": ""This event is related to a vulnerability in Microsoft Exchange that can be exploited to perform server-side request forgery. An attacker could exploit this vulnerability to gain access to sensitive information or to compromise the server by sending a specially crafted HTTP request.""
   }
 ][
         ""sid"": ""57906"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a server-side request forgery vulnerability in Microsoft Exchange's autodiscover service, which could allow attackers to send emails on behalf of the victim organization."""",
         ""Explanation"": ""This event is generated when a server-side request forgery attempt is detected.""
     ][
         ""sid"": ""57906"",
         ""Technique ID"": ""T1211"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick victims into revealing sensitive information or clicking malicious links. This rule detects an attempt to exploit a server-side request forgery (SSRF) vulnerability in Microsoft Exchange by sending a specially crafted HTTP request with an embedded 'Email=' parameter, which can be used to trick the server into making unauthorized requests on behalf of the victim."",
         ""Explanation"": ""The rule triggers when it detects an HTTP request to the '/autodiscover' URI with an 'Email=' parameter and a specific pattern in the request body, consistent with SSRF attacks targeting Microsoft Exchange.""
     ][
         ""sid"": ""57906"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Server-Side Request Forgery (SSRF)"",
         ""Quotes"": """"Server-Side Request Forgery (SSRF) techniques involve using an application to make HTTP requests to an internal server, typically for the purposes of exploiting internal authentication or accessing internal resources."""",
         ""Explanation"": """"
     ][
         ""sid"": ""57906"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Server-Side Request Forgery (SSRF)"",
         ""Quotes"": """"Server-Side Request Forgery (SSRF) techniques involve abusing functionality on a web server to make it perform un-intended requests on behalf of the attacker. The rule specifically detects an attack against Microsoft Exchange's Autodiscover service, where an attacker attempts to exploit an SSRF vulnerability by sending a crafted HTTP request to manipulate the server into making requests to arbitrary internal or external systems."""",
         ""Explanation"": ""This event is generated when someone tries to make a server-side request on behalf of the attacker.""
     ]","['T1110', 'T1136', 'T1190', 'T1190', 'T1190', 'T1543', 'T1190', 'T1190', 'T1190', 'T1211', 'T1210', 'T1110']",['T1190']
59219,"[
   {
     ""sid"": ""59219"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a PHP web shell vulnerability, which is a common method attackers use to gain unauthorized access to web servers by exploiting vulnerabilities in PHP applications."""",
     ""Explanation"": ""PHP web shell vulnerability in the 'act' parameter allows remote attackers to execute arbitrary commands via unspecified vectors.""
   },
   {
     ""sid"": ""59219"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking a user into executing malicious code, such as by sending a malicious email attachment or exploiting a vulnerability in a web browser. This rule detects an attempt to execute a PHP web shell, which is a common method attackers use to gain unauthorized access to web servers by tricking users into downloading and executing malicious PHP code."""",
     ""Explanation"": ""PHP web shell vulnerability in the 'act' parameter allows remote attackers to execute arbitrary commands via unspecified vectors.""
   }
 ][
   {
     ""sid"": ""59219"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in client-side applications to infect a machine when browsing a website or viewing an email. This rule detects an incoming connection attempt to a PHP web shell, often used to provide remote access to a compromised system through a specially crafted URL. This technique is commonly used in drive-by compromise attacks."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""59219"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Exploitation for Privilege Escalation"",
     ""Quotes"": ""\""Exploitation for Privilege Escalation techniques involve exploiting software vulnerabilities to escalate privileges and gain elevated access within a system or network.\"" This rule detects an attempt to exploit a privilege escalation vulnerability by sending a specially crafted HTTP request containing \""act=\"", \""&fullhexdump=\"", and \""&d=\"" parameters, which can allow attackers to gain elevated privileges on the target system."",
     ""Explanation"": ""Web shell activity inbound connection attempt, the rule is for php webshell inbound connection attempt. Webshell could lead to privilege escalation's.""
   }
 ][
     ""sid"": ""59219"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Web shells are malicious scripts that give attackers remote access to a compromised web server or application, allowing them to execute commands and manipulate the server's environment. This rule detects an attempt to upload a PHP web shell named 'C99Madnet' to the target system, which is a common technique used by attackers to establish persistent access to compromised systems."""",
     ""Explanation"": ""This event is generated when malicious PHP web shell activity is detected.""
 ][
         ""sid"": ""59219"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted PHP web shell upload, which is a common method attackers use to exploit vulnerable web applications and gain remote access to the underlying system."""",
         ""Explanation"": ""Web shell scripts are often used by attackers to maintain access to a compromised system and execute arbitrary commands. The rule specifically looks for a PHP web shell known as 'C99Madnet', which is designed to provide attackers with a remote command-line interface to the compromised system.""
     ][
   {
     ""sid"": ""59219"",
     ""Technique ID"": ""T1140"",
     ""Technique Name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing various forms of data encoding, including encryption or base64, to recover the original content. This rule specifically looks for C99Madnet web shell activity, which typically uses encoded payloads to bypass detection. By identifying the presence of encoded data, the rule helps detect attempts to execute malicious commands or inject malicious code."""",
     ""Explanation"": ""The rule is triggered when an inbound connection attempt to a web server is detected. The connection contains specific HTTP parameters ('act', 'fullhexdump', and 'd') that are commonly used by the C99Madnet web shell. The web shell is a malicious script that allows remote attackers to execute commands on the web server. The parameters in the connection attempt are encoded, and the rule looks for these specific encoded parameters to detect the web shell activity.""
   },
   {
     ""sid"": ""59219"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in a web application using a C99Madnet web shell. Web shells are often used by attackers to gain remote access to web servers and execute malicious commands."""",
     ""Explanation"": ""The rule is triggered when an inbound connection attempt to a web server is detected. The connection contains specific HTTP parameters ('act', 'fullhexdump', and 'd') that are commonly used by the C99Madnet web shell. The web shell is a malicious script that allows remote attackers to execute commands on the web server. The parameters in the connection attempt are encoded, and the rule looks for these specific encoded parameters to detect the web shell activity.""
   }
 ][
     ""sid"": ""59219"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an inbound connection attempt to a PHP web shell, which is a malicious script that provides attackers with a remote command-line interface to the compromised web server. Attackers often use web shells to maintain persistent access to compromised systems and execute further malicious activities."""",
     ""Explanation"": ""Inbound connection attempt to a PHP web shell.""
 ][
     ""sid"": ""62323"",
     ""Technique ID"": ""T1064"",
     ""Technique name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve capturing network traffic to intercept sensitive data. This rule detects a reconnaissance attack using a sniffer tool called 'sniffpkt' to capture network packets and potentially steal sensitive information such as login credentials or network configurations."""",
     ""Explanation"": ""Detects a command line used to launch a packet sniffer tool. Full command details are extracted and presented in JSON format.""
 ][
   {
     ""sid"": ""59219"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""The C99Madnet is a web shell that allows attackers to execute arbitrary commands on a compromised web server.""
   }
 ][
         ""sid"": ""59219"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects the inbound connection attempt of a PHP web shell (C99Madnet) through an HTTP POST request, which is a common technique used by attackers to gain remote access and control of web servers."""",
         ""Explanation"": ""Inbound connection attempt of a PHP web shell (C99Madnet) through an HTTP POST request.""
     ][
   {
     ""sid"": ""59219"",
     ""Technique ID"": ""T1195"",
     ""Technique name"": ""Supply Chain Compromise"",
     ""Quotes"": null,
     ""Explanation"": ""This rule detects malicious PHP code within an HTTP POST request, indicating an attempt to upload a web shell to the targeted system. Web shells are often used by attackers to establish a persistent presence on compromised systems and execute remote commands, which can lead to further exploitation and data exfiltration.""
   },
   {
     ""sid"": ""59219"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": null,
     ""Explanation"": ""This rule detects an attempt to execute malicious PHP code on the targeted system. Attackers may use web shells to execute arbitrary commands on compromised systems, allowing them to perform various malicious actions such as data exfiltration, system modification, or lateral movement.""
   }
 ]","['T1190', 'T1204', 'T1189', 'T1068', 'T1190', 'T1190', 'T1140', 'T1189', 'T1189', 'T1064', 'T1190', 'T1190', 'T1195', 'T1204']",['T1505']
30778,"[
         ""sid"": ""30778"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"This rule detects attempted Heartbleed attacks, which involve exploiting a vulnerability in OpenSSL to read arbitrary memory from the server's memory space. The Heartbleed vulnerability impacts systems using OpenSSL versions prior to 1.0.1g."""",
         ""Explanation"": ""The rule triggers on the detection of the specific heartbeat response pattern associated with the Heartbleed vulnerability, indicating an attempt to exploit the vulnerability.""
     ][
     ""sid"": ""30778"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an OpenSSL SSLv3 Heartbeat vulnerability, which could lead to the disclosure of server memory data."""",
     ""Explanation"": ""SSL Heartbleed vulnerability allows remote attackers to obtain sensitive information from the memory of a vulnerable system by sending a specially crafted TLS/SSL heartbeat request.""
 ][
         ""sid"": ""30778"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted SSL Heartbleed attack by identifying the signature of the exploit (the 'heartbeat response') in network traffic. Heartbleed is a vulnerability that allows attackers to retrieve sensitive information from the memory of a vulnerable SSL/TLS server."""",
         ""Explanation"": ""This event is generated when a large heartbeat response is received from an SSLv3 server, which may indicate an attempt to exploit the Heartbleed vulnerability.""
     ][
         ""sid"": ""30778"",
         ""Technique ID"": ""T1461"",
         ""Technique name"": ""Heartbleed"",
         ""Quotes"": """"The Heartbleed vulnerability (CVE-2014-0160) is a serious vulnerability in the OpenSSL cryptographic library that allows attackers to read memory from a vulnerable server. This rule detects a Heartbleed attempt by checking for a large heartbeat response from the server. If the response is greater than 128 bytes, the rule will trigger an alert."""",
         ""Explanation"": ""This event is generated when a Heartbleed attempt is detected.""
     ][
   {
     ""sid"": ""30778"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": ""\""Network Service Scanning involves performing reconnaissance on a network to detect and gather information about services running on hosts and systems. This rule detects attempts to exploit the Heartbleed vulnerability in OpenSSL, which is a type of network service scanning used by adversaries to gather sensitive information from vulnerable servers."""",
     ""Explanation"": ""This rule is designed to detect SSL heartbleed attempts which involve scanning the network for vulnerable SSL services.""
   }
 ][
     {
         ""sid"": ""30778"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted Heartbleed attack against OpenSSL servers, which is a known vulnerability that allows attackers to steal sensitive information from the server's memory."""",
         ""Explanation"": ""The rule looks for a specific pattern in the SSL/TLS protocol that is indicative of a Heartbleed attack attempt.""
     },
     {
         ""sid"": ""30778"",
         ""Technique ID"": ""T1040"",
         ""Technique Name"": ""Network Service Reconnaissance"",
         ""Quotes"": """"Network Service Reconnaissance techniques involve probing a network to gather information about services running on hosts or to identify potential targets for exploitation. The rule detects an attempt to probe for vulnerable SSL/TLS services, which is a common reconnaissance technique used by attackers to identify potential targets for further exploitation."""",
         ""Explanation"": ""The rule looks for a specific pattern in the SSL/TLS protocol that is indicative of a reconnaissance attempt.""
     }
 ][
   {
     ""sid"": ""30778"",
     ""Technique ID"": ""T1193"",
     ""Technique Name"": ""Heartbleed"",
     ""Quotes"": """"The Heartbleed vulnerability (CVE-2014-0160) is a serious vulnerability in the OpenSSL cryptographic library that allows an attacker to read arbitrary memory on a vulnerable server. This rule detects an attempt to exploit the Heartbleed vulnerability by sending a specially crafted heartbeat request to a vulnerable server."""",
     ""Explanation"": ""This rule detects an attempted Heartbleed attack by identifying the characteristic heartbeat request and response patterns.""
   }
 ][
   {
     ""sid"": ""30778"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": ""Network Service Scanning techniques involve identifying TCP and UDP ports, and services associated with those ports, that are exposed to the network. This rule detects reconnaissance activity where an attacker is attempting to exploit the Heartbleed vulnerability, which is a common method used to gather information about hosts and services on a network."",
     ""Explanation"": ""The rule is looking for a specific pattern in SSL traffic, which is consistent with the behavior of the Heartbleed vulnerability. If this pattern is detected, it indicates that an attacker is attempting to exploit this vulnerability to gather information about the target system.""
   }
 ][
         ""sid"": ""30778"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted OpenSSL SSLv3 Heartbleed attack, which is a type of vulnerability that allows attackers to retrieve sensitive information from a server's memory."""",
         ""Explanation"": ""OpenSSL SSLv3 ""Heartbleed"" vulnerability allows remote attackers to obtain sensitive information from process memory via a crafted TLS/SSL heartbeat request.""
     ][
         ""sid"": ""30778"",
         ""Technique ID"": ""T1494"",
         ""Technique name"": ""Heartbleed"",
         ""Quotes"": """"The Heartbleed technique involves exploiting a vulnerability in the OpenSSL implementation of the TLS/SSL protocol that allows attackers to steal sensitive information from the memory of vulnerable servers. This rule specifically detects attempts to exploit the Heartbleed vulnerability by identifying the characteristic large heartbeat response (17 03 00) and the subsequent status packet (18 03 00) within a short time frame."""",
         ""Explanation"": ""This rule is designed to detect attempts to exploit the Heartbleed vulnerability in OpenSSL, which allows remote attackers to obtain sensitive information from the server's memory.""
     ][
     {
         ""sid"": ""30778"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted SSL Heartbleed attack, which is a specific exploit targeting a vulnerability in OpenSSL that allows attackers to steal sensitive information from a server's memory."""",
         ""Explanation"": ""This rule is triggered when a large heartbeat response is received, which is a characteristic of the 'Heartbleed' vulnerability in OpenSSL.""
     },
     {
         ""sid"": ""30778"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. By targeting a specific vulnerability in OpenSSL, this rule detects attempts to exploit public-facing applications."""",
         ""Explanation"": ""Attackers can exploit public-facing applications by targeting vulnerabilities like the 'Heartbleed' vulnerability in OpenSSL.""
     }
 ]","['T1190', 'T1190', 'T1190', 'T1461', 'T1040', 'T1190', 'T1040', 'T1193', 'T1040', 'T1190', 'T1494', 'T1210', 'T1190']",['T1123']
4126,"[
     {
         ""sid"": ""4126"",
         ""Technique ID"": ""T1110"",
         ""Technique Name"": ""Brute Force"",
         ""Quotes"": """"Brute Force techniques involve automated, repetitive actions to gain access by trying multiple combinations of usernames and passwords. The rule detects an attempt to connect to the Veritas Backup Exec service (port 10000) using the default password hash for the 'root' user. Such brute-force password attacks are a common method to compromise systems with weak credentials."""",
         ""Explanation"": ""The event is generated when the Veritas Backup Exec service is probed using default password hashes, indicating a potential brute force attack.""
     }
 ][
         ""sid"": ""4126"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Credential Dumping"",
         ""Quotes"": """"Credential Dumping techniques involve extracting credentials from the host system in cleartext or hashed format. This rule detects an attempt to connect to a Veritas Backup Exec server using the default password hash, which is a common technique used by adversaries to gain unauthorized access to systems."""",
         ""Explanation"": ""The rule indicates an attempt to connect to port 10000, a port commonly used by Veritas Backup Exec, with a default password hash, which suggests that the attacker is attempting to exploit a known vulnerability or default configuration in the Veritas Backup Exec server.""
     ],
     [
         ""sid"": ""4126"",
         ""Technique ID"": ""T1136"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve disguising an adversary or malicious software as a legitimate or trusted entity. This rule detects an attempt to connect to a Veritas Backup Exec server using the default password hash, which may be an attempt to masquerade as a legitimate user or application."""",
         ""Explanation"": ""The attacker is attempting to connect to the Veritas Backup Exec server using a default password hash, which is a common technique used by adversaries to bypass authentication and gain unauthorized access to systems.""
     ]
 ][
     ""sid"": ""23934"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Veritas Backup Exec 'clientusers.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""Vulnerability in the Veritas Backup Exec server component allows attackers to execute arbitrary code.""
 ][
     {
         ""sid"": ""4126"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute force attacks involve repeatedly attempting different combinations of credentials to gain unauthorized access to a system or service. This rule detects an attempt to connect to the Veritas Backup Exec service on port 10,000 using the default password hash, which is a common brute force technique used to compromise systems."""",
         ""Explanation"": ""This rule detects attempts to exploit the Veritas Backup exec service.""
     }
 ][
   {
     ""sid"": ""4126"",
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": """"Gaining access to a system with valid user accounts removes suspicion and makes it more difficult to detect unauthorized access."""",
     ""Explanation"": ""The rule specifically looks for attempts to connect to port 10000 using the default root password hash for Veritas Backup Exec, indicating an attempt to exploit a known vulnerability by using valid credentials.""
   },
   {
     ""sid"": ""4126"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote services provide a way for adversaries to gain access to and control systems remotely. This rule monitors for attempts to connect to a specific port (10000) used by Veritas Backup Exec, which can be indicative of an attacker attempting to access and exploit the service."""",
     ""Explanation"": ""The rule looks for attempts to connect to port 10000, which is commonly used by Veritas Backup Exec. This suggests that an attacker is trying to exploit a vulnerability in the service to gain access to the system.""
   }
 ][
   {
     ""sid"": ""4126"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials from a host, including cached credentials, plaintext passwords, hashes, and secrets. This rule detects an attempt to connect to Veritas Backup Exec with the default root password hash, suggesting a potential attempt to compromise the system by exploiting weak credentials."""",
     ""Explanation"": ""Veritas Backup Exec contains a hard-coded password vulnerability which allows an attacker to connect as root without providing a password. The default root password hash is 0x000000000000090100000002root.""
   }
 ][
   {
     ""sid"": ""4126"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Access"",
     ""Quotes"": """"Credential Access techniques are used to obtain credentials, such as passwords, passphrases, and keys, from compromised systems. This rule detects an attempt to exploit a vulnerability in Veritas Backup Exec by sending a specially crafted packet with embedded credentials, which is a common technique used to gain unauthorized access to a system."""",
     ""Explanation"": ""This rule is targeting brute force attacks that are stemming from the Veritas Backup Exec software.""
   },
   {
     ""sid"": ""4126"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Application Layer Protocol"",
     ""Quotes"": """"Application Layer Protocol techniques involve communicating using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. This rule detects an attempt to exploit a vulnerability in Veritas Backup Exec by sending a specially crafted packet with embedded credentials, which is a common technique used to gain unauthorized access to a system."""",
     ""Explanation"": ""This rule is targeting brute force attacks that are stemming from the Veritas Backup Exec software.""
   }
 ][
   {
     ""sid"": ""4126"",
     ""Technique ID"": ""T1588"",
     ""Technique name"": ""Obtain Capabilities"",
     ""Quotes"": """"This rule detects suspicious activity involving the Veritas Backup Exec server when an attacker attempts to connect to the root account using a default password hash. Obtaining credentials for privileged accounts falls under the Obtain Capabilities technique"""",
     ""Explanation"": ""The server is attempting to connect with a weak password, which may mean that the account is compromised.""
   },
   {
     ""sid"": ""4126"",
     ""Technique ID"": ""T1563"",
     ""Technique name"": ""Remote Desktop Session Hijacking"",
     ""Quotes"": """"This rule detects an attempt to connect to the Veritas Backup Exec server as a privileged user. Remote Desktop Session Hijacking techniques involve taking control of existing remote desktop sessions."""",
     ""Explanation"": ""The server is attempting to connect with a weak password, which may mean that the account is compromised.""
   }
 ][
   {
     ""sid"": ""4126"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Password Spraying"",
     ""Quotes"": """"Password Spraying techniques involve attempting to authenticate to a targeted system or service using common or default credentials. This rule specifically targets attempts to use the default password hash for the Veritas Backup Exec root account, which is a common tactic used by attackers to gain unauthorized access."""",
     ""Explanation"": ""Login as 'root' to host via password hash""
   }
 ][
   {
     ""sid"": ""4126"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials from a system or application, which can be used to access other systems or perform other malicious actions. This rule matches traffic from an external source to port 10000 on the honeypot, which is a common port used for accessing Veritas Backup Exec, and attempts to connect using the default password hash. This behavior matches the attempted use of known default credentials for the purpose of credential dumping."""",
     ""Explanation"": ""This rule detects an attempted to access Veritas Backup Exec using default credentials.""
   },
   {
     ""sid"": ""4126"",
     ""Technique ID"": ""T1482"",
     ""Technique name"": ""Domain Policy Modification"",
     ""Quotes"": """"Domain Policy Modification techniques involve modifying the security policy settings of a domain. The rule matches an attempt to modify the settings of the Active Directory domain. This behavior matches the attempted modification of domain policies, which can be a sign of an attacker attempting to compromise the security of the domain."""",
     ""Explanation"": ""This rule detects an attempted to modify the settings of the Active Directory domain.""
   }
 ][
   {
     ""sid"": null,
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": null,
     ""Explanation"": ""The rule looks for a specific hash associated with the default password for Veritas Backup Exec. This suggests that the rule is designed to detect attempts to use valid accounts with default credentials.""
   }
 ]","['T1110', 'T1110', 'T1136', 'T1190', 'T1110', 'T1078', 'T1110', 'T1110', 'T1110', 'T1071', 'T1588', 'T1563', 'T1110', 'T1110', 'T1482', 'T1078']",['T1078']
32335,"[
   {
     ""sid"": ""32335"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. This rule detects an attempt to exploit a Bash CGI environment variable injection vulnerability, which allows attackers to execute arbitrary commands on the target system by injecting malicious code into CGI scripts. Attackers can use this technique to gain unauthorized access, escalate privileges, and execute malicious code."""",
     ""Explanation"": ""This rule detects an attempt to inject malicious code into a CGI script by exploiting a vulnerability in the Bash command interpreter.""
   }
 ][
         ""sid"": ""32335"",
         ""Technique ID"": ""T1597"",
         ""Technique name"": ""Environment Variable Injection"",
         ""Quotes"": """"Environment Variable Injection techniques involve manipulating the value of environment variables to alter the behavior of a program or script. This rule detects an attempt to inject malicious code into a CGI script by modifying the '() {}' environment variable, which could allow an attacker to execute arbitrary commands on the system."""",
         ""Explanation"": ""Bash CGI environment variable injection vulnerability used in a remote code execution attack.""
     ][
   {
     ""sid"": ""32335"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a Bash CGI environment variable injection vulnerability, which allows attackers to inject and execute arbitrary commands on the server."""",
     ""Explanation"": ""This rule is designed to detect attempts to exploit a command injection vulnerability in the CGI environment of web applications.""
   },
   {
     ""sid"": ""32335"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques involve exploiting vulnerabilities in remote services to gain unauthorized access to internal systems once inside of a network. This rule detects an attempt to exploit a Bash CGI environment variable injection vulnerability, which could allow attackers to execute arbitrary commands on the server and gain unauthorized access to the internal network."""",
     ""Explanation"": ""This rule is designed to detect attempts to exploit a command injection vulnerability in the CGI environment of web applications, which could lead to the execution of arbitrary commands and unauthorized access to the internal network.""
   }
 ][
         {
             ""sid"": ""32335"",
             ""Technique ID"": ""T1188"",
             ""Technique Name"": ""OS Command Injection"",
             ""Quotes"": """"OS Command Injection techniques involve exploiting vulnerabilities in applications that allow attackers to execute arbitrary commands on the system by tricking the application into executing attacker-controlled input as a command. This rule detects an attempt to inject arbitrary commands in a CGI environment by abusing the Bash shell's command substitution feature, allowing attackers to execute arbitrary shell commands."""",
             ""Explanation"": ""This event is generated when an attempt is made to inject OS commands into a CGI environment variable.""
         }
     ][
   {
     ""sid"": ""32335"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve executing system commands or scripts to perform various actions or gain access. The rule detects an attempt to inject a command into a Bash CGI environment variable, which attackers may use to execute arbitrary commands or launch shell scripts with escalated privileges."""",
     ""Explanation"": ""The rule explicitly mentions Bash, which indicates that it is looking for command injection attempts specific to Bash.""
   },
   {
     ""sid"": ""32335"",
     ""Technique ID"": ""T1106"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting or encoding data in a way that makes it difficult to analyze or detect. This rule specifically looks for attempts to inject encrypted data, which could be used to bypass detection or analysis mechanisms."""",
     ""Explanation"": ""The rule detects data in an HTTP request that is surrounded by quotation marks and has a combined length greater than zero, which is a common pattern used to obfuscate or encrypt data in HTTP requests.""
   }
 ][
   {
     ""sid"": ""32335"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"'Command and Scripting Interpreter' techniques involve executing a shell command or script, often via a scripting interpreter such as Bash or a command prompt. This rule detects an attempt to inject a command into a Bash CGI environment variable, which attackers could use to execute arbitrary commands on the server."""",
     ""Explanation"": ""This rule detects an attempt to inject a command into the environment of a Bash CGI script. This is a potential security risk, as it could allow an attacker to gain control of the server.""
   }
 ][
   {
     ""sid"": ""32335"",
     ""Technique ID"": ""T1113"",
     ""Technique name"": ""Resource Hijacking"",
     ""Quotes"": ""Resource Hijacking techniques involve manipulating system resources to trick users into performing actions they do not intend, potentially resulting in information disclosure or access to sensitive resources. In this case, the rule detects an attempt to inject environment variables into a CGI script using Bash commands, which could allow an attacker to hijack resources and gain unauthorized access to the system."",
     ""Explanation"": ""This event is generated when an attempt is made to inject environment variables into a CGI script using Bash commands.""
   }
 ][
   {
     ""sid"": ""32335"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve executing commands to perform a variety of actions on a system, such as modifying files or launching programs. This rule detects an attempt to execute a Bash command using the environment variable injection technique, which can allow an attacker to execute arbitrary code on the system."""",
     ""Explanation"": ""This rule detects an attempt to execute a Bash command using the environment variable injection technique, which can allow an attacker to execute arbitrary code on the system.""
   }
 ][
   {
     ""sid"": ""32335"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a command injection vulnerability in a Bash CGI script by injecting malicious code through the environment variables. Attackers can use this technique to execute arbitrary commands on the server, leading to compromise."""",
     ""Explanation"": ""CGI (common gateway interface) scripts are often used as interfaces to databases or other programs. They can be exploited by injecting malicious code into the script, allowing an attacker to execute arbitrary code on the server.""
   }
 ][
   {
     ""sid"": ""32335"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command-Line Interface"",
     ""Quotes"": """"Command-Line Interface techniques include using the command line interface (CLI) or shell to execute commands and interact with the operating system. This rule detects an attempt to inject malicious code into the Bash CGI environment, which could allow an attacker to execute arbitrary commands on the web server."""",
     ""Explanation"": ""The rule triggers when it detects an attempt to exploit a bash CGI environment variable injection vulnerability in an HTTP request. This technique is commonly used by attackers to execute arbitrary commands on the target system.""
   },
   {
     ""sid"": ""32335"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve abusing command and scripting interpreters to execute code. This rule detects an attempt to inject malicious code into the Bash CGI environment, which could allow an attacker to execute arbitrary commands on the web server."",
     ""Explanation"": ""The rule triggers when it detects an attempt to exploit a bash CGI environment variable injection vulnerability in an HTTP request. Attackers can use this technique to execute arbitrary commands on the target system by injecting malicious code into the CGI environment variables.""
   }
 ][
     {
         ""sid"": ""32335"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""This rule is triggered when an attacker attempts to inject a command into a CGI script via an HTTP request, which is a technique commonly used to exploit web applications.""
     }
 ]","['T1105', 'T1597', 'T1190', 'T1210', 'T1188', 'T1059', 'T1106', 'T1105', 'T1113', 'T1105', 'T1190', 'T1105', 'T1059', 'T1190']",['T1204']
1676,"[
   {
     ""sid"": ""1676"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on Oracle databases, a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This rule detects an attempt to exploit a remote SQL injection vulnerability in Oracle GlassFish Server.""
   }
 ][
   {
     ""Sid"": ""1676"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on an Oracle database, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This event is generated when an attempt is made to exploit a vulnerability in an Oracle database.""
   }
 ][
     {
         ""sid"": ""1676"",
         ""Technique ID"": ""T1110"",
         ""Technique Name"": ""SQL Injection"",
         ""Quotes"": """"SQL Injection involves exploiting vulnerabilities in database management systems by manipulating SQL queries. This rule specifically triggers on attempts to execute a blind SQL injection attack by detecting the presence of 'select union' in the SQL query."""",
         ""Explanation"": ""The rule is designed to identify attempts to exploit SQL injection vulnerabilities.""
     }
 ][
   {
     ""sid"": ""1676"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on Oracle databases by identifying the use of the 'UNION' operator in an SQL query, which is a common method attackers use to exploit SQL injection vulnerabilities."""",
     ""Explanation"": ""This rule detects an attempted blind SQL injection attack on Oracle databases.""
   }
 ][
   {
     ""sid"": ""1676"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This event is generated when a SQL injection attempt is detected.""
   }
 ][
         ""sid"": ""1676"",
         ""Technique ID"": ""T1110"",
         ""Technique Name"": ""SQL Injection"",
         ""Quotes"": """"SQL Injection involves inserting malicious SQL code into input fields or executing malicious SQL statements to manipulate data stored in a database. This rule detects an attempt to exploit a SQL injection vulnerability by using a 'UNION' operator to combine multiple SQL statements and retrieve unauthorized data."""",
         ""Explanation"": ""The rule detects an attempt to exploit a SQL injection vulnerability by using a 'UNION' operator to combine multiple SQL statements and retrieve unauthorized data.""
     ][
   {
     ""sid"": ""1676"",
     ""Technique ID"": ""T1102"",
     ""Technique Name"": ""SQL Injection"",
     ""Quotes"": """"SQL Injection is a technique used to attack an application by inserting or ""injecting"" malicious SQL statements into a query that the application sends to a database. This can give the attacker access to unauthorized data or allow them to execute arbitrary commands on the database server."""",
     ""Explanation"": ""This event is generated when an SQL injection attack is detected.""
   }
 ][
     {
         ""sid"": ""1676"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted SQL injection attack using the 'UNION' operator, a common technique used to combine results from multiple queries or bypass authentication mechanisms."""",
         ""Explanation"": ""This rule triggers when an attacker attempts to exploit a SQL injection vulnerability in an Oracle database server by using the UNION operator in a query, potentially allowing them to access sensitive data or execute arbitrary SQL commands.""
     }
 ][
   {
     ""sid"": ""1676"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an SQL injection attempt against an Oracle database, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This rule targets an SQL injection vulnerability using the UNION keyword, which enables attackers to combine the results of multiple queries and potentially extract sensitive information from the database.""
   }
 ][
 {
 ""sid"":""1676"",
 ""Technique ID"":""T1110"",
 ""Technique name"":""SQL Injection"",
 ""Quotes"":""UNION SQL injection involves modifying SQL statements to include UNION operators, allowing adversaries to combine the results of legitimate queries with the results of arbitrary queries. UNION attacks can be used to bypass authentication, extract data from unauthorized tables, and even execute operating system commands."",
 ""Explanation"":""This rule detects an SQL Injection attack where the adversary is attempting to extract data using UNION operator. The rule matches on traffic to Oracle database ports containing the terms ""select"" and ""union"" indicating a potential SQL injection attempt.""
 }
 ][
   {
     ""Sid"": ""1676"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on Oracle database servers, where attackers attempt to inject malicious SQL queries into database requests to extract sensitive information or execute unauthorized commands."""",
     ""Explanation"": ""This event is generated when there is an attempt to exploit a vulnerability in Oracle database servers using blind SQL injection techniques.""
   }
 ]","['T1190', 'T1190', 'T1110', 'T1190', 'T1190', 'T1110', 'T1102', 'T1190', 'T1190', 'T1190']",['T1213']
47639,"[
   {
     ""sid"": ""47639"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding involves techniques that conceal the true meaning of data, making it difficult to detect and analyze. The rule signature in question matches obfuscated DNS TXT records, where the data is encoded in the packet body using a custom encoding scheme. Attackers use such techniques to evade detection of DNS tunneling, where exfiltration and command and control traffic is hidden within DNS requests."""",
     ""Explanation"": ""The rule detects DNS TXT record responses that indicate DNS tunneling.""
   }
 ][
     ""sid"": ""47639"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve transferring data out of a system using alternative protocols, such as DNS or ICMP. This rule detects a DNS TXT record containing an unusually large amount of data, potentially indicative of data exfiltration attempts through DNS tunneling."""",
     ""Explanation"": ""DNS TXT record tunneling is a technique used to exfiltrate data from a compromised network by encoding the data in the TXT records of DNS queries.""
 ][
   {
     ""sid"": ""47639"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": ""\""Masquerading techniques involve using false or misleading indicators to represent the source of transmitted communications. The rule uses a combination of factors such as DNS response record tunneling, the size of the response, and a specified pattern to identify potential communication channels that attempt to evade detection by using legitimate-looking protocols and ports."""",
     ""Explanation"": ""DNS protocol is used for tunneling data.""
   }
 ][
     ""sid"": ""47639"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration Over DNS"",
     ""Quotes"": """"Exfiltration Over DNS techniques use Domain Name System (DNS) records to exfiltrate data from a compromised network. This rule detects suspicious DNS TXT response records with a large data size (300 bytes) and a specific header pattern (|00 10 00 01 00 00 00 00 01 00 FF|), which is a common method used by attackers to encode and exfiltrate data through DNS queries."""",
     ""Explanation"": ""This rule detects if the attacker is trying to exfiltrate data via DNS.""
 ][
         ""sid"": ""47639"",
         ""Technique ID"": ""T1048"",
         ""Technique Name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve disguising malicious activity to appear legitimate. In this rule, the specified DNS TXT response record tunneling, indicated by the ""|00 10 00 ...|"", is a form of DNS data exfiltration where data is embedded in the TXT record of a DNS response, allowing attackers to covertly extract sensitive information or execute commands through DNS queries."""",
         ""Explanation"": ""DNS TXT record tunneling is a technique used to hide data within DNS lookups.""
     ][
   {
     ""sid"": ""47639"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or concealing data to evade detection or analysis. The rule specifically identifies DNS TXT records that are larger than 300 bytes and contain a distinctive pattern: ""| 00 10 00 01 00 00 00 00 01 00 FF|"". This pattern is indicative of DNS tunneling, where attackers encode data within DNS requests or responses to bypass security controls."""",
     ""Explanation"": ""This rule detects DNS TXT record tunneling, which is a technique used to bypass firewall and IDS/IPS. This technique encodes data within DNS queries and responses. By using a pattern match, the rule can identify malicious DNS traffic.""
   }
 ][
   {
     ""sid"": ""47639"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Domain Generation Algorithms"",
     ""Quotes"": """"Domain Generation Algorithms (DGAs) techniques generate domains at runtime using deterministic algorithms, making it difficult for defenders to block or predict future domains used by attackers. The rule detects DNS TXT response record tunneling containing a specific pattern that is often associated with DGA-generated domains. Attackers use DGA to establish covert communication channels and avoid detection by security mechanisms."""",
     ""Explanation"": ""This rule identifies the use of TXT records as part of a DNS tunneling technique to bypass security controls. This technique can be used to exfiltrate data or establish a covert communication channel.""
   }
 ][
   {
     ""sid"": ""19699"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending gathered data across a command and control (C2) channel. The Snort rule detects a DNS TXT response record tunneling attempt, where attackers are using DNS requests to exfiltrate data from an internal network to an external server."""",
     ""Explanation"": ""The rule monitors for suspicious DNS traffic and triggers an alert if a DNS TXT response record exceeds 300 bytes and contains a specific binary pattern, indicating potential data exfiltration.""
   }
 ][
   {
     ""sid"": ""47639"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration Over DNS"",
     ""Quotes"": """"Exfiltration Over DNS techniques involve transmitting data out of a network via DNS requests and responses. This rule is designed to detect DNS TXT records with specific patterns that are commonly used for data exfiltration, allowing adversaries to bypass network security controls and evade detection."""",
     ""Explanation"": ""This rule is triggered when a DNS request is made to a specific port and the response contains a TXT record with a suspicious pattern. This pattern is indicative of data exfiltration using DNS.""
   }
 ][
   {
     ""sid"": ""47639"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""DNS"",
     ""Quotes"": """"DNS techniques involve using the Domain Name System (DNS) to resolve hostnames to IP addresses and vice versa. This rule detects the use of DNS tunneling, a technique where malicious actors use the DNS protocol to encapsulate and transmit data, often to bypass security controls."""",
     ""Explanation"": ""DNS tunneling is a technique where malicious actors use the DNS protocol to encapsulate and transmit data, often to bypass security controls.""
   }
 ][
   {
     ""sid"": ""47639"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration over DNS"",
     ""Quotes"": """"Exfiltration Over DNS techniques involve using the DNS protocol to exfiltrate data from a compromised system, often by encoding data in DNS requests or responses. This rule detects DNS TXT response record tunneling, a technique used by adversaries to exfiltrate data by embedding it within the TXT records of DNS responses."""",
     ""Explanation"": ""DNS is a common channel for advanced persistent threats (APTs) to communicate with covert infrastructure because of its perceived legitimacy.""
   }
 ]","['T1048', 'T1048', 'T1048', 'T1048', 'T1048', 'T1048', 'T1048', 'T1048', 'T1048', 'T1048', 'T1048']",['T1048']
19079,"[
     {
         ""sid"": ""19079"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute Force techniques involve using trial-and-error methods to guess passwords or encryption keys. The rule focuses on detecting an attempted password brute-force attack on an Internet Explorer vulnerability that allows attackers to corrupt the 'getElementById' object. This technique involves repeated attempts to guess a password or encryption key by trying a large number of possible combinations."""",
         ""Explanation"": ""This event is raised when an attempt to exploit a vulnerability in Internet Explorer is detected.""
     },
     {
         ""sid"": ""19079"",
         ""Technique ID"": ""T1185"",
         ""Technique name"": ""Browser Session Hijacking"",
         ""Quotes"": """"Browser Session Hijacking techniques involve taking advantage of vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques. The rule targets an Internet Explorer vulnerability that can lead to browser session hijacking, allowing attackers to gain control of a victim's browser session and potentially sensitive information."""",
         ""Explanation"": ""This event is raised when an attempt to exploit a vulnerability in Internet Explorer is detected.""
     }
 ][
         ""sid"": ""19079"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve attackers using malicious websites or compromised legitimate websites to infect a user's system with malware. This rule detects a malicious script that exploits a vulnerability in Internet Explorer to corrupt the getElementById() object, which could allow attackers to execute arbitrary code on the victim's system."""",
         ""Explanation"": ""This event is generated when activity relating to a browser exploit is detected.""
     ][
         ""sid"": ""19079"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side software applications to execute arbitrary code or commands on the client machine. This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer by corrupting the 'getElementById' object and leveraging a function called 'post_info' to execute arbitrary code."""",
         ""Explanation"": ""This event is generated when activity relating to an attempted attack against a browser is detected.""
     ][
   {
     ""sid"": ""19079"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Browser Exploitation"",
     ""Quotes"": """"Browser Exploitation techniques involve exploiting vulnerabilities in web browsers or their plugins to execute arbitrary code, typically by luring a victim to a malicious website or by exploiting a vulnerability in a browser plugin."""",
     ""Explanation"": ""The event matches a situation where a specific browser vulnerability related to object corruption and getElementById function is being exploited. It is a known attack technique where attackers attempt to exploit vulnerabilities in the browser to execute arbitrary code.""
   }
 ][
         ""sid"": ""19079"",
         ""Technique ID"": ""T1140"",
         ""Technique name"": ""Deobfuscate/Decode Files or Information"",
         ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve decoding or decrypting encoded or obfuscated data to reveal the original form and content of the data. This rule detects an attempt to use JavaScript to dynamically generate and execute a polymorphic shellcode payload, which is a common method attackers use to evade detection by security controls and execute malicious code."""",
         ""Explanation"": ""This rule triggers when it detects an attempt to execute obfuscated JavaScript in an effort to evade traditional signature-based detection.""
     ][
     {
         ""sid"": ""19079"",
         ""Technique ID"": ""T1099"",
         ""Technique Name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting software vulnerabilities on a target system through the execution of malicious code within the context of a local user. This rule matches a specific pattern associated with the CVE-2010-1889 exploit for the Microsoft Internet Explorer 'getElementById' function, indicating malicious attempts to trigger an arbitrary code execution via a crafted HTML page."""",
         ""Explanation"": ""This rule detects the Microsoft Internet Explorer getElementById object corruption which could allow remote attackers to execute arbitrary code via a crafted HTML document.""
     }
 ][
     ""sid"": ""19079"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve implanting malicious code into a web application that gives an adversary remote control over the application, allowing them to execute arbitrary commands on the underlying system. The rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer's getElementById function, which could allow an attacker to inject malicious content into a web page and execute it in the user's browser."""",
     ""Explanation"": ""The signature detects a post-auth exploitation attempt of a vulnerability in Microsoft Internet Explorer through the getElementById function.""
 ][
     ""sid"": ""19079"",
     ""Technique ID"": ""T1164"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading involves presenting oneself as another, legitimate entity to gain access or maintain persistence on a system. This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer (getElementById object corruption) by injecting a malicious payload into a legitimate website, making it appear as if the payload is part of the trusted site."""",
     ""Explanation"": ""This event is generated when an attempt is made to exploit a vulnerability in Microsoft Internet Explorer (getElementById object corruption).""
 ][
   {
     ""sid"": ""19079"",
     ""Technique ID"": ""T1200"",
     ""Technique Name"": ""Hardware Additions"",
     ""Quotes"": """"Hardware Additions techniques involve introducing computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. This rule detects malicious JavaScript attempting to corrupt the 'getElementById' function in Microsoft Internet Explorer, which could lead to arbitrary code execution or privilege escalation."""",
     ""Explanation"": ""This event is generated when a malicious event is detected. The event is classified as an attempted user attack. The IP address of the source and destination is $EXTERNAL_NET and $HOME_NET correspondingly. The protocol used is TCP. The destination ports are HTTP ports. The rule uses file_data inspection and pcre inspection to detect the malicious event.""
   },
   {
     ""sid"": ""19079"",
     ""Technique ID"": ""T1574"",
     ""Technique Name"": ""Hijack Execution Flow"",
     ""Quotes"": """"Hijack Execution Flow techniques involve executing malicious payloads by hijacking the way operating systems run programs. This rule detects malicious JavaScript attempting to corrupt the 'getElementById' function in Microsoft Internet Explorer, which could lead to arbitrary code execution or privilege escalation."""",
     ""Explanation"": ""This event is generated when a malicious event is detected. The event is classified as an attempted user attack. The IP address of the source and destination is $EXTERNAL_NET and $HOME_NET correspondingly. The protocol used is TCP. The destination ports are HTTP ports. The rule uses file_data inspection and pcre inspection to detect the malicious event.""
   }
 ][
     ""sid"": ""19079"",
     ""Technique ID"": ""T1566"",
     ""Technique name"": ""Browser Extensions"",
     ""Quotes"": """"Browser Extensions techniques involve adversaries using extensions in web browsers -including those for legitimate purposes or developed by the adversary- to modify browser behavior. The rule detects a malicious JavaScript code attempting to corrupt the getElementById object in Microsoft Internet Explorer, which could be a step in installing a browser extension to manipulate user data or compromise the browser environment."""",
     ""Explanation"": ""This event is generated when activity relating to exploitation of Internet Explorer is detected.""
 ][
   {
     ""sid"": ""19079"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Create or Modify System Resource"",
     ""Quotes"": """"Create or Modify System Resource techniques involve creating, modifying, or deleting system resources, such as files, folders, or registry keys, to support malicious operations. This rule detects an attempt to corrupt an object by modifying the 'getElementById' function in Microsoft Internet Explorer. Attackers may use this technique to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""This rule is triggered when Microsoft Internet Explorer attempts to corrupt an object by modifying the 'getElementById' function. This could be an attempt to gain unauthorized access or execute arbitrary code.""
   }
 ]","['T1110', 'T1185', 'T1189', 'T1203', 'T1040', 'T1140', 'T1099', 'T1059', 'T1164', 'T1200', 'T1574', 'T1566', 'T1059']",['T1176']
58724,"[
         ""sid"": ""58724"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution attack on a vulnerable Apache Log4j logging library, which has seen wide exploitation in the wild, allowing attackers to execute arbitrary code and gain unauthorized access to systems."""",
         ""Explanation"": ""This rule is designed to detect potential exploitation attempts targeting a vulnerable Apache Log4j logging library, where an attacker could attempt to execute arbitrary code by sending a specially crafted HTTP request with a malicious payload.""
     ][
   {
     ""sid"": ""58724"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."",
     ""Explanation"": ""The rule is detecting an attempted remote code execution exploit in Apache Log4j, which is a Java-based logging package. Attackers can exploit a vulnerability in Log4j to execute arbitrary code remotely by sending a specially crafted HTTP request. This technique is commonly used in web application attacks to gain unauthorized access to systems and data.""
   }
 ][
   {
     ""sid"": ""58724"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."",
     ""Explanation"": ""The rule is using Apache log4j logging remote code execution attacks that can lead to further exploitation in the system.""
   },
   {
     ""sid"": ""58724"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": ""Exploitation for Client Execution techniques involve exploiting software vulnerabilities in client applications to execute code"",
     ""Explanation"": ""The rule is using Apache log4j logging remote code execution attacks that can lead to further exploitation in the system.""
   },
   {
     ""sid"": ""58724"",
     ""Technique ID"": ""T1211"",
     ""Technique name"": ""Exploitation for Defense Evasion"",
     ""Quotes"": ""Exploitation for Defense Evasion techniques involve exploiting a system or application vulnerability to bypass security features"",
     ""Explanation"": ""The rule is using Apache log4j logging remote code execution attacks that can lead to further exploitation in the system.""
   }
 ][
     {
         ""sid"": ""58724"",
         ""Technique ID"": ""T1202"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications to execute arbitrary code or gain unauthorized access to the local system. This rule specifically targets an attempt to exploit a vulnerability in Apache Log4j, which is a popular Java logging framework, by using the $${jndi:ldap://...} pattern to execute arbitrary code remotely."""",
         ""Explanation"": ""This rule is triggered when an attempt to exploit a remote code execution vulnerability in Apache Log4j is detected. The vulnerability allows attackers to execute arbitrary code by sending a specially crafted HTTP request containing a specific pattern to a vulnerable server.""
     }
 ][
         ""sid"": ""58724"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Apache log4j is a widely-used Java-based logging framework. This rule detects attempts to exploit a remote code execution (RCE) vulnerability in Apache log4j by triggering a Java Naming and Directory Interface (JNDI) lookup via HTTP headers. Attackers could leverage this vulnerability to execute malicious code on vulnerable systems."""",
         ""Explanation"": ""Apache Log4j logging remote code execution attempt.""
     ][
         ""sid"": ""58724"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Apache Log4j is a widely-used Java logging framework, and a critical vulnerability (CVE-2021-44228) allows remote attackers to execute arbitrary code via a specially crafted request."""",
         ""Explanation"": ""This rule detects attempts to exploit the Apache Log4j remote code execution vulnerability, which allows attackers to execute arbitrary code on vulnerable systems by sending a specially crafted HTTP request.""
     ][
     {
         ""sid"": ""58724"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution attack exploiting a vulnerability in the Apache Log4j library, which is a common method attackers use to exploit web applications by sending malicious input to vulnerable components."""",
         ""Explanation"": ""This event is generated when an attempted remote code execution attack exploiting a vulnerability in the Apache Log4j library is detected in an HTTP request.""
     }
 ][
     {
         ""sid"": ""58724"",
         ""Technique ID"": ""T1223"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control techniques involve the adversary maintaining persistent control over systems. The rule detects a remote code execution attempt using Apache Log4j, commonly used to establish command and control communications with a remote attacker. This technique allows the adversary to execute arbitrary commands on the compromised system, granting them full control."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""58724"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Apache Log4j deserialization vulnerability in versions 2.x and 2.14.1 allows remote attackers to execute arbitrary code via modified LDAP or RMI endpoints, such as \""${jndi:ldap://\""."",
     ""Explanation"": ""The rule detects an attempted remote code execution exploit against the Apache Log4j deserialization vulnerability, which is a critical vulnerability affecting Java applications.""
   }
 ][
     ""sid"": ""58724"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution attack on an Apache server due to a vulnerability in the Log4j logging library, which allows attackers to execute arbitrary code by sending a specially crafted HTTP request."""",
     ""Explanation"": ""The rule specifically looks for a pattern in the HTTP header that is indicative of an attempt to exploit the Log4j vulnerability, which involves using JNDI (Java Naming and Directory Interface) to load a remote class and execute code on the server.""
 ][
   {
     ""sid"": ""58724"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of the Log4j remote code execution vulnerability, which is a critical vulnerability that allows unauthenticated attackers to execute arbitrary code on affected servers. The rule specifically looks for a malicious HTTP header containing a specific pattern that is used to exploit the vulnerability."""",
     ""Explanation"": ""This rule is designed to detect attempts to exploit the Log4j remote code execution vulnerability by looking for a specific pattern in the HTTP header.""
   }
 ]","['T1190', 'T1190', 'T1190', 'T1203', 'T1211', 'T1202', 'T1190', 'T1190', 'T1190', 'T1223', 'T1190', 'T1190', 'T1203']",['T1190']
37390,"[
     ""sid"": ""37390"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve systematically attempting various combinations of usernames and passwords to gain unauthorized access to accounts. The rule detects login attempts using the default username and password for Rockwell Automation web applications, indicating a brute-force attack."""",
     ""Explanation"": ""This rule is designed to detect brute force attacks on Rockwell Automation web applications.""
 ][
         ""sid"": ""37390"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute Force techniques involve repeatedly trying different combinations of usernames and passwords to gain access to a system or account. This rule detects an attempt to brute force the login page of a Rockwell Automation server using the default password 'ml1100' by matching the 'Authorization' header with the base64-encoded string."""",
         ""Explanation"": ""This event is generated when an attempt is made to brute force login to a Rockwell Automation server using the default password.""
     ][
   {
     ""sid"": ""37390"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials from a system or application's memory or storage, often by leveraging legitimate credential access mechanisms or exploiting vulnerabilities. This rule detects an attacker attempting to exploit a default password for a Rockwell Automation server by sending an HTTP request with a hardcoded Authorization header, indicating that the attacker is trying to brute-force or exploit weak credentials."""",
     ""Explanation"": ""This event is generated when an attempt is made to authenticate using the default login credentials of a Rockwell Automation device. It's considered an attempt to guess the credentials of a web application.""
   },
   {
     ""sid"": ""37390"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attacker attempting to exploit a default password for a Rockwell Automation server by sending an HTTP request with a hardcoded Authorization header, which could indicate an attempt to exploit a vulnerability in the web application or its underlying system."""",
     ""Explanation"": ""This event is generated when an attempt is made to authenticate using the default login credentials of a Rockwell Automation device. It's considered an attempt to exploit a vulnerability in the web application.""
   }
 ][
     ""sid"": ""37390"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a default password (ml1100) for a Rockwell Automation web application, which is a common method attackers use to gain unauthorized access to web applications by exploiting weak credentials."""",
     ""Explanation"": ""This event is generated when an attempt to gain unauthorized access to a system is detected.""
 ][
         ""sid"": ""37390"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Credential Stuffing"",
         ""Quotes"": """"Credential Stuffing techniques involve using stolen or leaked credentials to access systems or accounts."""",
         ""Explanation"": ""This rule detects a login attempt to a Rockwell Automation web application using default credentials ('admin:ml1110'), which is an example of credential stuffing.""
     ][
   {
     ""sid"": ""24631"",
     ""Technique ID"": ""T1078"",
     ""Technique name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve using valid, compromised, or otherwise authorized accounts to access systems and resources within a network. The rule indicates an attempt to use default credentials to log in to a Rockwell Automation web application, which is a common method for attackers to gain unauthorized access to systems by exploiting weak password configurations."""",
     ""Explanation"": ""Detect Rockwell Automation default password attempts.""
   }
 ][
     ""sid"": ""37390"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Credential Access"",
     ""Quotes"": """"Credential Access techniques involve gaining access to authentication credentials, such as passwords, to perform authentication or impersonation, to establish persistence, to access privileged accounts, or to manipulate data."""",
     ""Explanation"": ""This event is generated when an attempt to log in to a web application using the default password is detected.""
 ][
     ""sid"": ""37390"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve obtaining credentials from a system or application, such as hashed passwords, tokens, or other authentication material. The rule detects an attempt to log in to a Rockwell Automation application with default credentials, which is a common method attackers use to gain unauthorized access to systems."""",
     ""Explanation"": ""This rule identifies attempts to login to a Rockwell Automation application using a default password. This can be an indication of an attacker attempting to access the system with stolen credentials.""[
   {
     ""sid"": ""37390"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Access"",
     ""Quotes"": """"Credential Access techniques aim to obtain credentials directly from a victim. This rule detects attempts to exploit the default password ('ml1100') for Rockwell Automation, which is a commonly exploited vulnerability that requires no additional access to the target system."""",
     ""Explanation"": ""The rule specifically looks for HTTP requests that contain the default password in the Authorization header, indicating an attempt to compromise the system by using a weak or default credential.""
   }
 ][
   {
     ""sid"": ""37390"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve using repeated attempts with various inputs to guess a value, such as passwords or encryption keys. This rule detects login attempts using the default password 'ml1100' for Rockwell Automation, which is a common method attackers use to exploit default or weak credentials."""",
     ""Explanation"": ""Detects default password for Automation devices""
   }
 ][
   {
     ""sid"": ""37390"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Account Manipulation"",
     ""Quotes"": ""\""Account Manipulation techniques involve modifying, deleting, or creating accounts and/or their attributes to gain unauthorized access or privileges.\"""",
     ""Explanation"": ""The event involves a default password login attempt on a Rockwell Automation server, which is a type of account manipulation as the attacker tries to access the server with a default password.""
   }
 ]","['T1110', 'T1110', 'T1110', 'T1190', 'T1110', 'T1110', 'T1078', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110']",['T1078']
27538,"[
   {
     ""sid"": ""27538"",
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Self-Signed Certificate"",
     ""Quotes"": """"Self-Signed Certificate techniques involve creating and using self-signed certificates for communications to establish trust between systems without involving a third-party certificate authority (CA). This rule triggers when a server presents a self-signed certificate with the 'MyCompany Ltd' organization name during the SSL/TLS negotiation, which may indicate an attempt to bypass certificate validation or impersonate a trusted entity."""",
     ""Explanation"": ""This event is generated when a self-signed certificate with the organization name of MyCompany Ltd was presented by a server during an SSL/TLS negotiation.""
   }
 ][
         ""sid"": ""27538"",
         ""Technique ID"": ""T1078"",
         ""Technique name"": ""Valid Accounts"",
         ""Quotes"": """"Valid Accounts techniques involve using valid, pre-existing accounts for lateral movement or other malicious activities. This rule identifies self-signed SSL certificates with the default 'MyCompany Ltd' organization name, which could indicate that an attacker is attempting to impersonate a legitimate user or service within the organization to gain access to protected resources."""",
         ""Explanation"": ""Self-signed SSL certificates are commonly used by adversaries for phishing attacks or to impersonate legitimate websites to trick users into providing sensitive information.""
     ][
         ""sid"": ""27538"",
         ""Technique ID"": ""T1078"",
         ""Technique name"": ""Valid Accounts"",
         ""Quotes"": """"Valid Accounts techniques involve adversaries using legitimate user accounts to perform malicious actions or gain unauthorized access. The rule detects the presence of a self-signed SSL certificate with the default 'MyCompany Ltd' organization name, which is a common method attackers use to create certificates for malicious purposes, such as phishing or man-in-the-middle attacks."""",
         ""Explanation"": ""This rule detects self-signed certificates without a CA (Certificate Authority) which are commonly used for malicious purposes.""
     ][
   {
     ""sid"": ""27538"",
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve using legitimate user accounts to gain access to systems or resources. The rule detects self-signed SSL certificates with a default organization name, which may indicate an attacker using a compromised legitimate account to establish an SSL connection and impersonate a trusted entity."""",
     ""Explanation"": ""The rule looks for a self-signed SSL certificate with a default organization name, which is a common technique used by attackers to impersonate a trusted entity by using a legitimate account.""
   }
 ][
         ""sid"": ""27538"",
         ""Technique ID"": ""T1078"",
         ""Technique name"": ""Valid Accounts"",
         ""Quotes"": """"Valid Accounts techniques involve obtaining and abusing credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. The rule detects the use of self-signed Secure Socket Layer (SSL) certificates with a default organization name, which is a common technique attackers use to bypass SSL/TLS certificate validation and impersonate legitimate websites or services."""",
         ""Explanation"": ""This rule detects SSL certificates with a default organization name, which is often used by attackers to impersonate legitimate websites or services.""
     ][
   {
     ""sid"": ""27538"",
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve using legitimate user credentials to gain access to a system or resource. This rule detects the issuance of self-signed SSL certificates with the default organization name 'MyCompany Ltd', which may indicate that an attacker is attempting to establish a legitimate-looking connection to gain access to the network."""",
     ""Explanation"": ""This event is generated when misuse of valid accounts is detected.""
   }
 ][
   {
     ""sid"": ""27538"",
     ""Technique ID"": ""T1078"",
     ""Technique name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve using legitimate accounts to access and manipulate systems. This rule detects a self-signed SSL certificate with the default 'MyCompany Ltd' organization name, which may indicate that an attacker has compromised a valid account and is attempting to impersonate a legitimate user."""",
     ""Explanation"": ""This rule detects a self-signed SSL certificate with the default organization name of 'MyCompany Ltd.' This is a common technique used by attackers to impersonate legitimate users and gain access to systems.""
   }
 ][
   {
     ""sid"": ""27538"",
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Self-Signed Certificate"",
     ""Quotes"": """"Self-Signed Certificate techniques involve creating and using self-signed certificates to establish encrypted communications without relying on a trusted certificate authority. This rule detects SSL certificates with the default 'MyCompany Ltd' organization name, which is often used by adversaries to create self-signed certificates for malicious purposes."""",
     ""Explanation"": ""The rule detects SSL certificates with the default 'MyCompany Ltd' organization name, which is often used by adversaries to create self-signed certificates for malicious purposes.""
   }
 ][
   {
     ""sid"": ""27538"",
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve compromising a legitimate account, either by password spraying or by exploiting weak or default credentials, to establish access to a system or network. This rule detects the presence of a self-signed SSL certificate with a default organizational name, which is a common tactic used by attackers to spoof legitimate websites and trick users into providing sensitive information."""",
     ""Explanation"": ""This event is generated when the SSL certificate presented by the web server is self-signed and has a default organizational name.""
   }
 ][
         ""sid"": ""27538"",
         ""Technique ID"": ""T1078"",
         ""Technique name"": ""Valid Accounts"",
         ""Quotes"": """"Valid Accounts techniques involve using credentials obtained from legitimate users within an organization to access systems and resources. This rule detects an SSL certificate with a default organization name ('MyCompany Ltd'), which indicates a lack of proper certificate validation and could be a sign of a compromised certificate or a phishing attempt using a lookalike domain."""",
         ""Explanation"": ""Self-signed SSL certificate with default MyCompany Ltd organization name""
     ][
         ""sid"": ""27538"",
         ""Technique ID"": ""T1078"",
         ""Technique name"": ""Obtain Encryption Key"",
         ""Quotes"": """"Obtain Encryption Key techniques involve obtaining or stealing encryption keys to decrypt encrypted data or communications. This rule detects the use of a self-signed SSL certificate with a default MyCompany Ltd organization name, which can indicate an attempt by an adversary to establish an encrypted communications channel for malicious purposes."""",
         ""Explanation"": ""The event is generated when an SSL/TLS connection is initiated and a self-signed certificate is used to establish the connection.""
     ]","['T1078', 'T1078', 'T1078', 'T1078', 'T1078', 'T1078', 'T1078', 'T1078', 'T1078', 'T1078', 'T1078']",['T1078']
26353,"[
   {
     ""sid"": ""26353"",
     ""Technique ID"": ""T1568"",
     ""Technique name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve modifying or deleting host-based artifacts that could be used for detection or to hide malicious activity. This rule detects a connection to dyndns.org, a service commonly used for dynamic DNS updates, which can be abused by adversaries to hide the real IP address of a compromised system."""",
     ""Explanation"": ""This even indicates the potential presence of malware.""
   }
 ][
   {
     ""sid"": ""26353"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a victim's system by exploiting a vulnerability in a web browser or installed web plug-in, such as Flash or Java, while visiting a malicious website."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""26353"",
     ""Technique ID"": ""T1495"",
     ""Technique name"": ""Firmware Corruption"",
     ""Quotes"": """"Firmware Corruption techniques involve modifying or corrupting the firmware of a device to gain unauthorized access, disrupt normal functionality, or cause a denial of service. This rule detects attempts to access the firmware update functionality of an embedded device, which is a potential indicator of an attacker attempting to exploit a firmware vulnerability to gain unauthorized access or disrupt the device's functionality."""",
     ""Explanation"": ""Firmware Corruption: This technique involves modifying or corrupting the firmware of a device to gain unauthorized access, disrupt normal functionality, or cause a denial of service. The rule detects attempts to access the firmware update functionality of an embedded device, which could be an indication of an attacker attempting to exploit a firmware vulnerability.""
   }
 ][
   {
     ""sid"": ""26353"",
     ""Technique ID"": ""T1594"",
     ""Technique Name"": ""Search Victim-Owned Websites"",
     ""Quotes"": """"Search Victim-Owned Websites techniques involve searching victim-owned websites for information that can be used during targeting. This rule detects an attempt to retrieve an external IP address using the 'checkip.dyndns.org' service, which is a common method used by attackers to gather information about the victim's network configuration and to identify potential targets."""",
     ""Explanation"": ""This rule detects an attempt to access a website that has been identified as malicious.""
   }
 ][
   {
     ""sid"": ""26353"",
     ""Technique ID"": ""T1124"",
     ""Technique name"": ""System Time Discovery"",
     ""Quotes"": """"System Time Discovery techniques involve gathering the system time and/or time zone from a local or remote system. This rule triggers when an HTTP request is made to 'checkip.dyndns.org', a service that provides a user's public IP address and other system information, including the system time. This suggests an attempt to gather system time information, potentially for correlation with other activities or for use in timing attacks."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""26353"",
     ""Technique ID"": ""T1550"",
     ""Technique name"": ""Use Alternate Authentication Material"",
     ""Quotes"": """"Use Alternate Authentication Material techniques involve using alternative authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. This rule triggers when an HTTP request is made to 'checkip.dyndns.org', which may be an attempt to gather information about the system's network configuration and authentication mechanisms, potentially to identify vulnerabilities or exfiltrate sensitive data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""26353"",
         ""Technique ID"": ""T1530"",
         ""Technique name"": ""Data from Cloud Storage"",
         ""Quotes"": """"Data from Cloud Storage techniques involve accessing data from various cloud storage providers to obtain sensitive information. This rule detects an attempt to access DynDNS, a popular cloud-based dynamic DNS service. Adversaries may use this service to store and manage DNS records for their malicious infrastructure."""",
         ""Explanation"": ""Compromised host machine using the Domain Name System (DNS) to perform a DNS check-in with a known DNS service provider.""
     ][
   {
     ""sid"": ""26353"",
     ""Technique ID"": ""T1195"",
     ""Technique name"": ""Domain Generation Algorithms"",
     ""Quotes"": """"Domain Generation Algorithms (DGAs) generate domain names based on an algorithm, often using a combination of a seed and a counter. This rule detects communication with dyndns.org, a popular dynamic DNS service, which is commonly used by malware to generate and register domain names for command and control (C2) purposes."""",
     ""Explanation"": ""This event is generated by the detection of a check to an external DDNS service, which is a technique used by malware to maintain persistence on the network.""
   }
 ][
   {
     ""sid"": ""26353"",
     ""Technique ID"": ""T1573"",
     ""Technique Name"": ""Indicator Removal from Artifacts"",
     ""Quotes"": """"Indicator Removal from Artifacts techniques involve removing certain information from artifacts to hide evidence of past actions or intent"""",
     ""Explanation"": ""This rule detects an attempt to connect to dyndns.org, a service commonly abused by attackers to dynamically update their IP addresses. Threat actors may use this technique to remove indicators of compromise by changing their IP address and making it harder to track their activities.""
   }
 ][
         ""sid"": ""26353"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an HTTP request to the domain 'checkip.dyndns.org', which is used by attackers to determine their external IP address and is often associated with malicious activity."""",
         ""Explanation"": ""Attempts to interact with a remote IP address to check the systems' external IP address by calling out to a 3rd party service.""
     ][
   {
     ""sid"": ""26353"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Discovery"",
     ""Quotes"": """"Network Service Discovery techniques involve reconnaissance activities to identify listening services on targeted hosts. This rule detects communication with 'checkip.dyndns.org', which is commonly used for external IP address checking, indicating an attempt to gather information about the external IP address of the compromised host."""",
     ""Explanation"": ""The rule detects communication with 'checkip.dyndns.org', which may indicate reconnaissance activity to gather information about the external IP address of the compromised host.""
   }
 ][
     {
         ""sid"": ""26353"",
         ""Technique ID"": ""T1530"",
         ""Technique Name"": ""Domain Generation Algorithms"",
         ""Quotes"": """"Domain Generation Algorithms techniques involve using algorithms to automatically generate domain names for command and control or data exfiltration. The rule triggers when a host on the internal network attempts to communicate with the domain 'checkip.dyndns.org', which is a dynamic DNS service commonly used by malware to register domains for malicious purposes. This behavior is indicative of a possible malware infection attempting to establish a communication channel with a remote server."""",
         ""Explanation"": ""This event is generated when an attempt to connect to a domain which is often used for malicious purposes is detected.""
     }
 ]","['T1568', 'T1189', 'T1495', 'T1594', 'T1124', 'T1550', 'T1530', 'T1195', 'T1573', 'T1190', 'T1046', 'T1530']",['T1043']
1809,"[
         ""sid"": ""1809"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Apache HTTP Server versions 2.0.52 through 2.0.54, which allows remote attackers to execute arbitrary code via crafted HTTP requests. The exploit involves sending an HTTP request with a specially crafted ""X-CCCCCCC"" header, which triggers a buffer overflow in the server and allows the attacker to execute arbitrary code."""",
         ""Explanation"": ""The rule triggers against an exploit attempt of a vulnerability in the Apache HTTP Server, specifically, a buffer overflow in the processing of chunked-encoded requests.""
     ][
   {
     ""sid"": ""1809"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted worm attack targeting a specific Apache vulnerability (CVE-2011-3192), which allowed attackers to execute arbitrary code by sending a specially crafted HTTP request with a malicious 'X-CCCCCCC' header."""",
     ""Explanation"": ""The rule triggers when an HTTP request with a malicious 'X-CCCCCC' header is detected, indicating an attempt to exploit a vulnerability in the Apache HTTP Server.""
   },
   {
     ""sid"": ""1809"",
     ""Technique ID"": ""T1566"",
     ""Technique name"": ""File and Directory Permissions Modification"",
     ""Quotes"": """"File and Directory Permissions Modification techniques involve modifying file or directory permissions to gain unauthorized access or escalate privileges. This rule detect an attempt to exploit a vulnerability in the Apache HTTP Server (CVE-2011-3192) that allowed attackers to modify file permissions, potentially leading to unauthorized access or privilege escalation."""",
     ""Explanation"": ""The vulnerability allows attackers to modify file permissions, which can be used to gain unauthorized access or escalate privileges.""
   }
 ][
         ""sid"": ""1809"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a chunked-encoding worm vulnerability in the Apache HTTP Server, which is a common target for attackers due to its widespread use and potential for remote code execution."""",
         ""Explanation"": ""HTTP worm attempts to exploit chunked-encoding vulnerability in the Apache HTTP Server.""
     ][
   {
     ""sid"": ""1809"",
     ""Technique ID"": ""T1008"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Apache web servers using a chunked-encoding worm, which is a common method attackers use to exploit web applications by sending malicious HTTP requests.\"""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in the Apache HTTP server is detected.""
   },
   {
     ""sid"": ""1809"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Apache web servers using a chunked-encoding worm, which is a common method attackers use to exploit web applications by sending malicious HTTP requests.\"""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in the Apache HTTP server is detected.""
   }
 ][
         ""sid"": ""1809"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted Apache chunked-encoding worm attack, which is a known vulnerability that can be exploited by attackers to gain remote code execution on vulnerable web servers."""",
         ""Explanation"": ""This Snort rule detects exploitation attempts targeting a specific vulnerability in the Apache HTTP Server.""
     ][
     {
         ""sid"": ""1809"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempt to exploit a vulnerability in the Apache web server by sending a specially crafted HTTP request containing the """"X-CCCCCCC|3A 20|"""" header, which is a known method to exploit the 'chunked-encoding' vulnerability in Apache versions 1.3.27-1.3.34 and 2.0.41-2.0.49."""",
         ""Explanation"": ""HTTP request with malicious header 'X-CCCCCCC|3A 20|' indicative of Apache chunked-encoding worm attempt.""
     }
 ][
   {
     ""sid"": ""1809"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects Apache chunked-encoding worm attempts, which exploit a vulnerability in the mod_deflate module to execute arbitrary code on vulnerable web servers."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in the mod_deflate module of the Apache HTTP Server is detected.""
   }
 ][
         ""sid"": ""1809"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted attack against an Apache web server where an attacker could potentially exploit a vulnerability in the chunked-encoding module to execute arbitrary code on the system."""",
         ""Explanation"": ""The rule identifies an attempt to exploit a vulnerability in a Apache web server using chunked-encoding method. The pattern in the rule's content field corresponds to a specific exploit used to target this vulnerability.""
     ][
   {
     ""sid"": ""1809"",
     ""Technique ID"": ""T1055"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code"""",
     ""Explanation"": ""This alert matches an attempt to exploit a vulnerability in the Apache HTTP Server 1.3.x before 1.3.34 and 2.0.x before 2.0.59 that allows remote attackers to execute arbitrary code via a crafted HTTP request with a malicious chunked Transfer-Encoding header""
   }
 ][
         ""sid"": ""1809"",
         ""Technique ID"": ""T1499"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using an attacker-installed script on a web server to execute arbitrary commands. This rule identifies an attempt to exploit a vulnerability in Apache chunked-encoding to execute a web shell by sending a specially crafted HTTP request with the 'X-CCCCCCC: 3A 20' header. Successful exploitation could allow an attacker to gain remote code execution on the web server."""",
         ""Explanation"": ""Apache chunked-encoding worm attempt.""
     ][
   {
     ""sid"": ""1809"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted Apache worm attack that uses the 'X-CCCCCCC' header to exploit a vulnerability in the handling of chunked-encoding requests."""",
     ""Explanation"": ""The rule is triggered when a specific header is detected, which is associated with an exploit targeting Apache web servers that can lead to arbitrary code execution.""
   }
 ]","['T1190', 'T1190', 'T1566', 'T1190', 'T1008', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1055', 'T1499', 'T1190']",['T1190']
50954,"[
     {
         ""sid"": ""50954"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending collected data back to adversaries over established covert channels. This rule detects an attempt to send data to a remote host using the 'JHg9JF9QT1NUWy' header, which is a known indicator of compromise associated with the PhpSploit backdoor. This backdoor typically exfiltrates data by encoding it within HTTP headers."""",
         ""Explanation"": ""PHP-Based web shell used to deface websites and dump arbitrary files on remote server.""
     }
 ][
         ""sid"": ""50954"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of the PhpSploit backdoor, which is a common method attackers use to gain remote access to web servers by exploiting vulnerabilities in PHP applications."""",
         ""Explanation"": ""The rule detects an attempt to exploit the PhpSploit backdoor, which is a common method attackers use to gain remote access to web servers by exploiting vulnerabilities in PHP applications.""
     ][
     ""sid"": ""50954"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule indicates the presence of the PhpSploit backdoor, which may attempt to capture user input or other sensitive data for malicious purposes."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""50954"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule is triggered when a server attempts to send an HTTP header containing the string ""JHg9JF9QT1NUWy"", which is associated with the PhpSploit backdoor. This indicates a potential attempt to exploit a vulnerability in a web application to establish a backdoor connection."""",
     ""Explanation"": ""This rule detects suspicious activity related to the PhpSploit backdoor, a type of malware that allows attackers to gain unauthorized access to web servers.""
   },
   {
     ""sid"": ""50954"",
     ""Technique ID"": ""T1581"",
     ""Technique name"": ""Create Account"",
     ""Quotes"": """"Create Account techniques involve creating new user accounts or modifying existing accounts to gain access to systems or resources. The rule's reference to ""PhpSploit backdoor"" suggests that an attacker may attempt to create a new account or modify an existing one to establish persistence on the compromised system."""",
     ""Explanation"": ""Creation of new user accounts or modification of existing accounts is a common technique used by attackers to gain access to systems or resources.""
   }
 ][
   {
     ""sid"": ""50954"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve using various methods to establish secure and persistent communication with remote attackers for the purpose of controlling compromised systems and transferring data. This rule detects a communication attempt from a remote system to a known PHP backdoor (PhpSploit), indicating the potential establishment of a backdoor channel by an adversary."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""50954"",
     ""Technique ID"": ""T1584"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve the creation of a covert channel between the adversary and a victim system for the purposes of communications. This rule detects communication from a PHP backdoor, which is a common method for attackers to establish and maintain persistent access to a victim system."""",
     ""Explanation"": ""This rule detects PHP backdoor communication. A backdoor allows remote attackers to access a remote host without having to go through normal authentication processes.""
   }
 ][
         ""sid"": ""50954"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in a web application using the PhpSploit backdoor, which is a common tool used by attackers to gain remote access to compromised systems."""",
         ""Explanation"": ""This rule detects an attempt to exploit a remote code execution vulnerability in PhpSploit, a web application framework written in PHP.""
     ][
   {
     ""sid"": ""50954"",
     ""Technique ID"": ""T1219"",
     ""Technique Name"": ""Remote Access Software"",
     ""Quotes"": """"Remote Access Software techniques involve using legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. PhpSploit is a web-based remote access tool commonly used by attackers to gain unauthorized remote access to target systems, which is consistent with the behavior described in the rule."""",
     ""Explanation"": ""This rule is designed to detect an attempt to communicate with a PhpSploit backdoor, which is a type of malware used to gain unauthorized remote access to a compromised system. Phploit is a PHP remote administration tool that allows attackers to execute arbitrary code, browse files, upload and download files, and capture screenshots.""
   }
 ][
    ""sid"": ""50954"",
    ""Technique ID"": ""T1190"",
    ""Technique name"": ""Exploit Public-Facing Application"",
    ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects communication associated with a PHP backdoor known as PhpSploit, which attackers typically use to remotely access and control compromised systems."""",
    ""Explanation"": """"Indicator of compromise involving backdoor communication to the PhpSploit trojan.""
 }[
         ""sid"": ""50954"",
         ""Technique ID"": ""T1056"",
         ""Technique Name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects the presence of a web-based backdoor (PhpSploit) that uses an HTTP header to send information to a remote server, which is a common method used by backdoors to collect data and relay commands."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""50954"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects traffic associated with the PhpSploit backdoor, which is a web application exploit commonly used to gain remote access to compromised systems. By exploiting vulnerabilities in PHP-based applications, attackers can execute arbitrary commands and establish a backdoor to maintain persistent access."""",
         ""Explanation"": ""This rule finds PhpSploit backdoor communication attempt.""
     }
 ]","['T1041', 'T1190', 'T1056', 'T1190', 'T1581', 'T1105', 'T1584', 'T1190', 'T1219', 'T1190', 'T1056', 'T1190']",['T1505']
35110,"[
     ""sid"": ""35110"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects malicious actionscript involving obfuscated Flash content using Angler exploit kit. Angler is a commonly used attack framework that targets vulnerabilities in web browsers and plugins to gain unauthorized access and control of victim systems."""",
     ""Explanation"": ""This event is generated when activity is detected that matches the \\\""EXPLOIT-KIT Angler\\\"" signature.""
 ][
   {
     ""sid"": ""35110"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in web applications or plugins to gain unauthorized access to a system. The rule detects an exploit kit (Angler) attempting to exploit Flash vulnerabilities through obfuscated actionscript, which is a technique commonly used in drive-by compromise attacks."""",
     ""Explanation"": ""The rule detects an attempt to exploit a vulnerability in the Flash plugin, which could allow an attacker to execute arbitrary code on the victim's computer. This is a common technique used in drive-by compromise attacks, where attackers lure victims to malicious websites that exploit vulnerabilities in commonly used software to gain access to their systems.""
   }
 ][
   {
     ""sid"": ""35110"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects the Angler exploit kit, which is known to target vulnerabilities in Flash to exploit web browsers and execute malicious code."",
     ""Explanation"": ""The rule is triggered when Angler exploit kit is detected which exploits Flash vulnerabilities if found on the target's system.""
   }
 ][
   {
     ""sid"": ""35110"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempt to exploit a Flash vulnerability using the Angler exploit kit, which is a common method attackers use to compromise web browsers and deliver malware."""",
     ""Explanation"": ""This rule detects an attempt to exploit a remote code execution vulnerability in Adobe Flash Player 18.0.0.203 and earlier.""
   }
 ][
         ""sid"": ""35110"",
         ""Technique ID"": ""T1189"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects Angler exploit kit attempts to exploit a Flash vulnerability, which are commonly used to attack web-based applications and compromise vulnerable systems."",
         ""Explanation"": ""This event is generated when activity relating to an Exploit Kit is detected.""
     ][
         ""sid"": ""35110"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Public-Facing Web Server"",
         ""Quotes"": """"Exploit Public-Facing Web Server techniques involve targeting vulnerabilities in externally facing web servers to gain unauthorized access or execute arbitrary code. The rule identifies Angler exploit kit's obfuscated Flash actionscript classname, which suggests an attempt to exploit a web server vulnerability by leveraging a malicious Flash object."""",
         ""Explanation"": ""This event is generated when Angler EK Obfuscated Flash actionscript classname is detected.""
     ]
 
     Q: You are an information security expert. Your task is to label IDS rules for MITRE ATT&CK techniques based on your cybersecurity knowledge. For the task, you are going to get a single Snort IDS rule and you will need to return the most relevant techniques from MITRE ATT&CK that are related to the rule.
     Try to search based on keywords and based on the knowledge you have. For each technique include the following information as JSON in this order: 'Sid', 'Technique ID', 'Technique Name', 'Quotes', 'Explanation'.
     Note: The value of the citation field should contain quotation marks from the data sets relevant to the mapped technique are the main reason you chose this technique to be correct. The value of the explanation should be your explanation of why you decided to give the technique and how it relates to the rule. The technique ID should be the official MITRE technique ID.
     Please don't write anything but the JSON. Rule: alert udp any any - any any ( msg:""ET TROJAN DNS Tunneling""; flow:to_server; content:""|63 6f 6e 74 65 6e 74 2d 54 79 70 65 3a 20 61 70 70 6c 69 63 61 74 69 6f 6e 2f 6a 73 6f 6e 0a""; http_header; content:""Host: ""; metadata:impact_flag red,ruleset community,service http,service netbios,service pop3,service smtp,service telnet; classtype:trojan-activity; sid:20186; rev:1; )
     A: [
         ""sid"": ""20186"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""DNS Tunneling"",
         ""Quotes"": """"DNS Tunneling techniques involve using the Domain Name System (DNS) to encapsulate and transmit data for malicious purposes. The rule detects a DNS query with the domain name 'content-Type: application/json', which is a common method attackers use to establish a covert communication channel over DNS, potentially for data exfiltration or command and control."""",
         ""Explanation"": ""Trojan DNS Tunneling is detected.""
     ][
   {
     ""sid"": ""35110"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Flash plugin by leveraging an obfuscated Flash actionscript classname, which is a common technique used by exploit kits to bypass detection."""",
     ""Explanation"": ""This event is generated when a new SMTP connection containing a Flash exploit is attempted. which is commonly used by exploit kits to target vulnerabilities in Flash.""
   }
 ][
     ""sid"": ""35110"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit the Angler exploit kit, which commonly targets vulnerabilities in web browsers to execute malicious code."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
         ""sid"": ""35110"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Create Hook"",
         ""Quotes"": """"Create Hook techniques involve using APIs to modify the behavior of a program or service. This rule detects attempts by the Angler exploit kit to exploit Flash vulnerabilities by creating a hook in the Flash player to execute malicious code."""",
         ""Explanation"": ""This event is generated when activity relating to exploit kits is detected.""
     ][
         ""sid"": ""35110"",
         ""Technique ID"": ""T1104"",
         ""Technique name"": ""Multi-Stage Channels"",
         ""Quotes"": """"Multi-Stage Channels techniques involve establishing multiple stages for command and control that are employed under different conditions or for certain functions. This rule detects the Angler exploit kit, which uses multiple stages for its exploit delivery, including an initial dropper stage and a subsequent payload stage."""",
         ""Explanation"": ""This event is generated when activity relating to a trojan horse is detected.""
     ],
     [
         ""sid"": ""35110"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of the Angler exploit kit, which targets vulnerabilities in web browsers and other software to deliver malware."""",
         ""Explanation"": ""Angler exploit kit uses multiple stages for its exploit delivery, including an initial dropper stage and a subsequent payload stage.""
     ][
     {
         ""sid"": ""35110"",
         ""Technique ID"": ""T1214"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve intentionally altering files or information to make them difficult to interpret or identify. This rule detects the presence of the Angler exploit kit, which is known to use obfuscated Flash actionscript to evade detection and analysis."""",
         ""Explanation"": ""The Angler exploit kit is known for using obfuscation techniques to evade detection. The rule suggests that the exploit kit is using Flash actionscript, which could indicate an attempt to exploit vulnerabilities in Flash or other software that supports Flash.""
     },
     {
         ""sid"": ""35110"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The Angler exploit kit is a malicious toolkit that targets vulnerabilities in web applications and browsers."""",
         ""Explanation"": ""The Angler exploit kit is designed to exploit vulnerabilities in public-facing applications, such as web browsers and web applications. This rule suggests that the exploit kit is targeting vulnerabilities in Flash or other software that supports Flash, which could allow an attacker to gain unauthorized access to a system or execute arbitrary code.""
     }
 ]","['T1189', 'T1189', 'T1190', 'T1189', 'T1189', 'T1189', 'T1071', 'T1190', 'T1189', 'T1203', 'T1104', 'T1190', 'T1214', 'T1190']",['T1027']
28931,"[
     ""sid"": ""28931"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques involve attempting to guess or crack passwords, encryption keys, or other secret information using repeated attempts with different values."""",
     ""Explanation"": ""The rule looks for a specific pattern of network activity that may indicate an attempt to brute-force login credentials on a web server.""
 ][
         ""sid"": ""28931"",
         ""Technique ID"": ""T1117"",
         ""Technique name"": ""Browser Exploitation"",
         ""Quotes"": """"Browser Exploitation techniques involve exploiting vulnerabilities in web browsers to execute arbitrary code or gain unauthorized access. This rule detects an attempt to load a CHM file in Microsoft Internet Explorer, which could be used to execute malicious code or access sensitive information."""",
         ""Explanation"": ""It attempts to load a file with the .chm extension, which may be an attempt to compromise the web browser.""
     ][
         ""sid"": ""28931"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploitation of Remote Services"",
         ""Quotes"": """"Exploitation of Remote Services techniques involve exploiting remote services or protocols to gain unauthorized access to a system. In this case, the rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer to load a CHM file, which can lead to arbitrary code execution."""",
         ""Explanation"": ""This rule intends to detect web pages using the Microsoft HTML Help format (CHM) to exploit a vulnerability in Microsoft Internet Explorer (IE) through CHM files, which may lead to arbitrary code execution. ""
     ][
   {
     ""sid"": ""28931"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to load a CHM (Compiled HTML Help) file, which is often used by attackers to exploit vulnerabilities in Microsoft Internet Explorer through the use of embedded ActiveX controls that can execute arbitrary code."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer by loading a CHM file.""
   }
 ][
   {
     ""sid"": ""28931"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a CHM file load vulnerability in Microsoft Internet Explorer, which attackers can use to execute arbitrary code on a victim's system."""",
     ""Explanation"": ""This event is generated when the Microsoft Internet Explorer browser loads a CHM file. CHM files are compiled HTML help files that can contain JavaScript and other active content. This event may be indicative of an attacker attempting to exploit a vulnerability in CHM file handling.""
   }
 ][
   {
     ""sid"": ""28931"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a user by luring them to a malicious website with the goal of installing malware. This rule detects an attempt to load a CHM (Compiled HTML Help) file, which is a common way for attackers to deliver malicious content via browser exploits or phishing campaigns."""",
     ""Explanation"": ""This rule triggers when there is an attempt to access a CHM file, which can potentially contain malicious code and lead to a drive-by compromise.""
   }
 ][
     {
         ""sid"": ""28931"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Hijack Execution Flow"",
         ""Quotes"": """"Hijack Execution Flow technique involves manipulating program execution to gain control of code execution. This rule detects an attempt to load a CHM file using the 'showHelp()' function, which is a common technique used by attackers to execute malicious code by tricking the browser into loading a malicious CHM (compiled help) file."""",
         ""Explanation"": ""Microsoft Internet Explorer CHM file load attempt""
     }
 ][
         ""sid"": ""28931"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Browser"",
         ""Quotes"": """"Exploit Browser techniques involve exploiting vulnerabilities in web browsers to execute malicious code or gain unauthorized access to a system. This rule detects an attempt to load a CHM file in Internet Explorer, which is a common method used by attackers to exploit browser vulnerabilities."""",
         ""Explanation"": ""The alert is triggered when a CHM (compiled HTML help) file is loaded in Internet Explorer.""
     ][
     {
         ""sid"": ""28931"",
         ""Technique ID"": ""T1105"",
         ""Technique Name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transfer of tools or other files from an external system into a compromised environment. CHM files can be abused to deliver malicious payloads, such as exploits or malware, and are commonly used in phishing campaigns. By loading a CHM file, an attacker can bypass security restrictions and execute malicious code on the victim's system."""",
         ""Explanation"": ""This event is generated when Microsoft Internet Explorer is loading a CHM help file, which is an uncommon event. This behavior might be related to an attempt to exploit a vulnerability in Internet Explorer.""
     }
 ][
   {
     ""sid"": ""28931"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Local File System"",
     ""Quotes"": """"Exploit Local File System techniques involve exploiting vulnerabilities in the local file system to gain unauthorized access or execute arbitrary code. This rule detects an attempt to load a CHM (Compiled HTML Help) file from a remote host, which is a common technique used by attackers to exploit vulnerabilities in Microsoft Internet Explorer."""",
     ""Explanation"": ""This event is generated when Microsoft Internet Explorer loads a CHM file from a remote FTP, HTTP, IMAP, or POP3 server.""
   }
 ][
   ""sid"": ""28931"",
   ""Technique ID"": ""T1189"",
   ""Technique name"": ""Exploit Remote Services"",
   ""Quotes"": """"Exploit Remote Services involves exploiting vulnerabilities in remote services to gain unauthorized access, execute arbitrary code, or cause a denial-of-service condition. The rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer's handling of CHM files, which could allow remote attackers to execute arbitrary code on the target system."""",
   ""Explanation"": ""This event is generated when activity relating to vulnerability in Microsoft Internet Explorer's handling of CHM files is detected.""
 ]","['T1110', 'T1117', 'T1210', 'T1190', 'T1190', 'T1189', 'T1189', 'T1189', 'T1105', 'T1189', 'T1189']",['T1218']
44689,"[
   {
     ""sid"": ""44689"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Connection Proxy"",
     ""Quotes"": """"Connection Proxy techniques involve using proxies to establish network connections, typically with the intent of bypassing access controls or concealing communication patterns. The rule detects outbound connections to ""update/"" paths associated with the “.NET Framework” and “aspnet_client” library, which is indicative of a Trojan (Win.Trojan.Gen) using a proxy to communicate with a command and control server."""",
     ""Explanation"": ""This rule is used to detect outbound connections from a compromised host to a known malicious IP address.""
   }
 ][
   {
     ""sid"": ""44689"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve stealing data by exfiltrating it over a different protocol than that of the existing command and control channel. This rule detects an outbound connection from a compromised host to an external IP address using the HTTP protocol, which could be used to exfiltrate data over an alternative channel."""",
     ""Explanation"": ""This rule detects an attempted exfiltration of data over an HTTP connection to an external IP address.""
   }
 ][
         ""sid"": ""44689"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an outbound connection from a compromised host to a known malicious server ('/aspnet_client/system_web/4_0_30319/update/'), which is a common tactic used by malware to communicate with its command and control server."""",
         ""Explanation"": ""The source IP in the rule is the internal IP, which indicates that it is an outbound connection, and the destination IP is public IP, which is a common pattern of communication with a Command and Control (C2) server.""
     ][
   {
     ""sid"": ""44689"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""This event is generated when a possible exploit of a public-facing web application is detected.""
   }
 ][
   {
     ""sid"": ""44689"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve maintaining persistence on a victim system and communicating with attackers for instruction. This rule detects an outbound connection to a known malicious domain associated with a Trojan (Win.Trojan.Gen) attempting to establish communication with its command and control server."""",
     ""Explanation"": ""Generic Trojan activity on port 80""
   }
 ][
   {
     ""sid"": ""44689"",
     ""Technique ID"": ""T1142"",
     ""Technique Name"": ""Domain Generation Algorithms"",
     ""Quotes"": """"Domain Generation Algorithms techniques involve generating large numbers of domain names to host malicious content or infrastructure. This rule detects an outbound connection to a domain generated using an algorithm, which is a common method used by malware to avoid detection by security tools."""",
     ""Explanation"": ""This rule triggers when a domain that resembles one of the domains from a DGA is seen in the traffic.""
   }
 ][
     {
         ""sid"": ""44689"",
         ""Technique ID"": ""T1041"",
         ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve using an established command and control channel to exfiltrate data from a victim system to a remote location. The rule detects outbound traffic from an infected host attempting to connect to a remote server using the '/aspnet_client/system_web/4_0_30319/update/' URI, which is a known method used by malware to exfiltrate data over HTTP."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""44689"",
     ""Technique ID"": ""T1071.001"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Adversaries may establish command and control (C2) channels with compromised systems to control victim systems remotely. This rule detects an outbound connection to a known C2 server associated with the Win.Trojan.Gen variant of malware, indicating that the infected system is attempting to communicate with the malware's operators."""",
     ""Explanation"": ""This rule is designed to detect Win.Trojan.Gen variant outbound communications.""
   },
   {
     ""sid"": ""44689"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Custom Command and Control Protocol"",
     ""Quotes"": """"Adversaries may develop custom protocols specifically designed for their operations to communicate with compromised systems. This rule detects an outbound connection to a known C2 server associated with the Win.Trojan.Gen variant of malware, which suggests the use of a custom protocol as the malware may be attempting to avoid detection by using a non-standard communication channel."""",
     ""Explanation"": ""This rule is designed to detect Win.Trojan.Gen variant outbound communications.""
   }
 ][
   {
     ""sid"": ""44689"",
     ""Technique ID"": ""T1564"",
     ""Technique Name"": ""Hide Artifacts"",
     ""Quotes"": """"Hide Artifacts techniques aim to conceal artifacts or traces of malicious activity to evade detection and analysis. This rule detects an outbound connection from an internal host to a known malicious domain, which is a common tactic used by malware authors to establish communication with a command and control (C&C) server while attempting to avoid detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""44689"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised environment. This rule detects an outbound connection from an internal host to a known malicious domain, which could be an attempt to transfer tools or malware into the network."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""44689"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration involves transferring data out of targeted systems for use in other locations.The rule detects outbound connections to a specific malicious URL associated with data exfiltration activities such as sending sensitive information to a remote server."",
     ""Explanation"": ""Outbound communication to malicious URL, possible data exfiltration.""
   }
 ][
     {
         ""sid"": ""44689"",
         ""Technique ID"": ""T1049"",
         ""Technique Name"": ""System Network Connections Discovery"",
         ""Quotes"": """"System Network Connections Discovery techniques are used to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. The IDS rule detects outbound connections to ""/aspnet_client/system_web/4_0_30319/update/"" which is known to be associated with the Win.Trojan.Gen malware family. This malware often establishes outbound connections to remote servers for command and control purposes."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     },
     {
         ""sid"": ""44689"",
         ""Technique ID"": ""T1518"",
         ""Technique Name"": ""Software Discovery"",
         ""Quotes"": """"Software Discovery techniques involve collecting information about software and software versions that are installed on a system or in a cloud environment. The rule looks for connections to ""/aspnet_client/system_web/4_0_30319/update/"" which is a specific path associated with the Win.Trojan.Gen malware family. This malware often targets specific software vulnerabilities or versions to gain access to systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ]","['T1105', 'T1048', 'T1190', 'T1190', 'T1059', 'T1142', 'T1041', 'T1071.001', 'T1048', 'T1564', 'T1105', 'T1133', 'T1049', 'T1518']",['T1071']
37313,"[
   {
     ""sid"": ""37313"",
     ""Technique ID"": ""T1568"",
     ""Technique name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve the adversary using non-standard protocols or channels to exfiltrate data. The Snort rule detects attempts to exfiltrate data through SMTP by exploiting an external entity data exfiltration vulnerability."""",
     ""Explanation"": ""This rule is triggered when an attempt to exfiltrate data via SMTP is detected.""
   }
 ][
     ""sid"": ""37313"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve exfiltrating data over a different protocol than that of the existing command and control channel. The rule detects an attempt to exfiltrate data using SMTP, which is an alternative protocol to the usual HTTP or HTTPS channels used for data exfiltration."""",
     ""Explanation"": ""External entity data exfiltration using SMTP protocol""
 ][
         ""sid"": ""37313"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve using external-facing remote services to initially access and/or persist within a network. The rule detects an attempt to exfiltrate data using an external entity (such as a remote SMTP server) by embedding it within an XML document. This technique is commonly used by attackers to bypass network security controls and transfer sensitive data out of a network."""",
         ""Explanation"": ""SMTP protocol vulnerability in multiple products allows remote attackers to exfiltrate arbitrary files via a crafted SMTP envelope containing an XML entity declaration, as demonstrated by the ""!DOCTYPE x [<!ENTITY foo SYSTEM \""file:///etc/passwd\""]"", which discloses the /etc/passwd file.""
     ][
   {
     ""sid"": ""37313"",
     ""Technique ID"": ""T1120"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring data from a victim machine to a remote location. This rule detects an attempt to exfiltrate data using an external entity data exfiltration technique, which involves abusing file parsing functionality to exfiltrate data via file entities."""",
     ""Explanation"": ""The rule triggers when there is a data exfiltration attempt using a file entity.""
   }
 ][
   {
     ""sid"": ""17434"",
     ""Technique ID"": ""T1118"",
     ""Technique Name"": ""External Entity (XXE)"",
     ""Quotes"": """"An XXE attack can be used to read the contents of external files (e.g., /etc/passwd). Attackers can use this attack technique for reconnaissance or to discover sensitive information. This rule detects a file upload attempt that contains an XXE payload, which could be used to compromise the SMTP server."""",
     ""Explanation"": ""This rule detects file upload attempt that contains an XXE payload, which could be used to compromise the SMTP server.""
   }
 ][
   {
     ""sid"": ""37313"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve sending collected data back to an attacker through the established command and control channel. This rule detects an attempt to exfiltrate data using an external entity declaration in an XML document, which is a common technique used by attackers to transfer information back to a command and control server."""",
     ""Explanation"": ""External entity (XXE) attacks allow an attacker to access files and resources on the server through a specially crafted XML request.""
   }
 ][
   {
     ""sid"": ""37313"",
     ""Technique ID"": ""T1560"",
     ""Technique name"": ""Archive Collected Data"",
     ""Quotes"": """"Archive Collected Data techniques involve compressing or encrypting data that is collected prior to exfiltration. The rule detects an attempt to exfiltrate sensitive data using an external entity declaration, which attackers use to encode and obfuscate data in XML or HTML entities."",
     ""Explanation"": ""Multiple products external entity data exfiltration attempt. XML External Entity (XXE) attacks are a type of attack against an application that parses XML input. An XXE attack occurs when an attacker is able to inject an XML entity into the input that is being parsed. This can allow the attacker to access files on the server, execute arbitrary commands, or perform other malicious actions.""
   }
 ][
   {
     ""sid"": ""37313"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel involves exfiltrating data or information back out to the command and control server. This rule detects an attempt to exfiltrate data using an external entity declaration, which is a technique commonly used by attackers to exfiltrate data stealthily through communication channels."""",
     ""Explanation"": ""This rule detects an external entity data exfiltration attempt in multiple products.""
   },
   {
     ""sid"": ""37313"",
     ""Technique ID"": ""T1079"",
     ""Technique Name"": ""Exfiltration Over Web Service"",
     ""Quotes"": """"Exfiltration Over Web Service involves exfiltrating data or information via web service protocols. This rule detects an attempt to exfiltrate data using external entity references, which are often used as a channel by attackers to exfiltrate data over HTTP."""",
     ""Explanation"": ""This rule detects an external entity data exfiltration attempt in multiple products.""
   }
 ][
   {
     ""sid"": ""37313"",
     ""Technique ID"": ""T1567"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": ""\""Exfiltration Over Command and Control Channel techniques involve sending data exfiltrated from a victim system out through command and control (C2) channels established by adversaries. The rule detects an attempt to exfiltrate data via an external entity (SYSTEM) in an XML file, which is a common method used by attackers to exfiltrate data over C2 channels.\"""",
     ""Explanation"": ""This event is generated when multiple products external entity data exfiltration attempt is detected.""
   }
 ][
         ""sid"": ""37313"",
         ""Technique ID"": ""T1487"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data exfiltration techniques involve transferring data from a system or network to an external system or network. This rule detects an attempt by an external entity to exfiltrate data from a system via a method known as external entity (XXE) data exfiltration, which can allow adversaries to access sensitive information by manipulating XML entities."""",
         ""Explanation"": ""Inbound data exfiltration attempt.""
     ][
     ""sid"": ""37313"",
     ""Technique ID"": ""T1049"",
     ""Technique Name"": ""System Network Connections Discovery"",
     ""Quotes"": """"System Network Connections Discovery techniques involve gathering information about network connections to or from a compromised system. This rule looks for network traffic that contains external entity data exfiltration attempts using the '<!ENTITY' and 'SYSTEM' keywords, which could be used by adversaries to identify and exploit network resources and perform lateral movement."""",
     ""Explanation"": ""An attempt was made to infiltrate an external entity data exfiltration multiple products""
 ]","['T1568', 'T1048', 'T1133', 'T1120', 'T1118', 'T1041', 'T1560', 'T1041', 'T1079', 'T1567', 'T1487', 'T1049']",['T1020']
49529,"[
         ""sid"": ""49529"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Injection"",
         ""Quotes"": """"Injection involves introducing malicious code into a system, such as a script, to gain unauthorized access or control. This rule detects a responder poisoner download attempt, which is a type of injection technique used to disrupt network communication by injecting malicious responses into DNS queries."""",
         ""Explanation"": ""The rule looks for the injection of malicious code into a system to gain unauthorized access.""
     ][
         ""sid"": ""49529"",
         ""Technique ID"": ""T1140"",
         ""Technique Name"": ""Endpoint Denial of Service"",
         ""Quotes"": """"Endpoint Denial of Service techniques involve actions that are intended to render a targeted endpoint unusable, unavailable, or otherwise less capable of performing its intended function. This rule detects an attempt to exploit a vulnerability in Responder by sending a specially crafted NBT request, which could lead to a denial of service on the target system."""",
         ""Explanation"": ""This rule is triggered when an attempt is made to download a file named 'poisoners.NBTNS' over a variety of file transfer protocols, which is a known method used to exploit a vulnerability in Responder.""
     ][
   {
     ""sid"": ""49529"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. This rule detects an attempted download of a poisoners.NBTNS file over various file data ports (such as FTP, HTTP, etc.), which is a common method used by attackers to gain access to a system through malicious downloads."""",
     ""Explanation"": ""A poisoners.NBTNS file is detected, this is a file associated with Responder, a tool that allows attackers to poison NetBIOS name resolution (NBT) responses on a network, potentially enabling them to impersonate legitimate hosts and intercept network traffic.""
   }
 ][
   {
     ""sid"": ""49529"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve using various mechanisms to transfer tools onto a system. This rule specifically detects an attempt to download a file named ""poisoners.NBTNS"" using a file data port, which is a common method used by attackers to transfer malicious software onto a system."""",
     ""Explanation"": ""Download initiated from 192.168.94.99:3443 (Responder poisoner)""
   }
 ][
         ""sid"": ""38649"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
     ][
   {
     ""sid"": ""49529"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer involves transferring malicious tools onto victim systems. The rule detects an attempt to poison the responder host in a NetBIOS Name Service (NBT-NS) protocol poisoning attack. Poisoning the responder allows the attacker to intercept and manipulate network traffic, potentially leading to credential theft or other malicious actions."""",
     ""Explanation"": ""FTP DATA Control File is present that could be used in an NBTNS Poisoning Attack.""
   }
 ][
   {
     ""sid"": ""49529"",
     ""Technique ID"": ""T1595"",
     ""Technique Name"": ""Active Scanning"",
     ""Quotes"": """"Active Scanning techniques involve performing reconnaissance on a network to gather information about hosts, services, and vulnerabilities. The rule detects an attempt to download a file named 'poisoners.NBTNS', which is associated with Responder, a tool commonly used for active scanning and poisoning of NetBIOS name resolution protocol (NBT-NS)."""",
     ""Explanation"": ""The rule is triggered when an attempt is made to download a file associated with Responder, which is a tool commonly used for active scanning and poisoning of NetBIOS name resolution protocol (NBT-NS).""
   }
 ][
     {
         ""sid"": ""49529"",
         ""Technique ID"": ""T1112"",
         ""Technique Name"": ""Poisoning"",
         ""Quotes"": """"Poisoning techniques involve modifying data to cause desired effects or to interfere with normal operations. This rule specifically refers to ""poisoning"" in the context of DNS responses. DNS poisoning is the act of modifying the DNS server's response to a query to redirect traffic to a malicious destination. The rule aims to detect attempts to download a file named ""poisoners.NBTNS"" which could potentially be used for DNS poisoning."""",
         ""Explanation"": ""This event is generated when malicious activity in the form of poisoners.NBTNS is detected attempting to download.""
     }
 ][
   {
     ""sid"": ""49529"",
     ""Technique ID"": ""T1490"",
     ""Technique name"": ""Inhibit System Recovery"",
     ""Quotes"": """"Inhibit System Recovery techniques involve disabling or deleting built-in data or turning off services designed to aid in the recovery of a corrupted system to prevent recovery, such as disabling safe mode or deleting recovery partitions."""",
     ""Explanation"": ""The rule triggers when an attempt is made to download a file named \""poisoners.NBTNS\"" over various file transfer protocols (FTP, HTTP, IMAP, POP3), which could be a tactic to disable system recovery mechanisms.""
   }
 ][
         ""sid"": ""49529"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule indicates a potential download attempt of a responder poisoner, which could be used to exploit vulnerabilities in DNS servers."""",
         ""Explanation"": ""This rule is designed to detect download attempts of responder poisoner tools.""
     ][
   {
     ""sid"": ""49529"",
     ""Technique ID"": ""T1574"",
     ""Technique name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve creating or modifying system processes as part of adversary operations. This rule detects an attempt to download the Responder tool, which is often used by adversaries to poison NetBIOS Name Service (NBNS) responses and redirect traffic to malicious destinations."""",
     ""Explanation"": ""This rule is designed to detect the malicious file download attempt by checking for the file name 'poisoners.NBTNS' in the file data.""
   }
 ]","['T1105', 'T1140', 'T1133', 'T1105', 'T1190', 'T1105', 'T1595', 'T1112', 'T1490', 'T1190', 'T1574']",['T1187']
40811,"[
   {
     ""sid"": ""40811"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Denial of Service"",
     ""Quotes"": """"Denial of Service techniques involve overwhelming a system or service with requests to disrupt its normal function. This rule detects an NTP (Network Time Protocol) Denial of Service (DoS) attack attempt, where an attacker sends malformed NTP packets with an invalid origin timestamp to cause the target NTP server to crash."""",
     ""Explanation"": ""The rule detects the use of a malformed NTP packet with an invalid origin timestamp, which can trigger a DoS condition on the target NTP server.""
   }
 ][
         {
           ""Sid"": 40811,
           ""Technique ID"": ""T1499"",
           ""Technique Name"": ""Endpoint Denial of Service"",
           ""Quotes"": """"Endpoint Denial of Service (DoS) attacks target the availability of services on an endpoint device. The rule detects an attempt to exploit a denial of service vulnerability in the NTP service, which could lead to the system becoming unresponsive or crashing."""",
           ""Explanation"": ""This rule triggers an alert when there is a denial of service attempt on an endpoint device. The rule looks for specific patterns in the network traffic, such as a large number of NTP packets with a specific payload, that are indicative of a denial of service attack.""
         }
       ][
   {
     ""sid"": ""40811"",
     ""Technique ID"": ""T1495"",
     ""Technique Name"": ""Firmware Corruption"",
     ""Quotes"": """"Firmware Corruption techniques involve modifying or overwriting the flash memory of a device's firmware or BIOS, often leading to system malfunction or denial of service."""",
     ""Explanation"": ""Firmware Corruption techniques are often used in denial-of-service attacks to disrupt the normal operation of a system.""
   },
   {
     ""sid"": ""40811"",
     ""Technique ID"": ""T1657"",
     ""Technique Name"": ""Financial Theft"",
     ""Quotes"": """"Financial Theft techniques encompass the unauthorized transfer of monetary funds for the adversary's benefit. These techniques may involve extortion, scamming, or tampering with financial systems to obtain or move funds."""",
     ""Explanation"": ""Financial Theft techniques are often used in conjunction with other techniques, such as social engineering, to gain access to financial accounts or systems.""
   }
 ][
         ""sid"": ""40811"",
         ""Technique ID"": ""T1498"",
         ""Technique name"": ""Denial of Service"",
         ""Quotes"": """"Denial of Service techniques involve preventing authorized users from accessing or using system resources. This rule detects an attempted NTP (Network Time Protocol) origin timestamp denial of service (DoS) attack, which is a method used to disrupt NTP services by sending malicious packets to exhaust resources or disrupt network connectivity."""",
         ""Explanation"": ""The rule specifically matches packets with an NTP origin timestamp field set to zero, which is a common technique used in NTP DoS attacks.""
     ][
   {
     ""sid"": ""40811"",
     ""Technique ID"": ""T1498"",
     ""Technique Name"": ""Degraded Service"",
     ""Quotes"": """"Degraded Service techniques involve actions that cause or attempt to cause a temporary or persistent disruption to the availability or quality of a service. This rule detects an attempt to exploit a Denial of Service (DoS) vulnerability in NTP servers by sending a specially crafted packet that causes the server to crash or become unresponsive, leading to service degradation or disruption."""",
     ""Explanation"": ""NTP amplification attack using randomized offsets against multiple servers""
   }
 ][
         ""sid"": ""40811"",
         ""Technique ID"": ""T1498"",
         ""Technique name"": ""Denial of Service"",
         ""Quotes"": """"Denial of Service techniques involve actions taken by an adversary to disrupt the availability, accessibility, usability, or reliability of a victim system or network, thus causing a denial of service to legitimate users. This rule triggers when an unusually high-volume of NTP origin timestamp requests is detected, which can be an indicator of a denial-of-service attack."""",
         ""Explanation"": ""This event is generated when activity relating to NTP is detected.""
     ][
   {
     ""sid"": ""40811"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Denial of Service"",
     ""Quotes"": """"Denial of Service (DoS) techniques involve overwhelming a target system or network with requests to disrupt or disable its normal operation. This rule detects an attempt to exploit a DoS vulnerability in an NTP server by sending a malformed packet that can cause the server to crash or become unresponsive."""",
     ""Explanation"": ""This rule detects a denial of service attack against an NTP server.""
   }
 ][
         ""sid"": ""40811"",
         ""Technique ID"": ""T1498"",
         ""Technique Name"": ""Denial-of-Service"",
         ""Quotes"": """"Denial-of-Service techniques aim to overwhelm a system's resources, such as network bandwidth, memory, or processing power, to disrupt or deny legitimate users access to services or data. The rule specifically detects a denial of service attempt targeting the Network Time Protocol (NTP) service, which could be used to disrupt time synchronization and other NTP-reliant services on the network."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in NTP is detected.""
     ][
         ""sid"": ""40811"",
         ""Technique ID"": ""T1498"",
         ""Technique name"": ""Denial of Service"",
         ""Quotes"": """"Denial of Service techniques involve actions taken to disrupt the availability of a service, such as flooding a system with requests or exploiting vulnerabilities to crash the system. This rule detects an attempt to exploit a Denial of Service vulnerability in the NTP service by sending a specially crafted packet that causes the service to crash."""",
         ""Explanation"": ""UDP port 123 (NTP) is used for clock synchronization. An overflow in NTP versions before 4.2.8p5 when processing an NTP packet with a crafted origin timestamp field can cause a denial of service.""
     ][
     {
         ""sid"": ""40811"",
         ""Technique ID"": ""T1498"",
         ""Technique name"": ""Network Denial of Service"",
         ""Quotes"": """"Network Denial of Service (DoS) techniques involve disrupting the availability or accessibility of a system, network, or service, either to deny legitimate users access to the resource or to disrupt operations. This rule detects a DoS attempt via a malformed NTP packet to a specific port (123) on the network, which could lead to resource exhaustion and service disruption."""",
         ""Explanation"": ""This rule is designed to detect and prevent denial of service attacks that exploit vulnerabilities in the NTP service.""
     }
 ][
   {
     ""sid"": ""40811"",
     ""Technique ID"": ""T1498"",
     ""Technique Name"": ""Denial of Service"",
     ""Quotes"": """"Denial of Service techniques involve actions taken by an adversary to disrupt the normal functioning of a computer or network through exhaustion of resources (e.g., CPU, memory, bandwidth) or by causing the system or network to crash."""",
     ""Explanation"": ""This rule detects an attempt to exploit a denial of service vulnerability in NTP servers by sending a malformed NTP packet that can cause the server to crash or become unresponsive.""
   }
 ]","['T1498', 'T1499', 'T1495', 'T1657', 'T1498', 'T1498', 'T1498', 'T1498', 'T1498', 'T1498', 'T1498', 'T1498']",['T1547']
23985,"[
   {
     ""sid"": ""23985"",
     ""Technique ID"": ""T1208"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a buffer overflow vulnerability in the QuickTime plugin for Apple, which is a common method attackers use to gain remote code execution on vulnerable systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""23985"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve compromising a user's system through visiting a malicious website during the normal course of browsing. This rule detects an exploit attempt targeting the Apple Quicktime plugin's 'SetLanguage' buffer overflow vulnerability, which can allow an attacker to execute arbitrary code on a user's system by enticing them to visit a malicious website."""",
         ""Explanation"": ""This event is generated when a DRIVE-BY-DOWNLOAD is detected.""
     ][
   {
     ""sid"": ""23985"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client applications, such as web browsers and PDF readers, to execute arbitrary code or gain unauthorized access. This rule detects an attempt to exploit a buffer overflow vulnerability in the Apple QuickTime plugin by sending a specially crafted file containing malicious code, which could allow an attacker to execute arbitrary code on the victim's system."""",
     ""Explanation"": ""QuickTime, a multimedia software framework developed by Apple, has vulnerabilities that could enable remote code execution when processing a maliciously crafted QuickTime file.""
   }
 ][
   {
     ""sid"": ""23985"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a buffer overflow vulnerability in the Apple Quicktime plugin for Internet Explorer, which is a common method attackers use to exploit web browsers by manipulating the execution of code."""",
     ""Explanation"": ""The rule tries to detect an attempted exploitation of a buffer overflow vulnerability in the Apple Quicktime plugin for Internet Explorer.""
   }
 ][
     ""sid"": ""23985"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a buffer overflow vulnerability in the Apple QuickTime plugin for Internet Explorer. Attackers could exploit this vulnerability by enticing a user to visit a malicious website or open a specially crafted email attachment that contains malicious code, which could allow them to execute arbitrary code on the victim's system."""",
     ""Explanation"": ""This rule detects an attempt to exploit a buffer overflow vulnerability in the Apple QuickTime plugin for Internet Explorer. Attackers could exploit this vulnerability by enticing a user to visit a malicious website or open a specially crafted email attachment that contains malicious code, which could allow them to execute arbitrary code on the victim's system.""
 ][
         ""sid"": ""23985"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Buffer Overflow"",
         ""Quotes"": """"Buffer Overflow techniques involve writing past the end of a memory buffer to overwrite adjacent memory, potentially leading to code execution or arbitrary write. The rule detects a buffer overflow attempt in the Apple Quicktime plugin, which can allow adversaries to execute arbitrary code on vulnerable systems."""",
         ""Explanation"": ""This rule detects an attempt to exploit a buffer overflow vulnerability in the Apple Quicktime plugin. This vulnerability can be exploited by sending a specially crafted file to a vulnerable system, which can lead to arbitrary code execution.""
     ][
         ""sid"": ""23985"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications to execute arbitrary code on the victim's system. This rule detects an attempt to exploit a buffer overflow vulnerability in the Apple Quicktime plugin for Internet Explorer, which could allow an attacker to execute arbitrary code on the victim's system."""",
         ""Explanation"": ""Buffer overflow in Apple QuickTime plugin in Internet Explorer allows remote attackers to execute arbitrary code via a long QuickTime movie atom name, aka 'QuickTime MOV atom name buffer overflow'.""
     ][
         ""sid"": ""23985"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploit Software Vulnerability"",
         ""Quotes"": """"Exploit Software Vulnerability techniques involve targeting vulnerabilities in software to gain unauthorized access or execute arbitrary code. This rule detects an attempted buffer overflow attack against the Apple QuickTime plugin's 'SetLanguage' function, which is a common method attackers use to exploit software vulnerabilities to execute arbitrary code."""",
         ""Explanation"": ""The rule is trying to detect an attempt to exploit a buffer overflow vulnerability in the Apple QuickTime plugin. The attacker is attempting to send a specially crafted file that will cause the plugin to crash and execute arbitrary code.""
     ][
         ""sid"": ""23985"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a buffer overflow vulnerability in the Apple Quicktime plugin's 'SetLanguage' function, which could allow an attacker to execute arbitrary code on the victim's system."""",
         ""Explanation"": ""QuickTime is a multimedia framework developed by Apple Inc. and introduced in 1991. It is used for handling various formats of digital video, audio, text, and images on macOS, iOS, and Windows platforms.""
     ][
     ""sid"": ""23985"",
     ""Technique ID"": ""T1202"",
     ""Technique name"": ""Exploit Software Application"",
     ""Quotes"": """"Exploit Software Application techniques involve exploiting vulnerabilities in commonly used software applications such as web browsers, media players, and other software. The rule detects a buffer overflow vulnerability in the Apple QuickTime plugin, which attackers can exploit by sending a specially crafted file to cause a crash or arbitrary code execution."""",
     ""Explanation"": ""Apple's QuickTime software may contain an unchecked buffer in the SetLanguage method, allowing remote attackers to cause a stack-based buffer overflow via a crafted AVI file containing an atom with an oversized name.""
 ][
   {
     ""sid"": ""23985"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application involves targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted exploitation of a buffer overflow vulnerability in the Apple QuickTime plugin, which is commonly used by attackers to compromise systems through malicious websites or drive-by downloads."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in the Apple QuickTime plugin is detected.""
   }
 ]","['T1208', 'T1189', 'T1203', 'T1210', 'T1190', 'T1110', 'T1189', 'T1203', 'T1190', 'T1202', 'T1190']",['T1176']
60401,"[
   {
     ""sid"": ""60401"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web shells are malicious scripts that provide remote access to a compromised system via a web interface. This rule detects the presence of ""DTool Pro"", a PHP-based web shell, which is used by attackers to gain unauthorized access to and control over compromised web servers."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""60401"",
         ""Technique ID"": ""T1539"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute Force techniques involve using automated or semi-automated methods to iteratively try different combinations of usernames and passwords to gain unauthorized access. This rule detects inbound connection attempts targeting PHP webshells that are commonly used for remote access and execution of commands on compromised systems."""",
         ""Explanation"": ""An incoming connection attempting to execute PHP webshell code.""
     ],
     [
         ""sid"": ""60401"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects inbound connection attempts targeting PHP webshells that are commonly used to exploit web applications through arbitrary code execution."""",
         ""Explanation"": ""An incoming connection attempting to exploit a public-facing PHP application.""
     ]
 ][
     {
         ""sid"": ""60401"",
         ""Technique ID"": ""T1133"",
         ""Technique Name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve leveraging publicly accessible remote services to facilitate access or persistence within a network. This rule aims to detect malicious PHP web shells attempting to establish inbound connections, indicating an attempt to gain access and control a vulnerable web server."""",
         ""Explanation"": ""This rule detects attempts to establish inbound connections to vulnerable websites using a PHP web shell called DToolPro""
     },
     {
         ""sid"": ""60401"",
         ""Technique ID"": ""T1210"",
         ""Technique Name"": ""Exploitation of Remote Services"",
         ""Quotes"": """"Exploitation of Remote Services techniques involve exploiting vulnerabilities in remote services to gain unauthorized access or execute arbitrary code. PHP web shells like DToolPro are known to exploit vulnerabilities in legitimate web services to establish connections and gain control over the server, allowing attackers to execute malicious commands and persist within the network."""",
         ""Explanation"": ""The rule looks for patterns that PHP web shells use to establish inbound connections, suggesting an attempt to exploit remote services.""
     }
 ][
         ""sid"": ""60401"",
         ""Technique ID"": ""T1106"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Adversaries may place web shells on victim machines to maintain remote access and permit the execution of unauthorized commands and scripts. This rule specifically detects an attempt to establish an inbound connection to a PHP web shell, which is a type of web shell commonly used by attackers."""",
         ""Explanation"": ""This event is generated when a Php.Webshell.DToolPro inbound connection attempt is detected.""
     ][
         ""sid"": ""60401"",
         ""Technique ID"": ""T1104"",
         ""Technique name"": ""Netsh Command-Line Interpreter"",
         ""Quotes"": """"Adversaries may abuse the Netsh command-line interpreter to perform various networking tasks and execute commands on remote systems. This rule detects the use of Netsh to modify firewall rules, which could be used to bypass security protections or establish persistence."""",
         ""Explanation"": ""This event is generated when netsh is adding the firewall rules when it is likely to be triggered by malware.""
     ][
   {
     ""sid"": ""60401"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using a command or scripting interpreter to execute commands and scripts on a system. This rule detects an incoming connection attempt to a PHP webshell, which is a type of web-based backdoor that allows an attacker to execute arbitrary commands on a compromised web server. The rule specifically looks for the '?cmd=' parameter in the HTTP request, which is commonly used to pass commands to the webshell."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""60401"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shells allow attackers to maintain remote access to a compromised system by uploading and executing malicious scripts on a web server. The rule detects an inbound connection attempt to a PHP web shell, which is a common tool used by attackers to gain remote access to web servers and execute arbitrary commands."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""60401"",
     ""Technique ID"": ""T1139"",
     ""Technique Name"": ""Process Injection"",
     ""Quotes"": """"Process Injection techniques involve injecting code into running processes to gain control or execute arbitrary code on the system. This rule detects an attempt to inject code into a PHP process using the ""&cmd="" parameter in a web request, which is a common method used by attackers to execute malicious commands on the target system."""",
     ""Explanation"": ""This rule detects suspicious POST requests with ""cmd="" in the request URI and ""&\"""" in the body. This behavior is commonly associated with injection attacks, such as SQL injection or command injection.""
   },
   {
     ""sid"": ""60401"",
     ""Technique ID"": ""T1564"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick victims into revealing sensitive information or clicking on malicious links. This rule detects an attempt to send a phishing email with an attached malicious PDF file, which is a common method used by attackers to compromise victim systems."""",
     ""Explanation"": ""This rule detects phishing emails that contain malicious PDF attachments. These emails often impersonate legitimate organizations and attempt to trick victims into opening the attachment, which can lead to malware infection or credential theft.""
   }
 ][
   {
     ""sid"": ""60401"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring malicious tools or files from an external system into a compromised environment. This rule detects an inbound connection attempt to a PHP web shell, which is commonly used by attackers to remotely execute malicious commands and upload/download files."""",
     ""Explanation"": ""The PHP web shell uses the HTTP protocol to receive commands and transfer files to and from the compromised system.""
   }
 ][
   {
     ""sid"": ""60401"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an incoming connection attempt to a web shell, typically used by attackers to gain remote access to a compromised web server or application. Web shells are often uploaded to web servers via exploitation of vulnerabilities in the underlying web application or server software."""",
     ""Explanation"": ""The rule detects an inbound connection to a PHP web shell, which is often used by attackers to gain remote access to a compromised web server or application.""
   },
   {
     ""sid"": ""60401"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking a user into executing a malicious binary or script. This rule detects an attempt to execute a PHP web shell, which is often accomplished by tricking a user into clicking on a malicious link or opening a malicious file."""",
     ""Explanation"": ""The rule detects an inbound connection to a PHP web shell, which can be used by attackers to trick users into executing malicious code on their systems.""
   }
 ][
     {
         ""sid"": ""60401"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted web shell attack by checking for incoming HTTP traffic containing a '.php' URI and the '&cmd=' parameter, which is a common method attackers use to exploit web applications and execute arbitrary commands on the target system."""",
         ""Explanation"": ""This event is generated when a web server is compromised and a web shell is installed on it ""
     }
 ]","['T1105', 'T1539', 'T1190', 'T1133', 'T1210', 'T1106', 'T1104', 'T1105', 'T1105', 'T1139', 'T1564', 'T1105', 'T1190', 'T1204', 'T1190']",['T1505']
56601,"[
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""Non-Standard Port"",
     ""Quotes"": """"Adversaries may use ports other than the standard port numbers for protocols, such as port 443 instead of the standard port 80 for HTTP traffic, to avoid detection by traditional security controls."""",
     ""Explanation"": ""The rule triggers an alert when it detects traffic on non-standard ports, which could indicate that an attacker is trying to evade detection.""
   },
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1071.001"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise involves tricking a user into visiting a malicious website that contains malicious content, such as an exploit kit. When the user visits the website, their browser automatically downloads and executes the exploit kit, which can then compromise the user's device."""",
     ""Explanation"": ""The rule detects traffic that is characteristic of a drive-by compromise attack, such as the presence of an exploit kit or malicious content.""
   },
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Injection"",
     ""Quotes"": """"Injection involves inserting malicious code into a legitimate program or process in order to execute arbitrary commands or gain unauthorized access."""",
     ""Explanation"": ""The rule detects traffic that is characteristic of an injection attack, such as the presence of malicious code or suspicious parameters.""
   }
 ][
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1410"",
     ""Technique Name"": ""Connection Proxy"",
     ""Quotes"": """"Connection Proxy techniques involve establishing a proxy connection between two systems to relay communications. The rule detects a connection from an external IP address to an internal system, with specific HTTP headers and file data content that matches patterns associated with a backdoor stager download attempt. These characteristics suggest that an attacker is using a connection proxy to establish a covert communication channel to the compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""56601"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. This rule detects an HTTP request with headers and data consistent with the Win.Backdoor.CSBundle_Original stager, which is known to use external HTTP servers to receive commands and exfiltrate data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected. The detected malware is a Win.Backdoor.CSBundle_Original backdoor which is known to exploit public-facing applications.""
   }
 ][
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1009"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Adversaries may use command and scripting interpreters, such as shell, PowerShell, Batch, and AppleScript, to execute commands, download and execute files, and control systems. This rule detects a malicious HTTP request containing PowerShell commands, which could be used to establish a command and control channel and execute malicious commands on the target system."""",
     ""Explanation"": ""This rule triggers when it detects a POST request that matches 14 patterns.""
   },
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve adversaries transferring tools needed for follow-on actions into the target environment. This rule detects an attempt to download a malicious payload using PowerShell commands, which could be used to install additional malware or tools on the target system."""",
     ""Explanation"": ""This event is generated when a HTTP POST request includes any of the URI patterns.""
   },
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve adversaries encoding data to evade detection. This rule detects malicious HTTP requests that contain encoded PowerShell commands, which could be used to bypass detection mechanisms and execute malicious code on the target system."""",
     ""Explanation"": ""This rule triggers when it detects a malicious HTTP POST request that contains a JSON structure.""
   },
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1571"",
     ""Technique name"": ""Data from Local System"",
     ""Quotes"": """"Data from Local System techniques involve adversaries reading or accessing data directly from the local system. This rule detects malicious HTTP requests that attempt to gather sensitive information from the target system, such as system information, user credentials, and network configuration, which could be used for reconnaissance or lateral movement."""",
     ""Explanation"": ""This event is triggered by any of 27 patterns in the URI.""
   }
 ][
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve obtaining the network topology and information about hosts on a network. This rule detects a reconnaissance attempt by a malicious actor using a series of GET requests to gather information about the target system, including server software, operating system, and open ports. The attacker may use this information to identify potential vulnerabilities and plan further attacks."""",
     ""Explanation"": ""This rule detects a reconnaissance attempt by a malicious actor using a series of GET requests to gather information about the target system, including server software, operating system, and open ports. The attacker may use this information to identify potential vulnerabilities and plan further attacks.""
   }
 ][
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding involves encoding or encrypting data to evade detection or to enable covert communication. The rule specifically mentions the content type of the traffic as \""image/gif\"" while the actual payload is encoded in a hexadecimal format, indicating that the malicious payload is hidden within an image file."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""56601"",
         ""Technique ID"": ""T1139"",
         ""Technique Name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve disguising malicious infrastructure or network communications as legitimate or trusted entities to evade detection. In this snort rule, the traffic is masquerading as normal web traffic by mimicking the format of a GIF file, which helps it evade detection and blend in with legitimate network traffic."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised or targeted environment to support malicious activities. In this case, the rule detects an attempt by the Win.Backdoor.CSBundle_Original malware to download its second stage payload, which indicates the adversary is attempting to establish a foothold within the network."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""56601"",
         ""Technique ID"": ""T1139"",
         ""Technique Name"": ""Stage Download"",
         ""Quotes"": """"Stage Download techniques involve downloading additional malware to the compromised system from a remote server after an initial infection. The rule detects an attempt to download a stager for the Win.Backdoor.CSBundle_Original backdoor, which is a common method used by attackers to further compromise a system after gaining initial access."""",
         ""Explanation"": ""This rule generates an event when a stager for the Win.Backdoor.CSBundle_Original backdoor is downloaded.""
     }
 ][
   {
     ""sid"": ""56601"",
     ""Technique ID"": ""T1569"",
     ""Technique Name"": ""System Services"",
     ""Quotes"": """"System Services techniques involve abusing system services or daemons to execute commands or programs. This rule detects an attempt to exploit a vulnerability in Microsoft's Internet Information Services (IIS) web server, which could allow an attacker to execute arbitrary code on the target system. The attacker is attempting to exploit the vulnerability by sending a specially crafted HTTP request that includes a malicious GIF image file."""",
     ""Explanation"": ""IIS web server vulnerability in the way that it handles GIF images could allow remote attackers to execute arbitrary code via a crafted GIF file, as exploited in the wild in January 2016.""
   }
 ]","['T1133', 'T1071.001', 'T1105', 'T1410', 'T1133', 'T1190', 'T1009', 'T1105', 'T1110', 'T1571', 'T1110', 'T1132', 'T1139', 'T1105', 'T1139', 'T1569']",['T1043']
50277,"[
   {
     ""sid"": ""50277"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web shells are typically uploaded to a compromised web server and provide remote administrative access to an attacker. This rule detects an inbound request to a known web shell, 'Chopper', which is commonly used by attackers to execute commands, modify files, and exfiltrate data."""",
     ""Explanation"": ""This rule identifies attempts to access a known web shell, providing an attacker with remote access to the system.""
   }
 ][
     {
         ""sid"": ""50277"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve tricking a user into visiting a website or opening an email attachment that exploits vulnerabilities in their system or web browser and installs malware or other malicious software. This rule detects an inbound webshell request from a Win32/Chopper backdoor, which commonly infects systems through drive-by download attacks."""",
         ""Explanation"": ""Web Shell.""
     },
     {
         ""sid"": ""50277"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Choppers are web shells that provide attackers remote access and control over compromised systems. In this rule, an inbound webshell request to a specific URI path is detected, indicating an attempt to exploit a vulnerability in a public-facing application."""",
         ""Explanation"": ""Infection through exploitation of a vulnerable web application.""
     }
 ][
         ""sid"": ""50277"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services involve using external-facing remote services to maintain access to or control a target network. This rule identifies an inbound connection attempt to a ""/temporary_listen_addresses/wsman"" URI path, which corresponds to the WS-Management protocol. Threat actors may use WS-Management to establish a remote management session and execute commands remotely, giving them control over the target system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""50277"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a web application vulnerability via a malicious HTTP request to a ""/temporary_listen_addresses/wsman"" URI path. Threat actors may exploit vulnerabilities in web applications to gain access to or control a target system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
   {
     ""sid"": ""50277"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve moving tools from outside the network into a victim environment. The rule alerts on an inbound request to a web shell URL, which indicates an attempt to transfer a web shell into the victim network."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""50277"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Win.Backdoor.Chopper web shell, which is a common method attackers use to gain remote access to victim systems."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""50277"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a web shell vulnerability in the 'temporary_listen_addresses/wsman' URI of a Windows system, which is a common method attackers use to gain unauthorized access to web servers and execute malicious code."""",
     ""Explanation"": ""request containing sap-user-context is sent by an external host.""
   }
 ][
   {
     ""sid"": ""50277"",
     ""Technique ID"": ""T1138"",
     ""Technique name"": ""Create Web Shell"",
     ""Quotes"": """"Create Web Shell techniques involve deploying a shell that accepts remote commands and allows for interactive access to compromised systems. This rule detects an attempt to access a web shell with the filename 'wsman'. Web shells are often used by adversaries to maintain persistent access to compromised systems and execute commands remotely."""",
     ""Explanation"": ""Inbound attempt to access WSMan web shell. This web shell is used to provide remote access to a compromised system.""
   }
 ][
   {
     ""sid"": ""50277"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Using web shells may include uploading malicious scripts to target servers, leveraging web shell functionality to execute code, modifying files, and executing administrative functions on the server. In this rule, an inbound request to a known web shell URI (""/temporary_listen_addresses/wsman"") and the presence of a ""_requestguid"" HTTP cookie are indicative of web shell activity."""",
     ""Explanation"": ""This event is generated when activity relating to a backdoor is detected.""
   }
 ][
   {
     ""sid"": ""50277"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an inbound web shell request to ""/temporary_listen_addresses/wsman"" with a ""_reguestguid"" cookie, which is a common method used by Chopper webshells to establish remote access to compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""50277"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised environment to facilitate further adversary activity. This rule detects an inbound request to a web shell named 'Chopper' using the '/temporary_listen_addresses/wsman' URI and the '_reguestguid' cookie, commonly associated with the exploitation of a web application vulnerability to gain a foothold in the target system."""",
         ""Explanation"": ""This event is generated when an attempt to create a web backdoor is detected.""
     ][
   {
     ""sid"": ""50277"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a webshell vulnerability in Microsoft's Internet Information Services (IIS) to gain remote code execution, which is a common method attackers use to gain control of web servers."",
     ""Explanation"": ""The rule matches an HTTP request made by the attacker to the webserver using the URI \""/temporary_listen_addresses/wsman\"" and a specific cookie with the name \""_reguestguid\"". These patterns are unique to this type of attack.""
   },
   {
     ""sid"": ""50277"",
     ""Technique ID"": ""T1543"",
     ""Technique Name"": ""Exploit Web Application"",
     ""Quotes"": ""\""Exploit Web Application techniques involve targeting vulnerabilities in web applications to execute arbitrary code or gain unauthorized access. This rule detects an attempt to exploit a vulnerability in the PHP programming language, which is commonly used in web applications, to execute arbitrary code."",
     ""Explanation"": ""The use of PHP language constructs in the request indicates the use of a PHP-based attack.""
   }
 ][
   {
     ""sid"": ""50277"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on an unspecified page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This rule matches the exploitation of a vulnerability in a public-facing web application in order to achieve an unauthorized objective.""
   }
 ]","['T1105', 'T1189', 'T1190', 'T1133', 'T1190', 'T1105', 'T1190', 'T1190', 'T1138', 'T1105', 'T1190', 'T1105', 'T1190', 'T1543', 'T1190']",['T1071']
59948,"[
     ""sid"": ""59948"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""OGNL expression injections exploit vulnerabilities in Java-based applications such as Atlassian Confluence by allowing attackers to execute arbitrary code.""
 ][
   {
     ""sid"": ""59948"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule specifically detects attempts to exploit an OGNL expression injection vulnerability in Atlassian Confluence, which could allow an attacker to execute arbitrary Java code on a vulnerable server."""",
     ""Explanation"": ""The rule matches URI paths with OGNL expression, the attacker could use the OGNL expression to achieve remote code execution.""
   }
 ][
         ""sid"": ""59948"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""This event is generated when an exploit attempt against a web application is detected.""
     ][
         ""sid"": ""59948"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""Atlassian Confluence OGNL expression injection attempt""
     ][
         ""sid"": ""59948"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted OGNL expression injection attack on Atlassian Confluence, which is a common technique used by attackers to exploit web applications by manipulating OGNL expressions."""",
         ""Explanation"": ""This rule is designed to identify and block attempts to exploit vulnerabilities in Atlassian Confluence through OGNL expression injection.""
     ][
   {
     ""sid"": ""59948"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."",
     ""Explanation"": ""The rule triggers on attempts to exploit an OGNL expression injection vulnerability in Atlassian Confluence. This vulnerability allows unauthenticated attackers to execute arbitrary OGNL expressions, leading to remote code execution.""
   }
 ][
   {
     ""sid"": ""59948"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""The rule triggers when an HTTP request containing an OGNL expression is detected, which is a technique commonly used to exploit vulnerabilities in Java-based web applications such as Atlassian Confluence.""
   }
 ][
         	""sid"": ""59948"",
         	""Technique ID"": ""T1190"",
         	""Technique name"": ""Exploit Public-Facing Application"",
         	""Quotes"": """"Exploit Public-Facing Application involves targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted OGNL injection attack on Atlassian Confluence, which is a common method used by attackers to exploit Java-based web applications by manipulating OGNL expressions."""",
            	""Explanation"": ""the rule uses a PCRE to detect a specific type of Java-based web application attack known as an OGNL injection attack, which is commonly used to exploit Atlassian Confluence.""
         ][
         ""sid"": ""59948"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit an OGNL injection vulnerability in Atlassian Confluence, which is a common method attackers use to execute arbitrary code on vulnerable web applications by manipulating OGNL expressions."""",
         ""Explanation"": ""The rule is looking for OGNL injection attack attempts in HTTP traffic, which is a technique that can be used to exploit vulnerabilities in web applications that use OGNL as an expression language.""
     ][
         ""sid"": ""59948"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
         ""Explanation"": ""The rule triggers on attacks that attempt to exploit an OGNL injection vulnerability in Atlassian Confluence.""
     ][
     ""sid"": ""59948"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the Atlassian Confluence Server and Data Center versions 6.3.0 to 7.4.3, 7.13.0 to 7.13.6, and 7.14.0 allows remote attackers to execute arbitrary server-side code via crafted requests.""
 ]","['T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190']",['T1190']
30512,"[
         ""sid"": ""30512"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Reconnaissance"",
         ""Quotes"": """"Network Reconnaissance techniques involve gathering information about a network or system to identify vulnerabilities or weaknesses. This rule detects an attempt to exploit a vulnerability in OpenSSL's TLS heartbeat extension (CVE-2014-0160), which could allow an attacker to read arbitrary memory on the target system."""",
         ""Explanation"": ""The rule looks for the signature of a heartbeat read overrun attempt in the TLS handshake.""
     ][
         ""sid"": ""30512"",
         ""Technique ID"": ""T1432"",
         ""Technique name"": ""Port Scan"",
         ""Quotes"": """"Port Scan techniques involve the systematic scanning of IP addresses and ports to identify active systems and discover listening services. The rule monitors for TLSv1.1 heartbeat read overrun attempts on various ports (21, 25, 443, 465, 636, 992, 993, 995, 2484), indicating the presence of attackers conducting port scans to find vulnerable systems."""",
         ""Explanation"": ""This event is generated when activity relating to a port scan is detected.""
     ][
   {
     ""sid"": ""30512"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques involve exploiting vulnerabilities in remote services to gain unauthorized access to internal systems. This rule detects an attempted TLS heartbeat read overrun attack against OpenSSL-based services that are commonly exposed on the Internet, such as mail servers (port 25), web servers (port 443), and SMTP servers (port 25)."""",
     ""Explanation"": ""This rule detects an attempted TLS heartbeat read overrun attack against OpenSSL-based services that are commonly exposed on the Internet, such as mail servers (port 25), web servers (port 443), and SMTP servers (port 25).""
   }
 ][
     {
         ""sid"": ""30512"",
         ""Technique ID"": ""T1194"",
         ""Technique name"": ""Exploit Insecure Deserialization"",
         ""Quotes"": """"Exploit Insecure Deserialization techniques involve exploiting vulnerabilities in deserialization functionality to execute arbitrary code. This rule detects an attempt to exploit a known vulnerability in OpenSSL's TLSv1.1 heartbeat implementation, which can lead to remote code execution."""",
         ""Explanation"": ""The rule triggers when OpenSSL TLSv1.1 heartbeat buffer overrun exploit attempt is detected. This can lead to remote code execution and successful exploitation.""
     }
 ][
   {
     ""sid"": ""30512"",
     ""Technique ID"": ""T1431"",
     ""Technique Name"": ""Heartbleed"",
     ""Quotes"": """"Heartbleed is a vulnerability in the OpenSSL cryptographic library that allows attackers to read arbitrary memory from an affected system. The vulnerability is caused by a boundary error in the TLS heartbeat extension, which allows an attacker to send a specially crafted heartbeat request that will cause the server to return a portion of its memory."""",
     ""Explanation"": ""This rule detects an attempt to exploit the Heartbleed vulnerability in the OpenSSL cryptographic library. The rule looks for a specially crafted heartbeat request that is characteristic of the Heartbleed exploit. If such a request is detected, the rule will generate an alert.""
   }
 ][
     {
         ""sid"": ""30512"",
         ""Technique ID"": ""T1218"",
         ""Technique name"": ""OS Command Discovery"",
         ""Quotes"": """"OS Command Discovery techniques involve identifying operating system commands available within the target environment to execute arbitrary code. This rule detects an attempt to exploit a vulnerability in OpenSSL's TLSv1.1 heartbeat implementation, which could allow an adversary to execute arbitrary commands on the affected system."""",
         ""Explanation"": ""This rule is used to detect and block Denial of Service attacks against TLS servers that may be caused by an OpenSSL heartbeat read overrun vulnerability.""
     }
 ][
         ""sid"": ""30512"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a possible attempt to exploit a remote code execution vulnerability in OpenSSL's TLS heartbeat implementation, which attackers can use to gain unauthorized access to the target system."""",
         ""Explanation"": ""This event is generated when an attempt is made to exploit a vulnerability in OpenSSL's TLS heartbeat implementation.""
     ][
         ""sid"": ""30512"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted OpenSSL TLSv1.1 heartbeat read overrun vulnerability, a known exploit that can lead to server compromise."""",
         ""Explanation"": ""This rule is designed to detect and block attempts to exploit the OpenSSL TLSv1.1 heartbeat read overrun vulnerability, which can be used by attackers to read arbitrary memory contents and potentially execute code remotely.""
     ][
   {
     ""sid"": ""30512"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""OpenSSL TLSv1.1 heartbeat read overrun attempt""
   },
   {
     ""sid"": ""30512"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve monitoring and intercepting network traffic for reconnaissance, to obtain sensitive information, or to identify vulnerabilities in a network. This rule detects an attempted SSL/TLS heartbeat read overrun attack, which is a common reconnaissance technique used by attackers to identify potential vulnerabilities in TLS-enabled services."""",
     ""Explanation"": ""This event is generated when an application performs malicious actions relating to network traffic between two hosts.""
   }
 ][
         ""sid"": ""30512"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Discovery"",
         ""Quotes"": """"Network Service Discovery techniques involve attempts to determine services running on hosts or network infrastructure devices. The rule detects an attempt to exploit a vulnerability in OpenSSL's handling of TLSv1.1 heartbeat packets, which can be used to retrieve information about services running on a target system."""",
         ""Explanation"": ""This rule generates an alert when an attempt is made to exploit a vulnerability in OpenSSL's handling of TLSv1.1 heartbeat packets.""
     ][
     {
         ""sid"": ""30512"",
         ""Technique ID"": ""T1428"",
         ""Technique Name"": ""Port Scan"",
         ""Quotes"": """"Port scans consist of the systematic probing of a target IP address range for open ports. This rule detects attempts to exploit a vulnerability in OpenSSL that allows an attacker to perform a TLSv1.1 heartbeat read overrun attack, which can be used for remote code execution. Such attacks often involve scanning for open ports to identify potential targets."""",
         ""Explanation"": ""This rule is designed to detect port scan activity targeting specific ports (21, 25, 443, 465, 636, 992, 993, 995, 2484) commonly associated with various services such as FTP, SMTP, HTTPS, SMTPS, LDAP, Telnet, POP3, and IMAPS. Attackers often conduct port scans to identify potential vulnerabilities and gain unauthorized access to systems.""
     }
 ]","['T1046', 'T1432', 'T1210', 'T1194', 'T1431', 'T1218', 'T1190', 'T1190', 'T1190', 'T1210', 'T1046', 'T1428']",['T1123']
59092,"[
   {
     ""sid"": ""59092"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve compromising a system by tricking a user into unknowingly downloading and executing malicious content from the Internet. This rule detects an attempt to download a PHP webshell, which is a common method attackers use to compromise systems through drive-by attacks."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""59092"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to download a PHP webshell, which is a common method attackers use to exploit web applications."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""59092"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities within a web browser or vulnerable browser plug-ins to execute malicious code on a user's system. The rule detects an attempt to download a malicious PHP web shell, which can be used by attackers to gain remote access and control of a compromised system through a web browser, a method commonly used in drive-by compromise attacks."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""59092"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve abusing functionality provided by cloud services or other external service providers to execute malicious behavior. This rule triggers when a malicious PHP web shell is downloaded, which could be used by an adversary to gain remote access to the system."""",
     ""Explanation"": ""This rule detects a download attempt of a PHP web shell, which can be used by an attacker to gain remote access to the system and execute malicious commands.""
   },
   {
     ""sid"": ""28472"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Exploitation for Privilege Escalation"",
     ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting a vulnerability to gain elevated privileges on a system. This rule detects exploitation attempts against a vulnerable Java RMI registry, which could allow an attacker to execute arbitrary code with elevated privileges."""",
     ""Explanation"": ""The rule identifies exploitation attempts against a Java RMI registry, which can be used by attackers to elevate privileges and gain control over the system.""
   },
   {
     ""sid"": ""23934"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""The rule detects a SQL injection vulnerability in the management console of Symantec Web Gateway, which could be exploited by an attacker to gain unauthorized access to the system.""
   },
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule indicates the presence of a Trojan (GateKeylogger) that mimics a '404 Not Found' error to disguise its communication with a command and control server, which is a common method used by keyloggers to stealthily capture input data."""",
     ""Explanation"": ""The rule detects activity related to a Trojan, which could be used to capture user input data such as keystrokes and send it to a remote server.""
   }
 ][
     ""sid"": ""59092"",
     ""Technique ID"": ""1041"",
     ""Technique name"": ""Create Account"",
     ""Quotes"": """"Adversaries may create local accounts or modify existing accounts to provide persistent access to a system so they can continue access at a later time or as a fall-back option in case other methods of access become unavailable."""",
     ""Explanation"": ""The rule identifies an attempt to download a malicious PHP script that could be used to compromise the system and create a user account for persistence.""
 ][
   {
     ""sid"": ""59092"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Data Compressed"",
     ""Quotes"": """"Data Compression involves compressing data to conceal or evade detection. The rule triggers on an attempt to download a malicious PHP webshell hidden within compressed data. Attackers may employ data compression techniques to pack malicious payloads into a smaller size, making them harder to detect by security tools."""",
     ""Explanation"": ""Web shells give attackers a remote shell interface to a compromised system. Attackers can use this interface to execute commands, modify files, and perform other malicious activities on the compromised system.""
   },
   {
     ""sid"": ""59092"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve the transfer of tools or capabilities from an external system into a target environment for the purpose of execution. The rule detects an attempt to download a PHP webshell, which is a type of web-based backdoor that allows remote access to a compromised system. Attackers commonly use webshells for further exploitation and maintaining access to compromised systems."""",
     ""Explanation"": ""Web shells give attackers a remote shell interface to a compromised system. Attackers can use this interface to execute commands, modify files, and perform other malicious activities on the compromised system.""
   },
   {
     ""sid"": ""59092"",
     ""Technique ID"": ""T1124"",
     ""Technique Name"": ""System Time Discovery"",
     ""Quotes"": """"System Time Discovery techniques involve retrieving the system time and/or time zone from a local or remote system. The rule triggers on an attempt to download a PHP webshell, which may include functionality to retrieve system time information. Attackers can leverage this information to coordinate attacks or exfiltrate data at specific times."""",
     ""Explanation"": ""Web shells give attackers a remote shell interface to a compromised system. Attackers can use this interface to execute commands, modify files, and perform other malicious activities on the compromised system.""
   },
   {
     ""sid"": ""59092"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking a user into executing malicious code or commands. The rule detects an attempt to download a PHP webshell, which typically requires user interaction to execute. Attackers often entice users to download and execute webshells through phishing or social engineering tactics."""",
     ""Explanation"": ""Web shells give attackers a remote shell interface to a compromised system. Attackers can use this interface to execute commands, modify files, and perform other malicious activities on the compromised system.""
   }
 ][
         ""sid"": ""59092"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingest Data from External Source"",
         ""Quotes"": """"Ingest Data from External Source techniques involve obtaining data from external sources, such as web pages or documents, to gather information or execute malicious payloads. This rule detects a PHP webshell attempting to download a file from an external source, which is a common method attackers use to establish a persistent presence on a compromised system."""",
         ""Explanation"": ""This event is generated when an attempt to download a suspicious file is detected.""
     ][
         ""sid"": ""59092"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve installing a malicious script on a web server in order to execute commands on the server, allowing remote control and access to the underlying system. The rule identifies an attack attempting to download a PHP web shell to the target system, which is a common tactic used by attackers to gain remote access to compromised web servers."""",
         ""Explanation"": ""Web shell is a malicious script that allows an attacker to execute commands on a compromised web server.""
     ][
         ""sid"": ""59092"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve gathering information about files and/or directories on a system. The rule detects an attempt by a web shell to recursively delete files and directories ('deltree'), which could be used for a variety of purposes, including hiding malicious activities or destroying evidence."""",
         ""Explanation"": ""The rule signature looks for the PHP function 'deltree', which is used to recursively delete files and directories. This function is often used by web shells to clean up after themselves or to delete evidence of malicious activity.""
     ][
         ""sid"": ""59092"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or files from an external system into a compromised environment. This rule detects an attempt to download a PHP webshell, which is a common tool used by attackers to gain remote access to web servers, onto a target system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""59092"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": ""Command and Scripting Interpreter techniques involve executing commands and scripts through direct invocation on a system, typically using command-line interpreters or scripting environments."",
     ""Explanation"": ""This rule is triggered when PHP code is detected, which can be used to execute malicious commands or scripts on the system.""
   },
   {
     ""sid"": ""59092"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Create Symbolic Link"",
     ""Quotes"": ""Create Symbolic Link techniques involve creating symbolic links to files or directories as a way to access data indirectly or manipulate file and directory structures."",
     ""Explanation"": ""The rule looks for PHP code that includes the deltree function, which can be used to delete files and directories. Attackers could use this technique to delete critical system files or data.""
   }
 ][
     ""sid"": ""59092"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Web Service"",
     ""Quotes"": """"Exploit Public-Facing Web Service techniques involve targeting vulnerabilities in externally facing web services to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a PHP web shell vulnerability, which allows attackers to upload and execute arbitrary PHP code on the target system."""",
     ""Explanation"": ""PHP web shells are often used by attackers to maintain persistent access to compromised systems and execute malicious commands.""
 ]","['T1189', 'T1190', 'T1189', 'T1133', 'T1068', 'T1190', 'T1056', 'T1068', 'T1105', 'T1124', 'T1204', 'T1105', 'T1105', 'T1189', 'T1105', 'T1105', 'T1203', 'T1189']",['T1505']
39734,"[
     {
         ""sid"": ""39734"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools onto a victim's network to support follow-on objectives. The rule detects an outbound connection from a compromised host to an external server to retrieve a malicious plugin ('plugin.xtr') likely used for further malicious activities."""",
         ""Explanation"": ""The rule detects an outbound connection from a compromised host to an external server to retrieve a malicious plugin ('plugin.xtr') likely used for further malicious activities.""
     }
 ][
     ""sid"": ""39734"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve exfiltrating data over a different protocol than that of the existing command and control channel to evade detection. This rule detects outbound connections from an infected host to a remote server over port 80, indicating that the malware is attempting to exfiltrate data using the HTTP protocol."""",
     ""Explanation"": ""The rule is configured to detect outbound connections from an infected host to a remote server over HTTP port 80. This behavior is consistent with exfiltration of data over an alternative protocol, as the malware is using HTTP instead of its primary command and control channel to communicate with the remote server.""
 ][
   {
     ""sid"": ""39734"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. The rule detects outbound connections to a specific URI (/plugin.xtr) associated with the Win.Trojan.Xtrat malware, suggesting that the malware is attempting to establish communication with a remote server for malicious purposes."""",
     ""Explanation"": ""Remote server for malicious purposes.""
   }
 ][
   {
     ""sid"": ""39734"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to hinder analysis and detection. This rule indicates the detection of outbound traffic that includes a string associated with the Win.Trojan.Xtrat malware family, which is known for encrypting data to evade detection and analysis. The malware often uses the ""/plugin.xtr"" URI for communication."",
     ""Explanation"": ""This event is generated when outbound traffic associated with the Win.Trojan.Xtrat malware family is detected.""
   },
   {
     ""sid"": ""39734"",
     ""Technique ID"": ""T1049"",
     ""Technique name"": ""Malicious File Execution"",
     ""Quotes"": """"Malicious File Execution techniques involve executing malicious files. This rule detects an outbound connection associated with the Win.Trojan.Xtrat malware family, which is typically spread through malicious files or attachments. The malware may attempt to execute malicious code on the compromised system to establish persistence, steal data, or cause damage."""",
     ""Explanation"": ""This event is generated when malicious file execution is detected.""
   }
 ][
     ""sid"": ""39734"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve enumerating remote systems to identify potential attack targets. This rule detects outbound connections to a specific URI (/plugin.xtr) associated with the Xtrat Trojan, which is known to perform reconnaissance activities and gather information about the target system, including hostnames, IP addresses, and open ports."""",
     ""Explanation"": ""This event is generated when outbound connection from a Trojan is detected.""
 ][
   {
     ""sid"": ""39734"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Establish Output Channel"",
     ""Quotes"": """"Establish Output Channel techniques involve establishing reliable channels of communication between the victim system and the adversary's command and control infrastructure, often using HTTP or DNS over standard ports."",
     ""Explanation"": ""This rule detects outbound connections from an infected host to a malicious server, which is a common method used by malware to exfiltrate stolen data or receive instructions from a remote command and control server.""
   }
 ][
   {
     ""sid"": ""39734"",
     ""Technique ID"": ""T1487"",
     ""Technique name"": ""Network Share Discovery"",
     ""Quotes"": [
       """"Network Share Discovery techniques involve discovering and enumerating shared network resources, such as file shares and printers, to identify potential targets for exploitation."""",
       """"The rule detects outbound connections from the internal network to the external network on HTTP ports, specifically to the URI ""/plugin.xtr"". This URI is associated with the Xtrat Trojan, which typically uses network shares to spread and infect other systems on the network.""
     ],
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""39734"",
         ""Technique ID"": ""T1588"",
         ""Technique name"": ""Obtain Capabilities"",
         ""Quotes"": """"Obtain Capabilities techniques involve acquiring legitimate or illegitimate capabilities and resources, such as code, binaries, scripts, exploits, and accounts, to facilitate targeting."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected and the malware is attempting to establish an outbound connection.""
     ],
     [
         ""sid"": ""39734"",
         ""Technique ID"": ""T1566"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending emails or other messages that appear to come from a legitimate source to trick individuals into divulging sensitive information that can be used during targeting"""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected and the malware uses phishing as an attack vector.""
     ],
     [
         ""sid"": ""39734"",
         ""Technique ID"": ""T1653"",
         ""Technique name"": ""Power Settings"",
         ""Quotes"": """"Power Settings techniques involve impairing a system's ability to hibernate, reboot, or shut down in order to extend access to infected machines."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected and the malware attempts to impair the power settings of the system.""
     ]
 ][
   {
     ""sid"": ""39734"",
     ""Technique ID"": ""T1490"",
     ""Technique name"": ""Inhibit System Recovery"",
     ""Quotes"": ""\""Inhibit System Recovery techniques include disabling or deleting system recovery mechanisms, such as backups and restore points, so that an organization cannot restore systems to a non-compromised state."""""",
     ""Explanation"": ""This rule detects outbound connections made by a Trojan, which may attempt to disable or delete system recovery mechanisms to prevent the victim from restoring the system to a non-compromised state.""
   },
   {
     ""sid"": ""39734"",
     ""Technique ID"": ""T1564"",
     ""Technique name"": ""Hide Artifacts"",
     ""Quotes"": ""\""Hide Artifacts techniques are used by adversaries to conceal evidence of their presence or activities on a system or network."""""",
     ""Explanation"": ""This rule detects outbound connections made by a Trojan, which may attempt to hide artifacts or evidence of its presence on the system.""
   }
 ][
         ""sid"": ""39734"",
         ""Technique ID"": ""T1109"",
         ""Technique name"": ""Connection Proxy"",
         ""Quotes"": """"Connection Proxy techniques involve establishing a connection to a remote system and then using the connection to tunnel other communications, such as malicious traffic or data exfiltration. This rule detects attempts by the Xtrat Trojan to connect to a remote server using HTTP and includes the URI '/plugin.xtr', which is associated with the exfiltration of data."""",
         ""Explanation"": ""Xtrat Trojan is a malicious program that connects to a remote server to send stolen data, including login credentials.""
     ][
   {
     ""sid"": ""39734"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""Remote attackers can exploit a vulnerability in Symantec Web Gateway 5.0.x before 5.0.3.18 to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
   }
 ]","['T1105', 'T1048', 'T1133', 'T1140', 'T1049', 'T1021', 'T1105', 'T1487', 'T1588', 'T1566', 'T1653', 'T1490', 'T1564', 'T1109', 'T1190']",['T1176']
1142,"[
   {
     ""sid"": ""1142"",
     ""Technique ID"": ""T1492"",
     ""Technique name"": ""Web Server Discovery"",
     ""Quotes"": """"Web Server Discovery techniques involve gathering information about web servers to identify potential targets for exploitation or to gain awareness of the target environment. This rule detects attempted reconnaissance of a web server by looking for access to a specific URI ('/....'), which could be an indication of an attacker probing for vulnerabilities or sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to web servers is detected.""
   },
   {
     ""sid"": ""1142"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule can also detect exploitation attempts against web applications, as attackers may use reconnaissance information to identify and exploit specific vulnerabilities."""",
     ""Explanation"": ""This event is generated when activity relating to web servers is detected.""
   }
 ][
         ""sid"": ""1142"",
         ""Technique ID"": ""T1492"",
         ""Technique name"": ""Web Server Discovery"",
         ""Quotes"": """"Web Server Discovery techniques involve identifying web servers accessible from both internal and external networks, which can aid in lateral movement and reconnaissance efforts. This rule triggers when an attempt is made to access a specific path ('/....') on web servers, indicating a potential attempt by an adversary to gather information about the web server's configuration or deployed applications."""",
         ""Explanation"": ""This rule is designed to detect if someone is attempting to access the web application through an uncommon path ('/....').""
     ][
   {
     ""sid"": ""1142"",
     ""Technique ID"": ""T1590"",
     ""Technique name"": ""Gather Victim Network Information"",
     ""Quotes"": """"Gather Victim Network Information techniques are used to gather information about the victim's network, which can be used to identify potential targets and plan future attacks. This rule detects attempts to access specific resources or directories on web servers, which could be part of an attacker's reconnaissance phase to gather information about the network infrastructure and identify potential vulnerabilities."""",
     ""Explanation"": ""This event is generated when attempted web application reconnaissance is detected.""
   }
 ][
   {
     ""sid"": ""1142"",
     ""Technique ID"": ""T1492"",
     ""Technique name"": ""Web Application Fingerprinting"",
     ""Quotes"": """"Web Application Fingerprinting techniques involve identifying web applications or frameworks used on a system to gather information about the system's configuration and potential vulnerabilities. This rule detects attempts to access a specific URL path (""/...."") on HTTP servers, which could be an attempt to fingerprint the web application or framework in use."""",
     ""Explanation"": ""This event is generated when an attempt to access a specific URL path (\""/....\"") on HTTP servers is detected, which could be an indication of web application fingerprinting.""
   }
 ][
   {
     ""sid"": ""1142"",
     ""Technique ID"": ""T1490"",
     ""Technique Name"": ""Web Application Fingerprinting"",
     ""Quotes"": """"Web Application Fingerprinting techniques involve actively probing a web application or service to determine its specific characteristics or vulnerabilities. This rule detects attempts to access a specific URL path ('/....') on a web server, which could indicate an attacker attempting to fingerprint the web application to identify potential vulnerabilities or entry points."""",
     ""Explanation"": ""This event is generated when an attempt to access a specific URL path ('/....') on a web server is detected, which could indicate an attacker attempting to fingerprint the web application to identify potential vulnerabilities or entry points.""
   }
 ][
     {
     ""sid"": ""1142"",
     ""Technique ID"": ""T1142"",
     ""Technique Name"": ""Web Client Reconnaissance"",
     ""Quotes"": """"Web Client Reconnaissance involves gathering information from web servers to identify potential vulnerabilities or to gather information about the web server configuration. This rule detects an attempt to access a specific directory on the web server, which is a common tactic used by attackers to probe for vulnerabilities or to gather information about the server's configuration."""",
     ""Explanation"": ""This event is generated when a web client attempts to access a specific directory on the web server.""
     }
 ][
   {
     ""sid"": ""1142"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a possible attempt to exploit a vulnerability in a web application by accessing a specific URL path ('/....'). Attackers may use this technique to identify exploitable vulnerabilities and gain unauthorized access to the system."""",
     ""Explanation"": ""Attempting to access a specific URL path may indicate an attempt to exploit a known vulnerability in the web application.""
   }
 ][
   {
     ""sid"": ""1142"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted access to a specific path ('/....') on a web server, which could be an indication of an attacker attempting to exploit a known vulnerability in the web application."""",
     ""Explanation"": ""This rule detects an attempted access to a specific path ('/....') on a web server, which could be an indication of an attacker attempting to exploit a known vulnerability in the web application.""
   }
 ][
   {
     ""sid"": ""1142"",
     ""Technique ID"": ""T1484"",
     ""Technique Name"": ""Active Scanning"",
     ""Quotes"": ""\""Active Scanning techniques involve systematically probing a network to identify hosts, services, or vulnerabilities that can be exploited. Snort and other IDS/IPS systems often use active scanning techniques to detect and block malicious activity. This rule is triggered when a user attempts to access a specific web page (\""/....\""), which could be an indication of active scanning or reconnaissance activities."""",
     ""Explanation"": ""This rule is triggered when a user attempts to access a specific web page (\""/....\""), which could be an indication of active scanning or reconnaissance activities.""
   }
 ][
   {
     ""sid"": ""1142"",
     ""Technique ID"": ""T1492"",
     ""Technique name"": ""Port Scanning"",
     ""Quotes"": """"Port Scanning techniques involve systematically probing a network for open ports or services by sending packets to specific ports on target systems and analyzing the responses. This rule detects attempts to access a web application URL, which could be part of reconnaissance activities for vulnerability scanning or exploitation."""",
     ""Explanation"": ""This rule detects the access to a specific URL on a web server.""
   }
 ][
   {
     ""sid"": ""1142"",
     ""Technique ID"": ""T1040"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning includes techniques that involve discovery of network services and identifying the vulnerabilities that allow adversaries to gain access to systems. This rule detects attempts to access a specific URI path ('/....'), which could be part of a broader reconnaissance effort to identify potential vulnerabilities in the target web application."""",
     ""Explanation"": ""This rule detects access to a specific URI path, which could be part of a reconnaissance effort to identify potential vulnerabilities in the web application.""
   }
 ]","['T1492', 'T1190', 'T1492', 'T1590', 'T1492', 'T1490', 'T1142', 'T1190', 'T1190', 'T1484', 'T1492', 'T1040']",['T1074']
2056,"[
   {
     ""sid"": ""2056"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve systematically trying every possible combination of characters to guess a secret, such as a password or encryption key. This rule detects an attempt to brute-force HTTP TRACE requests, which can be used to bypass access controls and steal sensitive information."""",
     ""Explanation"": ""This event is generated when anomalous activity that matches the characteristics of a brute force attack is detected. Brute force attacks involve using automated tools or processes to repeatedly try different combinations of passwords or other authentication credentials in order to gain access to a system or application.""
   },
   {
     ""sid"": ""2056"",
     ""Technique ID"": ""T1185"",
     ""Technique Name"": ""Browser Session Hijacking"",
     ""Quotes"": """"Browser Session Hijacking techniques involve taking advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques. This rule detects an attempt to use HTTP TRACE requests to hijack a browser session or inject malicious code into a web application."""",
     ""Explanation"": ""The rule is used to detect attempts to exploit vulnerabilities in web browsers in order to hijack browser sessions or inject malicious code into web applications, which could allow an attacker to gain access to sensitive information or take control of a user's account.""
   }
 ][
   {
     ""sid"": ""2056"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve monitoring network traffic to collect sensitive data or identify vulnerabilities. This rule detects the use of the TRACE HTTP method, which is often used for debugging and can be abused to perform reconnaissance and gather information about the targeted web application, such as its structure, functionality, and potential vulnerabilities."""",
     ""Explanation"": ""The TRACE method is used to echo the request sent by the client, potentially leaking sensitive information.""
   }
 ][
         ""sid"": ""2056"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects malicious attempts leveraging the HTTP TRACE method, which is often used for information gathering and exploiting web application vulnerabilities. Attackers can use TRACE requests to bypass security controls and gain unauthorized access to sensitive data."""",
         ""Explanation"": ""This event is generated when malicious activity such as TRACE attempt is detected.""
     ][
     {
         ""sid"": ""2056"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Uncommonly Used Port"",
         ""Quotes"": """"Uncommonly Used Port techniques involve using ports that are not typically used by legitimate network services to evade detection or disruption attempts."""",
         ""Explanation"": ""This rule alerts on attempts to use the TRACE method, which is an uncommon HTTP method used for debugging purposes. Attackers may use this method to bypass security controls or perform reconnaissance.""
     },
     {
         ""sid"": ""2056"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
         ""Explanation"": ""The rule detects attempts to exploit a vulnerability in a web application via the TRACE method. Attackers may use this method to gain unauthorized access or execute arbitrary code on the web server.""
     }
 ][
         ""sid"": ""2056"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit an HTTP TRACE vulnerability by sending a 'TRACE' request, which is a type of HTTP request that can be used to retrieve information about the internal state of a web server."""",
         ""Explanation"": ""The rule will be triggered when there is an attempt to exploit an HTTP TRACE vulnerability on port 80.""
     ][
   {
     ""sid"": ""2056"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""HTTP TRACE requests can be used by attackers to obtain information about the internal structure and functionality of web applications, which can be used to exploit vulnerabilities.""
   }
 ][
   {
     ""sid"": ""1176"",
     ""Technique ID"": ""T1040"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve discovering and mapping the network to identify potential targets. This rule detects attempts to scan for open ports on the target system, which is a common reconnaissance technique used to identify vulnerabilities and gather information for further exploitation."""",
     ""Explanation"": ""This rule triggers when a port scan (scanning for open ports) is detected. Network Service Scanning is the technique that is used to scan and find the open ports on the system.""
   }
 ][
   {
     ""sid"": ""2056"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Web Service Attack"",
     ""Quotes"": """"Web Services Attack techniques involve exploiting vulnerabilities in web services to gain unauthorized access, modify data, or disrupt service. This rule detects an attempt to exploit a TRACE vulnerability in a web application, which can allow attackers to gain information about the server's configuration and behavior."""",
     ""Explanation"": ""This event is generated when an attack against a web service is detected.""
   }
 ][
   {
     ""sid"": ""2056"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning involves actively querying network services on a target system to identify specific vulnerabilities or gather information about the system's configuration. This rule detects a TRACE request, which is a type of HTTP method used for debugging purposes, being sent to a server from an external network. This technique can be used to identify potential vulnerabilities in web applications by testing the response of the server to different types of requests."""",
     ""Explanation"": ""The rule detects when an external IP address attempts to ""TRACE"" a web server on the internal network, which is an attempt to exploit a potential vulnerability or gather information about the web server.""
   }
 ][
         ""sid"": ""2056"",
         ""Technique ID"": ""T1124"",
         ""Technique name"": ""Trace or Debug Tool"",
         ""Quotes"": """"Trace or Debug Tool techniques involve abusing debugging and diagnostic tools to perform reconnaissance or gain additional access or visibility on a system. This rule detects a 'TRACE' request, which is a method used in the HTTP protocol to request that a server send back information about its processing of a request. Adversaries may abuse this functionality to gather additional information about a web server's configuration, identify vulnerabilities, or execute arbitrary commands."""",
         ""Explanation"": ""This event is generated when a TRACE request is detected.""
     ][
     ""sid"": ""2056"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""HTTP Request Smuggling"",
     ""Quotes"": """"HTTP Request Smuggling techniques involve manipulating HTTP requests to bypass security controls and gain unauthorized access to a web application or server. The rule detects an attempt to smuggle a TRACE request, which is not normally allowed by default, into a web application by exploiting the 'Transfer-Encoding: chunked' header. This technique is commonly used to bypass web application firewalls and access sensitive data or execute arbitrary commands."""",
     ""Explanation"": ""This event is generated when an attempt is made to smuggle a TRACE request into a web application. TRACE requests are normally not allowed by default, and can be used to bypass security controls and gain unauthorized access to data or execute arbitrary commands.""
 ]","['T1110', 'T1185', 'T1110', 'T1190', 'T1040', 'T1190', 'T1190', 'T1190', 'T1040', 'T1110', 'T1040', 'T1124', 'T1059']",['T1078']
24094,"[
     {
         ""sid"": ""24094"",
         ""Technique ID"": ""T1482"",
         ""Technique name"": ""Domain Generation"",
         ""Quotes"": """"Domain Generation techniques involve algorithmically generating domain names to host malicious content. Teamviewer is a legitimate remote desktop software, but in this context, the communication is suspicious because it is using an algorithm to generate domain names."""",
         ""Explanation"": ""Teamviewer is a legitimate remote desktop software, but in this context, the communication is suspicious because it is using an algorithm to generate domain names.""
     },
     {
         ""sid"": ""24094"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve using remote access and control tools to manage systems remotely. The use of Teamviewer, a legitimate remote access tool, in this context is suspicious because it is being used to control a system remotely."""",
         ""Explanation"": ""The use of Teamviewer, a legitimate remote access tool, in this context is suspicious because it is being used to control a system remotely.""
     }
 ][
         ""sid"": ""24094"",
         ""Technique ID"": ""T1480"",
         ""Technique name"": ""Execution Guardrails"",
         ""Quotes"": """"Execution Guardrails techniques involve constraining execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. This rule detects a Teamviewer control server ping, which attackers may use to gain remote access to a target system and establish a persistent connection. Restricting network access based on conditions such as only allowing authorized IP addresses or services can mitigate such execution attempts."""",
         ""Explanation"": ""DNS request to Teamviewer control server is detected.""
     ][
   {
     ""sid"": ""24094"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to establish initial access or persistence within a network. This rule detects TeamViewer control server pings coming from an internal network to an external endpoint, indicating a possible attempt to establish a remote connection or maintain persistence through external services."""",
     ""Explanation"": ""This rule is designed to detect malicious ping traffic targeting TeamViewer control server ports, possibly related to remote access misuse, lateral movement, or data exfiltration.""
   }
 ][
     {
         ""sid"": ""24094"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve the probing of a network for available hosts and services, typically to identify potential targets for further attack. This rule detects a Teamviewer control server ping request, which could be used for reconnaissance and identification of systems running Teamviewer, potentially leading to further exploitation attempts."""",
         ""Explanation"": ""This event is generated when a user attempts to connect to a Teamviewer control server.""
     }
 ][
   {
     ""sid"": ""24094"",
     ""Technique ID"": ""T1098"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve using legitimate remote services, such as Remote Desktop Protocol (RDP), Virtual Network Computing (VNC), or TeamViewer, to remotely access or control a system."""",
     ""Explanation"": ""This rule detects the use of TeamViewer, a legitimate remote access tool, which can be used by adversaries to remotely access and control a compromised system.""
   }
 ][
   {
     ""sid"": ""24094"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques are used to identify and enumerate systems or services on a network. This rule detects communication with a TeamViewer control server, which is commonly used for remote access and control of systems, indicating an attempt by an adversary to identify and potentially establish a connection to systems within the network."""",
     ""Explanation"": ""This event is generated when a policy violation is detected.""
   }
 ][
         ""sid"": ""24094"",
         ""Technique ID"": ""T1043"",
         ""Technique Name"": ""Internal Remote Services"",
         ""Quotes"": """"Internal Remote Services techniques involve maintaining access to and communicating with internal systems through backdoors or other means, bypassing perimeter defenses. This rule detects TeamViewer control server ping attempts originating from an internal network to an external server, which could indicate that an unauthorized connection has been established to provide remote access to internal systems."""",
         ""Explanation"": ""This rule matches Teamviewer control server ping detection""
     ][
   {
     ""sid"": ""24094"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted TeamViewer control server ping, which can be used by attackers to gather information about TeamViewer installations and potentially exploit vulnerabilities to gain unauthorized access to the targeted systems."""",
     ""Explanation"": ""This event is generated when activity relating to Teamviewer control server ping is detected.""
   }
 ][
     ""sid"": ""24094"",
     ""Technique ID"": ""T1043"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using command shells to execute commands or scripts. This technique is commonly used by adversaries to execute malicious payloads or control systems remotely. The rule detects Teamviewer communications, which could be used by an attacker to remotely control a system and execute commands."""",
     ""Explanation"": ""This event is generated when connection attempt to Teamviewer control server is detected.""
 ][
   {
     ""sid"": ""24094"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve accessing a service hosted on an external, typically third party, system. This rule detects a ping request to a Teamviewer control server from an internal host, which could be an indication of an attacker attempting to establish a remote connection to a compromised system within the network."""",
     ""Explanation"": ""This rule is triggered when an unidentified application is attempting to connect to port 53 of the remote host.""
   }
 ][
   {
     ""sid"": ""24094"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve communication between an attacker-controlled system and other systems to provide the attacker remote control over the target system."""",
     ""Explanation"": ""This rule detects communication with TeamViewer, which is a legitimate remote control tool. However, it can also be abused by attackers to establish a command and control channel to remotely control compromised systems.""
   },
   {
     ""sid"": ""24094"",
     ""Technique ID"": ""T1043"",
     ""Technique Name"": ""Lateral Movement"",
     ""Quotes"": """"Lateral Movement techniques involve moving laterally within an environment to access and control additional systems."""",
     ""Explanation"": ""TeamViewer can be used by attackers to move laterally within a network by establishing remote control sessions with other hosts, allowing them to execute commands and access sensitive data.""
   }
 ]","['T1482', 'T1133', 'T1480', 'T1133', 'T1046', 'T1098', 'T1071', 'T1043', 'T1190', 'T1043', 'T1105', 'T1059', 'T1043']",['T1219']
1603,"[
   {
     ""sid"": ""1603"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted HTTP DELETE request, which could be used to manipulate or delete data on a web server, indicating a potential attempt to exploit a vulnerability in the web application."""",
     ""Explanation"": ""This rule detects an HTTP DELETE request, which could be used to manipulate or delete data on a web server""
   },
   {
     ""sid"": ""1603"",
     ""Technique ID"": ""T1498"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve creating and using a web shell to execute commands and interact with a compromised system. This rule detects an attempted HTTP DELETE request, which could be used to upload a web shell to a vulnerable web server, enabling remote access and control of the system."""",
     ""Explanation"": ""This rule detects an HTTP DELETE request, which could be used to upload a web shell to a vulnerable web server""
   }
 ][
   {
     ""sid"": ""1603"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted HTTP DELETE operation against a web server, which could indicate an attempt to exploit a web application vulnerability to modify or delete data."""",
     ""Explanation"": ""This event is triggered when there is a HTTP DELETE attempt made by an external host targeting a web server, which can be an indication of an attacker attempting to manipulate or compromise the web application by exploiting a vulnerability.""
   },
   {
     ""sid"": ""1603"",
     ""Technique ID"": ""T1499"",
     ""Technique Name"": ""Endpoint Denial of Service"",
     ""Quotes"": """"Endpoint Denial of Service (DoS) attacks are used to disrupt service by exhausting resources on the target system. This rule detects an attempt to flood a web server with HTTP DELETE requests, which could lead to denial of service by overwhelming the server's resources."""",
     ""Explanation"": ""This event is triggered when there is a high volume of HTTP DELETE requests being sent to a web server, which can be indicative of a DoS attack attempting to exhaust the server's resources and disrupt its normal functionality.""
   },
   {
     ""sid"": ""1603"",
     ""Technique ID"": ""T1497"",
     ""Technique Name"": ""File and Directory Deletion"",
     ""Quotes"": """"File and Directory Deletion techniques involve deleting files or directories to disrupt system operation. This rule detects an attempted HTTP DELETE operation against a web server, which could indicate an attempt to delete sensitive files or data, potentially leading to data loss or system disruption."""",
     ""Explanation"": ""This event is triggered when there is an HTTP DELETE request targeting specific files or directories on a web server, which can be a sign of an attack attempting to delete legitimate files to damage the system or steal sensitive data.""
   }
 ][
   {
     ""sid"": ""1603"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted deletion of a web application's files or data via the HTTP DELETE method, which can be part of an attack to manipulate or destroy sensitive information."""",
     ""Explanation"": ""This rule detects a potential attempt to exploit a public-facing application by sending a DELETE request, which could lead to unauthorized deletion or manipulation of data.""
   }
 ][
     ""sid"": ""1603"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a 'DELETE' vulnerability in a web application, which could allow an attacker to delete sensitive data or gain unauthorized access to the system."""",
     ""Explanation"": ""HTTP DELETE requests can be used by attackers to delete files, directories, or data on the server.""
 ][
     ""sid"": ""1603"",
     ""Technique ID"": ""T1494"",
     ""Technique name"": ""File Deletion"",
     ""Quotes"": """"File Deletion techniques involve deleting files to disable or destroy a system. The rule triggers when a DELETE request is sent to a web server, indicating an attempt to delete a file on the server's file system, which could be part of a data destruction or system sabotage attack."""",
     ""Explanation"": ""This rule detects a DELETE request to a web server""
 ][
         ""sid"": ""1603"",
         ""Technique ID"": ""T1491"",
         ""Technique name"": ""Defacement"",
         ""Quotes"": """"Defacement techniques involve altering content provided by a web server to display a different message or image on the victim's system. This rule matches attempts where a remote client sends a 'DELETE' request to a web server, which could be an attempt to modify or delete website content."""",
         ""Explanation"": ""The rule refers to modification of a website or defacement.""
     ][
   {
     ""sid"": ""1603"",
     ""Technique ID"": ""T1490"",
     ""Technique Name"": ""Web Services"", 
     ""Quotes"": """"Web Services techniques involve using web services to facilitate data transfer and communication across distributed systems and applications. This rule detects attempts to exploit a vulnerability in web services by sending a 'DELETE' request, which is a common method used by attackers to delete data or manipulate resources on a web server."""",
     ""Explanation"": ""This event is triggered when the signature is matched.""
   }
 ][
         ""sid"": ""1603"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted DELETE request, which could be part of an attack to exploit a vulnerability in a web application."""",
         ""Explanation"": ""DELETE request attempts to modify or delete data on the server.""
     ][
         ""sid"": ""1603"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted DELETE request on a web server, which could be part of an attack to exploit a vulnerability in the web application or to delete sensitive data."""",
         ""Explanation"": ""This event is generated when activity relating to a web application's activity is detected.""
     ][
   {
     ""sid"": ""1603"",
     ""Technique ID"": ""T1556"",
     ""Technique Name"": ""Modify Authentication Process"",
     ""Quotes"": ""\""Modify Authentication Process techniques involve modifying authentication mechanisms and processes to bypass or manipulate authentication controls and gain unauthorized access to accounts or resources.\"""",
     ""Explanation"": ""This rule detects an attempt to bypass authentication controls by using the DELETE method to delete sensitive information on the server.""
   },
   {
     ""sid"": ""1603"",
     ""Technique ID"": ""T1578"",
     ""Technique Name"": ""Modify Cloud Compute Infrastructure"",
     ""Quotes"": ""\""Modify Cloud Compute Infrastructure techniques involve modifying the infrastructure of cloud compute resources, such as virtual machines or virtual networks, to gain unauthorized access or privileges.\"""",
     ""Explanation"": ""This rule detects an attempt to modify the configuration of a cloud compute instance using the DELETE method.""
   }
 ][
   {
     ""sid"": ""1603"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted HTTP DELETE request, which could be used to modify or delete data on the target web server. Attackers may use this technique to exploit vulnerabilities in web applications, such as SQL injection or cross-site scripting, to gain unauthorized access or perform malicious actions."""",
     ""Explanation"": ""This rule looks for a pattern that indicates someone is trying to access a web page with 'DELETE' method. 'DETETE' method is commonly used for deleting data on a web server. It could be used by an attacker to try and delete important data from the server.""
   }
 ]","['T1190', 'T1498', 'T1190', 'T1499', 'T1497', 'T1190', 'T1190', 'T1494', 'T1491', 'T1490', 'T1190', 'T1190', 'T1556', 'T1578', 'T1190']",['T1592']
56600,"[
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": ""\""Brute Force techniques involve using automated or manual methods to guess passwords or encryption keys by systematically trying a large number of possible combinations.\"" This rule detects a brute force attack targeting a web application by trying different '/check,' '/v1/stats,' '/gql,' '/1.5/95648064,' '/u/0/\\_/og/botguard/get,' or '/ev/\\w{3}001001' paths, which could be an attempt to identify vulnerable endpoints for further exploitation."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code.\"" This rule detects a brute force attack targeting a web application by trying different '/check,' '/v1/stats,' '/gql,' '/1.5/95648064,' '/u/0/\\_/og/botguard/get,' or '/ev/\\w{3}001001' paths, which could be an attempt to identify vulnerable endpoints for further exploitation."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve exfiltrating data through non-standard ports and protocols to bypass detection. This rule detects an outbound connection from a compromised host to a C2 server that uses the HTTP protocol over port 80, which is a common method used by malware to exfiltrate sensitive data from infected systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an outbound connection attempt from a compromised host to a known command and control (C2) server associated with the Win.Backdoor.CSBundle_Original malware. Attackers often use compromised web applications as C2 servers to control infected hosts remotely."""",
     ""Explanation"": ""This rule detects outbound connections from compromised hosts to known malicious domains and IP addresses.""
   }
 ][
 {
         ""sid"": ""56600"",
         ""Technique ID"": ""T1041"",
         ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel involves sending collected data back to an attacker-controlled system over an established command and control channel. This rule detects exfiltration attempts by the Win.Backdoor.CSBundle_Original malware, which typically communicates with a command and control server using HTTP POST requests and sends sensitive data such as usernames, passwords, and system information."""",
         ""Explanation"": ""Outbound communication with external IP.""
     }
 ][
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1102"",
     ""Technique Name"": ""Web Service"",
     ""Quotes"": """"Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system."",
     ""Explanation"": ""This rule detects an outbound connection to a web service known to be used by malware for command and control (C&C) communication. The rule identifies specific URI patterns and HTTP header information associated with the malware's C&C communication.""
   },
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": """"Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion."""",
     ""Explanation"": ""The rule indicates the malware uses hardcoded credentials ('ses-') in its communication with the C&C server, indicating the potential abuse of valid accounts.""
   }
 ][
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve the exfiltration of data or information over a command and control channel to the adversary. This rule detects an outbound connection to a known malicious IP address by a process that is associated with the Win.Backdoor.CSBundle_Original malware, which is commonly used to exfiltrate stolen data."""",
     ""Explanation"": ""This rule can be used to detect a worm that is exploiting a vulnerability in the Microsoft Server Service.""
   },
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1033"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve the extraction and transmission of data from a network or system to an external location. This rule detects an attempt by the Win.Backdoor.CSBundle_Original malware to exfiltrate data over an HTTP POST request to a known malicious IP address."""",
     ""Explanation"": ""This rule matches the server_to_client.exe process of the Server-to-Client RCE malware, which is part of Backdoor.Oldrea family, and attempts to exploit a vulnerability in the Microsoft Server Service.""
   }
 ][
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1134"",
     ""Technique name"": ""Access Token Manipulation"",
     ""Quotes"": """"Access Token Manipulation techniques involve modifying access tokens to operate under a different user or system security context to perform actions and bypass access controls. The rule detects an outbound connection attempt by malware (Win.Backdoor.CSBundle_Original) that sends sensitive data in the form of a JSON web token (JWT) to a remote server. JWTs are used to authenticate users and authorize them to access specific resources, so the attacker may be attempting to manipulate or forge a JWT to gain unauthorized access to the victim's system or network."""",
     ""Explanation"": ""The rule is triggered when the malware attempts to send a JWT to a remote server, indicating that the malware is trying to manipulate or forge the JWT to gain unauthorized access to the victim's system or network.""
   },
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1557"",
     ""Technique name"": ""Adversary-in-the-Middle"",
     ""Quotes"": """"Adversary-in-the-Middle techniques involve positioning an adversary between two or more networked devices using an adversary-in-the middle (AiTM) technique to support follow-on behaviors such as Network Sniffing, Transmitted Data Manipulation, or replay attacks (Exploitation for Credential Access). The rule detects an outbound connection attempt by malware (Win.Backdoor.CSBundle_Original) that sends sensitive data in the form of a JSON web token (JWT) to a remote server. The attacker may be attempting to use an AiTM technique to intercept and manipulate the JWT as it is transmitted between the victim's system and the remote server."""",
     ""Explanation"": ""The rule is triggered when the malware attempts to send a JWT to a remote server, indicating that the malware is trying to use an AiTM technique to intercept and manipulate the JWT as it is transmitted between the victim's system and the remote server.""
   },
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Application Layer Protocol"",
     ""Quotes"": """"Application Layer Protocol techniques involve communicating using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. The rule detects an outbound connection attempt by malware (Win.Backdoor.CSBundle_Original) that uses the HTTP protocol to communicate with a remote server. The attacker may be attempting to use the HTTP protocol to blend in with legitimate web traffic and evade detection by security controls."""",
     ""Explanation"": ""The rule is triggered when the malware attempts to use the HTTP protocol to communicate with a remote server, indicating that the malware is trying to use the HTTP protocol to blend in with legitimate web traffic and evade detection by security controls.""
   }
 ][
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1563"",
     ""Technique Name"": ""Remote Service Session Hijacking"",
     ""Quotes"": """"Remote Service Session Hijacking techniques involve taking control of existing sessions with remote services, such as SSH or RDP, allowing adversaries to move laterally within the network. This rule targets outbound traffic from a compromised host to external IP addresses, indicating a potential attempt to establish a remote session hijacking connection to control remote systems."""",
     ""Explanation"": ""Win.Backdoor.CSBundle_Original is a Trojan that uses a custom protocol to communicate with its C2 server. The outbound connection attempt may be an attempt to establish a remote session hijacking connection.""
   },
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1012"",
     ""Technique Name"": ""Query Registry"",
     ""Quotes"": """"Query Registry techniques involve interacting with the Windows Registry to gather information about the system, configuration, and installed software. The rule's content inspection for specific registry keys (""ses-"") indicates that the malware may be attempting to access registry information as part of its persistence or reconnaissance activities."""",
     ""Explanation"": ""Win.Backdoor.CSBundle_Original is known to use the registry to store configuration information.""
   }
 ][
     ""sid"": ""56600"",
     ""Technique ID"": ""T1574"",
     ""Technique name"": ""Hijack Execution Flow"",
     ""Quotes"": """"Hijack Execution Flow techniques involve gaining control of legitimate processes or threads and modifying their behavior to execute malicious code. In this case, the rule detects an outbound connection attempt by a backdoor (Win.Backdoor.CSBundle_Original) that is known to use DLL injection to execute its code by modifying legitimate processes."""",
     ""Explanation"": ""The rule detects an outbound connection attempt by a backdoor (Win.Backdoor.CSBundle_Original) that is known to use DLL injection to execute its code by modifying legitimate processes.""
 ][
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an outbound connection attempt from a compromised host to a remote server, where the attacker is attempting to exploit a known vulnerability in a web application using a specific URI path. The attacker is likely attempting to gain unauthorized access to the application or execute malicious code on the server."""",
     ""Explanation"": ""Outbound connection attempt to a known malicious domain or IP address.""
   }
 ][
   {
     ""sid"": ""56600"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
   }
 ]","['T1110', 'T1190', 'T1048', 'T1190', 'T1041', 'T1102', 'T1078', 'T1041', 'T1033', 'T1134', 'T1557', 'T1071', 'T1563', 'T1012', 'T1574', 'T1190', 'T1190']",['T1043']
29790,"[
     {
         ""sid"": ""29790"",
         ""Technique ID"": ""T1176"",
         ""Technique Name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve luring victims to malicious websites or attachments that exploit vulnerabilities in web browsers or installed plugins to download and install malware without user interaction. This rule detects an attempted drive-by download of a malicious plugin ('af_l_addon.xpi') hosted on an external website, which is a common method used by attackers to compromise systems through vulnerable browsers."""",
         ""Explanation"": ""Web link of a Win.Trojan.Careto droppper plugin for Mozilla Firefox (MD5: d21b98394db5f37451c9113b5c2bca52. The plugin is stored somewhere on the external webserver""
     }
 ][
     ""sid"": ""29790"",
     ""Technique ID"": ""T1176"",
     ""Technique name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve creating a new process, altering an existing process, or otherwise interacting with system process or thread status. This rule identifies an attempt by the Careto trojan to download and install a malicious add-on (""af_l_addon.xpi"") into a web browser. The trojan typically uses methods like process injection or DLL hijacking to alter system processes and gain persistence on a victim machine."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
     ""sid"": ""29790"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted download of the 'af_l_addon.xpi' plugin, which is associated with the 'Win.Trojan.Careto' malware, suggesting that the attacker is attempting to exploit a vulnerability in a web application to install malicious software."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""29790"",
     ""Technique ID"": ""T1176"",
     ""Technique Name"": ""Remote File Copy"",
     ""Quotes"": """"Remote File Copy techniques involve copying files from a remote system to the local system. This rule detects a Trojan attempting to download a malicious plugin ('af_l_addon.xpi') from a remote server. Such plugins can be used to modify browser behavior and compromise sensitive data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""29790"",
     ""Technique ID"": ""T1176"",
     ""Technique Name"": ""Create or Modify System Resource"",
     ""Quotes"": """"Create or Modify System Resource techniques involve creating or modifying system resources, such as files, accounts, or registry keys, in order to establish persistence or gain access to the system. This rule detects an attempt by malware to download a plugin named 'af_l_addon.xpi' from an external server, which is a common method attackers use to install malicious plugins in order to gain persistence and remotely control the system."""",
     ""Explanation"": ""This rule identifies a request for a known malicious plugin, which is commonly used by malware to achieve persistence and control over the system.""
   }
 ][
   {
     ""sid"": ""29790"",
     ""Technique ID"": ""T1176"",
     ""Technique name"": ""Automated Exfiltration"",
     ""Quotes"": """"Automated Exfiltration techniques involve using tools or scripts to automatically transfer data from a compromised system to an external location. This rule detects an attempt by the Win.Trojan.Careto malware to download a malicious plug-in ('af_l_addon.xpi') from a remote server, which is a common method used by malware to establish a persistent connection and exfiltrate data."""",
     ""Explanation"": ""This event is generated when malware is detected attempting to connect to a command and control server.""
   }
 ][
   {
     ""sid"": ""29790"",
     ""Technique ID"": ""T1176"",
     ""Technique name"": ""Browser Extensions"",
     ""Quotes"": """"Browser Extensions techniques involve abusing Internet browser extensions to establish persistent access to victim systems. This rule detects a connection to a known Trojan (Careto) that downloads a malicious browser extension (.xpi) file, which indicates an attempt to install a browser extension malware."""",
     ""Explanation"": ""This rule matches if the payload contains a specific string. In this case, the string is likely associated with malware.""
   }
 ][
   {
     ""sid"": ""29790"",
     ""Technique ID"": ""T1176"",
     ""Technique name"": ""Endpoint Denial of Service"",
     ""Quotes"": """"Endpoint Denial of Service techniques involve disrupting endpoint availability or degrading service to prevent normal function. This rule detects activity related to the 'Careto' Trojan, which has been known to use Denial of Service (DoS) attacks to disrupt the availability of targeted systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""29790"",
         ""Technique ID"": ""T1176"",
         ""Technique name"": ""Create or Modify Registry Key"",
         ""Quotes"": """"Modify or create registry keys enables an adversary to affect how the system boots as well as how the system operates. This rule is triggered when malware attempts to download and install an XPI plugin from a malicious URL. Upon successful installation, the XPI plugin may create or modify registry keys to persist malware on the system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""29790"",
     ""Technique ID"": ""T1176"",
     ""Technique Name"": ""Load Remote Content"",
     ""Quotes"": """"Load Remote Content techniques involve loading external content into an application or process in a manner that allows an adversary to execute malicious code or gain unauthorized access to the system. This rule detects the download of a malicious file named ""af_l_addon.xpi"" from a remote location, which is a common method used by malware to infect a system by loading malicious content into the browser."""",
     ""Explanation"": ""This event is generated when malware is detected.""
   }
 ][
     ""sid"": ""29790"",
     ""Technique ID"": ""T1176"",
     ""Technique name"": ""Harvesting API Token"",
     ""Quotes"": """"Harvesting API Token techniques involve obtaining authorized access tokens for an application programming interface (API) that can be used to access an application or service. This rule detects an attempt to download a plugin for the 'Careto' Trojan, which could be used to gain access to the victim's system and harvest API tokens for other applications or services."""",
     ""Explanation"": """"
 ""Win.Trojan.Careto is a malware that steal saved passwords from popular browsers on infected hosts.""
 ""The malware also steals FTP and POP3 account credentials, instant messenger details, and API tokens from numerous online games.""
 ""It may come bundled with other malware, and also includes a rootkit component to make itself harder to detect and remove.""
 ""This rule is triggered when the plugin download is attempted, indicating potential malware activity.""
     ]","['T1176', 'T1176', 'T1190', 'T1176', 'T1176', 'T1176', 'T1176', 'T1176', 'T1176', 'T1176', 'T1176']",['T1176']
56598,"[
 {
 ""sid"": ""56598"",
 ""Technique ID"": ""T1132"",
 ""Technique name"": ""Valid Accounts"",
 ""Quotes"": """"Valid Accounts techniques involve leveraging valid user credentials or exploiting vulnerabilities to obtain authorized access to systems or resources."""",
 ""Explanation"": ""This event is generated when malware is detected and the malware attempts to connect to a remote host.""
 }
 ][
   {
     ""sid"": ""56598"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""C2 Communication"",
     ""Quotes"": """"Command and Control (C2) communication techniques allow adversaries to communicate with compromised systems to exfiltrate data, deliver additional payloads, or issue commands. The rule detects inbound C2 communication attempts by the malware 'Win.Backdoor.CSBundle' using a specific file transfer protocol and data format."""",
     ""Explanation"": ""Inbound connection attempt by the malware 'Win.Backdoor.CSBundle'""
   }
 ][
         ""sid"": ""56598"",
         ""Technique ID"": ""T1489"",
         ""Technique name"": ""Malicious Link"",
         ""Quotes"": """"Malicious Link techniques involve sending malicious URLs or links to users to trick them into clicking on them, leading to malware downloads or other malicious activities. This rule triggers when a client attempts to connect to a malicious domain associated with a known backdoor (Win.Backdoor.CSBundle_Original), indicating a potential malicious link spreading attempt."""",
         ""Explanation"": ""The event is associated with a malicious backdoor (Win.Backdoor.CSBundle_Original).""
     ][
     ""sid"": ""56598"",
     ""Technique ID"": ""T1496"",
     ""Technique name"": ""Resource Hijacking"",
     ""Quotes"": """"Resource Hijacking techniques involve leveraging the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. This rule detects an inbound connection attempt from a backdoor that is controlled remotely by an attacker."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
         ""sid"": ""56598"",
         ""Technique ID"": ""T1131"",
         ""Technique name"": ""Create Well-Known File or Directory"",
         ""Quotes"": """"Create Well-Known File or Directory techniques involve creating commonly known files, directories, or registry keys to store malicious content or establish persistence."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""56598"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Remote Service Execution"",
         ""Quotes"": """"Remote Service Execution techniques involve executing system commands or scripts on a remote system over the network."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
   {
     ""sid"": ""56598"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve using command and control channels to move data out of a compromised system or network. This rule detects an attempt by the Backdoor.CSBundle malware to establish an inbound connection to its command and control server, which aligns with the methods used by malware to exfiltrate stolen data."",
     ""Explanation"": ""The event is related to a backdoor malware. Backdoors facilitate remote access and control of an infected computer by unauthorized users.""
   }
 ][
   {
     ""sid"": ""56598"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Application Layer Protocol"",
     ""Quotes"": """"Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic"""",
     ""Explanation"": ""This rule detects inbound connections from malware attempting to communicate with a command and control (C2) server using the HTTP protocol, which is a common method for malware to establish covert communication channels.""
   },
   {
     ""sid"": ""56598"",
     ""Technique ID"": ""T1119"",
     ""Technique name"": ""Automated Collection"",
     ""Quotes"": """"Once established within a system or network, an adversary may use automated techniques for collecting internal data"""",
     ""Explanation"": ""The malware is attempting to establish a connection with a remote server, potentially to exfiltrate collected data or receive further instructions.""
   }
 ][
     {
         ""sid"": ""56598"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Client-Side Web Shell"",
         ""Quotes"": """"Client-Side Web Shell techniques involve using malicious scripts loaded in a web browser to remotely execute commands on the victim's system. The rule detects inbound connections from a remote server associated with the Win.Backdoor.CSBundle_Original malware, which is often used to deliver client-side web shells for remote access and control."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
     ""sid"": ""56598"",
     ""Technique ID"": ""T1036"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques rely on modifying aspects of malicious files or artifacts to make them appear legitimate to users or security tools. This rule triggers when an incoming network connection matches characteristics of a known backdoor, in this case Win.Backdoor.CSBundle_Original. This suggests that the adversary may have attempted to disguise the backdoor to avoid detection and establish a foothold on the targeted system."",
     ""Explanation"": ""The rule is triggered when a client attempts to connect to a vulnerable service on the server.""
 ][
     ""sid"": ""56598"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer involves transferring tools onto a system from an external source, often over a network. In this case, the snort rule detects an inbound connection attempt by Win. Backdoor.CSBundle_Original, which suggests that the malware is attempting to download additional tools or components onto the compromised system."""",
     ""Explanation"": ""This rule detects an inbound connection attempt by Win. Backdoor.CSBundle_Original malware.""
 ][
   {
     ""Sid"": ""56598"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
   }
 ]","['T1132', 'T1110', 'T1489', 'T1496', 'T1131', 'T1071', 'T1041', 'T1071', 'T1119', 'T1071', 'T1036', 'T1105', 'T1190']",['T1043']
41435,"[
     {
         ""sid"": ""41435"",
         ""Technique ID"": ""T1574"",
         ""Technique Name"": ""Cloud Service Discovery"",
         ""Quotes"": """"Cloud Service Discovery techniques involve identifying and enumerating cloud services deployed within an environment. This rule specifically looks for outbound HTTP traffic from an internal network to external IP addresses on high ports, such as those used by cloud services. It detects the presence of the Microsoft Background Intelligent Transfer Service (BITS), which is commonly abused by malware to establish communication with cloud-based command and control (C2) servers."""",
         ""Explanation"": ""This rule detects outbound connections originated from the internal network to external hosts. It aims to identify communications with malicious actors.""
     }
 ][
   {
     ""sid"": ""41435"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": ""\""Data Exfiltration techniques involve transferring data from a victim network or system to an external location. The rule detects outbound connections from a compromised host to a remote server, indicating a potential data exfiltration attempt using the Microsoft BITS (Background Intelligent Transfer Service) protocol."""",
     ""Explanation"": ""When attackers gain access to a system, they need a mechanism to transfer stolen data out of the victim environment. Data exfiltration can occur in a variety of ways, including the use of covert channels, tunneling protocols, or legitimate services, such as email or file-sharing services.""
   }
 ][
   {
     ""sid"": ""41435"",
     ""Technique ID"": ""T1008"",
     ""Technique name"": ""Fallback Channels"",
     ""Quotes"": """"Fallback Channels techniques involve establishing redundant or alternative communication channels to maintain persistence and reliability in the event that primary channels are disrupted. This rule detects an outbound connection attempt by a Trojan (Oilrig variant) using Microsoft BITS (Background Intelligent Transfer Service) as a fallback channel to establish communication with a command and control server."""",
     ""Explanation"": ""The rule's description specifically mentions the use of Microsoft BITS as a ""fallback channel"" for the malware's communication, which aligns with the definition of the T1008 technique.""
   }
 ][
     ""sid"": ""41435"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to make it inaccessible to unauthorized users, often with the goal of increasing the impact of a subsequent attack. The rule detects outbound connections made by the Oilrig Trojan, which is known to encrypt data before transmitting it to its command and control server, making forensic analysis and recovery more difficult."""",
     ""Explanation"": ""Remote control Trojan that steals credentials by using a browser helper object (BHO) and injects malicious code into web pages through a proxy.""
 ][
   {
     ""sid"": ""41435"",
     ""Technique ID"": ""T1036"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": ""\""Masquerading techniques involve disguising malicious activity to appear like legitimate system processes or communications. The rule detects outbound traffic from a compromised host that is attempting to blend in with normal web browsing activity by mimicking the User-Agent and Referer headers used by Microsoft Background Intelligent Transfer Service (BITS)."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""41435"",
     ""Technique ID"": ""T1098"",
     ""Technique Name"": ""Remote Command Execution"",
     ""Quotes"": ""\""Remote Command Execution techniques involve executing arbitrary commands on a remote system. The rule indicates that the compromised host is attempting to establish a command-and-control (C2) connection with an external server using the Win.Trojan.Oilrig variant, which is a remote access trojan (RAT) known for its command execution capabilities."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""41435"",
     ""Technique ID"": ""T1136"",
     ""Technique Name"": ""Create Account"",
     ""Quotes"": """"Create Account techniques involve creating new accounts on a system to establish a persistent presence or elevate privileges. The rule detects outbound connections from a compromised host to an external server using the User-Agent: Microsoft BITS/7.7 header, which is associated with the Win.Trojan.Oilrig malware family. Oilrig variants are known to create new user accounts as part of their persistence mechanism."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""41435"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve gathering information about systems on a network to identify potential targets for attack. The rule detects outbound connections from a compromised host to an external server, which is a common method used by malware to communicate with command and control servers or other compromised systems on a network."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""41435"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve using a command and control (C2) channel to exfiltrate data from a compromised system. The rule detects outbound communication from a compromised system to a known C2 server, which is used to exfiltrate collected data, such as sensitive documents or stolen credentials."""",
     ""Explanation"": ""The rule detects outbound traffic from the internal network to a remote server on the external network with the User-Agent header set to \""Microsoft BITS/7.7\"" and the Referer header set to \""https://www.google.com\"". This traffic pattern is commonly used by malware, such as Win.Trojan.Oilrig, to establish a command and control channel for exfiltrating stolen data.""
   }
 ][
     ""sid"": ""41435"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""The rule is looking for signs of DNS requests to known malware-related domains. If this traffic is detected, the rule will generate an alert, indicating potential malicious activity.""
 ][
         ""sid"": ""41435"",
         ""Technique ID"": ""T1098"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve exfiltrating data over established command and control channels. This rule matches outbound connections from trojan malware (Oilrig) that include a 'Referer' header pointing to 'google.com', which is an indication of exfiltration traffic."""",
         ""Explanation"": ""This rule matches outbound connections from trojan malware (Oilrig) that include a 'Referer' header pointing to 'google.com', which is an indication of exfiltration traffic.""
     ][
         ""sid"": ""41435"",
         ""Technique ID"": ""T1021"",
         ""Technique name"": ""Remote System Discovery"",
         ""Quotes"": """"Remote System Discovery techniques involve gathering information about remote host systems on a network to identify attack targets. The rule monitors for outbound connections from compromised hosts to a known malicious domain (Oilrig), which is a common method used to establish a command and control channel with a remote attacker."""",
         ""Explanation"": ""This event is generated when a connection to domain related to Win.Trojan.Oilrig variant is detected.""
     ][
   {
     ""sid"": ""41435"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Remote Command Execution"",
     ""Quotes"": ""\""Remote Command Execution techniques involve the use of operating system commands to execute a payload, typically over a network.\"""",
     ""Explanation"": ""This rule detects an outbound connection to a known malicious IP address by a process that is known to be associated with malware (Win.Trojan.Oilrig variant). This suggests that the malware is attempting to establish a command and control channel for remote control and execution of malicious commands.""
   },
   {
     ""sid"": ""41435"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": ""\""Data Exfiltration techniques involve the extraction of data from a system or network.\"""",
     ""Explanation"": ""The malware (Win.Trojan.Oilrig variant) is known to exfiltrate sensitive data, such as credentials and system information, over the network.""
   }
 ]","['T1574', 'T1071', 'T1008', 'T1071', 'T1036', 'T1098', 'T1136', 'T1071', 'T1041', 'T1190', 'T1098', 'T1021', 'T1071', 'T1105']",['T1197']
32043,"[
   {
     ""sid"": ""32043"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter: Shell"",
     ""Quotes"": """"Command and Scripting Interpreter: Shell techniques involve executing system commands using a shell, such as Bash, to perform various actions. The rule detects an attempt to inject malicious code into the environment variables of a Bash shell, which could allow adversaries to gain control of the system if successful."""",
     ""Explanation"": ""This rule detects shell injection attacks by inspecting network traffic for specific patterns that indicate attempts to inject malicious code in the context of Bash shell.""
   }
 ][
   {
     ""sid"": ""32043"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using a command shell or scripting interpreter, such as bash or PowerShell, to execute commands or scripts to perform various actions on a system. This rule detects an attempt to exploit a Bash environment variable injection vulnerability in an FTP server, which involves injecting malicious commands into environment variables to gain unauthorized access."""",
     ""Explanation"": ""This event is generated when an attempt is made to exploit a Bash environment variable injection vulnerability in an FTP server.""
   }
 ][
         ""sid"": ""32043"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution technique involves exploiting software vulnerabilities in client applications to execute arbitrary code. The rule detects an attempt to exploit a Bash environment variable injection vulnerability in FTP clients, which could allow an attacker to execute arbitrary commands on the target system."",
         ""Explanation"": ""This event is generated when an attempt to inject environment variables into a Bash shell is detected.""
     ][
   {
     ""sid"": ""32043"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system command or scripting interpreter to execute arbitrary commands. This rule detects an attempt to exploit a bash environment variable injection vulnerability by injecting a command into the 'USER' field of an FTP request, which could allow an attacker to execute arbitrary commands on the FTP server."""",
     ""Explanation"": ""This event is generated when activity relating to environment variables injection attempts on bash are detected.""
   }
 ][
 {
 ""sid"": ""32043"",
 ""Technique ID"": ""T1059"",
 ""Technique name"": ""Command and Scripting Interpreter"",
 ""Quotes"": """"Command and Scripting Interpreter techniques involve loading or otherwise causing a system to interpret and execute commands in a non-native scripting language. In this case, the rule detects an attempt to inject malicious commands into a Bash environment variable, which could allow an attacker to execute arbitrary code on the target system."""",
 ""Explanation"": ""This rule looks for attempts to inject malicious code into a Bash environment variable. Environment variables are used by the Bash shell to store and retrieve data, and an attacker could use this technique to inject malicious code into the environment and then execute it.""
 
 }
 ][
   {
     ""sid"": ""32043"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve executing commands or scripts on a system to perform various actions. This rule detects the use of the '$(...)' bash syntax in the FTP 'USER' command, which is a common technique used to inject and execute arbitrary commands or scripts on the target system."""",
     ""Explanation"": ""The $(...) construct in the USER command is a Bash special construct that allows the output of a command or script to be interpolated as part of the command line. This can be used to inject arbitrary commands or scripts into the USER command, which can then be executed by the FTP server.""
   }
 ][
   {
     ""sid"": ""32043"",
     ""Technique ID"": ""T1085"",
     ""Technique name"": ""Exploitation for Credential Access"",
     ""Quotes"": """"Exploitation for Credential Access techniques involve exploiting vulnerabilities to obtain credentials that grant adversaries access to compromised systems. This rule detects an attempt to exploit a bash environment variable injection vulnerability in FTP by injecting malicious code via the 'USER' command containing the '() {}' sequence, which can allow attackers to execute arbitrary commands on the target system."""",
     ""Explanation"": ""Bash environment variable injection vulnerability in FTP allows remote attackers to execute arbitrary commands via unspecified vectors, related to a ""bash environment variable injection"" vulnerability.""
   }
 ][
   {
     ""sid"": ""32043"",
     ""Technique ID"": ""T1168"",
     ""Technique name"": ""Environment Variable Injection"",
     ""Quotes"": """"Environment Variable Injection techniques involve modifying environment variables to alter the behavior of an application or script. This rule detects an attempt to inject malicious commands into the Bash environment by setting the 'USER' variable to a command that begins with '() {', which is a common method used to exploit environment variable vulnerabilities."""",
     ""Explanation"": ""This event is generated when an attempt is made to inject malicious commands into the Bash environment by setting the 'USER' variable.""
   }
 ][
         ""sid"": ""32043"",
         ""Technique ID"": ""T1564"",
         ""Technique name"": ""Hide Artifacts"",
         ""Quotes"": """"Hide Artifacts techniques involve concealing or destroying evidence of malicious activity to evade detection. This rule detects an attempt to inject environment variables into a Bash shell session, which is a technique commonly used by attackers to hide their presence and avoid leaving traces on the target system."""",
         ""Explanation"": ""The rule is triggered when an attacker attempts to inject Bash environment variables, which is a technique often used to hide malicious activity.""
     ][
   {
     ""sid"": ""32043"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques are used by adversaries to execute arbitrary commands on a system. The rule detects attempts to execute shell commands using environment variables, which is commonly used by attackers to inject malicious code into processes or scripts."""",
     ""Explanation"": ""The rule inspects the 'USER' field in FTP packets and looks for the presence of '()' characters, indicating a possible attempt to use environment variables for command execution.""
   }
 ][
     ""sid"": ""32043"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Local File Inclusion"",
     ""Quotes"": """"Exploit Local File Inclusion techniques involve abusing functionality in an application that allows an attacker to include arbitrary files into the application's execution flow. This rule detects an attempt to exploit a bash vulnerability by injecting malicious code via environment variables, specifically targeting the 'USER' variable. Attackers can leverage this technique to gain unauthorized access or execute arbitrary commands on the affected system."""",
     ""Explanation"": ""This rule is triggered when an attacker attempts to exploit a vulnerability in Bash, a shell and command language interpreter, by injecting malicious code via environment variables. Specifically, the rule looks for attempts to set the 'USER' environment variable with a value that includes the string '() {', which is a common pattern used in local file inclusion attacks.""
 ]","['T1105', 'T1059', 'T1203', 'T1059', 'T1059', 'T1059', 'T1085', 'T1168', 'T1564', 'T1059', 'T1189']",['T1204']
1425,"[
     ""sid"": ""1425"",
     ""Technique ID"": ""T1112"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Enciphering data that will be sent over the wire in order to avoid detection by IDS/IPS devices."""",
     ""Explanation"": ""This rule detects the triggering of web application content-disposition file upload attempts, indicating the potential presence of malicious clients attempting to upload encrypted files to bypass security controls.""
 ][
         ""sid"": ""1425"",
         ""Technique ID"": ""T1134"",
         ""Technique name"": ""File Upload"",
         ""Quotes"": """"File Upload techniques involve uploading malicious files to a target system for execution or exploitation. This rule detects an attempt to upload a file, which may contain malicious content, to a web server through an HTTP POST request. The rule looks for the presence of a 'Content-Disposition' header and 'form-data' in the packet data, which are common indicators of file upload attempts."""",
         ""Explanation"": ""This event is generated when a web application attack is detected. The indicator is an attempt to upload a file using a form.""
     ][
     ""sid"": ""1425"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule specifically detects an attempt to upload a file via a web application, which is a common attack vector for exploiting vulnerabilities in content management systems (CMS) by uploading malicious files."""",
     ""Explanation"": ""HTTP content-disposition header is used to specify disposition of a MIME entity. File upload vulnerability in the web application may allow remote attackers to execute arbitrary code on the server via a crafted file upload. Web applications use the content-disposition header to specify content type for handling the file. Attacker can trick application to upload and execute arbitrary file by bypassing content type checking.""
 ][
     {
         ""sid"": ""1425"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data or encrypted data structures to impair the integrity or availability of systems. This rule detects an attempt to upload a file with a 'Content-Disposition' header, which is commonly used to upload files to web servers. Encrypting the uploaded file could make it difficult for security tools to detect malicious content, potentially allowing attackers to bypass security mechanisms."""",
         ""Explanation"": ""This event is generated when a web server receives a file upload request with a 'Content-Disposition' header. In this case, the attacker is attempting to upload an encrypted file, which could potentially be malicious.""
     },
     {
         ""sid"": ""1425"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve exploiting a vulnerability in a web application to infect a victim's system without requiring any user interaction. This rule detects an attempt to upload a file with a 'Content-Disposition' header, which is commonly used to upload files to web servers. By uploading a malicious file, an attacker could potentially exploit a vulnerability in the web application to compromise the victim's system."""",
         ""Explanation"": ""This event is generated when a web server receives a file upload request with a 'Content-Disposition' header. In this case, the attacker is attempting to upload a file, which could potentially be malicious.""
     },
     {
         ""sid"": ""1425"",
         ""Technique ID"": ""T1496"",
         ""Technique name"": ""Resource Hijacking"",
         ""Quotes"": """"Resource Hijacking techniques involve leveraging the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. This rule detects an attempt to upload a file with a 'Content-Disposition' header, which is commonly used to upload files to web servers. By uploading a large file, an attacker could potentially consume server resources and impact the availability of the web application."""",
         ""Explanation"": ""This event is generated when a web server receives a file upload request with a 'Content-Disposition' header. In this case, the attacker is attempting to upload a file, which could potentially be large and consume server resources.""
     }
 ][
         ""sid"": ""1425"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Data Encapsulation"",
         ""Quotes"": """"Data Encapsulation techniques involve hiding or obfuscating payloads within benign or legitimate files or communications to evade detection. The rule detects attempts to upload a file using the 'Content-Disposition' header, which is often used by attackers to upload malicious payloads or exploit vulnerabilities in web applications."""",
         ""Explanation"": ""This rule detects file upload attempts in violation of a policy prohibiting uploading of executable files.""
     ][
         {
             ""sid"": ""1425"",
             ""Technique ID"": ""T1125"",
             ""Technique Name"": ""Data from HER Documents"",
             ""Quotes"": """"Data from HER Documents techniques involve accessing or leveraging files within user home directories and user-specific directories. This rule detects an attempt to upload a file in violation of a content-disposition policy, which is a common method attackers use to upload malicious files or perform unauthorized file operations."""",
             ""Explanation"": ""Specific function within IDS rule indicating malicious files attempting to be uploaded.""
         }
     ][
   {
     ""sid"": ""1425"",
     ""Technique ID"": ""T1116"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve identifying and accessing files and directories on a system to gather information about the system and its contents. This rule detects an attempt to upload a file with a 'Content-Disposition' header, which is a common method attackers use to upload malicious files to a web server."""",
     ""Explanation"": ""This rule checks for events that may indicate an attempt to upload a file to a web server via the HTTP protocol. It looks for a specific header in the HTTP request that is commonly used for file uploads, and if it finds that header, it triggers an alert. This alert may indicate that an attacker is attempting to upload a malicious file to the web server in order to exploit a vulnerability or compromise the system in some way.""
   }
 ][
         ""sid"": ""1425"",
         ""Technique ID"": ""T1119"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve moving malicious tools and capabilities into a target environment. This rule detects an attempt to upload a file with a specific content disposition header, which could be indicative of an attacker attempting to upload a malicious script or file."""",
         ""Explanation"": ""This event is generated when a web application attack is detected. The detection is based on the presence of a content-disposition header in an HTTP request, which is commonly used to facilitate file uploads.""
     ][
     ""sid"": ""1425"",
     ""Technique ID"": ""T1125"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent messages designed to trick recipients into revealing sensitive information or taking some malicious action. This rule detects an attempt to upload a file using a web application, which is a common method used in phishing attacks to distribute malware or gather sensitive information."""",
     ""Explanation"": ""This rule triggers when an attempt has been made to upload a file with an extension that is not allowed.""
 ][
     ""sid"": ""1425"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects attempts to upload a file with a specific 'Content-Disposition' header, which is a common method attackers use to exploit web applications by uploading malicious files."""",
     ""Explanation"": ""The event is triggered when an attempt to upload a file with a specific 'Content-Disposition' header, which is a common method attackers use to exploit web applications by uploading malicious files.""
 ][
   {
     ""sid"": ""1425"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted content-disposition file upload, which can be used by adversaries to upload malicious files or perform other attacks against web applications."""",
     ""Explanation"": ""This event generates an alert when the system detects file upload attempt.""
   }
 ]","['T1112', 'T1134', 'T1190', 'T1105', 'T1189', 'T1496', 'T1110', 'T1125', 'T1116', 'T1119', 'T1125', 'T1190', 'T1190']",['T1155']
35471,"[
         ""sid"": ""35471"",
         ""Technique ID"": ""T1032"",
         ""Technique name"": ""Lateral Movement"",
         ""Quotes"": """"Lateral Movement techniques involve moving laterally within a network to access and compromise additional systems. The rule detects an outbound connection to an external IP address on port 6666, which attackers often use for command and control (C2) communication after gaining initial access to a network. This suggests that the malware is attempting to establish a C2 connection to a remote server, facilitating lateral movement and further compromise of the network."""",
         ""Explanation"": ""This event is generated when a outbound connection to an external IP address on port 6666 is detected, which attackers use this port for command and control(C2) communication after gaining initial access to a network.""
     ][
         ""sid"": ""35471"",
         ""Technique ID"": ""T1573"",
         ""Technique name"": ""Encrypted Channel"",
         ""Quotes"": """"Encrypted Channel techniques involve using encryption algorithms to protect the confidentiality of communications between adversaries and their infrastructure. The rule detects outbound traffic to port 6666 with a specific pattern in the HTTP request, which is indicative of communication with a command and control server using an encrypted channel."""",
         ""Explanation"": ""This rule is triggered when an outbound connection to port 6666 is made with a specific pattern in the HTTP request, which is indicative of communication with a command and control server using an encrypted channel.""
     ],
     [
         ""sid"": ""35471"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over C2 Channel"",
         ""Quotes"": """"Exfiltration Over C2 Channel techniques involve using an existing command and control channel to exfiltrate data from a victim system. The rule detects outbound traffic to port 6666 with a specific pattern in the HTTP request, which is indicative of data exfiltration over an encrypted command and control channel."""",
         ""Explanation"": ""This rule is triggered when an outbound connection to port 6666 is made with a specific pattern in the HTTP request, which is indicative of data exfiltration over an encrypted command and control channel.""
     ]
 ][
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve using external services that are remotely available to enable attackers to gain access to a network. This rule detects a suspicious connection from the internal network to an external host on port 6666, which is often used by the Win.Trojan.Baisogu malware to communicate with its command and control server."""",
     ""Explanation"": ""This event is generated when activity relating to Win.Trojan.Baisogu outbound connection is detected.""
   },
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client applications to execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the browser to execute the Win.Trojan.Baisogu malware."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve leveraging valid accounts to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The rule detects an outbound connection to port 6666, which is commonly associated with the Baisogu Trojan, indicating that an attacker is attempting to establish a remote connection to a compromised system."""",
     ""Explanation"": ""This rule is used specifically to detect outbound connections to port 6666 that are made by the Baisogu Trojan.""
   },
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1496"",
     ""Technique Name"": ""Resource Hijacking"",
     ""Quotes"": """"Resource Hijacking techniques involve leveraging the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. The Baisogu Trojan is known to hijack system resources for malicious purposes, such as launching distributed denial-of-service (DDoS) attacks."""",
     ""Explanation"": ""This rule is used to detect the Baisagu Trojan, which is a type of malware that abuses system resources.""
   }
 ][
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1104"",
     ""Technique Name"": ""Outbound Communication"",
     ""Quotes"": """"Outbound Communication techniques involve communication from a compromised host to an external host, such as a command and control (C2) server. This rule detects outbound connections from compromised hosts to a port commonly used by the Baisogu Trojan, which may indicate communication with a C2 server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1596"",
     ""Technique name"": ""Hidden Services"",
     ""Quotes"": """"Hidden Services techniques involve the use of anonymizing networks or services to hide the true identity of a host or service, such as through the Tor network. This alert is triggered when a connection is made to a known Tor hidden service address (port 6666) used by the Baisogu Trojan, indicating an attempt to establish a covert communication channel."""",
     ""Explanation"": ""Baisogu Trojan using outbound connections to communicate with C&C""
   }
 ][
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1134"",
     ""Technique name"": ""Access Token Manipulation"",
     ""Quotes"": """"Access Token Manipulation techniques involve modifying access tokens to operate under a different user or system security context to perform actions and bypass access controls. The rule detects the Baisogu Trojan attempting to send data to a remote server using a POST request with specific parameters, which suggests the Trojan is trying to exfiltrate information or establish a backdoor connection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""Account Discovery"",
     ""Quotes"": """"Account Discovery techniques involve attempting to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. The rule detects the Baisogu Trojan sending a request to a remote server with a parameter named 'tjuser', which suggests the Trojan is trying to gather information about user accounts on the compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1548"",
     ""Technique name"": ""Abuse Elevation Control Mechanism"",
     ""Quotes"": """"Abuse Elevation Control Mechanism techniques involve circumventing mechanisms designed to control elevate privileges to gain higher-level permissions. The rule indicates that the Baisogu Trojan is attempting to establish an outbound connection on port 6666, which may indicate an attempt to elevate privileges or establish a backdoor connection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Command Execution"",
     ""Quotes"": """"Remote Command Execution techniques involve executing a shell command, script, or program on a remote machine to affect the system, gain access, or compromise the system."""",
     ""Explanation"": ""This event is generated when outbound communication with a known Win.Trojan.Baisogu is detected.""
   },
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1572"",
     ""Technique name"": ""Protocol Tunneling"",
     ""Quotes"": """"Protocol Tunneling techniques involve encapsulating data within another protocol to bypass network security controls or exfiltrate or infiltrate data"""",
     ""Explanation"": ""This event is generated when outbound communication with a known Win.Trojan.Baisogu is detected.""
   }
 ][
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1559"",
     ""Technique Name"": ""Inter-Process Communication"",
     ""Quotes"": """"Inter-Process Communication (IPC) techniques involve using IPC mechanisms to facilitate local code or command execution. The rule detects an outbound connection to port 6666 containing a URL path to 'count.asp', which is associated with the Baisogu Trojan. Baisogu is known to use IPC to communicate with other components, making this technique relevant to the alert."""",
     ""Explanation"": ""The rule is triggered when a host on the internal network attempts to establish an outbound connection to port 6666 on an external IP address. The content of the connection includes a URL path to \""count.asp\"" and parameters that are commonly used by the Baisogu Trojan for communication.""
   }
 ][
     {
         ""sid"": ""35471"",
         ""Technique ID"": ""T1104"",
         ""Technique name"": ""Multi-Stage Channels"",
         ""Quotes"": """"Multi-Stage Channels techniques involve using multiple stages for command and control (C2) that are employed under different conditions or for specific functions. This rule detects an outbound connection from a compromised host to the Beacon domain (/9hao/count.asp), which is a multi-stage C2 infrastructure commonly used by the Baisogu Trojan."""",
         ""Explanation"": ""The rule has trigger phrases that are specific for the Win.Trojan.Baisogu Trojan""
     }
 ][
   {
     ""sid"": ""35471"",
     ""Technique ID"": ""T1440"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques allow adversaries to control victim machines remotely using a variety of mechanisms, such as CNC or web shells. This rule alerts on outbound connections to a C&C server with the request path '/9hao/count.asp', which is a known malicious script used by the Baisogu Trojan to communicate with its C&C."""",
     ""Explanation"": ""This rule detects outbound communication with a command and control server by the Baisogu Trojan. This is often done to receive commands, exfiltrate data, or update the malware.""
   }
 ]","['T1032', 'T1573', 'T1041', 'T1133', 'T1203', 'T1021', 'T1496', 'T1104', 'T1596', 'T1134', 'T1087', 'T1548', 'T1021', 'T1572', 'T1559', 'T1104', 'T1440']",['T1571']
37385,"[
   {
     ""sid"": ""37385"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve systematically trying many different combinations of inputs to gain access to a system or account. This rule detects an attempt to use the default credentials ('admin:private') to log in to a Hirschmann industrial automation device's web interface. Brute force attacks are commonly used to gain unauthorized access to systems by trying numerous password combinations."""",
     ""Explanation"": ""This event generates when  an attempt to brute force is detected""
   }
 ][
   {
     ""sid"": ""37385"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials from memory or local storage on a system. This rule detects an attempt to exploit a default password vulnerability in Hirschmann devices by sending an HTTP request containing the encoded default credentials (""admin:private"") in the Authorization header. Default credentials are a common target for attackers as they provide an easy way to compromise systems."""",
     ""Explanation"": ""The rule is triggered when an HTTP request is sent to a web server with the default credentials for Hirschmann devices in the Authorization header.""
   }
 ][
   {
     ""sid"": ""37385"",
     ""Technique ID"": ""T1187"",
     ""Technique Name"": ""Forced Authentication"",
     ""Quotes"": """"Forced Authentication techniques involve using a variety of methods to obtain authentication materials from users. This rule detects an attempt to log in to a Hirschmann device using default credentials ('admin:private'). Attackers often attempt to exploit default or weak credentials to gain unauthorized access to systems."""",
     ""Explanation"": ""This rule is designed to detect attempts to login to a Hirschmann device using default credentials (admin:private).""
   }
 ][
   {
     ""sid"": ""37385"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Access"",
     ""Quotes"": """"Credential Access techniques involve obtaining credentials to access systems or services. This rule identifies an attempt to log in to a Hirschmann device using the default password ""admin:private"", indicating a potential attempt to exploit a weak password."""",
     ""Explanation"": ""Default login attempts using a username of ""admin"" and a password of ""private"" against a Hirschmann device.""
   }
 ][
   {
     ""sid"": ""37385"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Stuffing"",
     ""Quotes"": """"Credential stuffing is an automated attack that uses stolen credentials from previous breaches or leaks to gain access to user accounts on other platforms. In this rule, the attacker is attempting to log in to the Hirschmann web application using the default credentials 'admin:private', which is indicative of credential stuffing attacks."""",
     ""Explanation"": ""This rule detects a login attempt to the Hirschmann web application using the default credentials 'admin:private', which is a common technique used by attackers to compromise systems.""
   }
 ][
   {
     ""sid"": ""37385"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute force attacks involve using automated tools to try multiple combinations of usernames and passwords to gain unauthorized access to a system or account. This Snort rule matches when an attacker attempts to authenticate with a Hirschmann device using the default 'admin:private' credentials, a common weak password target for brute force attacks."""",
     ""Explanation"": ""This event is generated when activity relating to weak password attack is detected.""
   }
 ][
   {
     ""sid"": ""37385"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Account Discovery"",
     ""Quotes"": """"Account Discovery techniques involve enumerating user accounts and their attributes, such as their names and group memberships. The rule detects an attempt to log in to a Hirschmann device using default credentials, which is a common technique attackers use to gain unauthorized access to systems."""",
     ""Explanation"": ""Default password discovered and used to login as administrator""
   },
   {
     ""sid"": ""37385"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Access"",
     ""Quotes"": """"Credential Access techniques involve obtaining credentials, such as passwords or tokens, to authenticate to systems or applications. The rule detects an attempt to log in to a Hirschmann device using default credentials, which is a common technique attackers use to gain unauthorized access to systems."""",
     ""Explanation"": ""Default password discovered and used to login as administrator""
   },
   {
     ""sid"": ""37385"",
     ""Technique ID"": ""T1557"",
     ""Technique Name"": ""Adversary-in-the-Middle"",
     ""Quotes"": """"Adversary-in-the-Middle techniques involve placing an adversary-controlled entity between two or more legitimate entities to intercept and manipulate communications. The rule detects an attempt to log in to a Hirschmann device using default credentials, which is a common technique attackers use to impersonate legitimate users and gain unauthorized access to systems."""",
     ""Explanation"": ""Default password discovered and used to login as administrator""
   }
 ][
   {
     ""sid"": ""37385"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force is defined as any attack that iterates through a large set of values (e.g., possible usernames, passwords, keys, etc.) for a given parameter to discover the correct one. This rule detects brute force password attacks by monitoring for repeated login attempts with incorrect credentials, which is a common technique used by attackers to gain access to systems by repeatedly trying with different combinations."""",
     ""Explanation"": ""This event is generated when an attacker tries to login into a system with default credentials.""
   }
 ][
     {
         ""sid"": ""37385"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute Force techniques involve using trial-and-error to guess credentials for authentication or to gain access to protected systems. This rule detects an attempt to log in to a Hirschmann web application using the default 'admin:private' credentials, which is a common brute force approach for exploiting weak or default credentials."""",
         ""Explanation"": ""This rule is used to detect brute force attacks against Hirschmann web applications by monitoring for attempts to log in using the default credentials 'admin:private'.""
     }
 ][
   {
     ""sid"": ""37385"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials from a compromised host, such as hashed passwords, SAM dumps, or cached credentials, to gain access to accounts or systems."""",
     ""Explanation"": ""This rule detects an attempt to log in to a Hirschmann device using default credentials, which is a common tactic used by attackers to compromise systems with weak authentication mechanisms.""
   },
   {
     ""sid"": ""37385"",
     ""Technique ID"": ""T1556"",
     ""Technique name"": ""Modify Authentication Process"",
     ""Quotes"": """"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts."""",
     ""Explanation"": ""This rule detects an attempt to bypass authentication mechanisms by using default credentials, which can indicate an attempt to modify the authentication process to gain unauthorized access.""
   }
 ][
         ""sid"": ""37385"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Credential Dumping"",
         ""Quotes"": """"Credential Dumping techniques involve extracting credentials, such as usernames and passwords, from the compromised system. This rule detects a login attempt to a Hirschmann web application using the default password, which is a common method attackers use to gain unauthorized access to systems by exploiting default or weak credentials."""",
         ""Explanation"": ""This event is related to credential dumping because, the server uses default credentials, which can indicate the server didn't updated from default settings. Therefore, an actor may use it for credential dumping""
     ]","['T1110', 'T1110', 'T1187', 'T1110', 'T1110', 'T1110', 'T1087', 'T1110', 'T1557', 'T1110', 'T1110', 'T1110', 'T1556', 'T1110']",['T1078']
16207,"[
   {
     ""sid"": ""16207"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted overflow attack on the MIT Kerberos V5 klog_vsyslog server, which is commonly targeted by attackers to gain unauthorized access and execute arbitrary code on the system."""",
     ""Explanation"": ""This rule is specifically designed to detect and block exploitation attempts targeting a known vulnerability in the MIT Kerberos V5 klog_vsyslog server. Successful exploitation could lead to remote code execution and compromise of the system.""
   }
 ][
   {
     ""sid"": ""16207"",
     ""Technique ID"": ""T1479"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploitation of Public-Facing Applications techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted buffer overflow in the MIT Kerberos V5 KAdminD klog_vsyslog server, which is a publicly accessible feature that can be exploited by attackers to execute arbitrary code on the system."""",
     ""Explanation"": ""This event is generated when activity relating to a buffer overflow vulnerability in the MIT Kerberos V5 KAdminD klog_vsyslog server is detected.""
   }
 ][
   {
     ""sid"": ""16207"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques involve targeting vulnerabilities in remote services to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a buffer overflow vulnerability in the KAdminD klog_vsyslog server, which is a common method attackers use to gain access to remote systems by exploiting vulnerable services."""",
     ""Explanation"": ""The attack in this IDS rule is targeting a specific server’s specific service.""
   }
 ][
         ""sid"": ""16207"",
         ""Technique ID"": ""T1200"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted buffer overflow attack against the KAdminD klog_vsyslog server in Microsoft Windows Active Directory. A successful attack could allow an unauthenticated attacker to execute arbitrary code on the target system."""",
         ""Explanation"": ""In Microsoft Windows, .NET Framework versions 4.6 and 4.6.1 allow remote attackers to execute arbitrary code via a crafted XML document, aka ""XML External Entity (XXE).""
     ][
   {
     ""sid"": ""16207"",
     ""Technique ID"": ""T1497"",
     ""Technique name"": ""Virtualization/Sandbox Evasion"",
     ""Quotes"": """"Virtualization/Sandbox Evasion techniques involve detecting and bypassing virtualization or analysis environments to evade detection and analysis, such as evasion techniques used against sandboxed environments. This rule detects an attempted buffer overflow attack against the klog_vsyslog service running on the Kerberos Key Distribution Center (KDC), which may indicate an attempt to evade detection by targeting a specific service rather than a generic virtualization or sandbox environment."""",
     ""Explanation"": ""This rule is designed to detect an attempt to exploit the klog_vsyslog buffer overflow vulnerability in the MIT Kerberos V5 KAdminD service, which can allow remote attackers to execute arbitrary code on vulnerable systems.""
   }
 ][
     {
         ""sid"": ""16207"",
         ""Technique ID"": ""T1453"",
         ""Technique name"": ""Scheduled Task/Job"",
         ""Quotes"": """"Scheduled Task/Job techniques involve creating or modifying system-level tasks or jobs to execute malicious payloads on a regular basis. The rule detects an attempt to exploit a known buffer overflow vulnerability in the klog_vsyslog service on Unix systems. Attackers can exploit this vulnerability by sending a specially crafted request to create a scheduled task that executes a malicious payload."""",
         ""Explanation"": ""The server attempted to send a message to the client, but the message was too long.""
     }
 ][
   {
     ""sid"": ""16207"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted buffer overflow attack on the MIT Kerberos V5 KAdminD klog_vsyslog server, which is a common method attackers use to exploit software vulnerabilities by sending specially crafted input to cause a crash or execute arbitrary code."""",
     ""Explanation"": ""This rule is designed to detect and block attempts to exploit a buffer overflow vulnerability in the MIT Kerberos V5 KAdminD klog_vsyslog server. It looks for specific patterns in the network traffic that indicate an exploit attempt, and if detected, it drops the connection and generates an alert.""
   }
 ][
         ""sid"": ""16207"",
         ""Technique ID"": ""T1218"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Kerberos is a network authentication protocol that is used to provide secure authentication for client/server applications. A buffer overflow vulnerability in the klog_vsyslog server in Kerberos could allow an attacker to execute arbitrary code on the target system."""",
         ""Explanation"": ""This rule triggers when an attempted buffer overflow exploit of the klog_vsyslog server is detected, which can lead to remote code execution and compromise of the system.""
     ][
         ""sid"": ""16207"",
         ""Technique ID"": ""T1497"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application involves identifying web applications running on the external network infrastructure that present exploitable conditions. In this case, snort rule 16207 detects an attempt to exploit a buffer overflow vulnerability in the KAdminD klog_vsyslog server, which is likely being executed by an attacker with malicious intent."""",
         ""Explanation"": ""Overflow vulnerabilities in MIT Kerberos V5's klog_vsyslog server allow remote attackers to execute arbitrary code via a long sname argument to klog_vsyslog in (1) a vulnerable kadmin.local file or (2) a log record.""
     ][
   {
     ""sid"": ""16207"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve leveraging vulnerabilities in client-side software to execute malicious code on target systems. This rule detects an attempt to exploit an overflow vulnerability in the klog_vsyslog server, which is a critical component of Kerberos authentication, to gain unauthorized access to the target system."""",
     ""Explanation"": ""The buffer overflow vulnerability in klog_vsyslog 1.1.3 could allow remote attackers to execute arbitrary code via a long uname parameter to the syslog daemon, as demonstrated by a crafted syslog.conf file.""
   }
 ][
   {
     ""sid"": ""16207"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution refers to accessing a target endpoint through a vulnerable network service and delivering malicious content to the endpoint to execute code, typically for the purpose of distributed denial-of-service attacks. The rule detects an MIT Kerberos V5 KAdminD klog_vsyslog server overflow attempt, which can lead to arbitrary code execution on the target system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1190', 'T1479', 'T1210', 'T1200', 'T1497', 'T1453', 'T1210', 'T1218', 'T1497', 'T1210', 'T1210']",['T1550']
59927,"[
     ""sid"": ""59927"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools onto a system to support follow-on attacks. One common method is by using a web shell, which gives attackers a remote command line interface to execute commands on compromised systems. This rule detects a JSP web shell named TinyUploader, which can be used to upload and execute arbitrary files, potentially facilitating the transfer of additional tools."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""59927"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a system when a user visits a malicious or compromised website. This rule detects an attempt to upload a JSP webshell (TinyUploader) through a POST request, which is a common technique used in drive-by compromise attacks to gain remote access and control of the victim's system."""",
     ""Explanation"": ""The rule suggests that there is malicious activity related to JSP web shell upload.""
   }
 ][
     ""sid"": ""59927"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a shell directly accessible over HTTP/HTTPS to execute a wide range of commands on the underlying system."""",
     ""Explanation"": ""This rule detects a malicious attempt to upload a JSP web shell, which is a common method for attackers to gain remote access and control over a web server.""
 ][
     {
         ""sid"": ""59927"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted upload of a JSP web shell using the TinyUploader tool, which is commonly used by attackers to gain control of web servers."""",
         ""Explanation"": ""JSP is vulnerable to the upload of malicious files due to lack of proper input validation.""
     }
 ][
         ""sid"": ""59927"",
         ""Technique ID"": ""T1106"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve creating or modifying a web shell, a malicious script that provides a remote administration interface to an attacker. Webshells are often used by adversaries to maintain access to a compromised system after initial exploitation and can be used to perform a variety of actions, such as executing commands or uploading additional malicious content."""",
         ""Explanation"": ""This rule detects an attempt to upload a malicious JavaServer Page (JSP) web shell using the TinyUploader tool. JSP web shells are commonly used by attackers to provide a remote administration interface to a compromised web server.""
     ],
     ""sid"": ""59927"",
     ""Technique ID"": ""T1080"",
     ""Technique name"": ""Taint Shared Content"",
     ""Quotes"": """"Taint Shared Content techniques involve delivering payloads (e.g., malicious code) to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. The malicious content can then be executed by users who have access to the shared location."""",
     ""Explanation"": ""This rule detects an attempt to upload a malicious JavaServer Page (JSP) web shell using the TinyUploader tool. The malicious JSP web shell is uploaded to a shared web server directory, where it can be executed by users who have access to the directory.""
 ][
         ""sid"": ""59927"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted web shell upload using the 'TinyUploader' Java library, which is a common method attackers use to upload malicious code to web servers."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""59927"",
     ""Technique ID"": ""T1064"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve adopting the identity of another system or user to gain unauthorized access or evade detection. This rule detects an incoming attempt to upload a JSP web shell using the 'TinyUploader' tool, which attackers commonly use to masquerade as legitimate web content, providing them with a backdoor to the target system."""",
     ""Explanation"": ""This rule looks for evidence of a JSP web shell upload attempt using the 'TinyUploader' tool.""
   },
   {
     ""sid"": ""59927"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve identifying and locating files and directories of interest on a system. This rule looks for specific content patterns associated with Java file operations and JSP web shell syntax, indicating that an attacker is attempting to upload a web shell and gain unauthorized access to the file system."""",
     ""Explanation"": ""This rule looks for evidence of a JSP web shell upload attempt using the 'TinyUploader' tool.""
   }
 ][
     ""sid"": ""59927"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule likely detects an attempted Java Servlet attack against a web application. The rule flags attempts to write to the file system as well as the presence of JSP (Java Server Pages) and specific request parameters, which can be indicators of malicious activity. Java Servlet attacks can exploit vulnerabilities in web applications by executing arbitrary Java code on the server."""",
     ""Explanation"": ""The rule is triggered when an attempt to upload a file using the TinyUploader Java Servlet is detected.""
 ][
     ""sid"": ""59927"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted Java-based web shell upload on port 80, which is commonly used by adversaries to gain remote access and control over a webserver."""",
     ""Explanation"": ""The rule matches a Java-based web shell upload attempt on port 80, which is commonly used by adversaries to gain remote access and control over a webserver""
 ][
   {
     ""sid"": ""59927"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Install Web Shell"",
     ""Quotes"": """"Install Web Shell techniques involve installing a malicious web shell on a server to facilitate remote control and access of the system. This rule triggers based on the detection of activities associated with the deployment of a JSP web shell, which is a common method adversaries use to establish a backdoor on web servers."""",
     ""Explanation"": ""This rule detects a potential attempt to upload a malicious JSP web shell to a server.""
   },
   {
     ""sid"": ""59927"",
     ""Technique ID"": ""T1064"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted 'getParameter' and 'write' operation, which are methods in web applications to access request parameters and manipulate file systems, respectively. It also identifies the presence of 'java.io.FileOutputStream' and '<%', indicating potential JSP shell activity."",
     ""Explanation"": ""This rule detects a potential attempt to compromise a public-facing web application by exploiting a vulnerability in a JSP page and uploading a web shell.""
   }
 ][
         ""sid"": ""59927"",
         ""Technique ID"": ""T1053"",
         ""Technique name"": ""Initial Access"",
         ""Quotes"": """"Initial Access techniques are those used to gain initial unauthorized access to a system or network, typically via exploitation of a vulnerability in an external system (e.g., a web server exposed to the public internet) or by taking advantage of a misconfiguration. This rule detects an attempt to upload a Java-based web shell (TinyUploader) through a web application, which could provide an attacker with remote access to the system."""",
         ""Explanation"": ""This event is generated when activity relating to a web shell is detected.""
     ],
     [
         ""sid"": ""59927"",
         ""Technique ID"": ""T1068"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve extracting data from a compromised system and transmitting it to an external location. The rule detects an attempt to upload a Java-based web shell (TinyUploader) through a web application, which could allow an attacker to exfiltrate sensitive information from the system."""",
         ""Explanation"": ""This event is generated when activity relating to data exfiltration is detected.""
     ]
 ]","['T1105', 'T1189', 'T1189', 'T1190', 'T1106', 'T1080', 'T1190', 'T1064', 'T1189', 'T1190', 'T1190', 'T1105', 'T1064', 'T1053', 'T1068']",['T1094']
34037,"[
   {
     ""sid"": ""34037"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve manipulating data to obscure its true meaning, making it difficult to detect or analyze. This rule detects an initial outbound connection from a host infected with the Dridex4 Trojan, which is known to encode its communications using a custom algorithm to evade detection and analysis."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""34037"",
     ""Technique ID"": ""T1482"",
     ""Technique Name"": ""Domain Trust Discovery"",
     ""Quotes"": """"Domain Trust Discovery techniques involve discovering trust relationships between domains to identify lateral movement opportunities in Windows multi-domain/forest environments. This rule detects outbound connections to 'twitter.com' from an infected host, which could be an attempt by the malware to establish communication with a command and control server through a trusted domain."""",
     ""Explanation"": ""The malware is attempting to establish an outbound connection to a known malicious domain.""
   }
 ][
     {
         ""sid"": ""34037"",
         ""Technique ID"": ""T1495"",
         ""Technique name"": ""Firmware Corruption"",
         ""Quotes"": """"Firmware Corruption techniques involve modifying or overwriting the firmware of a device to disrupt its normal operation or render it inoperable. This rule detects an attempt to corrupt the firmware of a device by sending a specially crafted packet that contains malicious code. Firmware corruption can lead to denial of service, data loss, or unauthorized access to the device."""",
         ""Explanation"": ""This rule detects an attempt to corrupt the firmware of a device by sending a specially crafted packet containing malicious code.""
     },
     {
         ""sid"": ""34037"",
         ""Technique ID"": ""T1222"",
         ""Technique name"": ""File and Directory Permissions Modification"",
         ""Quotes"": """"File and Directory Permissions Modification techniques involve modifying the permissions or attributes of files or directories to gain unauthorized access or escalate privileges. This rule detects an attempt to modify the permissions of a file or directory, which could allow an attacker to gain access to sensitive information or execute unauthorized code."""",
         ""Explanation"": ""This rule detects an attempt to modify the permissions of a file or directory, which could allow an attacker to gain access to sensitive information or execute unauthorized code.""
     }
 ][
   {
     ""sid"": ""34037"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve moving data from a compromised system to an external location. This rule detects exfiltration attempts by the Win.Trojan.Dridex4 malware, which is known to steal sensitive data by establishing connections back to a command and control server over HTTP."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""34037"",
     ""Technique ID"": ""T1037"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising the identity or objectives of an attack by imitating legitimate system components, network activity, or user behavior to evade detection. This rule identifies a malicious connection from an internal host to an external IP address, which may be an attempt by malware to blend with legitimate network traffic and avoid detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""34037"",
         ""Technique ID"": ""T1457"",
         ""Technique name"": ""Evasion Techniques"",
         ""Quotes"": """"Adversaries conceal malicious behaviors from detection by employing a variety of evasion techniques. This rule flags a Trojan (Dridex4) that utilizes common evasion tactics such as using short HTTP requests with specific headers and content to circumvent detection mechanisms."""",
         ""Explanation"": ""This rule is designed to detect Win.Trojan.Dridex4 malware. Dridex4 is a banking trojan that steals financial information from infected computers. It uses various evasion techniques to avoid detection, including using short HTTP requests with specific headers and content.""
     },
     {
         ""sid"": ""34037"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Application Layer Protocol Abuse"",
         ""Quotes"": """"Application Layer Protocol Abuse techniques involve manipulating or exploiting communication protocols to achieve malicious objectives. This rule detects a specific pattern in the HTTP header and content used by Dridex4 to communicate with its command and control server, which is a common method for malware to abuse application layer protocols."""",
         ""Explanation"": ""The rule looks for a specific pattern in the HTTP header and content that is used by the Dridex4 malware to communicate with its command and control server. This pattern is not typically used by legitimate traffic, so its presence is an indication of malicious activity.""
     }
 ][
     ""sid"": ""34037"",
     ""Technique ID"": ""T1568"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve an adversary posing as a benign entity to gain access to a system or network. In this rule, the malware (Dridex4) attempts to establish an outbound connection to a remote server while masquerading as a benign request from Twitter."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
     {
         ""sid"": ""34037"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an initial outbound connection from a host infected with the Dridex4 Trojan, which typically targets vulnerabilities in web applications to establish a covert communication channel with its command and control server."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""34037"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve stealing or exfiltrating sensitive data from a compromised environment. In this rule, the outbound connection from an infected host to a Twitter URL with a Referer header is a suspicious sign that data exfiltration is taking place."""",
     ""Explanation"": ""This rule is designed to detect malicious traffic associated with the Win.Trojan.Dridex4 trojan.""
   },
   {
     ""sid"": ""34037"",
     ""Technique ID"": ""T1567"",
     ""Technique Name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques focus on using the command and control (C2) channel to extract data from the environment. The Win.Trojan.Dridex4 trojan is known to use HTTP-based C2 channels to communicate with its operators, and it is likely that the data exfiltration is happening over this channel."""",
     ""Explanation"": ""This rule is designed to detect malicious traffic associated with the Win.Trojan.Dridex4 trojan.""
   }
 ][
     ""sid"": ""34037"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""Initial Access: Spearphishing"",
     ""Quotes"": """"Spearphishing attacks use deceptive emails to trick users into clicking on malicious links or opening malicious attachments. The rule identifies an initial outbound connection by the Dridex4 Trojan, which is known to use spearphishing to compromise systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""34037"",
     ""Technique ID"": ""T1432"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing covert or encrypted command and control channels between a victim system and an adversary's infrastructure.' In this case, the rule detects an initial outbound connection from a victim system to a potential command and control server associated with the Dridex4 Trojan."""",
     ""Explanation"": ""Communication with an external host indicates a client connecting to a command and control server to receive commands or exfiltrate data.""
   }
 ]","['T1071', 'T1482', 'T1495', 'T1222', 'T1071', 'T1037', 'T1457', 'T1071', 'T1568', 'T1190', 'T1071', 'T1567', 'T1083', 'T1432']",['T1102']
46316,"[
   {
     ""sid"": ""46316"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a remote code execution vulnerability in Drupal 8 by sending a specially crafted HTTP request with a malicious URI. Attackers could abuse this vulnerability to execute arbitrary code on the target system."""",
     ""Explanation"": ""The rule detects a Drupal 8 remote code execution attempt over HTTP.""
   }
 ][
   {
     ""sid"": ""46316"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation attempt of a remote code execution vulnerability in Drupal 8 through a specially crafted HTTP request targeting Drupal's Form API. Attackers could exploit this vulnerability to execute arbitrary PHP code and gain control of the affected system."""",
     ""Explanation"": ""Drupal 8.3.0 - 8.9.x before 8.9.19, 9.0.x before 9.0.6, 9.1.x before 9.1.10, 9.2.x before 9.2.6, 9.3.x before 9.3.5, and 10.x before 10.0.13 allows remote authenticated attackers to execute arbitrary PHP code via a crafted form submission to a vulnerable installation, related to the \""Drupalgeddon2\"" vulnerability.""
   }
 ][
   {
     ""sid"": ""46316"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve leveraging vulnerabilities in client-side software, such as web browsers, to execute arbitrary code. This rule targets a specific Drupal 8 vulnerability that allows remote attackers to execute arbitrary PHP code, which could be used to gain unauthorized access or control of the server."""",
     ""Explanation"": ""This Snort rule is detecting a PHP code execution attempt in Drupal 8 which may lead to remote code execution if successfully exploited.""
   }
 ][
         ""sid"": ""23934"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
     ][
   {
     ""sid"": ""46316"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution attack on a Drupal 8 web application by exploiting a vulnerability in the '#value' parameter, which is a common method attackers use to execute arbitrary code on vulnerable web applications."""",
     ""Explanation"": ""This event is generated when activity relating to the Drupalgeddon 2 RCE is detected.""
   }
 ][
   {
     ""sid"": ""46316"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule looks for Drupal version 8 remote code execution attempts exploiting Drupal core - arbitrary PHP code execution via routes (CVE-2019-6340). This technique is commonly used by attackers to gain unauthorized access to web applications."""",
     ""Explanation"": ""This rule is used to detect an attempt to exploit a remote code execution vulnerability in Drupal 8, which allows attackers to execute arbitrary PHP code on vulnerable systems.""
   }
 ][
     {
         ""sid"": ""46316"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution attack against a Drupal 8 web application by exploiting a vulnerability in the 'element_parents' parameter. Exploiting this vulnerability allows attackers to execute arbitrary PHP code on the target system."""",
         ""Explanation"": ""This rule detects an attempt to exploit a remote code execution vulnerability in Drupal 8 web applications. The attacker sends a specially crafted HTTP request to the web application, which contains a malicious payload in the 'element_parents' parameter. If the web application is vulnerable, the payload will be executed, allowing the attacker to gain unauthorized access to the system.""
     }
 ][
   {
     ""sid"": ""46316"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""Drupal 8 remote code execution attempt""
   }
 ][
   {
     ""sid"": ""46316"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted remote code execution attack against a Drupal 8 web application. Attackers commonly exploit vulnerabilities in web applications to gain unauthorized access or execute arbitrary code on the underlying system."""",
     ""Explanation"": ""HTTP request containing a specially crafted attack string that attempts to exploit a remote code execution vulnerability in Drupal 8.""
   }
 ][
         ""sid"": ""46316"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule looks for exploitation attempts on the Drupal 8 content management system, which is a common target for attackers due to the prevalence of vulnerabilities in its plugins."""",
         ""Explanation"": ""The event is generated upon detection of a Drupal 8 remote code execution attempt.""
     ][
   {
     ""sid"": ""46316"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution attack on Drupal 8 websites by exploiting a vulnerability in the 'element_parents' parameter, which is a common method attackers use to inject malicious code into web applications."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a remote code execution vulnerability in Drupal 8 is detected.""
   }
 ]","['T1190', 'T1190', 'T1203', 'T1190', 'T1190', 'T1204', 'T1190', 'T1190', 'T1190', 'T1203', 'T1190']",['T1106']
60338,"[
         ""sid"": ""60338"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"This rule detects malicious activity targeting a web server by exploiting public-facing applications. The attacker aims to gain unauthorized access to the server or execute arbitrary commands using a PHP web shell embedded into the system. This technique involves compromising web applications, typically through vulnerabilities, to establish a command-and-control channel, allowing for remote access and control of the server."""",
         ""Explanation"": ""This rule detects outbound connections to a php web shell.""
     ],
     [
         ""sid"": ""60338"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"This rule detects the use of the php web shell to execute arbitrary commands and scripts on the web server. The attacker utilizes the command interpreter capabilities of the web shell to gain remote access and control, allowing them to perform malicious actions within the compromised environment."""""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""60338"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule identifies an outbound connection attempt from a compromised host to a known malicious IP address, which is associated with a PHP web shell known as 'DiveShell'. Web shells are often used by attackers to maintain remote access to compromised servers and execute arbitrary commands."""",
         ""Explanation"": ""This rule detects an attempt at exploitation of public facing web application""
     }
 ][
   {
     ""sid"": ""60338"",
     ""Technique ID"": ""T1486"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": ""Masquerading involves disguising a malicious activity to appear legitimate, such as using a trusted IP address or port to evade detection. The rule detects an outbound connection attempt by a malicious PHP web shell named 'DiveShell' that masquerades as legitimate activity by using the HTTP protocol and port 80, which is commonly used by web browsers."",
     ""Explanation"": ""This event is generated when malware DiveShell attempts to make an outbound connection.""
   }
 ][
   {
     ""sid"": ""60338"",
     ""Technique ID"": ""T1564"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick victims into providing sensitive information or clicking malicious links. This rule detects an outbound connection attempt from a web shell (DiveShell) to a remote host, which could be used as part of a phishing campaign to deliver malware or compromise sensitive data."""",
     ""Explanation"": ""This rule detects an outbound connection from a known malicious IP.""
   }
 ][
   {
     ""sid"": ""60338"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring a tool or capability into a target environment and executing it, often for lateral movement or persistence purposes. This rule detects an outbound connection attempt from a PHP webshell (DiveShell) with a file_data pattern that includes ""command_hist[current_line] = document.shell.command.value|3B|"", indicating that the webshell is attempting to exfiltrate information or execute commands on the target system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""60338"",
     ""Technique ID"": ""T1005"",
     ""Technique name"": ""Data from Local System"",
     ""Quotes"": """"Data from Local System techniques involve searching local system sources, such as file systems, to find files of interest and sensitive data prior to exfiltration. This rule detects an attempt by a PHP web shell ('DiveShell') to establish an outbound connection to a command and control server, which could be used to exfiltrate sensitive data from the compromised host."""",
     ""Explanation"": ""This rule detects outbound connection attempts from a PHP web shell.""
   },
   {
     ""sid"": ""60338"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve transferring data from the compromised environment to a remote location via established command and control channels. This rule detects an attempt by a PHP web shell ('DiveShell') to exfiltrate data to a remote command and control server via an established HTTP connection."""",
     ""Explanation"": ""This rule detects outbound connection attempts from a PHP web shell.""
   },
   {
     ""sid"": ""60338"",
     ""Technique ID"": ""T1530"",
     ""Technique name"": ""Data from Cloud Storage"",
     ""Quotes"": """"Data from Cloud Storage techniques involve accessing data stored in cloud storage services. This rule detects the presence of AWS credentials in a PHP script, which could be used to access and exfiltrate data from AWS storage services."""",
     ""Explanation"": ""This rule detects the presence of AWS credentials in a PHP script.""
   }
 ][
     ""sid"": ""60338"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""Account Discovery"",
     ""Quotes"": """"Account Discovery techniques involve attempts to obtain a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. The rule detects an attempt to enumerate user accounts on the system by capturing traffic where the attacker is attempting to retrieve the command history from a web shell using the 'command_hist[current_line]' parameter, which is a common method used to gather information about the system and identify potential targets."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
         {
             ""sid"": ""60338"",
             ""Technique ID"": ""T1111"",
             ""Technique name"": ""File and Directory Discovery"",
             ""Quotes"": """"File and Directory Discovery techniques involve listing and searching for files and directories on a system to identify potential targets for exfiltration, deletion, or other malicious actions. This rule detects a web shell uploaded to the target system that uses a PHP function to list the contents of the current directory, allowing attackers to explore the file system and identify sensitive data or other targets of interest."""",
             ""Explanation"": ""This event is reported when a file and directory discovery attempt is detected.""
         },
         {
             ""sid"": ""60338"",
             ""Technique ID"": ""T1105"",
             ""Technique name"": ""Remote File Copy"",
             ""Quotes"": """"Remote File Copy techniques involve copying files from a remote system to a local system, or vice versa. This rule detects a web shell uploaded to the target system that uses a PHP function to copy a file from the remote system to the local system, allowing attackers to exfiltrate sensitive data or introduce additional malicious files."""",
             ""Explanation"": ""This event is reported when an attempt to copy a file over a network is detected.""
         },
         {
             ""sid"": ""60338"",
             ""Technique ID"": ""T1059"",
             ""Technique name"": ""Command and Scripting Interpreter"",
             ""Quotes"": """"Command and Scripting Interpreter techniques involve executing commands or scripts on a system to perform various actions, such as modifying files, installing malware, or exfiltrating data. This rule detects a web shell uploaded to the target system that uses a PHP function to execute a shell command, allowing attackers to execute arbitrary commands on the system."""",
             ""Explanation"": ""This event is reported when a command or a script is executed on the system.""
         }
     ][
     {
         ""sid"": ""60338"",
         ""Technique ID"": ""T1105"",
         ""Technique Name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve the movement or transfer of tools or data into an environment to facilitate follow-on actions or objectives. This rule detects an attempt to send malicious content or commands embedded in an HTML form to an external host using the DiveShell web shell (a common tool for attackers to maintain access and execute commands on compromised web servers)."""",
         ""Explanation"": ""The rule detects an outbound connection attempt to a remote host by a PHP web shell.""
     },
     {
         ""sid"": ""60338"",
         ""Technique ID"": ""T1570"",
         ""Technique Name"": ""Lateral Tool Transfer"",
         ""Quotes"": """"Lateral Tool Transfer techniques involve the transfer and movement of adversarial tools or data from one system or location to another within the victim environment. This rule detects an attempt by a web shell (DiveShell) to communicate with an external host, which could be used by attackers to move tools or data between compromised systems within the network."""",
         ""Explanation"": ""Web shells are often used to transfer tools or data between different systems in a network.""
     }
 ][
 ""sid"": ""60338"",
 ""Technique ID"": ""T1533"",
 ""Technique name"": ""Phishing"",
 ""Quotes"": """"Phishing techniques involve constructing fraudulent e-mails and websites that mimic legitimate sources to trick users into disclosing sensitive information or granting access to accounts or systems. This rule detects an attempt to connect to a known phishing domain, which is a common method used by attackers to compromise credentials and spread malware."""",
 ""Explanation"": ""This even is triggered when a host on your network tries to connect to a known phishing domain""
 ][
     {
         ""sid"": ""60338"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted PHP web shell connection to a remote server, which is a common method attackers use to gain remote control over a compromised web server or web application."""",
         ""Explanation"": ""The rule detects outbound connections from an internal web server to an external IP address, indicating a potential command and control (C&C) communication.""
     },
     {
         ""sid"": ""60338"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or capabilities from an external location to the objective environment. This rule detects an attempt to download a PHP web shell, which is a common tool used by attackers to gain remote control over a compromised web server or web application."""",
         ""Explanation"": ""The rule detects an inbound connection from an external IP address to an internal web server, indicating a potential attempt to transfer a tool or capability to the internal network.""
     }
 ]","['T1190', 'T1059', 'T1190', 'T1486', 'T1564', 'T1105', 'T1005', 'T1041', 'T1530', 'T1087', 'T1111', 'T1105', 'T1059', 'T1105', 'T1570', 'T1533', 'T1190', 'T1105']",['T1505']
59930,"[
     ""sid"": ""59930"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using command and scripting interpreters to execute commands, scripts, or binaries. The rule detects an attempt to download a JSP webshell named Noop, which is a common method used by attackers to gain remote access to a compromised system by executing arbitrary commands."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
         ""sid"": ""59930"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools onto a system for use in follow-on operations. The rule detects the download of a Java web shell (jsp.webshell.noop) that can be used for remote command execution and persistence."""",
         ""Explanation"": ""This event is generated when an attempt is made to download a web shell.""
     ],
     [
         ""sid"": ""59930"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques are used to collect information about the target network environment, including open ports and services. This rule detects an attempt to gather information about the target network by sending HTTP requests to specific endpoints, which is a common method used for network reconnaissance."""",
         ""Explanation"": ""This event is generated when an attempt is made to scan a network.""
     ]
 ][
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1490"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web shells are scripts designed to provide remote access to a compromised host. This event is generated when an attempt is made to download a malicious Java-based web shell (Jsp.Webshell.Noop) through an HTTP POST request. The file_data keyword indicates the presence of specific Java classes and methods within the HTTP content, which are commonly used in web shell functionality."""",
     ""Explanation"": ""This rule detects an attempt to download a malicious Java-based web shell (Jsp.Webshell.Noop) over an HTTP request.""
   },
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to download a malicious Java-based web shell (Jsp.Webshell.Noop) through an HTTP POST request. The file_data keyword indicates the presence of specific Java classes and methods within the HTTP content, which are commonly used in web shell functionality."""",
     ""Explanation"": ""Exploitation of a vulnerability in a web application to download a web shell.""
   },
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting software vulnerabilities in client applications to execute code. This event is generated when an attempt is made to download a malicious Java-based web shell (Jsp.Webshell.Noop) through an HTTP POST request. The file_data keyword indicates the presence of specific Java classes and methods within the HTTP content, which are commonly used in client-side attacks, including the execution of arbitrary code."""",
     ""Explanation"": ""Exploitation of a vulnerability in a client-side application to execute a web shell.""
   }
 ][
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1106"",
     ""Technique name"": ""Custom Malware"",
     ""Quotes"": """"Custom Malware techniques involve developing and using unique malicious software or tools, customized for a specific target or operation. The rule detects an attempt to download a Java web shell named 'noop', which is a custom piece of malware commonly used by attackers to establish a backdoor on compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, which is an attacker-created script that is placed on a compromised web server to provide a remote interface for executing arbitrary commands. The rule detects an attempt to download a Java web shell named 'noop', which is a common method attackers use to maintain persistent access to compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1156"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shells techniques provide adversaries with a means of executing arbitrary commands on a remote system by uploading and executing a small web script. This rule detects an attempted download of the Jsp.Webshell.Noop web shell, which is commonly used by adversaries to gain remote access to and execute commands on a compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools and capabilities into a target network to support malicious operations. In this case, the rule detects malicious Java code being downloaded from a web server, which suggests an attempt to transfer malicious tools onto the victim's system."""",
     ""Explanation"": ""The rule detects an attempt to download a malicious Java web shell called 'Jsp.Webshell.Noop', which allows remote attackers to execute arbitrary commands on the compromised system.""
   }
 ][
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1122"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell to gain unauthorized remote access to a system. The rule looks for indicators of a Java-based web shell (Np web shell) being downloaded, which is a common method used by attackers to establish a persistent presence on a compromised system."""",
     ""Explanation"": ""This rule is designed to detect a malware download attempt that involves a Java web shell. A web shell is a malicious script that can be uploaded to a web server to provide an attacker with remote access to the server.""
   }
 ][
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to download the 'Jsp.Webshell.Noop' webshell, which attackers can use to execute malicious commands on the compromised web server."""",
     ""Explanation"": ""The event indicates an attempt by external source IP to download a malicious Java-based webshell.""
   },
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to download the 'Jsp.Webshell.Noop' webshell, which attackers can use to execute malicious commands on the compromised web server."""",
     ""Explanation"": ""The event indicates an attempt by external source IP to download a malicious Java-based webshell.""
   }
 ][
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1559"",
     ""Technique name"": ""Inter-Process Communication"",
     ""Quotes"": """"Inter-Process Communication (IPC) techniques involve abusing IPC mechanisms for local code or command execution. In this example, the rule detects a malicious attempt to download a JSP web shell using Java Reflection API via IPC, where the attacker abuses the request.getParameter() method to retrieve the shell's code and write it to a file using java.io.FileOutputStream."""",
     ""Explanation"": """"
   }
 ][
     {
         ""sid"": ""59930"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve deliberately encoding or encrypting files or information to make them difficult to discover or analyze. Java web shells are often obfuscated to evade detection, and the rule looks for specific Java classes and methods commonly used in web shells, such as 'java.util.*', 'java.io.FileOutputStream', 'request.getParameter(|22|name|22|)', and 'request.getParameter(|22|contentString|22|)'."""",
         ""Explanation"": ""Web shells are malicious scripts that allow remote attackers to control a compromised web server. Obfuscation is used to make web shells harder to detect and analyze.""
     },
     {
         ""sid"": ""59930"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script that provides attackers with a remote command-line interface to a compromised web server. This rule detects an attempt to download a Java web shell, which is a common type of web shell used by adversaries to maintain persistent access to compromised systems."""",
         ""Explanation"": ""Web shells are malicious scripts that allow remote attackers to control a compromised web server. The rule looks for specific Java classes and methods commonly used in web shells, such as 'java.util.*', 'java.io.FileOutputStream', 'request.getParameter(|22|name|22|)', and 'request.getParameter(|22|contentString|22|)'.""
     }
 ][
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1093"",
     ""Technique name"": ""Download File"",
     ""Quotes"": """"Download File techniques involve obtaining a file from an external location and executing or caching it for later execution. The rule specifically looks for an attempt to download a Java web shell with the payload contained within a request parameter. Web shells are commonly used to provide unauthorized remote access to a compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected, the file is downloaded via JSP webShell which is a Java web application. It can be used to bypass application security mechanisms and execute arbitrary code on the server""
   },
   {
     ""sid"": ""59930"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking a user into executing malicious code by persuading them to open a malicious file, click a malicious link, or otherwise interact with the malicious code. The rule detects an attempt to download a web shell, which is a malicious script that can be used to execute arbitrary commands on a compromised system. Attackers often trick users into downloading web shells by disguising them as legitimate files or links."""",
     ""Explanation"": ""The malicious file is downloaded and executed may cause user execution. The user will click on the malicious link or open the malicious file.""
   }
 ]","['T1059', 'T1105', 'T1040', 'T1490', 'T1190', 'T1203', 'T1106', 'T1189', 'T1156', 'T1105', 'T1122', 'T1189', 'T1190', 'T1559', 'T1105', 'T1189', 'T1093', 'T1204']",['T1094']
50463,"[
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1003"",
     ""Technique Name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials, such as password hashes, from a compromised operating system. This rule detects an attempt to use the Mimikatz tool, a popular post-exploitation tool for extracting credentials from Windows systems, via Server Message Block (SMB), which is a common method attackers use to escalate privileges and gain access to sensitive information."""",
     ""Explanation"": ""Mimikatz is a tool that can be used to dump credentials from memory, extract NTLM hashes, pass-the-hash, and perform other actions that can help attackers maintain persistence on a compromised system.""
   }
 ][
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1003"",
     ""Technique Name"": ""OS Credential Dumping"",
     ""Quotes"": ""\""OS Credential Dumping techniques involve extracting credentials from a compromised operating system.\"""",
     ""Explanation"": ""Mimikatz is a tool that can be used to dump credentials from a compromised system.""
   },
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1002"",
     ""Technique Name"": ""System Information Discovery"",
     ""Quotes"": ""\""System Information Discovery techniques involve gathering information about the system to gain situational awareness and identify potential targets for exploitation.\"""",
     ""Explanation"": ""Mimikatz can also be used to gather system information.""
   },
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": ""\""Network Service Scanning techniques involve identifying and probing network services for vulnerabilities or misconfigurations.\"""",
     ""Explanation"": ""Mimikatz can be used to scan for network services.""
   }
 ][
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1003"",
     ""Technique name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials from operating system memory or local storage, such as password hashes, cleartext passwords, or cached credentials. Mimikatz, a tool commonly used in this technique, allows attackers to extract credentials from processes in memory, such as LSASS.exe, which stores hashed and cached credentials."""",
     ""Explanation"": ""Mimikatz is a tool used for credential dumping and can be used to extract credentials from server memory, potentially allowing an attacker to access other systems on the network.""
   }
 ][
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1003"",
     ""Technique name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials stored on a system. The rule looks for an SMB network session that is attempting to dump password hashes using Mimikatz, a tool commonly used for credential theft."""",
     ""Explanation"": ""The rule is looking for a SMB network session that is attempting to dump password hashes using Mimikatz, a tool commonly used for credential theft.""
   }
 ][
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1003"",
     ""Technique Name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve obtaining credentials from memory, registry, and other system resources. The rule detects the use of Mimikatz via SMB, a tool commonly used to extract credentials from memory, as it refers to 'Mimikatz use via SMB attempt' and looks for SMB messages containing specific patterns."""",
     ""Explanation"": ""This rule detects Mimikatz which is a tool used to dump credentials from memory.""
   }
 ]""sid"": ""50463"",
         ""Technique ID"": ""T1003"",
         ""Technique name"": ""OS Credential Dumping"",
         ""Quotes"": """"OS Credential Dumping involves extracting credentials from a system's local or cached credentials stores. The rule detects Mimikatz, a well-known tool used by attackers to dump credentials from memory, which is a common method for obtaining credentials for lateral movement."""",
         ""Explanation"": ""Command line usage of Mimikatz to dump lsass process credentials stored in memory""[
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1003"",
     ""Technique Name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials stored in a system's memory or local storage to obtain cleartext passwords or hashes for offline cracking. This rule detects an attempt to use Mimikatz, a popular credential dumping tool, over SMB, which is a common method attackers use to steal credentials from compromised systems."""",
     ""Explanation"": ""Mimikatz is an open-source tool that can be used to extract credentials from a compromised system. It can be used to access cached logon credentials, plaintext passwords, and other sensitive information. This rule triggers when traffic matching the Mimikatz protocol is detected on port 445.""
   },
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1005"",
     ""Technique Name"": ""Security Software Bypassing"",
     ""Quotes"": """"Security Software Bypassing techniques involve disabling or evading security software to prevent detection of malicious activity. Mimikatz is a tool that can be used to disable or bypass certain security controls, such as antivirus and intrusion detection systems, allowing attackers to operate more freely on a compromised system."""",
     ""Explanation"": ""Mimikatz is a tool that can be used to disable or bypass certain security controls, such as antivirus and intrusion detection systems. This rule triggers when traffic matching the Mimikatz protocol is detected on port 445, which could indicate that an attacker is attempting to disable or bypass security controls on a compromised system.""
   }
 ][
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1003"",
     ""Technique Name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials from an operating system to gain privileged access. This Mimikatz rule specifically detects an attempt to dump LSASS process credentials using the 'sekurlsa::logonpasswords' module, which can be used to obtain plaintext passwords."""",
     ""Explanation"": ""The rule tries to detect the use of the Mimikatz tool over SMB which tries to dump credentials from memory""
   }
 ][
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1003"",
     ""Technique name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials from memory or the file system, typically using built-in operating system tools or specialized credential dumping utilities."""",
     ""Explanation"": ""This rule looks for the use of the Mimikatz tool to dump credentials from a remote system via SMB, indicating an attempt to steal credentials for lateral movement or privilege escalation.""
   }
 ][
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1003"",
     ""Technique Name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve stealing credentials stored on endpoint or network devices. This rule specifically detects attempts to use Mimikatz, a well-known tool for extracting credentials from memory of Windows machines, via SMB. Attackers commonly use Mimikatz to steal credentials, which can be used for lateral movement and privilege escalation."""",
     ""Explanation"": ""This rule detects attempts to use Mimikatz, which is a tool that is used to extract credentials from the memory of a Windows machine.""
   }
 ][
   {
     ""sid"": ""50463"",
     ""Technique ID"": ""T1003"",
     ""Technique name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials from memory or from files on a compromised system. Mimikatz, mentioned in the rule, is a well-known tool for extracting credentials from memory in Windows systems."""",
     ""Explanation"": ""This event is also generated when actions relating to credential dumping are detected.""
   }
 ]","['T1003', 'T1003', 'T1002', 'T1046', 'T1003', 'T1003', 'T1003', 'T1003', 'T1003', 'T1005', 'T1003', 'T1003', 'T1003', 'T1003']",['T1187']
59931,"[
   {
     ""sid"": ""59931"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve acquiring credentials from memory, files, or other sources within a compromised environment to escalate privileges or move laterally through a network. This rule detects a Java web shell (Jsp.Webshell.Chopper) attempting to upload malicious code to the server and perform credential dumping using reflection, by leveraging the 'DriverManager.getConnection()', 'ServletOutputStream()', and 'ResultSetMetaData()' APIs."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""59931"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a system when a user visits a website. The rule detects an attempt to upload a malicious JSP webshell (Chopper) through a web application, which is a common infection vector for drive-by compromise attacks."""",
     ""Explanation"": ""This event is generated when activity relating to the malware is detected.""
   }
 ][
   {
     ""sid"": ""59931"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to upload a malicious JSP web shell, often used by attackers to establish a backdoor and remotely control a compromised system."""",
     ""Explanation"": ""The rule triggers when a malicious JSP web shell is uploaded, which is often used to establish a backdoor on the compromised host and allow remote access to the attacker.""
   },
   {
     ""sid"": ""59931"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Web Service Attack"",
     ""Quotes"": """"Web Service Attack techniques involve targeting vulnerabilities in web services to gain unauthorized access or execute arbitrary code. JSP web shells are commonly used to attack web applications and provide attackers with a backdoor to the system."""",
     ""Explanation"": ""The rule detects an attempt to upload a malicious JSP web shell, which is often used to exploit vulnerabilities in web applications and establish a backdoor for remote access.""
   }
 ][
   {
     ""sid"": ""59931"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve moving an attacker's toolset or malicious software onto a system in order to execute and accomplish the attack. This rule detects an attempt to transfer a JavaServer Pages (JSP) web shell, known as Chopper, onto a system using a POST request. Web shells are commonly used by attackers to gain remote access to and control of compromised systems."""",
     ""Explanation"": ""This event is generated when the Ingress Tool Transfer activity is detected.""
   },
   {
     ""sid"": ""59931"",
     ""Technique ID"": ""T1071.001"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell to obtain a remote shell on a web server, which attackers can use to execute commands, upload or download files, and perform other malicious activities. The rule detects an attempt to transfer a JSP web shell, known as Chopper, onto a system using a POST request. Web shells are commonly used by attackers to gain remote access to and control of compromised systems."""",
     ""Explanation"": ""This event is generated when the Web Shell activity is detected.""
   }
 ][
     {
         ""sid"": ""59931"",
         ""Technique ID"": ""T1105"",
         ""Technique Name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring malicious tools or data from external sources into a target system."""",
         ""Explanation"": ""This rule detects the uploading of JSP webshell (Chopper) that provides a way for an attacker to remotely control an application server.""
     },
     {
         ""sid"": ""59931"",
         ""Technique ID"": ""T1059"",
         ""Technique Name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"Command and Scripting Interpreter techniques involve using command- or scripting-based tools to perform malicious actions on a system. The rule looks for the use of 'DriverManager.getConnection', 'ServletOutputStream', 'ResultSetMetaData', which point to the usage of JSP for malicious purposes."""",
         ""Explanation"": ""The rule triggers when 'DriverManager.getConnection', 'ServletOutputStream', 'ResultSetMetaData' and other certain strings are found, which are indicators of a command and scripting interpreter being used.""
     }
 ][
     {
         ""sid"": ""59931"",
         ""Technique ID"": ""T1210"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempt to upload a malicious JavaServer Page (JSP) webshell through a web application. JSP webshells provide attackers with a way to execute arbitrary code on the target server and maintain persistent access."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     },
     {
         ""sid"": ""59931"",
         ""Technique ID"": ""T1189"",
         ""Technique Name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using an attacker-controlled web shell to facilitate remote access to and control over an application or server. The rule detects an attempt to upload a JSP webshell, which is a type of web shell commonly used by attackers to execute commands and control compromised systems remotely."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""Sid"": ""59931"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, which is a script that can be executed through a web application or server to provide the adversary with a remote shell-like interface. This rule detects an upload attempt by a Java-based web shell known as JSP Chopper, which allows attackers to execute arbitrary code on vulnerable web servers."""",
     ""Explanation"": ""This event is generated when an attempt is made to upload the JSP Chopper web shell, which can be used to execute arbitrary code on a compromised web server.""
   }
 ][
     {
         ""sid"": ""59931"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques refer to adversaries using a web shell to gain access to and control a web server. JSP.Webshell.Chopper is a specific type of web shell used by adversaries to upload and execute arbitrary code on compromised web servers. The rule detects an attempt to upload the JSP.Webshell.Chopper payload onto the target web server."""",
         ""Explanation"": ""This event is generated when activity relating to JSP.Webshell.Chopper is detected.""
     }
 ][
     ""sid"": ""59931"",
     ""Technique ID"": ""T1490"",
     ""Technique name"": ""Inhibit System Recovery"",
     ""Quotes"": """"Inhibit System Recovery techniques involve modifying or disabling system or application components to prevent data recovery and restore functionalities. The rule is detecting an attempt to upload a Jsp.Webshell.Chopper; a web shell is often used to maintain access to a compromised system. By uploading a web shell, the adversary is attempting to establish persistence on the system and make it harder to recover the system to a clean state."""",
     ""Explanation"": ""Trying to upload a web shell to a system can be considered an attempt to maintain persistence and make recovery more difficult in case the system is restored.""
 ][
   {
     ""sid"": ""59931"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted web shell upload using Java servlets and JDBC, which is a common method attackers use to create a backdoor and execute arbitrary code on web servers."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""59931"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Establish Web Shell"",
         ""Quotes"": """"Establish Web Shell techniques involve deploying a web shell on a targeted system, which provides a backdoor for remote access and control. The rule detects an attempt to upload a Java-based web shell called Chopper, which is commonly used by adversaries to gain persistent access to compromised web servers."""",
         ""Explanation"": ""The rule triggers when it detects the presence of specific keywords related to JDBC (Java Database Connectivity) and Servlet classes, which are commonly used by Java web shells like Chopper.""
     ]","['T1105', 'T1189', 'T1190', 'T1189', 'T1105', 'T1071.001', 'T1105', 'T1059', 'T1210', 'T1189', 'T1189', 'T1105', 'T1490', 'T1190', 'T1105']",['T1094']
21038,"[
     ""sid"": ""21038"",
     ""Technique ID"": ""T1027"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information are techniques in which adversaries encode data to evade detection or analysis. The rule indicates the detection of a JavaScript function 'String.fromCharCode' being used with multiple encoding types, which is a technique commonly employed by attackers to obfuscate malicious code or hide indicators of compromise."""",
     ""Explanation"": ""This event is generated when a policy violation occurs.""
 ][
     ""sid"": ""21038"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve disguising the true nature of files or data on a system to evade detection or analysis. This rule detects the use of the 'String.fromCharCode()' function with multiple encoding types, which is a common method used to obfuscate malicious content by converting it into a series of ASCII codes."""",
     ""Explanation"": ""The rule detects when the string ""String.fromCharCode"" is used in a pcre statement. This could indicate an attempt to obfuscate a file or piece of information.""
 ][
         ""sid"": ""21038"",
         ""Technique ID"": ""T1027"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve disguising or encoding data, code, or files to avoid detection or analysis. This rule detects the use of multiple encoding types within a single 'String.fromCharCode' JavaScript function, which is a common method attackers use to make malicious code harder to analyze."",
         ""Explanation"": ""Detects an obfuscated string in HTTP traffic""
     ][
         ""sid"": ""21038"",
         ""Technique ID"": ""T1027"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve disguising malicious files or data to evade detection or analysis. In this case, the rule detects an attempt to obfuscate JavaScript code using String.fromCharCode() with multiple encoding types, which is a common technique used by attackers to evade detection and analysis."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""21038"",
         ""Technique ID"": ""T1027"",
         ""Technique Name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve encoding, encrypting, or otherwise modifying files or information to make them difficult to detect or analyze. This rule detects the use of the 'String.fromCharCode' function with multiple encoding types, which is a common method attackers use to obfuscate malicious content and evade detection."""",
         ""Explanation"": ""This rule matches when a string is defined using multiple encoding types, such as octal, decimal, and hexadecimal. This could be used to obfuscate malicious content, as it would be more difficult to detect.""
     }
 ][
   {
     ""sid"": ""21038"",
     ""Technique ID"": ""T1001"",
     ""Technique Name"": ""Data Obfuscation"",
     ""Quotes"": """"Data Obfuscation techniques involve altering or disguising data, such as encoding it or using steganography, to hinder detection or analysis. This rule detects attempts to obfuscate data using the String.fromCharCode() JavaScript function with multiple encoding types, which adversaries may use to hide malicious payloads or avoid detection."""",
     ""Explanation"": ""This event is generated when activity relating to potential obfuscation of data is detected.""
   }
 ][
   {
     ""sid"": ""21038"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding, encrypting, or otherwise transforming files or information to evade detection or analysis. The rule detects the use of the JavaScript 'String.fromCharCode' function with multiple encoding types, which is a common method attackers use to obfuscate malicious code to avoid detection by security tools."""",
     ""Explanation"": ""The rule triggers when it detects multiple encoding types being used in the 'String.fromCharCode' function within a JavaScript context, indicating a potential attempt to obfuscate malicious code.""
   }
 ][
   {
     ""sid"": ""21038"",
     ""Technique ID"": ""T1027"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve disguising malicious content within a file or data to evade detection by security controls. This rule detects the use of string obfuscation techniques, such as String.fromCharCode with multiple encoding types, which is commonly used to hide malicious code or data within web pages or applications."""",
     ""Explanation"": ""Potential attempt to obfuscate malicious content using String.fromCharCode with multiple encoding types.""
   }
 ][
   {
     ""Sid"": ""21038"",
     ""Technique ID"": ""T1027"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": [
       """"Obfuscated Files or Information techniques involve evading detection by encoding, encrypting, or otherwise transforming files or information to make them appear normal or benign."""",
       """"String.fromCharCode is a JavaScript function that takes a string of Unicode character codes and returns the corresponding string. This rule detects the use of String.fromCharCode with multiple encoding types, which is a common technique used to obfuscate malicious code or data."""",
       """"The use of String.fromCharCode to obfuscate data indicates an attempt to evade detection by security tools or analysts.""
     ],
     ""Explanation"": ""Techniques involve evading detection by encoding, encrypting, or otherwise transforming files or information to make them appear normal or benign. The use of String.fromCharCode to obfuscate data indicates an attempt to evade detection.""
   }
 ][
   {
     ""sid"": ""21038"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or encrypting files or information to make them difficult to discover or analyze. The rule detects the use of the 'String.fromCharCode' function with multiple encoding types, which is a common method used by attackers to obfuscate malicious code and evade detection."""",
     ""Explanation"": ""The Snort rule is capable of detecting the use of ‘fromCharCode’ with multiple encoding types. The rule detects malicious activity that attempts to obfuscate strings by using multiple types of encoding schemes.""
   }
 ][
   {
     ""sid"": ""21038"",
     ""Technique ID"": ""T1027"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve disguising malicious files or information to evade detection or analysis. This rule detects the use of the string.fromCharCode() method with multiple encoding types, which is commonly used to obfuscate malicious JavaScript code. Obfuscation makes it more difficult for security tools to identify and block malicious activity."""",
     ""Explanation"": ""Obfuscated Files or Information techniques involve disguising malicious files or information to evade detection or analysis. This rule detects the use of the string.fromCharCode() method with multiple encoding types, which is commonly used to obfuscate malicious JavaScript code. Obfuscation makes it more difficult for security tools to identify and block malicious activity.""
   }
 ]","['T1027', 'T1027', 'T1027', 'T1027', 'T1027', 'T1001', 'T1027', 'T1027', 'T1027', 'T1027', 'T1027']",['T1027']
36304,"[
   {
     ""sid"": ""36304"",
     ""Technique ID"": ""T1486"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve hiding the true identity of a user or device to appear as another, legitimate entity on a network. This rule detects outbound communication from a compromised host to a malicious domain, using a user agent commonly associated with the Microsoft Windows HTTP stack, which could indicate an attempt to blend in with legitimate traffic."""",
     ""Explanation"": ""This rule detects outbound communication from a compromised host to a malicious domain, using a user agent commonly associated with the Microsoft Windows HTTP stack, which could indicate an attempt to blend in with legitimate traffic.""
   },
   {
     ""sid"": ""36304"",
     ""Technique ID"": ""T1106"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control (C2) techniques involve adversaries communicating with compromised systems to issue commands, exfiltrate data, or maintain persistence. This rule detects outbound communication from a compromised host to a malicious domain, which is a common method used by malware to establish communication with its C2 server."""",
     ""Explanation"": ""Detects outbound communication from a compromised host to a malicious domain, indicating possible command and control (C2) activity.""
   }
 ][
   {
     ""sid"": ""36304"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": """"Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The rule detects communication with a command and control server using a non-standard HTTP method and a custom URI, which is a common technique used to evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""36304"",
     ""Technique ID"": ""T1568"",
     ""Technique name"": ""Dynamic Resolution"",
     ""Quotes"": """"Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. The rule detects communication with a command and control server using a dynamically generated domain name, which can be used to evade blacklisting and detection mechanisms."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""36304"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding involves obscuring the true nature of data by encoding it in a different format. The rule detects the presence of base64-encoded data in the HTTP request body, which is a common technique used by malware to evade detection and analysis."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""36304"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": ""\""External Remote Services techniques involve using externally accessible services and protocols to establish an initial foothold or maintain persistence within a network. The rule identifies traffic outbound to a remote IP address on port 80, which is typically associated with HTTP traffic. This suggests that the malware may be attempting to communicate with a remote command and control server over HTTP, using the '/wp-content/plugins/WPCoreLog/log.php' path as a covert channel."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""36304"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": ""\""File and Directory Discovery techniques involve searching a host or network share for specific files or directories that may contain sensitive information. The rule contains a pattern that matches the string '/wp-content/plugins/WPCoreLog/log.php'. This indicates that the malware may be attempting to locate or access this specific file, which could contain sensitive information or provide access to additional malware components."",
     ""Explanation"": ""Malware often searches for specific files or directories that may contain sensitive information.""
   }
 ][
         ""sid"": ""36304"",
         ""Technique ID"": ""T1049"",
         ""Technique Name"": ""Network Share Discovery"",
         ""Quotes"": """"Network Share Discovery techniques involve searching for and identifying network shares accessible to the adversary. The rule detects an attempt to request a directory listing from a remote Windows share (\\192.168.1.0\share), which is a common method used by attackers to identify and access sensitive data."""",
         ""Explanation"": ""The event indicates an attempt to access a remote share.""
     ][
     ""sid"": ""36304"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to make it inaccessible to unauthorized individuals or processes. This rule detects outbound connections from the compromised host to a remote server, which may indicate an attempt to exfiltrate data. The presence of encrypted data in the HTTP client body suggests that the attacker is attempting to hide the contents of the data from detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""36304"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring and executing tools or capabilities onto a system from another system or location. This rule detects outbound HTTP traffic to a specific URI path (""""/wp-content/plugins/WPCoreLog/log.php"""") and HTTP header (""""WinHttp.WinHttpRequest.5"""") associated with a known malware Trojan (WinPlock variant), indicating the delivery and execution of malicious tools by the Trojan."""",
     ""Explanation"": ""The rule detects a specific malware Trojan's (WinPlock variant) outbound connection, suggesting the transfer and execution of malicious tools or capabilities onto the system.""
   }
 ][
   {
     ""sid"": ""36304"",
     ""Technique ID"": ""T1526"",
     ""Technique name"": ""Hijack Execution Flow"",
     ""Quotes"": """"Hijack Execution Flow techniques involve altering the normal flow of execution for a program or process. This rule detects an outbound connection to a known command and control server used by the WinPlock Trojan, which is a variant of the Plock Trojan that often uses this method to communicate with its command and control server and execute malicious activities."""",
     ""Explanation"": ""This rule matches traffic associated with the WinPlock trojan""
   }
 ][
         ""sid"": ""36304"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in the WordPress WPCoreLog plugin, which is a common method attackers use to exploit web applications by manipulating plugins."""",
         ""Explanation"": ""HTTP traffic to a known malicious host, using the WinHTTP.WinHttpRequest.5 user-agent. It is associated with the WinPlock variant of the Win32/Plock Trojan.""
     ][
     ""sid"": ""36304"",
     ""Technique ID"": ""T1564"",
     ""Technique name"": ""Hide Artifacts"",
     ""Quotes"": """"Hide Artifacts techniques involve concealing malicious artifacts to evade detection. This rule detects outbound activity associated with the WinPlock variant of the Win.Trojan malware, which uses various techniques to hide its presence, including disguising its communication as legitimate web traffic by using common URLs and HTTP headers."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""36304"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Access Software"",
     ""Quotes"": """"Remote Access Software techniques involve the execution or manipulation of remote access software, often with the goal of remote execution, covert monitoring, or lateral movement. This rule detects activity associated with the WinPlock variant of the Win32/Plock Trojan, which uses remote access to allow an attacker to remotely execute commands on the victim's system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""36304"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve the use of command and control (C2) channels to exfiltrate data from a compromised system. This rule detects outbound communication to a known C2 server (attacker-controlled server) by a malware variant known as WinPlock, likely used for data exfiltration purposes."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1486', 'T1106', 'T1048', 'T1568', 'T1071', 'T1133', 'T1083', 'T1049', 'T1071', 'T1105', 'T1526', 'T1190', 'T1564', 'T1021', 'T1041']",['T1176']
23934,"[
     {
         ""sid"": ""39314"",
         ""Technique ID"": ""T1612"",
         ""Technique Name"": ""Build Image on Host"",
         ""Quotes"": """"Build Image on Host techniques involve building a malicious image directly on a host machine, allowing adversaries to create customized images that may evade detection and bypass defenses that rely on monitoring for the retrieval of malicious images from public registries."""",
         ""Explanation"": ""This rule detects attempts to build a container image on a host system using the 'docker build' command, which could indicate an attacker attempting to create a malicious image to deploy within the environment.""
     }
 ][
         ""sid"": ""23934"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
     ][
   {
     ""sid"": ""15605"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Exploitation for Privilege Escalation"",
     ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting software vulnerabilities in an attempt to elevate privileges. This rule matches exploit attempts of a local privilege escalation vulnerability in the kernel's sys_ptrace system call, which if successful would allow an attacker to bypass security restrictions and access sensitive data or escalate privileges."""",
     ""Explanation"": ""trying to exploit a local vulnerability to gain more privileges in the system""
   }
 ][
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) that mimics a '404 Not Found' error to disguise its communication with a command and control server, which is a common method used by keyloggers to stealthily capture input data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected and the rule has T1056 in it.""
   },
   {
     ""sid"": ""23934"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue and the rule has T1190 in it.""
   }
 ][
   {
     ""sid"": ""32256"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""System Information Discovery"",
     ""Quotes"": """"System Information Discovery techniques involve gathering details about the target system, such as its operating system, software versions, and network configuration. This rule triggers on a connection attempt to the common SSH port (22) from an external network, indicating an attempt to gather system information from the SSH service."""",
     ""Explanation"": ""This rule detects an attempted connection to port 22, which is commonly used for SSH (Secure Shell) services. SSH is often used to access and manage remote systems, exchange files, and execute commands.""
   }
 ][
     ""sid"": ""23934"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""exploit public-facing application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
 ][
   {
     ""sid"": ""23934"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
   },
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) that mimics a '404 Not Found' error to disguise its communication with a command and control server, which is a common method used by keyloggers to stealthily capture input data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""23934"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
 ][
     ""sid"": ""23939"",
     ""Technique ID"": ""T1534"",
     ""Technique name"": ""Internal Spearphishing"",
     ""Quotes"": """"Internal Spearphishing techniques involve using targeted phishing attacks within an organization to gain access to additional information or exploit other users within the same organization. This rule detects emails containing malicious URLs that appear to be from trusted internal sources but redirect to external malicious websites, a common method used in internal spearphishing attacks."""",
     ""Explanation"": ""This Suricata rule is designed to detect internal spearphishing emails that impersonate or redirect to legitimate internal resources or services.""
 ][
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) that mimics a '404 Not Found' error to disguise its communication with a command and control server, which is a common method used by keyloggers to stealthily capture input data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected. The rule detects a fake 404 response, which is a common technique used by malware to hide its communication.""
   },
   {
     ""sid"": ""23934"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
   }
 ][
         ""sid"": ""11223"",
         ""Technique ID"": ""T1583"",
         ""Technique Name"": ""Phishing for Credentials"",
         ""Quotes"": """"Phishing for Credentials techniques involve acquiring credentials by deceiving users into willingly providing them, often through social engineering or fraudulent emails. This rule matches requests to a known phishing URL that attempts to trick victims into providing their credentials by impersonating a legitimate login page."""",
         ""Explanation"": ""This rule identifies and blocks access to phishing domains, which are malicious websites designed to deceive users into providing their personal information, including credentials.""
     ]","['T1612', 'T1190', 'T1068', 'T1056', 'T1190', 'T1048', 'T1190', 'T1190', 'T1056', 'T1190', 'T1534', 'T1056', 'T1190', 'T1583']",['T1190']
43288,"[
     {
         ""sid"": ""43288"",
         ""Technique ID"": ""T1087"",
         ""Technique Name"": ""System Information Discovery"",
         ""Quotes"": """"System Information Discovery techniques involve gathering information about a system's configuration, processes, and other details to inform targeting and exploitation efforts. The rule monitors for attempts to access '/etc/motd', a file containing system information like the operating system version and hostname, indicating reconnaissance activity by adversaries seeking to gather information about a web server."""",
         ""Explanation"": ""This event is generated when access to the '/etc/motd' file is attempted.""
     }
 ][
         ""sid"": ""43288"",
         ""Technique ID"": ""T1087"",
         ""Technique name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve searching for files and directories on a system to identify potential targets or valuable data. The rule detects an attempt to access the '/etc/motd' file, which is a common target for attackers looking to gather information about the system or conduct further reconnaissance."""",
         ""Explanation"": ""This event is generated when a server-side web application attempts to access the '/etc/motd' file, which contains system information.""
     ][
   {
     ""sid"": ""43288"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching for and enumerating files and directories on a system to obtain information about the system's configuration and contents. This rule detects an attempt to access the '/etc/motd' file, which is a common target for reconnaissance activities, as it contains system information. The attacker may be attempting to gather information about the system to identify potential vulnerabilities or to exfiltrate sensitive data."""",
     ""Explanation"": ""This event is generated when an attempt to access the '/etc/motd' file is detected.""
   }
 ][
     ""sid"": ""43288"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve mapping and identifying files and directories on a system to gather information about the system and its contents. This rule detects attempts to access the '/etc/motd' file, which is commonly used by attackers to gather information about the system, such as the operating system version, hostname, and user information."""",
     ""Explanation"": ""This rule detects an attempt to access the '/etc/motd' file, which contains system information such as the hostname, version, and kernel information.""
 ][
   {
     ""sid"": ""43288"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": ""\""File and Directory Discovery techniques involve identifying and enumerating files and directories on a system or network. This rule detects an attempt to access the '/etc/motd' file, which is a common target for attackers seeking to gather information about the system."""",
     ""Explanation"": ""The rule detects an attempted access to a known file ('/etc/motd') which could be an attempt to gather information about the system.""
   }
 ][
     {
         ""sid"": ""43288"",
         ""Technique ID"": ""T1087"",
         ""Technique Name"": ""Credential Access"",
         ""Quotes"": """"Credential Access techniques involve obtaining credentials from a targeted system or using existing credentials to gain access to systems, applications, or data. This rule detects an attempt to access the '/etc/motd' file, which is a common file used to display the message of the day on Linux and Unix systems. Attackers may try to access this file to gather information about the system's configuration or to exploit known vulnerabilities."""",
         ""Explanation"": ""This event is generated when an attempt is made to access the /etc/motd file on the server. ""
     }
 ][
   {
     ""sid"": ""43288"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Account Discovery"",
     ""Quotes"": """"Account Discovery techniques involve gathering information about user accounts, including their names, user IDs, or other identifying information. The rule detects an attempt to access the '/etc/motd' file, which is a common method attackers use to gather information about the system and its users."""",
     ""Explanation"": ""This rule detects an attempt to access the '/etc/motd' file, which contains system information. This information can include the operating system version, hostname, or usernames of the system, which may be useful for attackers in reconnaissance and targeting.""
   }
 ][
   {
     ""sid"": ""43288"",
     ""Technique ID"": ""T1006"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """""",
     ""Explanation"": ""Data Exfiltration involves copying and moving data from a system, or data that has been collected on a compromised host, from the organization's network or environment. This rule identifies an attempt to access the '/etc/motd' file from an external source, which could potentially lead to data exfiltration of sensitive system information.""
   },
   {
     ""sid"": ""43288"",
     ""Technique ID"": ""T1118"",
     ""Technique Name"": ""Remote File Copy"",
     ""Quotes"": """""",
     ""Explanation"": ""Remote File Copy techniques involve copying files or data to or from a remote system. This rule detects an attempt to access the '/etc/motd' file from an external source, which could potentially involve copying sensitive system information to a remote server.""
   }
 ][
   {
     ""sid"": ""43288"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""System Information Discovery"",
     ""Quotes"": ""\""System Information Discovery techniques involve gathering information about the system environment, such as software versions, hardware configurations, and network settings. This rule detects an attempt to access the '/etc/motd' file, which typically contains system information such as the hostname, kernel version, and uptime. Attackers often target this file to gather information that can aid in further attacks."""",
     ""Explanation"": ""This event is generated when activity relating to attempted reconnaissance is detected.""
   }
 ][
   {
     ""sid"": ""43288"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials from a system in order to gain access to data or resources. This rule detects attempts to access the '/etc/motd' file on a web server, which may contain sensitive information such as user credentials or system configuration data."""",
     ""Explanation"": ""This event is generated when an attempt is made to access the '/etc/motd' file on a web server.""
   }
 ][
   {
     ""sid"": ""43288"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching for and dumping file and directory listings on the target system. This rule identifies an attempt to access the '/etc/motd' file, which contains the system's 'message of the day' and is commonly targeted by adversaries for reconnaissance to gather information about the system."""",
     ""Explanation"": ""This rule is for detecting attempted reconnaissance of the system by accessing the '/etc/motd' file, which contains the system's 'message of the day' and is commonly targeted by adversaries for reconnaissance to gather information about the system.""
   }
 ]","['T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1006', 'T1118', 'T1087', 'T1087', 'T1087']",['T1087']
60299,"[
         ""sid"": ""60299"",
         ""Technique ID"": ""T1191"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side software. This rule detects an attempt to upload a web shell using a vulnerability in PHP-based web applications, which is a common method attackers use to execute malicious code on the client-side."""",
         ""Explanation"": ""This rule triggers when an alert is generated for PHP-based web application, which is a common method attackers use to execute malicious code on the client-side.""
     ][
         ""sid"": ""60299"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in a user's web browser or installed plugins to execute malicious code without the user's knowledge. This rule detects an attempt to upload a PHP web shell using a specially crafted HTTP header, which is a common technique used in drive-by compromise attacks to establish a persistent presence on a victim's system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""60299"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shells techniques involve installing and using a web shell, which is a malicious script that allows adversaries to remotely control a compromised web server. This rule detects an attempt to upload a PHP web shell named 'Cybershell' to the target system, which is commonly used by attackers to gain remote code execution capabilities."""",
     ""Explanation"": ""PHP WebShell (Cybershell) upload attempt.""
   },
   {
     ""sid"": ""60299"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in a web application to upload the PHP web shell, which is a common method attackers use to gain persistent access to a compromised system."""",
     ""Explanation"": ""PHP WebShell (Cybershell) upload attempt.""
   }
 ][
     {
         ""sid"": ""60299"",
         ""Technique ID"": ""1021"",
         ""Technique name"": ""Remote Services"",
         ""Quotes"": """"Remote Services techniques involve accessing and abusing remote services, such as SSH, Telnet, or VNC, to gain unauthorized access or establish a persistent presence on a system. This rule detects an attempted upload of a PHP web shell, which is a common tool used by adversaries to gain remote access to web servers and execute arbitrary commands."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
         ""sid"": ""60299"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingest Data from External Source"",
         ""Quotes"": """"Ingest Data from External Source techniques involve accessing and extracting data from sources outside the organization’s network, such as public websites or cloud storage, as a means to gather information or exfiltrate data. The rule detects a web shell attempting to upload data to a remote server, which could be a malicious attempt to exfiltrate sensitive data or establish persistence on the compromised system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""60299"",
         ""Technique ID"": ""T1025"",
         ""Technique name"": ""Data from Removable Media"",
         ""Quotes"": """"Data from Removable Media techniques involve accessing or modifying data on removable media devices, such as USB drives or external hard drives. This rule detects an attempt to upload a PHP webshell to a web server using a POST request. PHP webshells are often used by attackers to gain remote access to a compromised system, allowing them to execute commands and extract sensitive data. Removable media can be a common vector for webshell delivery, as attackers may physically connect an infected USB drive to the target system to upload malicious payloads."""",
         ""Explanation"": ""This rule is designed to detect attempts to upload malicious PHP webshells to a web server using a POST request. PHP webshells are often used by attackers to gain remote access to a compromised system, allowing them to execute commands and extract sensitive data..""
     ],
     [
         ""sid"": ""60299"",
         ""Technique ID"": ""T1030"",
         ""Technique name"": ""Data Transfer Size Limits"",
         ""Quotes"": """"Data Transfer Size Limits techniques involve limiting the size of data transferred to evade detection. This rule looks for a specific pattern in the HTTP header that is indicative of an attempt to upload a PHP webshell in small chunks to avoid detection by security controls. Breaking the upload into smaller chunks makes it more difficult for IDS/IPS systems to identify the malicious payload."""",
         ""Explanation"": ""This rule is designed to detect attempts to upload malicious PHP webshells to a web server using a POST request. PHP webshells are often used by attackers to gain remote access to a compromised system, allowing them to execute commands and extract sensitive data..""
     ],
     [
         ""sid"": ""60299"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve compromising a system through malicious content delivered via a compromised website or advertisement. This rule detects an attempt to download a PHP webshell from a remote server using an HTTP GET request. Attackers may use watering hole attacks or compromised websites to host malicious PHP webshells that can infect unsuspecting visitors when they access the site."""",
         ""Explanation"": ""This rule is designed to detect attempts to upload malicious PHP webshells to a web server using a POST request. PHP webshells are often used by attackers to gain remote access to a compromised system, allowing them to execute commands and extract sensitive data..""
     ]
 ][
     {
         ""sid"": ""60299"",
         ""Technique ID"": ""T1064"",
         ""Technique Name"": ""Network Share Discovery"",
         ""Quotes"": """"Network Share Discovery techniques involve searching for network shares that may contain valuable information or resources. This rule looks for a pattern associated with attempts to upload a PHP webshell, which often involves uploading malicious code to a network share."""",
         ""Explanation"": ""This event is generated when activity relating to uploading malicious content on a web server is detected.""
     },
     {
         ""sid"": ""60299"",
         ""Technique ID"": ""T1189"",
         ""Technique Name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script that provides an attacker with a remote command-line interface to a compromised web server. This rule detects an attempt to upload a PHP webshell, which is a common method attackers use to gain persistent access to web servers."""",
         ""Explanation"": ""This event is generated when activity relating to uploading malicious content on a web server is detected.""
     }
 ][
   ""sid"": ""60299"",
   ""Technique ID"": ""T1003"",
   ""Technique Name"": ""OS Credential Dumping"",
   ""Quotes"": """"OS Credential Dumping techniques involve stealing user credentials directly from the operating system, such as by dumping or extracting hashed or plaintext passwords, in order to gain privileged access."""",
   ""Explanation"": ""This event is generated when a remote WebShell.Cybershell is attempting to upload a file on the network, which could lead to the compromise of the system.""
 ][
   {
     ""sid"": ""60299"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a potential PHP web shell upload attempt, such as the Cybershell web shell.\"""",
     ""Explanation"": ""This rule identifies an attempt to upload a malicious PHP web shell, which gives attackers remote access and control over a compromised web server.""
   },
   {
     ""sid"": ""60299"",
     ""Technique ID"": ""T1564"",
     ""Technique name"": ""Hide Artifacts"",
     ""Quotes"": ""\""Hide Artifacts techniques aim to obscure the presence or evidence of malicious activity. This rule detects an attempt to use a web shell to upload a file with a disguised or modified name, such as by using a unique character or a combination of numbers and letters, to avoid detection by security measures.\"""",
     ""Explanation"": ""Web shells often use techniques to hide their presence or evade detection, such as using obfuscated file names or disguising malicious code within legitimate files.""
   }
 ][
   {
     ""sid"": ""60299"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Network Denial of Service"",
     ""Quotes"": """"Network Denial of Service (DoS) techniques involve degrading or blocking the availability of targeted resources to users. This rule detects an attempt to exploit a PHP web shell vulnerability to upload a file, which could be used to launch a DoS attack on the target system."""",
     ""Explanation"": ""The rule is related to DoS attacks as it involves exploiting web services to disrupt the system availability.""
   },
   {
     ""sid"": ""60299"",
     ""Technique ID"": ""T1156"",
     ""Technique name"": ""Modify Authentication Process"",
     ""Quotes"": """"Modify Authentication Process techniques involve modifying authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. This rule detects an attempt to exploit a PHP web shell vulnerability to upload a file, which could be used to modify the authentication process on the target system."""",
     ""Explanation"": ""The rule is related to Modification of Authentication Process attacks as it involves exploiting web services to modify authentication.""
   }
 ][
   {
     ""sid"": ""60299"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system command shell or scripting environment to execute commands or scripts. This rule detects an attempt to upload a PHP webshell called Cybershell, which is a common tool used by adversaries to gain unauthorized remote access to a web server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1191', 'T1189', 'T1189', 'T1190', 'T1105', 'T1025', 'T1030', 'T1189', 'T1064', 'T1189', 'T1003', 'T1190', 'T1564', 'T1498', 'T1156', 'T1059']",['T1505']
27756,"[
   {
     ""sid"": ""27756"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a default password vulnerability in the RedHat Piranha Virtual Server Package, which is a common method attackers use to compromise vulnerable web servers."""",
     ""Explanation"": ""This rule triggers when an attack attempts to exploit a default password vulnerability in the RedHat Piranha Virtual Server Package.""
   }
 ][
   {
     ""sid"": ""27756"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation for Credential Access"",
     ""Quotes"": """"Exploitation for Credential Access techniques involve exploiting a vulnerability to obtain system credentials or access credentials. The rule detects an attempt to exploit a default password vulnerability in RedHat's Piranha Virtual Server Package to gain unauthorized access to the system. Attackers commonly exploit weak or default passwords to compromise systems."""",
     ""Explanation"": ""This event is generated when activity relating to exploitation for credential access is detected.""
   },
   {
     ""sid"": ""27756"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in RedHat's Piranha Virtual Server Package to gain unauthorized access to the system. Attackers commonly exploit vulnerabilities in web applications to compromise systems."""",
     ""Explanation"": ""This event is generated when activity relating to exploitation of a public-facing application is detected.""
   }
 ][
         ""sid"": ""27756"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in the Piranha Virtual Server package that allows for arbitrary command execution, which could be used to gain unauthorized access to the system.""
     ][
         ""sid"": ""27756"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. In this case, the rule detects an attempt to target the default password of the RedHat Piranha Virtual Server Package and execute arbitrary commands, indicating an attempt to exploit this vulnerability and gain unauthorized access to the web application."""",
         ""Explanation"": ""The rule is detecting an attack targeting a known vulnerability, CVE-2004-1523, within RedHat Piranha Virtual Server Package, which could allow an attacker to execute arbitrary commands with escalated privileges.""
     ][
         ""sid"": ""27756"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of the Piranha Virtual Server Package's 'passwd.php3' page, which is a common method attackers use to gain unauthorized access to web applications by manipulating input parameters."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a web application is detected.""
     ][
         ""sid"": ""27756"",
         ""Technique ID"": ""T1014"",
         ""Technique name"": ""Account Manipulation"",
         ""Quotes"": """"Account Manipulation techniques involve compromising or abusing accounts to gain unauthorized access or escalate privileges. This rule detects an attempt to exploit a default password for the RedHat Piranha Virtual Server Package, which is a common method attackers use to gain unauthorized access to systems."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a default password for the RedHat Piranha Virtual Server Package is detected.""
     ][
         ""sid"": ""27756"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a default password and arbitrary command execution vulnerability in the RedHat Piranha Virtual Server Package, which is a common method attackers use to compromise web servers."""",
         ""Explanation"": ""The rule identifies an attempt to exploit a default password and arbitrary command execution vulnerability in the RedHat Piranha Virtual Server Package.""
     ][
         ""sid"": ""27756"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a default password and arbitrary command execution vulnerability in the RedHat Piranha Virtual Server Package, where attackers try to manipulate the '/piranha/secure/passwd.php3' page to gain unauthorized access."""",
         ""Explanation"": ""This event is generated when an attacker attempts to exploit a vulnerability in a web application.""
     ],
     [
         ""sid"": ""27756"",
         ""Technique ID"": ""T1068"",
         ""Technique name"": ""Exploitation for Credential Access"",
         ""Quotes"": """"Exploitation for Credential Access techniques involve exploiting vulnerabilities in software to obtain credentials. This rule specifically targets an attempt to exploit a default password vulnerability in the RedHat Piranha Virtual Server Package, which can allow attackers to gain unauthorized access to the system and obtain credentials."""",
         ""Explanation"": ""This event is generated when an attacker attempts to exploit a vulnerability in a software to obtain credentials.""
     ]
 ][
   {
     ""sid"": ""27756"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a default password and execute arbitrary commands on a RedHat Piranha Virtual Server through the '/piranha/secure/passwd.php3' URI, which is a common method attackers use to exploit web applications."""",
     ""Explanation"": ""This event is generated when an attacker tries to exploit a default password and execute arbitrary commands on a RedHat Piranha Virtual Server through the '/piranha/secure/passwd.php3' URI.""
   }
 ][
     {
         ""sid"": ""27756"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted command injection attack against a Piranha Virtual Server, which is a web server application that is vulnerable to arbitrary command execution by providing a specially crafted 'passwd.php3' request, as mentioned in the rule's description."""",
         ""Explanation"": ""This event is generated when activity relating to exploiting a publicly accessible application's vulnerability to gain unauthorized access to the system is detected.""
     }
 ][
     ""sid"": ""27756"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a default password vulnerability in RedHat's Piranha Virtual Server, which allows attackers to gain unauthorized access to the server by using a default password."""",
     ""Explanation"": ""Web server attempting to exploit a buffer overflow in the Red Hat Piranha HTTP server.""
 ]","['T1190', 'T1210', 'T1190', 'T1190', 'T1190', 'T1190', 'T1014', 'T1190', 'T1190', 'T1068', 'T1190', 'T1190', 'T1190']",['T1078']
4060,"[
   {
     ""sid"": ""4060"",
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve using legitimate user accounts to gain access to systems or resources. This rule detects an attempt to connect to an RDP port using an administrative account, which is a common tactic used by adversaries to gain privileged access to systems."""",
     ""Explanation"": ""Administrator connections to remote desktop protocol ports are often used to control systems remotely.""
   },
   {
     ""sid"": ""4060"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques involve using automated tools to attempt to guess passwords or other authentication credentials by trying many different possibilities. This rule specifically looks for brute force attempts against the RDP port, which is a common target for brute force attacks."""",
     ""Explanation"": ""RDP brute force attempts are when attackers try to guess the password of a valid user to gain access to the system.""
   }
 ][
   {
     ""sid"": ""4060"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote Desktop Protocol (RDP)"",
     ""Quotes"": """"Remote Desktop Protocol techniques involve using the Remote Desktop Protocol (RDP) to establish remote access to a target system. RDP is a proprietary protocol developed by Microsoft that enables remote control of a computer over a network connection. RDP connections may be used by adversaries to access and control remote systems for various purposes, including data exfiltration, command and control, and lateral movement."""",
     ""Explanation"": ""RDP is a protocol that allows remote access to a computer over a network connection. This rule is designed to detect attempts to connect to a remote desktop server using the Remote Desktop Protocol (RDP) protocol.""
   }
 ][
   {
     ""sid"": ""20143"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Desktop Protocol"",
     ""Quotes"": """"Remote Desktop Protocol (RDP) techniques involve using the Remote Desktop Protocol (RDP) to gain remote access to a victim system. The rule detects an attempted connection to RDP on port 3389 with the username """"Administrator"""", which is a common technique used by attackers to gain unauthorized access to systems."""",
     ""Explanation"": ""RDP is being used to access local machine from external network.""
   }
 ][
   {
     ""sid"": ""4060"",
     ""Technique ID"": ""T1076"",
     ""Technique name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques describe using legitimate credentials to access and compromise systems and networks. This rule detects an attempt to connect to Remote Desktop Protocol (RDP) with administrative credentials. Attackers may use these credentials to gain access to systems and escalate privileges."""",
     ""Explanation"": """"APP-DETECT remote desktop protocol attempted administrator connection request""""
   }
 ][
   {
     ""sid"": ""16718"",
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts allow adversaries to obtain and abuse credentials of existing accounts to gain unauthorized access, persistence, privilege escalation, or defense evasion."""",
     ""Explanation"": ""Trying to authenticate to a service by brute-forcing a valid credential is an example of using valid accounts.""
   },
   {
     ""sid"": ""16718"",
     ""Technique ID"": ""T1136"",
     ""Technique Name"": ""Remote Desktop Protocol"",
     ""Quotes"": """"Remote Desktop Protocol (RDP) provides remote access to a computer system. Adversaries may abuse RDP to gain initial access to a system, escalate privileges, or move laterally within a network."""",
     ""Explanation"": ""RDP is a well-known protocol used for remote access to systems. Attackers often use RDP to gain initial access to a system, as it is a common service exposed to the internet.""
   }
 ][
   {
     ""sid"": ""4060"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""RDP"",
     ""Quotes"": """"Remote Desktop Protocol (RDP) is a proprietary protocol developed by Microsoft that enables remote access to another computer. This rule detects an attempt to connect to RDP on port 3389, which is commonly used by attackers to gain remote access to systems."""",
     ""Explanation"": ""The rule triggers when a client attempts to connect to the RDP service on the target system over TCP port 3389. This can be an indication of an attacker attempting to gain remote access to the system for various purposes, such as reconnaissance, lateral movement, or data exfiltration.""
   }
 ][
   {
     ""sid"": ""4060"",
     ""Technique ID"": ""T1078"",
     ""Technique name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve using non-privileged user accounts to access a system or network to maintain persistence and evade detection. This rule detects an attempt to connect to a remote desktop protocol (RDP) service using the 'mstshash' hash, which is commonly associated with administrative privileges. This suggests that an adversary is attempting to establish a persistent connection to the victim system using a legitimate account."""",
     ""Explanation"": ""RDP allows network administrators to take control of a host, troubleshoot and diagnose system problems, and install software applications.""
   }
 ][
     {
         ""sid"": ""4060"",
         ""Technique ID"": ""T1210"",
         ""Technique Name"": ""Remote Desktop Protocol (RDP)"",
         ""Quotes"": """"Remote Desktop Protocol (RDP) techniques involve using the Microsoft Remote Desktop Protocol (RDP) to gain remote access to a target system. This rule detects an RDP connection attempt from an external IP address to port 3389, which is the default RDP port."""",
         ""Explanation"": ""This rule detects a connection to port 3389, often used for RDP.""
     },
     {
         ""sid"": ""4060"",
         ""Technique ID"": ""T1133"",
         ""Technique Name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve using legitimate remote desktop protocols, such as RDP, Telnet, or SSH, to access a target system from outside the network."""",
         ""Explanation"": ""This rule detects a connection to port 3389, often used for RDP.""
     }
 ][
         ""sid"": ""4060"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Application Layer Protocol Abuse"",
         ""Quotes"": """"Application Layer Protocol Abuse techniques involve abusing functionality of application-layer protocols to perform malicious activities. This rule detects an attempted malicious abuse of Remote Desktop Protocol (RDP) to establish a remote connection with administrative privileges. Attackers may attempt to use RDP to gain unauthorized access to systems for various purposes, such as exfiltrating sensitive data or installing malware."""",
         ""Explanation"": ""The rule is looking for network traffic that is using the Remote Desktop Protocol (RDP). RDP is used to allow remote users to access a computer over a network connection. The rule is looking for traffic that is coming from outside the organization's network (the EXTERNAL_NET) and is trying to connect to a computer inside the organization's network (the HOME_NET) on port 3389. The rule is also looking for traffic that is using the mstshash parameter, which is used to authenticate users to RDP.""
     ][
   {
     ""sid"": ""4060"",
     ""Technique ID"": ""T1078"",
     ""Technique name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve abusing legitimate accounts to gain access to systems and information. This rule detects malicious activity related to attempts to connect to RDP ports using an administrator account. Attackers may use valid or compromised administrator accounts to gain unauthorized access to systems and perform malicious activities."""",
     ""Explanation"": ""Detects an attempt to use an administrator account to connect to a remote desktop (RDP) server. This could be an indication of an attack attempt, as attackers often attempt to use valid accounts to gain access to systems.""
   }
 ][
   {
     ""sid"": ""4060"",
     ""Technique ID"": ""T1078"",
     ""Technique name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve using legitimate credentials to gain access to a system or resource. This rule detects suspicious behavior related to the Microsoft Remote Desktop Protocol (RDP), including attempts to establish an RDP connection as an administrator. Adversaries may leverage valid accounts to gain initial access to a system, escalate privileges, or move laterally within a network."""",
     ""Explanation"": ""This rule can log specific traffic related to administrator connections using RDP.""
   },
   {
     ""sid"": ""4060"",
     ""Technique ID"": ""T1572"",
     ""Technique name"": ""Privilege Escalation"",
     ""Quotes"": """"Privilege Escalation techniques involve exploiting vulnerabilities or misconfigurations in a system to gain elevated privileges. RDP is a common attack vector for privilege escalation, as it allows remote access to the system. Adversaries may attempt to leverage RDP to elevate privileges and gain control of the system."""",
     ""Explanation"": ""This rule can log specific traffic related to administrator connections using RDP.""
   },
   {
     ""sid"": ""4060"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve accessing and leveraging remote services, such as RDP, to gain access to a system. This rule specifically monitors RDP traffic, which is a common attack vector for adversaries to gain remote access to a system."""",
     ""Explanation"": ""This rule can log specific traffic related to administrator connections using RDP.""
   }
 ]","['T1078', 'T1110', 'T1021', 'T1021', 'T1076', 'T1078', 'T1136', 'T1071', 'T1078', 'T1210', 'T1133', 'T1071', 'T1078', 'T1078', 'T1572', 'T1021']",['T1021']
32105,"[
   {
     ""sid"": ""32105"",
     ""Technique ID"": ""T1185"",
     ""Technique Name"": ""Browser Session Hijacking"",
     ""Quotes"": """"Browser Session Hijacking techniques involve taking advantage of security vulnerabilities in browser software to change content, modify user behaviors, and intercept information. This rule detects an attempt to execute code from an ActiveX control in the Oracle WebCenter Content CheckOutAndOpen.dll file, which could allow an attacker to hijack a user's browser session and perform malicious actions."""",
     ""Explanation"": ""This rule is designed to detect an attempt to exploit CVE-2010-0800 in Oracle WebCenter, which is a vulnerability that allows remote attackers to execute arbitrary code via a crafted ActiveX control.""
   }
 ][
         ""sid"": ""32105"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in web browsers or browser plugins to execute malicious code on a victim's system. This rule detects an attempt to exploit a vulnerability in the Oracle WebCenter Content CheckOutAndOpen.dll ActiveX control through the use of a malicious HTA file. Exploiting this vulnerability could allow an attacker to execute arbitrary code on the victim's system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""32105"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploitation of Remote Services"",
         ""Quotes"": """"Exploitation of Remote Services techniques are used to exploit vulnerabilities in remote services, such as web and application servers, in order to gain unauthorized access. The rule specifically targets an ActiveX control in Oracle WebCenter Content, which can be exploited by attackers to execute arbitrary code and gain control of the affected system."""",
         ""Explanation"": ""The ActiveX could allow an attacker to run programs on a users computer and gain access to personal information."",
         ""sid"": ""32105"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution involves exploiting vulnerabilities in client software to execute arbitrary code. The rule aims to detect exploitation attempts of an ActiveX control in Oracle WebCenter Content, which commonly targeted by attackers to run malicious code and gain unauthorized access to systems."""",
         ""Explanation"": ""The ActiveX could allow an attacker to run programs on a users computer and gain access to personal information.""
     ][
   {
     ""sid"": ""32105"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Vulnerable Software"",
     ""Quotes"": """"Exploit Vulnerable Software techniques involve exploiting known vulnerabilities in software components (e.g., applications, libraries, or operating systems) to execute arbitrary code or gain unauthorized access. This rule detects an attempt to execute code via a vulnerable ActiveX control in Oracle WebCenter Content, which is a common method attackers use to exploit software vulnerabilities."""",
     ""Explanation"": ""The rule detects an attempt to execute code through a vulnerability in an ActiveX control in Oracle WebCenter Content.""
   }
 ][
   {
     ""sid"": ""32105"",
     ""Technique ID"": ""T1123"",
     ""Technique Name"": ""Browser Extensions"",
     ""Quotes"": """"Browser Extensions techniques involve the use of malicious browser extensions to compromise web browsers and gain access to sensitive data or execute arbitrary code. The rule detects an attempted execution of malicious code through the Oracle WebCenter Content CheckOutAndOpen.dll ActiveX control, which is commonly exploited by browser extensions to compromise web browsers."""",
     ""Explanation"": ""This event is generated when an attempt is made by a remote attacker to execute ActiveX code by exploiting a vulnerability in the Oracle WebCenter CheckOutAndOpen.dll ActiveX control.""
   }
 ][
   {
     ""sid"": ""32105"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Oracle WebCenter Content CheckOutAndOpen.dll ActiveX control, which could allow remote attackers to execute arbitrary code on vulnerable systems. ActiveX controls are commonly used in web browsers to provide additional functionality, but they can also be a potential attack vector if they are not properly secured."""",
     ""Explanation"": ""This event is generated when exploit activity relating to web browsers that involves ActiveX code is detected.""
   }
 ][
   {
     ""sid"": ""32105"",
     ""Technique ID"": ""T1115"",
     ""Technique name"": ""ActiveX Control Execution"",
     ""Quotes"": """"ActiveX Control Execution techniques involve leveraging ActiveX controls within web applications or documents to execute code on a target system. The rule detects an attempt to execute code via the CheckOutAndOpen.dll ActiveX control, which is often used in malicious documents to download and execute additional malware."""",
     ""Explanation"": ""This rule detects an attempt to exploit ActiveX control in Oracle WebCenter Content.""
   }
 ][
   {
     ""sid"": ""32105"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to execute arbitrary code via the Oracle WebCenter Content CheckOutAndOpen.dll ActiveX control, which is a common method attackers use to exploit vulnerable ActiveX controls in web browsers."""",
     ""Explanation"": ""The rule is designed to detect exploitation attempts that target a vulnerability within the Oracle WebCenter Content CheckOutAndOpen.dll ActiveX control.""
   }
 ][
   {
     ""sid"": ""32105"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in Oracle WebCenter Content's CheckOutAndOpen.dll ActiveX control, which allows remote attackers to execute arbitrary code via a specially crafted HTML page."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""32105"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in the Oracle WebCenter Content CheckOutAndOpen.dll ActiveX control, which could allow an attacker to execute arbitrary code on the target system by calling the ActiveX function 'CheckOutAndOpen'."""",
     ""Explanation"": ""The rule triggers when it detects an attempt to access the ActiveX function 'CheckOutAndOpen' within the 'CheckOutAndOpen.Control' component, which is a common technique used to exploit vulnerabilities in web-facing applications.""
   }
 ][
   {
     ""sid"": ""32105"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Browser Extension"",
     ""Quotes"": """"Exploit Browser Extension techniques target vulnerabilities in client-side browser extensions to execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Oracle WebCenter Content CheckOutAndOpen.dll ActiveX control, which is commonly used by attackers to execute malicious code within web browsers."""",
     ""Explanation"": ""The rule detects an attempt to exploit a vulnerability in the Oracle WebCenter Content CheckOutAndOpen.dll ActiveX control, which is commonly used by attackers to execute malicious code within web browsers.""
   }
 ]","['T1185', 'T1189', 'T1210', 'T1203', 'T1189', 'T1123', 'T1189', 'T1115', 'T1190', 'T1189', 'T1189', 'T1189']",['T1218']
32771,"[
   {
     ""sid"": ""32771"",
     ""Technique ID"": ""T1193"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that appear to come from legitimate sources to trick victims into revealing sensitive information or clicking on malicious links. The rule detects an Adobe Invoice phishing email scam, where attackers impersonate Adobe to trick recipients into opening malicious attachments containing malware."""",
     ""Explanation"": ""Malicious attachment in phishing email that installs malware.""
   }
 ][
   {
     ""sid"": ""32771"",
     ""Technique ID"": ""T1566"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites to trick users into disclosing sensitive information such as usernames, passwords, or financial data. This rule detects an email scam that uses an Adobe invoice as a lure to trick users into downloading a malicious ZIP file (adb-invoice.zip). The email content suggests that the user's payment information is required to process the invoice, which is a common tactic used in phishing campaigns."""",
     ""Explanation"": ""The email contains suspicious content and attachments that could be malicious.""
   }
 ][
         ""sid"": ""32771"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve abusing legitimate remote services (e.g., web, email, file-sharing) to maintain access and control of a victim's system. In this case, the rule detects an Adobe Invoice phishing scam that attempts to trick users into downloading a malicious zip file via email attachment. The email may contain links to external services or resources controlled by the adversary."""",
         ""Explanation"": ""Detected Adobe Invoice email scam.""
     ],
     [
         ""sid"": ""32771"",
         ""Technique ID"": ""T1495"",
         ""Technique name"": ""Firmware Corruption"",
         ""Quotes"": """"Firmware Corruption techniques involve modifying or corrupting firmware to gain unauthorized access or control over a device. However, the given rule does not appear to be related to firmware corruption."""",
         ""Explanation"": ""The rule does not appear to be related to this technique.""
     ][
         ""sid"": ""12313223"",
         ""Technique ID"": ""T1193"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails that appear to come from a legitimate source to trick recipients into providing sensitive information. The rule detects an email scam that uses the subject line 'Adobe Invoice' and contains an attached ZIP file with the filename 'adb-invoice.zip'. This technique is commonly used to distribute malware or steal credentials."""",
         ""Explanation"": ""This rule detects an email scam that uses social engineering to trick recipients into opening a malicious attachment.""
     ][
         ""sid"": ""32771"",
         ""Technique ID"": ""T1193"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites that appear to be legitimate in order to trick users into providing sensitive information such as passwords or financial data. This rule detects an email scam attempt that uses the subject line 'Invoice' and contains an attachment with the filename pattern 'adb-invoice.zip'. Such emails are commonly used for phishing attacks to distribute malware or steal credentials."""",
         ""Explanation"": ""This event is generated when a malware or potentially unwanted program is executing on the remote host.""
     ][
         ""sid"": ""32771"",
         ""Technique ID"": ""T1566"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating websites that mimic legitimate sources to trick individuals into providing sensitive information or clicking malicious links. This rule detects an attempted phishing attack involving an email scam where the attacker sends an email with an attachment named 'invoice.zip' and content related to 'Adobe Invoice.' Attackers use phishing emails to distribute malware or steal sensitive information."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""32771"",
     ""Technique ID"": ""T1566"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick victims into clicking on malicious links or opening attachments that can lead to the installation of malware or compromise of sensitive information. This rule detects a phishing email with the subject ""Adobe Invoice"" and an attached ZIP file containing an ""adb-invoice.zip"" file, which is a common method used by phishing campaigns to deliver malware."""",
     ""Explanation"": ""Adobe Invoice email scam phishing attempt""
   }
 ][
     ""sid"": ""32771"",
     ""Technique ID"": ""T1566"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending malicious emails or messages to deceive users and trick them into providing sensitive information, opening malicious attachments, or clicking on malicious links. This rule detects an attempted phishing attack that uses an Adobe invoice email as a lure to deliver a malicious ZIP file, which is a common method of delivering malware or other malicious content."""",
     ""Explanation"": ""The rule is used to detect malicious spam email.""
 ][
         ""sid"": ""32771"",
         ""Technique ID"": ""T1566"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites to trick victims into providing sensitive information or clicking on malicious links. The rule detects an email scam that uses the subject line 'Adobe Invoice' and contains a malicious ZIP attachment named '[adb-invoice.zip'. This is a common method attackers use to distribute malware and steal credentials through phishing campaigns."""",
         ""Explanation"": ""This event is generated when an attempt is made to send an email with a malicious attachment.""
     ][
     {
         ""sid"": ""32771"",
         ""Technique ID"": ""T1566"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that appear to come from a legitimate source to trick recipients into revealing sensitive information or clicking malicious links. This rule detects an email phishing attempt that uses the lure of an Adobe invoice to deliver a malicious ZIP file attachment, which is a common method used in phishing campaigns to distribute malware or steal sensitive data."""",
         ""Explanation"": ""The rule indicates the presence of an email phishing attempt that uses the subject line ""Invoice from Adobe"" and contains an attachment named ""adb-invoice.zip."" This is consistent with the tactics, techniques, and procedures (TTPs) associated with phishing campaigns.""
     }
 ][
     ""sid"": ""32771"",
     ""Technique ID"": ""T1566"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve attempting to trick users into divulging sensitive information such as credentials or financial data by impersonating a legitimate entity. This rule detects an email phishing attempt that uses an email with the subject ""Adobe Invoice"" and an attachment named ""adb-invoice.zip"" to deceive users into opening the malicious attachment, which is a common method used in phishing campaigns to infect systems with malware or steal sensitive information."""",
     ""Explanation"": ""This event is generated when an Adobe Invoice email scam phishing attempt is detected.""
 ]","['T1193', 'T1566', 'T1133', 'T1495', 'T1193', 'T1193', 'T1566', 'T1566', 'T1566', 'T1566', 'T1566', 'T1566']",['T1566']
57465,"[
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Remote Access Trojans"",
     ""Quotes"": """"Remote Access Trojans (RATs) are malicious software that allows adversaries to remotely control infected hosts and perform malicious activities, such as data exfiltration and command execution. The rule detects inbound connection attempts to a Perl backdoor, known as STEADYPULSE, which is commonly used by adversaries to gain remote access and control compromised systems."""",
     ""Explanation"": ""This rule looks for Perl backdoor (STEADYPULSE) traffic incoming over HTTP.""
   }
 ][
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve the adversary's ability to communicate with C2 servers or other infrastructure outside the victim network to relay instructions, receive updates, or exfiltrate data."""",
     ""Explanation"": ""This event is generated when Perl.Backdoor.STEADYPULSE variant inbound cnc connection is detected.""
   },
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Access Software"",
     ""Quotes"": """"Remote Access Software techniques involve the use of legitimate remote access software or services to gain initial access to a system and/or maintain persistence and access."""",
     ""Explanation"": ""This event is generated when Perl.Backdoor.STEADYPULSE variant inbound cnc connection is detected.""
   },
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve malicious code being delivered by exploiting a vulnerability in a website or web application. The victim does not need to take any action (e.g., clicking on a malicious link or file) for the attack to occur."""",
     ""Explanation"": ""This event is generated when Perl.Backdoor.STEADYPULSE variant inbound cnc connection is detected.""
   }
 ][
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques involve leveraging vulnerabilities in externally accessible services to compromise a network. This rule detects an HTTP request to a URL that is typically associated with the Perl.Backdoor.STEADYPULSE backdoor, indicating an attempt to establish a connection to a command and control server."""",
     ""Explanation"": ""The rule detects Perl.Backdoor.STEADYPULSE network traffic based on a specific URI and client body content.""
   }
 ][
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an inbound connection to a Perl web server (STEADYPULSE variant) using a specific URI and a request body containing the parameter ""id="", which is a common pattern used in web application exploits to manipulate server-side logic."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Stealth techniques involve intentionally obfuscating or hiding malicious behavior to evade detection. Perl.Backdoor.STEADYPULSE variant is a backdoor that establishes a command and control channel to a remote server using HTTP requests. However, the communication is encrypted to avoid detection by traditional security controls."""",
     ""Explanation"": ""This event is generated when activity relating to data encrypted for impact is detected.""
   }
 ][
         ""sid"": ""57465"",
         ""Technique ID"": ""T1129"",
         ""Technique name"": ""Create Account"",
         ""Quotes"": """"Create Account techniques involve creating a user account on a system to establish persistent access. This rule detects an attempt by the Perl.Backdoor.STEADYPULSE backdoor to connect to its command and control server using a POST request with a specific URI and form data, including an 'id' parameter. This behavior is consistent with backdoors creating accounts on compromised systems to maintain access and persistence."""",
         ""Explanation"": ""Perl.Backdoor.STEADYPULSE backdoor variant inbound connection to CNC.""
     ][
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1135"",
     ""Technique name"": ""Control Application Execution"",
     ""Quotes"": """"Control Application Execution techniques involve controlling the execution of applications to achieve malicious objectives. This rule detects an inbound connection to a Perl-based backdoor known as STEADYPULSE, which is often used by attackers to execute arbitrary commands and establish remote access to victim systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1129"",
     ""Technique name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve the creation, modification, or manipulation of system processes to facilitate the attacker's objectives. This rule specifically targets the Perl.Backdoor.STEADYPULSE backdoor variant, which typically involves the creation or modification of a process to establish a connection to a command and control server."""",
     ""Explanation"": ""This event is generated when activity relating to a Perl.Backdoor.STEADYPULSE variant has been detected.""
   },
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Remote Service Execution"",
     ""Quotes"": """"Remote Service Execution techniques involve executing commands or scripts on a remote system via a service that allows remote access. The rule specifically targets an inbound connection to a command and control server using the '/licenseserverproto.cgi' URI, which is a known method used by the Perl.Backdoor.STEADYPULSE backdoor variant to communicate with its remote controllers."""",
     ""Explanation"": ""This event is generated when activity relating to a Perl.Backdoor.STEADYPULSE variant has been detected.""
   }
 ][
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring malicious tools and software from an external system into a compromised environment. This rule detects an inbound connection to a Perl-based backdoor called 'STEADYPULSE' using a specific HTTP URI and POST parameter. The URI and parameter are commonly used by this backdoor to establish a command and control channel and transfer malicious tools."""",
     ""Explanation"": ""This rule is used to detect and block Perl backdoor traffic.""
   },
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1564"",
     ""Technique Name"": ""Hide Artifacts"",
     ""Quotes"": """"Hide Artifacts techniques involve modifying or deleting system artifacts to conceal evidence of malicious activity or make it more difficult to detect. The STEADYPULSE backdoor, detected by this rule, uses obfuscation techniques and encryption to hide its presence on a system and evade detection by security tools."""",
     ""Explanation"": ""This rule is used to detect and block Perl backdoor traffic.""
   }
 ][
   {
     ""sid"": ""57465"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve creating covert channels for communication between threat actors and compromised systems to facilitate remote control and data exfiltration. This rule detects an inbound connection to a Perl-based backdoor (STEADYPULSE) using an HTTP POST request to '/licenseserverproto.cgi' with a URI parameter 'id='. This pattern is commonly used by backdoors to establish a command and control channel with the attacker's infrastructure."""",
     ""Explanation"": ""Backdoor tool for UNIX systems. This backdoor connects to an IRC server and waits for commands from there. The server is defined in the source code and can be modi""
   }
 ][
     {
         ""sid"": ""57465"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an incoming connection from a potentially malicious host to a web server on the internal network that may be vulnerable to a Perl backdoor exploiting the 'licenseserverproto.cgi'."",
         ""Explanation"": ""This rule is related to the exploitation of a vulnerability in the 'licenseserverproto.cgi' script on a web server that could allow an attacker to gain unauthorized access to the system.""
     }
 ]","['T1071', 'T1071', 'T1021', 'T1189', 'T1210', 'T1190', 'T1132', 'T1129', 'T1135', 'T1129', 'T1071', 'T1105', 'T1564', 'T1132', 'T1190']",['T1071']
30522,"[
     ""sid"": ""1112"",
     ""Technique ID"": ""T1484"",
     ""Technique Name"": ""System Firmware Modification"",
     ""Quotes"": """"System Firmware Modification techniques involve modifying the firmware of a system to gain persistent, hidden execution and privileges."""",
     ""Explanation"": ""This rule detects attempts to exploit a vulnerability in the Intel ME firmware that allows attackers to execute arbitrary code with elevated privileges.""
 ][
     ""sid"": ""30522"",
     ""Technique ID"": ""T1499"",
     ""Technique name"": ""Endpoint Denial of Service"",
     ""Quotes"": """"Endpoint Denial of Service (DoS) techniques involve actions taken by adversaries to disrupt the availability of services or applications on a target endpoint device, making them inaccessible to users or applications."""",
     ""Explanation"": ""The rule triggers when Heartbeat Request message is received from a vulnerable client. This is potentially part of a DoS attack, where an attacker repeatedly sends heartbeat requests to a vulnerable SSL server, causing it to crash due to a buffer overrun issue.""
 ][
   {
     ""sid"": ""23934"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Denial of Service"",
     ""Quotes"": """"Network Denial of Service techniques involve actions that exhaust or flood network resources to disrupt or deny legitimate network traffic. This rule detects an attack where an attacker sends large amounts of ICMP traffic to a target IP address, consuming network bandwidth and potentially disrupting services."""",
     ""Explanation"": ""This event is generated when Heartbeat Read Overrun in OpenSSL TLSv1.1 code is detected.""
   }
 ][
         ""sid"": ""30522"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""OpenSSL TLSv1.1 heartbeat read overrun attempt - vulnerable client response""
     ][
     {
         ""sid"": ""30522"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Reconnaissance"",
         ""Quotes"": """"Network Reconnaissance involves gathering information about target networks and systems prior to exploitation. This rule detects an attempt to exploit a vulnerability (CVE-2014-0160) in OpenSSL versions 1.0.1 through 1.0.1f to cause a server to crash. This technique is commonly used during the reconnaissance phase of an attack to identify potential targets and vulnerabilities."""",
         ""Explanation"": ""This rule specifically targets an attempt to exploit a vulnerability in the TLS heartbeat functionality of OpenSSL. A successful exploitation of this vulnerability can lead to a denial of service attack against the target server.""
     }
 ][
         ""sid"": ""30522"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a TLSv1.1 heartbeat read overrun vulnerability in the OpenSSL library, which could allow an attacker to obtain remote code execution on the target system. CVE-2014-0160"""",
         ""Explanation"": ""This event is generated when activity relating to exploitation of a publicly accessible application is detected.""
     ][
   {
     ""sid"": ""30522"",
     ""Technique ID"": ""T1595"",
     ""Technique Name"": ""Active Scanning"",
     ""Quotes"": """"Active Scanning techniques involve performing scans to gather information about a target system or network to identify vulnerabilities, open ports, or services. This rule detects an attempt to exploit a vulnerability in OpenSSL's TLS heartbeat implementation (CVE-2014-0160), which can lead to remote code execution."""",
     ""Explanation"": ""This is an IDS event that is triggered when the system detects an attempt to exploit a vulnerability in OpenSSL's TLS heartbeat implementation, which can lead to remote code execution.""
   }
 ][
         ""sid"": ""30522"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted OpenSSL TLSv1.1 heartbeat read overrun vulnerability, which can lead to remote code execution on vulnerable systems."""",
         ""Explanation"": ""This event is generated when a vulnerable TLS client attempts to exploit the OpenSSL TLSv1.1 heartbeat read overrun vulnerability by sending a specially crafted heartbeat request.""
     ][
   {
     ""sid"": ""30522"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a TLS heartbeat vulnerability in OpenSSL, which allows attackers to send specially crafted packets to trigger a server crash or execute arbitrary code on vulnerable systems."""",
     ""Explanation"": ""The rule looks for a specific pattern in TLS heartbeat packets that is indicative of an attempt to exploit this vulnerability.""
   }
 ][
         ""sid"": ""30522"",
         ""Technique ID"": ""T1198"",
         ""Technique name"": ""Exploit Vulnerable Software"",
         ""Quotes"": """"Exploit Vulnerable Software techniques involve exploiting vulnerabilities in software to gain unauthorized access or execute arbitrary code. The rule detects a variety of applications (OpenSSL, SSH, SMTP, POP3, IMAP, Telnet, LDAP, FTP, and Kerberos) that are vulnerable to different types of attacks, which could allow an attacker to gain control of the affected system."""",
         ""Explanation"": ""The exploit involves sending a specially crafted TLSv1.1 heartbeat request to a vulnerable OpenSSL server, which can cause a buffer overrun and allow the attacker to execute arbitrary code on the server.""
     ][
   {
     ""sid"": ""30522"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve performing reconnaissance on a network or host to identify open ports or services, often as a precursor to exploitation or other malicious activities. This rule triggers when a remote host sends a crafted TLSv1.1 heartbeat packet to a potentially vulnerable client on the internal network, which is a common tactic attackers use to probe for vulnerable systems."""",
     ""Explanation"": ""This rule is used to detect TLSv1.1 heartbeat read overrun vulnerability attempt.""
   }
 ]","['T1484', 'T1499', 'T1046', 'T1190', 'T1046', 'T1190', 'T1595', 'T1190', 'T1190', 'T1198', 'T1046']",['T1123']
862,"[
   {
     ""sid"": ""862"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve reconnaissance activities to identify open ports and services on target networks. The rule detects attempts to access the '/csh' URI, which is a command-line shell used in Unix-like systems. Attackers may scan for open ports and attempt to access common services like SSH or Telnet to gain unauthorized access."""",
     ""Explanation"": ""This event is generated when a connection is made to a system listening on either port 21 or port 22.""
   }
 ][
   {
     ""sid"": ""862"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted command shell access on the '/csh' URL path of a web server, which is a common method attackers use to exploit vulnerabilities in web applications to gain remote code execution."""",
     ""Explanation"": ""This event is generated when activity relating to exploitation of a public facing application is detected.""
   }
 ][
   {
     ""sid"": ""862"",
     ""Technique ID"": ""T1589"",
     ""Technique name"": ""Gather Victim Identity Information"",
     ""Quotes"": """"Gather Victim Identity Information techniques involve collecting information about the victim's identity, such as their name, email address, or other personal information, to facilitate targeting and personalization of attacks."""",
     ""Explanation"": ""This event is generated when an attempt to access a csh shell on a web server is detected.""
   },
   {
     ""sid"": ""862"",
     ""Technique ID"": ""T1083"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery involves enumerating files and directories or searching in specific locations of a host or network share for certain information within a file system. This rule detects an attempt to access a csh shell on a web server, which may indicate an attempt to gather information about the file system or locate sensitive files."""",
     ""Explanation"": ""This event is generated when an attempt to access a csh shell on a web server is detected.""
   }
 ][
     {
         ""sid"": ""862"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve using tools and techniques to identify listening services, ports, or hosts on a network. This rule triggers when an adversary attempts to access a csh shell on a web server, indicating an attempt to probe and enumerate the system's exposed services."""",
         ""Explanation"": ""This rule detects an attempted access to a csh shell on a web server, indicating reconnaissance activity.""
     }
 ][
   {
     ""sid"": ""862"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""This rule detects a possible attempt to exploit a command shell (csh) vulnerability, indicating an attempt to gain unauthorized access to the web server.""
   }
 ][
     ""sid"": ""862"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted attack on a web server by trying to access '/csh', which is a common command-line shell in Unix-like systems. Attackers may attempt to exploit vulnerabilities in the web server to gain access to the underlying system by using this technique."""",
     ""Explanation"": ""This rule triggers when an attempt is made to access the C shell.""
 ][
   {
     ""sid"": ""862"",
     ""Technique ID"": ""T1496"",
     ""Technique Name"": ""Resource Development"",
     ""Quotes"": """"Resource Development involves adversaries using existing resources, or creating their own, to aid in the success of their objectives. In this rule, the adversary is attempting to access the '/csh' resource of a server, which is likely associated with the C shell command. This action is typically performed to establish a command and control channel and to gather information."",
     ""Explanation"": ""C shell (csh) is a Unix shell that supports a command history mechanism, job control, search and replace over command lines, and command aliases and abbreviations.""
   }
 ][
   {
     ""sid"": ""862"",
     ""Technique ID"": ""T1598"",
     ""Technique name"": ""Phishing for Information"",
     ""Quotes"": """"Phishing for Information techniques involve sending phishing emails or messages to elicit sensitive information, such as credentials or financial data. This rule detects an attempt to access the '/csh' URL, which could be an attempt to gather information about a web application or server configuration for subsequent exploitation."""",
     ""Explanation"": ""This event is generated when an attempt to access the '/csh' URL is detected.""
   }
 ][
   {
     ""sid"": ""862"",
     ""Technique ID"": ""T1492"",
     ""Technique Name"": ""System Information Discovery"",
     ""Quotes"": """"System Information Discovery techniques involve gathering information about the system's configuration, hardware, and software. This rule detects an attempt to access the 'csh' (C shell) command through a web application, which is commonly used by attackers to explore the system and gather information about its configuration and installed software."""",
     ""Explanation"": ""This event is generated when an attempt to access the 'csh' (C shell) command through a web application is detected.""
   }
 ][
     ""sid"": ""862"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Web Server Directory Traversal"",
     ""Quotes"": """"Web Server Directory Traversal techniques involve exploiting flaws in web server configurations or applications to access restricted directories and files. The rule detects an attempt to access the '/csh' directory, which is commonly used by attackers to bypass file access restrictions and gain unauthorized access to sensitive information."""",
     ""Explanation"": ""The rule attempts to scan the web server directories""
 ][
   {
     ""sid"": ""862"",
     ""Technique ID"": ""T1482"",
     ""Technique name"": ""Discovery"",
     ""Quotes"": """"Discovery techniques involve performing reconnaissance on a system to gain information about the system's configuration, software, and network settings. The rule detects an attempt to access the '/csh' URI, which could be an indication of an attacker trying to gain information about the web server's configuration or software versions."""",
     ""Explanation"": ""This event is generated when an attempted reconnaissance is detected.""
   },
   {
     ""sid"": ""862"",
     ""Technique ID"": ""T1195"",
     ""Technique name"": ""Supply Chain Compromise"",
     ""Quotes"": """"Supply Chain Compromise techniques involve manipulating products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. The rule detects an attempt to access the '/csh' URI, which could be an indication of an attacker trying to exploit a known vulnerability in the web server's software supply chain."""",
     ""Explanation"": ""This event can be generated when a vulnerability in the software supply chain is being exploited.""
   }
 ]","['T1046', 'T1190', 'T1589', 'T1083', 'T1040', 'T1190', 'T1190', 'T1496', 'T1598', 'T1492', 'T1087', 'T1482', 'T1195']",['T1204']
25579,"[
   {
     ""sid"": ""25579"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites to deceive individuals into providing sensitive information such as credentials or financial data. This IDS rule detects a phishing attack attempting to distribute malware in a fake booking confirmation email attachment (BookingInfo.zip) that contains an executable payload (BookingInfo.exe)."""",
     ""Explanation"": ""This event is generated when activity relating to phishing is detected.""
   }
 ][
   {
     ""sid"": ""25579"",
     ""Technique ID"": ""T1192"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that attempt to trick users into revealing sensitive information or taking actions that could compromise their systems or data. This rule detects a phishing attack that uses a fake 'BookingInfo.zip' file to deliver malicious software (BookingInfo.exe) via an HTTP response. The attackers attempt to trick users into downloading and executing the malicious file by disguising it as a legitimate booking confirmation."""",
     ""Explanation"": ""This event is generated when an attempt to access a phishing site is detected.""
   }
 ][
     {
         ""sid"": ""25579"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent communications to deceive individuals into providing sensitive information or clicking malicious links. This rule detects a phishing attack that uses a fake ""BookingInfo"" HTTP response to trick users into downloading a malicious file disguised as a ZIP archive."""",
         ""Explanation"": ""This signature detects a malware that sends out spam emails with booking information as an attachment titled BookingInfo.zip.""
     },
     {
         ""sid"": ""25579"",
         ""Technique ID"": ""T1598"",
         ""Technique name"": ""Spearphishing Attachment"",
         ""Quotes"": """"Spearphishing Attachment techniques involve sending malicious attachments in phishing emails to trick individuals into opening them. This rule detects a phishing attack that uses a fake ""BookingInfo"" HTTP response to trick users into downloading a malicious file disguised as a ZIP archive."""",
         ""Explanation"": ""This signature detects a malware that sends out spam emails with booking information as an attachment titled BookingInfo.zip.""
     }
 ][
   {
     ""sid"": ""25579"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or other communications that appear to come from a legitimate source, but are actually designed to trick recipients into providing sensitive information or clicking on malicious links. This rule detects a phishing attack that uses a fake booking confirmation email to trick recipients into downloading and executing a malicious file named 'BookingInfo.exe', which is a common tactic used in phishing campaigns."""",
     ""Explanation"": ""This event is generated when activity relating to phishing is detected. The rule triggers when the following conditions are met: 1. The traffic is coming from an external network to internal network. 2. The traffic is on HTTP ports. 3. The traffic has “BookingInfo.exe” in the file data.""
   },
   {
     ""sid"": ""25579"",
     ""Technique ID"": ""T1566"",
     ""Technique name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing obfuscation or encoding mechanisms to extract embedded or hidden data, such as malicious code or sensitive information. This rule detects the use of base64 encoding in the HTTP header, which is a common technique used to obfuscate malicious content and evade detection. The rule specifically looks for the string ""|3B 20|filename=BookingInfo.zip|0D 0A|"", which is the base64-encoded representation of the string ""BookingInfo.zip"", indicating that the malicious file is encoded within the HTTP header."""",
     ""Explanation"": ""This event is generated when activity relating to phishing is detected. The rule triggers when the following conditions are met: 1. The traffic is coming from an external network to internal network. 2. The traffic is on HTTP ports. 3. The traffic has “BookingInfo.exe” in the file data.""
   }
 ][
     {
         ""sid"": ""25579"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites that appear legitimate to trick users into giving up sensitive information. The rule detects a fake HTTP response that tries to trick users into downloading a malicious file named 'BookingInfo.zip', which likely contains a phishing payload."""",
         ""Explanation"": ""This rule detects phishing attacks that use fake bookinginfo HTTP responses to trick users into downloading malicious files.""
     }
 ][
   {
     ""sid"": ""25579"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick users into providing sensitive information or clicking on malicious links. This rule detects malicious HTTP traffic that leverages a fake booking information page to trick users into downloading a malicious file named 'BookingInfo.exe'. Phishing attacks typically use social engineering to manipulate victims into taking actions that compromise their security."""",
     ""Explanation"": ""This event is generated when phishing activity is detected.""
   }
 ][
   {
     ""sid"": ""25579"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent communications that appear to come from a legitimate source to trick users into disclosing sensitive information. This rule detects an HTTP response containing a malicious file named 'BookingInfo.exe' and a filename parameter 'BookingInfo.zip', which is indicative of a phishing attack where attackers attempt to trick users into downloading and executing malicious content."""",
     ""Explanation"": ""This rule detects a phishing attack that uses a fake booking information HTTP response to deliver a malicious payload.""
   }
 ][
   {
     ""sid"": ""25579"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick victims into providing sensitive information or clicking malicious links to compromise systems. This rule detects phishing attacks using a fake ""BookingInfo.zip"" file and an ""EXE"" payload, which are common tactics used in phishing campaigns to distribute malware."""",
     ""Explanation"": ""This event is generated when activity relating to phishing has been detected.""
   }
 ][
         ""sid"": ""25579"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick victims into providing sensitive information or clicking malicious links. This rule detects phishing attacks that use emails containing malicious attachments or links to websites impersonating legitimate organizations, luring recipients into downloading malware or entering their credentials."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""25579"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending emails or creating websites that appear to be legitimate but are designed to trick users into revealing confidential information or taking actions that could compromise their systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
     {
         ""sid"": ""25579"",
         ""Technique ID"": ""T1192"",
         ""Technique Name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that attempt to trick users into revealing sensitive information or taking actions that compromise their systems or data. This rule detects a malicious HTTP response that attempts to deliver a fake booking confirmation email with an attached malicious file, which is a common phishing tactic to trick users into downloading malware or providing personal information."""",
         ""Explanation"": ""This rule detects a phishing attack that uses a fake booking confirmation email to trick users into downloading malware.""
     }
 ]","['T1192', 'T1192', 'T1192', 'T1598', 'T1192', 'T1566', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192']",['T1566']
38562,"[
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) attempting an initial exfiltration of data by sending information about the infected system to a command and control server. This data includes the victim's computer name, operating system, and other system details."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring data from a compromised system to an external location. The rule detects an attempted exfiltration of system information by a Trojan (GateKeylogger) to a command and control server. This technique is commonly used by malware to steal sensitive data from infected systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects an attempt by a GateKeylogger Trojan to exfiltrate gathered data (e.g., 'pc', 'admin', 'os', 'hid', 'arc') to a remote sever via a POST request to '/gate.php'. Keylogging is commonly used to capture user credentials, financial data, and other sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve stealing or transmitting data from a system or network without authorization. The rule is triggered when an attempt is made to send sensitive information to an external server via a POST request to '/gate.php'. The data being exfiltrated includes information about the infected system ('pc', 'admin', 'os', 'hid', 'arc'), which may be used for malicious purposes such as identity theft or further exploitation."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve the unauthorized transfer of data from a system or network. This rule detects an exfiltration attempt by a GateKeylogger Trojan, which is known for collecting and transmitting sensitive information (e.g., keystrokes, system data) to a remote server."""",
     ""Explanation"": ""This event is generated when activity relating to malicious content being sent over HTTP is detected.""
   },
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. GateKeylogger, as mentioned earlier, is a keylogger Trojan that stealthily captures user input data by mimicking a '404 Not Found' error."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve disguising malicious files or other information to evade detection or analysis. The rule triggers when a network connection is established from an internal network to an external HTTP port, and specific parameters are present in the HTTP client body, including ""pc"", ""admin"", ""os"", ""hid"", and ""arc"". These parameters are associated with the Win.Trojan.GateKeylogger malware, which often obfuscates its communication to avoid detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of the Win.Trojan.GateKeylogger malware, which is known to capture user input, including passwords and other sensitive data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1020"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring data from a compromised system to an external location. The rule triggers when an HTTP request is sent to ""/gate.php"" with specific parameters, including ""pc"", ""admin"", ""os"", ""hid"", and ""arc"", which are used by the malware to collect system information. This indicates that the malware is attempting to exfiltrate sensitive data to a remote server."""",
     ""Explanation"": ""This rule detects attempts to exfiltrate data from a compromised system to a remote server.""
   },
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects the presence of a Trojan (GateKeylogger) that collects various system information through HTTP requests. This information includes details such as the computer name, username, operating system version, hardware ID, and recent activity. The malware uses this data to establish a connection with its command and control server and exfiltrate captured input data."""",
     ""Explanation"": ""This rule detects attempts to capture user input data, such as keystrokes, to obtain sensitive information.""
   }
 ][
         ""sid"": ""38562"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) that exfiltrates stolen data by HTTP POST to a remote server, commonly performed to gather sensitive information such as passwords or financial data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""38562"",
         ""Technique ID"": ""T1020"",
         ""Technique name"": ""Beaconing"",
         ""Quotes"": """"Beaconing techniques involve establishing communications with command and control (C2) servers, or other external infrastructure, to receive direction or exfiltrate data. The rule detects the Trojan (GateKeylogger) reaching out to a remote server through HTTP POST requests, which is a common method for malware to establish communications with C2 servers."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1020"",
     ""Technique Name"": ""Automated Exfiltration"",
     ""Quotes"": """"Automated Exfiltration techniques involve the use of automated methods to exfiltrate data from a compromised system to an external location. This rule identifies attempts by the GateKeylogger malware to exfiltrate system information through a 'gate.php' script, which is a common method used by malware to automatically send collected data to a remote server."""",
     ""Explanation"": ""This rule detects when the GateKeylogger malware attempts to exfiltrate system information such as the computer name, logged-on user, operating system version, and other details to a remote server using an HTTP POST request.""
   },
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The presence of the GateKeylogger malware, which is a known keylogger, indicates that it is attempting to capture user input, including keystrokes and other sensitive information."""",
     ""Explanation"": ""This rule detects when the GateKeylogger malware attempts to capture user input such as keystrokes and other sensitive information.""
   }
 ][
     ""sid"": ""38562"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring data from within a network to an external location. The rule detects an attempt by the Win.Trojan.GateKeylogger malware to exfiltrate sensitive information (such as system details, hardware ID, and potentially collected keystrokes) to a remote server via an HTTP POST request to ""/gate.php"", which is a common method used by malware to steal data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ],
 ""sid"": ""38562"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of the Win.Trojan.GateKeylogger malware, which is known to capture keystrokes and other user input data and send it to a remote server, which is a common method used by keyloggers to steal sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule content includes parameters like 'admin,' 'os,' and 'hid,' which indicates that the malware is attempting to collect information from the system and send it to its command and control server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring or sending sensitive data outside the victim's network or system. The rule's content includes parameters like 'gate.php' and 'arc=' suggest the malware's attempt to send the captured data ('arc') to a remote server through an HTTP POST request to 'gate.php'."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1020"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve extracting data from a compromised system or network to another system or location. This rule detects an exfiltration attempt by a GateKeylogger Trojan, which is known to collect system information (such as the computer name, username, and OS version) and send it to a remote server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. GateKeylogger is a known keylogger, and this rule detects its communication with a remote server, which is typically used to send captured keystrokes to the attacker."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve stealing or copying data from a system. The rule detects an outbound attempt to exfiltrate sensitive information such as system configuration details, directory listings, and even keystrokes (which could include passwords) to an external server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""38562"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) that exfiltrates data using HTTP POST requests, which is a common method used by keyloggers to capture input data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1056', 'T1020', 'T1056', 'T1020', 'T1020', 'T1056', 'T1020', 'T1056', 'T1020', 'T1056', 'T1056', 'T1020', 'T1020', 'T1056', 'T1020', 'T1056', 'T1056', 'T1020', 'T1020', 'T1056', 'T1020', 'T1056']",['T1020']
50465,"[
   {
     ""sid"": ""50465"",
     ""Technique ID"": ""T1543"",
     ""Technique name"": ""Responder Poisoning"",
     ""Quotes"": """"Responder Poisoning techniques involve sending malicious responses to network requests in order to redirect traffic or manipulate communications, potentially leading to information disclosure or remote access. The rule detects an SMB Responder poisoning attack, where adversaries send crafted SMB packets to corrupt the NetBIOS name resolution process and redirect traffic to a malicious server."""",
     ""Explanation"": ""SMB Responder Poisoning is a technique that tricks clients into connecting to a malicious SMB server, which can lead to a variety of attacks, including credential theft, man-in-the-middle attacks, and denial of service.""
   }
 ][
   {
     ""sid"": ""50465"",
     ""Technique ID"": ""T1545"",
     ""Technique name"": ""SMB Relay"",
     ""Quotes"": """"SMB Relay attacks exploit flaws in the server message block (SMB) protocol to relay authenticated connections from one system to another. The rule detects suspicious SMB negotiation patterns that are commonly associated with SMB relay attacks."""",
     ""Explanation"": ""The rule triggers when malicious SMB traffic with a specific pattern is detected on port 445. This pattern is often used in SMB relay attacks where a malicious actor attempts to exploit vulnerabilities in SMB to gain unauthorized access to a target system by relaying requests through a compromised system.""
   }
 ][
         ""sid"": ""50465"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve using externally accessible services such as SMB (Server Message Block) and RDP (Remote Desktop Protocol) to establish an initial foothold on a compromised host. The rule detects an attack exploiting a vulnerability in SMB negotiation, which is commonly used by attackers to gain access to a network share or execute code remotely."""",
         ""Explanation"": ""This rule looks for a SMB message with malformed negotiation, which may indicate an attempt to exploit a vulnerability in the SMB implementation.""
     ],
     [
         ""sid"": ""50465"",
         ""Technique ID"": ""T1211"",
         ""Technique name"": ""Exploitation for Defense Evasion"",
         ""Quotes"": """"Exploitation for Defense Evasion techniques involve exploiting vulnerabilities to bypass security features and evade detection. The rule detects an attack exploiting a vulnerability in SMB negotiation, which adversaries may use to bypass authentication or authorization mechanisms and gain unauthorized access to the targeted system."""",
         ""Explanation"": ""This rule looks for a SMB message with malformed negotiation, which may indicate an attempt to exploit a vulnerability in the SMB implementation.""
     ]
 ][
     {
         ""sid"": ""50465"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""The rule specifically looks for indicators of a SMB negotiation attack, which can be used to exploit vulnerabilities in SMB implementations.""
     }
 ][
   {
     ""sid"": ""50465"",
     ""Technique ID"": ""T1510"",
     ""Technique name"": ""SMB Relay"",
     ""Quotes"": """"SMB Relay techniques abuse the Server Message Block (SMB) protocol to pass untrusted authentication requests from one server to another, enabling an adversary with access to one system to relay traffic to a second system without valid credentials for the second system. The rule detects a malicious SMB packet that attempts to relay authentication from compromised machine to another machine on the network for the purpose of lateral movement or privilege escalation."""",
     ""Explanation"": ""This event is generated when a SMB Responder poisoner SMB negotiation attack attempt is detected. ""
   }
 ][
     ""sid"": ""50465"",
     ""Technique ID"": ""T1598.004"",
     ""Technique name"": ""SMB Relay"",
     ""Quotes"": """"SMB Relay techniques involve manipulating SMB traffic to relay authentication requests or other malicious traffic to other systems on the network. The rule detects an attempt to poison SMB negotiations, which is a common technique used in SMB relay attacks."""",
     ""Explanation"": ""This rule is designed to detect and block malicious SMB traffic that could be used to carry out a SMB relay attack by poisoning the SMB negotiation process.""
  ][
   {
     ""sid"": ""50465"",
     ""Technique ID"": ""T1134"",
     ""Technique Name"": ""Access Token Manipulation"",
     ""Quotes"": """"Access Token Manipulation techniques involve modifying access tokens to operate under a different user or system security context to perform actions and bypass access controls. The rule detects an attempted SMB negotiation attack, which can be used to manipulate access tokens and gain unauthorized access to a system."""",
     ""Explanation"": ""This rule detects malicious activity related to SMB negotiation attacks.""
   }
 ][
         ""sid"": ""50465"",
         ""Technique ID"": ""T1598"",
         ""Technique name"": ""Phishing for Information"",
         ""Quotes"": """"Phishing for Information techniques involve sending phishing messages to elicit sensitive information that can be used during targeting. This rule detects malicious SMB negotiation attempts that could be used to compromise systems and steal confidential information, which is a common method used in phishing attacks."""",
         ""Explanation"": ""This rule can be used to detect the TrickBot malware, which can arrive via email attachments and can execute malicious code to steal credentials and other sensitive information from infected systems.""
     ][
   {
     ""sid"": ""50465"",
     ""Technique ID"": ""T1595.003"",
     ""Technique name"": ""SMB Relay"",
     ""Quotes"": """"SMB Relay techniques involve the use of SMB to relay authentication requests to another system, enabling attackers to bypass authentication mechanisms. This rule detects an SMB negotiation attack attempt, which is a common method used by attackers to exploit vulnerabilities in SMB and gain unauthorized access to systems."""",
     ""Explanation"": ""SMB negotiation attack attempt. This attack attempts to exploit a vulnerability in the SMB protocol to gain unauthorized access to a system.""
   }
 ][
   {
     ""Sid"": ""50465"",
     ""Technique ID"": ""T1547.003"",
     ""Technique Name"": ""SMB Relay"",
     ""Quotes"": """"SMB Relay techniques allow adversaries to pass authentication requests to SMB services as a different user by forwarding the requests between two systems. This rule detects an attempt by an attacker to exploit SMB vulnerabilities, such as the Responder poisoning vulnerability (CVE-2020-1337), to pass authentication requests to a compromised server and gain unauthorized access to a network.'"""",
     ""Explanation"": ""SMB Relay attack attempt against responder protocol""
   }
 ][
   {
     ""sid"": ""50465"",
     ""Technique ID"": ""T1587"",
     ""Technique name"": ""Responder Poisoning"",
     ""Quotes"": """"Responder Poisoning techniques involve manipulating network protocols to force hosts to use an attacker-controlled server for name resolution, often to redirect traffic and obtain credentials."""",
     ""Explanation"": ""This IDS rule is designed to detect SMB responder poisoning attempts, which is a type of responder poisoning where an attacker poisons the SMB name server cache on a victim host to redirect SMB traffic to a malicious server controlled by the attacker.""
   }
 ]","['T1543', 'T1545', 'T1133', 'T1211', 'T1190', 'T1510', 'T1598.004', 'T1134', 'T1598', 'T1595.003', 'T1547.003', 'T1587']",['T1187']
57462,"[
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted compromise of a web application using a known vulnerability in the Perl.Backdoor.STEADYPULSE webshell, which is commonly used by attackers to gain remote access to compromised systems."""",
     ""Explanation"": ""The rule looks for a Perl webshell named STEADYPULSE.""
   },
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted compromise of a web application using a known vulnerability in the Perl.Backdoor.STEADYPULSE webshell, which is commonly used by attackers to gain remote access to compromised systems."""",
     ""Explanation"": ""The rule looks for a Perl webshell named STEADYPULSE.""
   }
 ][
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a victim by exploiting a vulnerability in software running on the victim's system through an untrusted website or other content. This rule is triggered by a perl backdoor (STEADYPULSE) attempting to load from a web server."""",
     ""Explanation"": ""This rule is triggered when activity relating to malware is detected.""
   },
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1064"",
     ""Technique name"": ""Payload Delivery"",
     ""Quotes"": """"Payload Delivery techniques involve transferring malicious code (payload) onto a victim system, which may be executed later. This rule detects an attempt to deliver a perl backdoor (STEADYPULSE) payload via a web request."""",
     ""Explanation"": ""This rule is triggered when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve using external-facing remote services to initially access and/or persist within a network. The rule detects access to a Perl backdoor, which is a type of web shell that provides remote access and control of a compromised system. Webshells are often hosted on external servers and accessed over HTTP, making them a common tool for attackers to establish persistence within a network."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting software vulnerabilities in client applications to execute arbitrary code. The rule detects an attempt to exploit a vulnerability in a Perl client application, which could allow remote attackers to execute arbitrary code on the target system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""57462"",
     ""Technique ID"": ""T1064"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending data from a victim system to a remote attacker over a command and control channel. In this case, the rule detects the exfiltration of data (|27|) via Perl.Backdoor.STEADYPULSE, indicating the presence of a malware backdoor that allows attackers to execute arbitrary commands and exfiltrate information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""The rule detects an attempt to access a web shell (""webshell"") using a variant of the ""Perl.Backdoor.STEADYPULSE"" backdoor, which is commonly used by attackers to gain unauthorized remote access to compromised systems.""
   }
 ][
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1062"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using command line or scripting languages to execute commands and scripts on target systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer technique involves transferring a tool to the victim system over an established network connection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1106"",
     ""Technique name"": ""Ingress - PowerShell"",
     ""Quotes"": """"Ingress - PowerShell technique involves using the PowerShell command-line interface to transfer tools and data into the network."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution involves tricking a user into executing a malicious file or script, which is often accomplished through social engineering tactics, phishing emails, or malicious websites."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1568"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve discovering files and directories on a system to locate potential targets for exfiltration or other actions. The rule detects access to a webshell variant, which is a type of backdoor that allows an attacker to execute arbitrary commands on a web server. Attackers commonly use file and directory discovery techniques to identify sensitive files or directories that can be compromised."""",
     ""Explanation"": ""Webshells are typically used to gain remote access to a compromised system and execute arbitrary commands.""
   }
 ][
     ""sid"": ""57462"",
     ""Technique ID"": ""T1064"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve impersonating another system, user, or service to gain unauthorized access or evade detection. This rule detects a Perl webshell attempting to access the results of a system command execution. Webshells are often used by attackers to maintain persistent access to compromised systems and impersonate legitimate system processes to avoid detection."""",
     ""Explanation"": ""A Perl webshell allows its user to issue system commands and access the results of those commands. This rule detects an attempt to access the results of the ""27"" command, which is suspicious because it is not a typical command used by legitimate users.""
 ][
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve executing malicious code or commands on a system through user interaction, such as tricking a user into running an executable or script. The rule detects the execution of a Perl backdoor, 'STEADYPULSE', which is commonly spread through malicious web shells that allow attackers to execute code on compromised systems."""",
     ""Explanation"": ""This event is generated when a packet is received with a header that matches the signature of a known attack.""
   },
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
   }
 ][
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Create Web Shell"",
     ""Quotes"": """"Create Web Shell techniques involve creating and uploading a web shell to a remote system to facilitate remote administration, command execution, and data exfiltration. This rule detects the presence of a Perl-based web shell variant associated with the STEADYPULSE backdoor, which allows attackers to remotely control compromised systems by executing arbitrary commands through a web interface."""",
     ""Explanation"": ""Perl script trojan capable of executing arbitrary commands and upload/download files from/to a remote server.""
   }
 ][
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1025"",
     ""Technique Name"": ""Remote File Copy"",
     ""Quotes"": """"Remote File Copy techniques involve accessing and copying files from a remote system over a network. The rule indicates the presence of activity related to the Perl.Backdoor.STEADYPULSE webshell variant, which commonly uses file copying to download and execute malicious payloads."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using operating system command or scripting environments to execute commands or scripts. The rule indicates the presence of activity related to the Perl.Backdoor.STEADYPULSE webshell variant, which typically uses command or scripting interpreters to execute malicious commands or scripts."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""57462"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Create Web Shell"",
     ""Quotes"": """"Create Web Shell techniques involve establishing a web shell, which is a malicious script or program that provides unauthorized remote access to a web application or server. The rule indicates the presence of activity related to the Perl.Backdoor.STEADYPULSE webshell variant, which is a type of web shell."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1189', 'T1190', 'T1189', 'T1064', 'T1133', 'T1203', 'T1064', 'T1190', 'T1062', 'T1105', 'T1106', 'T1204', 'T1568', 'T1064', 'T1204', 'T1189', 'T1105', 'T1025', 'T1105', 'T1203']",['T1071']
48231,"[
   {
     ""sid"": ""48231"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted code injection attack on the Apache Syncope web application by exploiting an XSL transformation vulnerability, which can allow adversaries to execute arbitrary code or gain unauthorized access to the server."""",
     ""Explanation"": ""This rule is designed to detect a specific type of code injection attack on the Apache Syncope web application, which could allow attackers to execute arbitrary code or gain unauthorized access to the server. The rule looks for a specific sequence of characters and patterns in the HTTP traffic, which are indicative of an XSL transformation code injection attack.""
   }
 ][
   {
     ""sid"": ""48231"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule specifically detects an attempt to exploit a code injection vulnerability in the Apache Syncope web application, which allows attackers to inject arbitrary XSL code into the application's XSL transformation process."""",
     ""Explanation"": ""The rule targets exploitation of a specific vulnerability in Apache Syncope and attempts to detect an attacker's attempt to inject malicious XSL code into the application.""
   }
 ][
   {
     ""sid"": ""48231"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a code injection vulnerability in the Apache Syncope web application. The attacker is attempting to inject an XSL stylesheet into the application to execute arbitrary code on the server."""",
     ""Explanation"": ""This event is generated when Apache Syncope XSL transform code injection attempt is detected.""
   }
 ][
     {
         ""sid"": ""48231"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted code injection attack on the Apache Syncope XSL transformer by exploiting a vulnerability in the 'syncope-console' application. Attackers can exploit this vulnerability to inject malicious code into the application and execute it."""",
         ""Explanation"": ""The rule detects an attempt to exploit a remote code execution vulnerability in Apache Syncope.""
     }
 ][
   {
     ""sid"": ""18942"",
     ""Technique ID"": ""T1220"",
     ""Technique name"": ""XSL Script Processing"",
     ""Quotes"": """"XSL Script Processing techniques involve manipulating or abusing XSL stylesheets to achieve malicious goals. The rule specifically identifies an attempt to exploit a code injection vulnerability in the Apache Syncope web application by manipulating XSL stylesheets, which could allow adversaries to execute arbitrary code on the server."""",
     ""Explanation"": ""This event is generated when an attempt is made to exploit a vulnerability in Apache Syncope web application allowing for XSL injection (CWE-115).""
   }
 ][
         ""sid"": ""48231"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted XXE (XML External Entity) injection attack on the Apache Syncope web application's 'Reports' page, which is a common method attackers use to exploit web applications by manipulating XML entities."""",
         ""Explanation"": ""This rule detects exploitation attempts against Apache Syncope web server""
     ][
     ""sid"": ""48231"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted XSL transform injection attack on the Apache Syncope console, which is a common method attackers use to exploit web applications by injecting malicious code into XSL transformations."""",
     ""Explanation"": ""Successful exploitation of this vulnerability could allow attacker to inject arbitrary XPath commands in XSL template which would be included into the XSLT transformation process. A targeted attack could use this vulnerability to execute arbitrary code on the server.""
 ][
   {
     ""sid"": ""48231"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted XSL transformation (XSLT) injection attack on the 'Reports' page of Apache Syncope, a web-based user provisioning and management tool. By exploiting an XSL injection vulnerability, attackers can execute arbitrary XSLT code on the server, potentially leading to sensitive data disclosure or unauthorized access."""",
     ""Explanation"": ""Apache Syncope versions 2.0.24 and prior are vulnerable to this issue.""
   }
 ][
   {
     ""sid"": ""48231"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted XSL injection attack on the Apache Syncope web application's 'Reports' page, which is a common method attackers use to exploit web applications by manipulating XML data."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
   }
 ][
         ""sid"": ""48231"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted code injection attack on the Apache Syncope web application, which is a common method attackers use to exploit web applications by injecting malicious code into user input fields."""",
         ""Explanation"": ""Apache Syncope versions 2.0.34 and prior allow remote attackers to achieve execute arbitrary code via a XXE attack involving the XSL transformation feature.""
     ][
   {
     ""sid"": ""48231"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": "" "",
     ""Explanation"": ""This rule is triggered when an attacker attempts to exploit a code injection vulnerability in the Apache Syncope web application. Code injection attacks involve injecting malicious code into a vulnerable application, allowing the attacker to execute arbitrary commands on the target system.""
   },
   {
     ""sid"": ""48231"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": "" "",
     ""Explanation"": ""This rule also detects command and control (C2) activity, as the attacker may use the compromised system to communicate with an external server for further instructions or to exfiltrate data.""
   }
 ]","['T1190', 'T1190', 'T1190', 'T1190', 'T1220', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1059']",['T1220']
19706,"[
   {
     ""sid"": ""19706"",
     ""Technique ID"": ""T1131"",
     ""Technique Name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding is a technique where data is encoded in an effort to conceal its true meaning, typically to bypass security controls or evade detection. This rule identifies a malware variant using the 'subject' and 'message' parameters in an HTTP request to communicate with a command and control server, likely through a POST request to '/com_plugin.php'."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""19706"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve stealing data by exfiltrating it over a different protocol than that of the existing command and control channel. This rule detects an outbound connection to a HTTP server on port 80 with a request for '/com_plugin.php' and parameters that include 'subject' and 'message'. This behavior is consistent with malware attempting to exfiltrate data over HTTP, which is an alternative protocol to the command and control channel."""",
     ""Explanation"": ""The rule specifically detects Win.Trojan.Agent.cer variant outbound connection.""
   },
   {
     ""sid"": ""19706"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve stealing data by exfiltrating it over an existing command and control channel. This rule detects an outbound connection to a HTTP server on port 80 with a request for '/com_plugin.php' and parameters that include 'subject' and 'message'. This behavior is consistent with malware attempting to exfiltrate data over the command and control channel."""",
     ""Explanation"": ""The rule specifically detects Win.Trojan.Agent.cer variant outbound connection.""
   }
 ][
     {
         ""sid"": ""19706"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of malware (Agent.cer variant) that attempts to connect to a command and control server using HTTP. The malware uses specific parameters in the HTTP body to send captured user input data, such as keystrokes or clipboard contents, to the server."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
         ""sid"": ""19706"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve using command and control servers to exfiltrate data from a victim system. This rule alerts on outbound communication from a compromised host to a remote server using a known Trojan (Agent.cer) communication protocol, which is commonly used to exfiltrate sensitive data such as credentials, system information, or keystrokes."""",
         ""Explanation"": ""This rule identifies an attempt to establish a connection between an attacker-controlled host and a remote server, potentially to send sensitive data.""
     ][
     ""sid"": ""19706"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects outbound traffic from a Trojan (Agent.cer) that is attempting to send captured data to a remote command and control (C2) server, which is a common method used by Trojans to exfiltrate sensitive information from a compromised system."""",
     ""Explanation"": ""The rule detects an attempt by a trojan to communicate with a remote server. The trojan is trying to send captured input data, such as keystrokes, to the server. This is a common method for trojans to steal sensitive information from a compromised system.""
 ][
   {
     ""sid"": ""19706"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve using established command and control channels to transmit data exfiltrated from the victim environment. This rule detects outbound connections from a compromised host attempting to send data to a remote server using a specific URI ('/com_plugin.php') and HTTP parameters ('subject' and 'message'). These parameters are commonly used by malware for data exfiltration purposes."""",
     ""Explanation"": ""This event is generated when Suspicious traffic related to the Win.Trojan.Agent.cer family is detected.""
   },
   {
     ""sid"": ""19706"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Compressed"",
     ""Quotes"": """"Data Compressed techniques involve compressing data to make it harder to detect, store, or transmit. This rule detects the use of compression in HTTP traffic, which could be an indication of data exfiltration attempts by malware. Compressing data can reduce its size, making it easier to transmit over networks or store on limited storage devices."""",
     ""Explanation"": ""This event is generated when Suspicious traffic related to the Win.Trojan.Agent.cer family is detected.""
   },
   {
     ""sid"": ""19706"",
     ""Technique ID"": ""T1027"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or encrypting files or information to make them harder to detect or understand. This rule detects the use of obfuscated strings in HTTP traffic, which could be an indication of malware attempting to hide its malicious content or evade detection."""",
     ""Explanation"": ""This event is generated when Suspicious traffic related to the Win.Trojan.Agent.cer family is detected.""
   }
 ][
     {
         ""sid"": ""19706"",
         ""Technique ID"": ""T1021"",
         ""Technique name"": ""Remote Access Tool"",
         ""Quotes"": """"Remote Access Tool techniques involve using remote access software to take control of a victim system over a network. The rule detects outbound communication from a Trojan (Agent.cer) to a command and control server over HTTP using a specific URI ('/com_plugin.php') and parameters ('subject' and 'message'). This behavior is consistent with remote access tools that establish a persistent connection to the victim system, allowing the attacker to remotely control and manage it."""",
         ""Explanation"": ""This rule detects a remote access tool (RAT) attempting to connect to a remote server.The RAT is classified as a trojan.""
     }
 ][
     ""sid"": ""19706"",
     ""Technique ID"": ""T1572"",
     ""Technique name"": ""Protocol Tunneling"",
     ""Quotes"": """"Protocol Tunneling techniques involve encapsulating network communications within another protocol to evade detection and bypass network controls. This rule detects outbound connections from a compromised system to a remote server using the 'com_plugin.php' script, a common technique used by malware to establish a covert communication channel through an HTTP connection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""19706"",
     ""Technique ID"": ""T1589"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve establishing covert communication channels between compromised systems and a remote controller for continued exploitation and data exfiltration. This rule specifically detects outbound connections to malicious websites associated with the Win.Trojan.Agent.cer variant, which is known to establish such command and control channels to receive instructions and exfiltrate data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""19706"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""C2 Communication Channel"",
     ""Quotes"": """"C2 Communication Channel techniques involve establishing and maintaining covert communication with C2 servers for command and control. This rule detects a variant of Win.Trojan.Agent.cer establishing an outbound connection using an HTTP POST request to a specific URL with data containing 'subject' and 'message' parameters, which suggests that it is communicating with a C2 server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""19706"",
     ""Technique ID"": ""T1211"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve using a legitimate entity, such as a user or system, to impersonate another entity to gain unauthorized access. In this case, malware attempts to masquerade as normal HTTP traffic by using the '/com_plugin.php' URI and including 'subject' and 'message' parameters in the HTTP body, which are common techniques used by malware to blend in with legitimate web traffic."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ]","['T1131', 'T1048', 'T1041', 'T1056', 'T1041', 'T1056', 'T1041', 'T1071', 'T1027', 'T1021', 'T1572', 'T1589', 'T1133', 'T1211']",['T1176']
57466,"[
   {
     ""sid"": ""57466"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools (e.g., executables, scripts, or other files) from an external source into a target environment. The rule detects an inbound connection to a Perl backdoor ('Perl.Backdoor.ATRIUM') via a web request to '/compcheckresult.cgi' with a 'id' parameter, which is a common method for attackers to transfer malicious tools."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""57466"",
     ""Technique ID"": ""T1098"",
     ""Technique Name"": ""Execution Through API"",
     ""Quotes"": """"Execution Through API techniques involve executing commands or code through an application programming interface (API) in order to achieve an objective. In this case, the rule detects an attempt by the Perl.Backdoor.ATRIUM backdoor to execute commands on the system through a web interface, which is a common method used by attackers to remotely control compromised systems."""",
     ""Explanation"": """"Inbound connection from external IP to internal IP over HTTP port with Perl.Backdoor.ATRIUM variant""
   },
   {
     ""sid"": ""57466"",
     ""Technique ID"": ""T1510"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve abusing or leveraging legitimate remote services to achieve an objective. In this case, the rule detects an attempt by the Perl.Backdoor.ATRIUM backdoor to establish a command and control connection to a remote server, which is a common method used by attackers to remotely control compromised systems."""",
     ""Explanation"": """"Inbound connection from external IP to internal IP over HTTP port with Perl.Backdoor.ATRIUM variant""
   }
 ][
   {
     ""sid"": ""57466"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve using a command and control (C2) server as the exfiltration medium. This rule is designed to detect Perl.Backdoor.ATRIUM, a backdoor that establishes an encrypted connection to a remote server to relay data, which aligns with the definition of exfiltrating information over a C2 channel."""",
     ""Explanation"": ""Perl.Backdoor.ATRIUM variant inbound cnc connection detected.""
   }
 ][
   {
     ""sid"": ""57466"",
     ""Technique ID"": ""T1071.001"",
     ""Technique Name"": ""Command and Control (C2) Communication over HTTP"",
     ""Quotes"": '""Command and Control (C2) Communication over HTTP techniques use the Hypertext Transfer Protocol (HTTP) for command and control communications with adversary-controlled servers. This rule detects an inbound connection to a Perl backdoor using the ""/compcheckresult.cgi"" URI, which is a known method used by attackers to establish C2 communications with compromised systems.""',
     ""Explanation"": ""This event is generated due to a backdoor, identified as Perl.Backdoor.ATRIUM variant which is performing a C&C communication over HTTP.""
   }
 ][
   {
     ""sid"": ""57466"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control (C2) techniques involve communication between a remote attacker and a compromised system to maintain access and control over the system."""",
     ""Explanation"": ""Connection to a CnC for malicious purposes.""
   },
   {
     ""sid"": ""57466"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""The rule is alerting on an attempt to exploit a Perl.Backdoor.ATRIUM variant backdoor.""
   }
 ][
         ""sid"": ""57466"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Connection Proxy"",
         ""Quotes"": """"Connection Proxy techniques involve leveraging a proxy to establish a connection to a remote system, allowing the adversary to bypass network restrictions or hide their true origin... Perl.Backdoor.ATRIUM connects outbound to a remote command-and-control (C2) server to receive instructions and possibly download additional malware components."""",
         ""Explanation"": ""Perl.Backdoor.ATRIUM variant inbound cnc connection.""
     ],
     ""sid"": ""57466"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring additional tools, such as malware or remote access tools, onto a victim system to support malicious objectives. Perl.Backdoor.ATRIUM can download additional malware components from its C2 server."""",
     ""Explanation"": ""Perl.Backdoor.ATRIUM variant inbound cnc connection.""
 ][
   {
     ""Sid"": ""57466"",
     ""Technique ID"": ""T1572"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing persistent communication with the C2 server to receive commands and deliver data. This rule detects an inbound connection to a known C2 server used by the Perl.Backdoor.ATRIUM backdoor, indicating that the attacker is attempting to establish C2 with a compromised host."""",
     ""Explanation"": ""Port 80 is used for normal web traffic.""
   },
   {
     ""Sid"": ""57466"",
     ""Technique ID"": ""T1557"",
     ""Technique name"": ""Adversary-in-the-Middle"",
     ""Quotes"": """"Adversary-in-the-Middle techniques involve positioning an adversary between two or more networked devices to intercept and manipulate communications. This rule monitors for an attacker using an AiTM technique to intercept and manipulate HTTP traffic, which can be used to steal sensitive information or deliver malicious content."""",
     ""Explanation"": ""This event is generated when an attempt to compromise a web-based application is detected.""
   }
 ][
   {
     ""sid"": ""57466"",
     ""Technique ID"": ""T1071.001"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve using a dedicated infrastructure to manage and communicate with deployed adversarial infrastructure, providing the ability to perform actions such as exfiltrating data, updating malware, and executing commands on target systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""57466"",
         ""Technique ID"": ""T1490"",
         ""Technique name"": ""Inhibit System Recovery"",
         ""Quotes"": """"Inhibit System Recovery techniques involve modifying or disabling built-in system recovery mechanisms, such as System Restore, to prevent the restoration of a system to a previous state. This technique is often used in conjunction with other techniques to maintain persistence and evade detection."""",
         ""Explanation"": ""This event is generated when activity relating to backdoor type trojan is detected, which may attempt to disable System restore to prevent the recovery of the system to a previous state.""
     }
 ][
   {
     ""sid"": ""57466"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve creating covert channels of communication between a victim and adversary-controlled infrastructure to facilitate the control and exfiltration of information. In this rule, Perl.Backdoor.ATRIUM establishes a connection to a command-and-control server by sending data via an HTTP POST request to a specific URI ('/compcheckresult.cgi') with a parameter ('id=')."""",
     ""Explanation"": ""This rule detects Perl.Backdoor.ATRIUM backdoor that connects back to the attacker's command and control (C2) server by sending data via an HTTP POST request.""
   }
 ][
   {
     ""sid"": ""57466"",
     ""Technique ID"": ""T1129"",
     ""Technique Name"": ""Remote Access Trojans"",
     ""Quotes"": """"Remote Access Trojans (RATs) are a type of malware that provides remote access and control over a compromised system to an adversary. The rule detects an inbound connection to a command and control (C2) server by a Perl-based backdoor known as 'Perl.Backdoor.ATRIUM', which is a variant of the RAT family, and is used to establish a persistent connection with the C2 server for remote control purposes."""",
     ""Explanation"": ""The rule detects malicious network traffic associated with the Perl.Backdoor.ATRIUM RAT.""
   }
 ]","['T1105', 'T1098', 'T1510', 'T1041', 'T1071.001', 'T1059', 'T1190', 'T1110', 'T1105', 'T1572', 'T1557', 'T1071.001', 'T1490', 'T1105', 'T1129']",['T1071']
42451,"[
         ""sid"": ""42451"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute Force techniques involve using automated tools or manual attempts to guess user credentials, such as passwords, through repeated attempts. This rule detects brute force login attempts against the MCA Sistemas ScadaBR 'login.htm' page, where attackers attempt to guess valid user credentials by repeatedly submitting different combinations of usernames and passwords."""",
         ""Explanation"": ""This event is generated when system detects a brute force attack against an application or service.""
     ][
     {
         ""sid"": ""42451"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute force techniques involve using a trial-and-error approach to guess user credentials, encryption keys, or other secrets by trying multiple possible values until the correct one is found. This rule detects a brute force attack against ScadaBR's login page, where an attacker repeatedly attempts to log in with different username and password combinations."""",
         ""Explanation"": ""This rule detects an event where an attacker is attempting to brute force their way into a web application.""
     }
 ][
         ""sid"": ""42451"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted brute force login attack against a MCA Sistemas ScadaBR 'login.htm' page, where an attacker may leverage a weak password policy to gain unauthorized access to the web application."""",
         ""Explanation"": ""Attempted brute force login was detected in the web application.""
     ],
     ""sid"": ""42451"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques take advantage of vulnerabilities in publicly accessible or open services on a network to gain unauthorized access. This rule detects an attempted exploitation of a vulnerability in the MCA Sistemas ScadaBR application interface, where an attacker could potentially execute arbitrary code or gain unauthorized access to the system."""",
     ""Explanation"": ""This rule detects exploitation attempts against the web application.""
 ][
     ""sid"": ""42451"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve performing repeated attempts to guess correct login credentials or cryptographic keys in an automated manner to gain access to a system."",
     ""Explanation"": ""This rule detects brute-force login attempts to a web application using JSESSIONID, username, and password parameters.""
 ][
     ""sid"": ""42451"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve the use of automated tools to try a large number of possible combinations of usernames and passwords in order to gain access to a system or account. This rule is looking for brute force attacks against the ScadaBR index.php login page by monitoring for multiple login attempts within a short period of time."""",
     ""Explanation"": ""This rule checks for malicious server-side web application attacks against the ScadaBR index.php""
 ][
         ""sid"": ""42451"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute Force techniques are automated attempts to guess user credentials or encryption keys by trying many possible combinations, often using specialized tools. This rule detects a brute force login attempt against an ScadaBR login page, which is a common method attackers use to gain unauthorized access to web applications by repeatedly trying different combinations of usernames and passwords."""",
         ""Explanation"": ""This event is generated when activity relating to brute force authentication actions are detected.""
     ][
         ""sid"": ""42451"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute Force techniques involve attempting to guess a password or passphrase by trying a large number of possible combinations until the correct one is found. This rule specifically detects brute force attacks against the 'index.php' page of MCA Sistemas ScadaBR, a web application for Supervisory Control and Data Acquisition (SCADA) systems. It monitors HTTP traffic for attempts to authenticate with the 'username' and 'password' parameters, indicating a brute force attack."""",
         ""Explanation"": ""HTTP brute force attack against the MCA Sistemas ScadaBR web application.""
     ][
     ""sid"": ""42451"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute Force describes adversaries using automated or manual methods to try a large number of possible combinations to gain access to something. This rule specifically detects brute force login attempts to the MCA Sistemas ScadaBR index.php page, in which an adversary tries different username and password combinations to gain access to the web application."""",
     ""Explanation"": ""This event is generated when brute force login attempt is detected""
 ][
   {
     ""sid"": ""42451"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques involve repeatedly attempting to authenticate to a system or service using different combinations of usernames and passwords until the correct combination is found."""",
     ""Explanation"": ""This rule detects brute force login attempts against the 'ScadaBR' web application login page, which is a common attack method used to gain unauthorized access to web applications.""
   }
 ][
     {
         ""sid"": ""42451"",
         ""Technique ID"": ""T1110"",
         ""Technique Name"": ""Brute Force"",
         ""Quotes"": """"Brute force techniques involve repeatedly submitting different combinations of credentials until a valid combination is found. This rule detects an attempt to brute force login credentials on an MCA Sistemas ScadaBR system's login.htm page by analyzing HTTP traffic for repeated attempts to provide a username and password."""",
         ""Explanation"": ""This event is generated when an attack using brute force is detected.""
     }
 ][
     {
         ""sid"": ""42451"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute force techniques involve repeatedly attempting to guess valid credentials for a given account or service. This rule detects a brute force attack on the MCA Sistemas ScadaBR login page, using the 'username' and 'password' parameters in the HTTP request body to guess valid credentials."""",
         ""Explanation"": ""Login brute force attack against a web application's form-based login page""
     },
     {
         ""sid"": ""42451"",
         ""Technique ID"": ""T1589"",
         ""Technique name"": ""Credential Stuffing"",
         ""Quotes"": """"Credential stuffing is a technique that involves using stolen username and password pairs to gain unauthorized access to user accounts on different systems or services. This rule detects a brute force attack on the MCA Sistemas ScadaBR login page, which is a potential indicator of credential stuffing attempts."""",
         ""Explanation"": ""The threat actor is attempting to access the web application using a large number of stolen credentials in an attempt to gain access to valid user accounts.""
     }
 ]","['T1110', 'T1110', 'T1190', 'T1210', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1589']",['T1110']
53341,"[
   {
     ""sid"": ""53341"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file access vulnerability in the Apache Tomcat AJP connector, which could allow an attacker to read sensitive files on the server."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in the Apache Tomcat AJP connector that could allow an attacker to read sensitive files on the server.""
   }
 ][
         ""sid"": ""53341"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a potential attempt to exploit a vulnerability in the Apache Tomcat AJP connector, which could allow an attacker to gain unauthorized access to the underlying server."""",
         ""Explanation"": ""This rule is designed to detect attempts to exploit a vulnerability in the Apache Tomcat AJP connector. This vulnerability could allow an attacker to gain unauthorized access to the underlying server by sending a specially crafted HTTP request.""
     ][
   {
     ""sid"": ""53341"",
     ""Technique ID"": ""T1106"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using a command shell or scripting environment to execute adversary-controlled commands or scripts on a system. This rule detects an attempt to exploit a vulnerability in Apache Tomcat's AJP connector, which allows remote attackers to execute arbitrary commands on the server by sending specially crafted AJP requests, leading to unauthorized access or code execution."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Apache Tomcat's AJP connector, which allows remote attackers to execute arbitrary commands on the server.""
   }
 ][
   {
     ""sid"": ""53341"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted exploitation of a vulnerability in the Apache Tomcat AJP connector, which could allow an attacker to gain unauthorized access to the server's file system."""",
     ""Explanation"": ""This rule detects an attempt to exploit the CVE-2020-1938 vulnerability in Apache Tomcat, which could allow an attacker to execute arbitrary code on the server.""
   }
 ][
   {
     ""sid"": ""53341"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code.\"" The rule detects an attempted arbitrary file access on Apache Tomcat, which is a web application server used in various organizations. By exploiting vulnerabilities in Tomcat, attackers can gain unauthorized access to the server and potentially execute arbitrary code."",
     ""Explanation"": ""Exploitation of path traversal vulnerability in Apache Tomcat versions 5.5.0 through 7.0.99, 8.0.0 through 8.5.51, and 9.0.0 through 9.0.33 allows remote attackers to read arbitrary files via crafted AJP requests. By exploiting this vulnerability, an attacker could read sensitive files from a susceptible server with Tomcat installed.""
   }
 ][
   {
     ""sid"": ""53341"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""This event is generated when an attempt to access a file through the Apache Tomcat AJP connector is detected. This connector is used to communicate between the Apache HTTP Server and the Tomcat servlet container. By manipulating the AJP request, an attacker could potentially exploit vulnerabilities in the Tomcat server to gain unauthorized access or execute arbitrary code.""
   }
 ][
     ""sid"": ""53341"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Apache Tomcat AJP connector, which allows an attacker to access arbitrary files on the server. The attacker can use this access to compromise the server or steal sensitive data."""",
     ""Explanation"": ""This event is generated when it observes exploitation attempts targeting the Apache Tomcat AJP connector flaw to read arbitrary files on the server.""
 ][
         ""sid"": ""53341"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to perform a path traversal vulnerability in Apache Tomcat's AJP connector to gain unauthorized access to the filesystem."""",
         ""Explanation"": ""This event is generated when an attempt is made to access a file or directory that the user does not have access to.""
     ][
   {
     ""sid"": ""53341"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a remote command execution vulnerability in Apache Tomcat AJP connector, which allows attackers to execute arbitrary commands on the server."""",
     ""Explanation"": ""This rule is designed to detect attempts to exploit a remote command execution vulnerability in the Apache Tomcat AJP connector. The rule looks for specific traffic patterns that are indicative of an attack, such as a request containing the string ""javax.servlet.include.request_uri|00|"" and ""javax.servlet.include.servlet_path|00|"". If these patterns are detected, the rule will trigger an alert and block the traffic.""
   }
 ][
   {
     ""sid"": ""53341"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted exploitation of the Apache Tomcat AJP connector arbitrary file access vulnerability, which allows unauthenticated attackers to access arbitrary files on the server."""",
     ""Explanation"": ""This rule is configured to detect exploitation attempts of the Apache Tomcat AJP connector arbitrary file access vulnerability, which is a technique commonly used by attackers to gain unauthorized access to web servers.""
   }
 ][
   {
     ""sid"": ""53341"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in Apache Tomcat AJP connector, which is a common method attackers use to exploit web applications by manipulating HTTP requests."""",
     ""Explanation"": ""Apache Tomcat AJP connector arbitrary file access attempt detected by this rule is a technique that can lead to remote code execution.""
   }
 ]","['T1190', 'T1190', 'T1106', 'T1190', 'T1190', 'T1190', 'T1190', 'T1210', 'T1190', 'T1190', 'T1190']",['T1048']
24426,"[
   {
     ""sid"": ""24426"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve adversaries transferring data from compromised systems to a command and control (C2) server over an established communication channel. This rule detects malware attempting to download a Java Trojan (Jacksbot) by sending a request to a C2 server using a specific file name ('FLOOD DRAIN') and content ('#!/bin/bash'), which is a common method used by malware to establish persistent access and exfiltrate data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""24426"",
     ""Technique ID"": ""T1499"",
     ""Technique name"": ""Endpoint Denial of Service"",
     ""Quotes"": """"Endpoint Denial of Service techniques are used to disrupt legitimate endpoint services or consume endpoint resources to prevent normal operation or access to data or services. The rule specifically detects the download of a Java Trojan that is known to launch a Denial of Service (DoS) attack, which is a common method for disrupting endpoint services."""",
     ""Explanation"": ""This event is generated when activity relating to a download of a Java Trojan that is known to launch a Denial of Service (DoS) attack is detected. ""
   },
   {
     ""sid"": ""24426"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve exfiltrating data via protocols other than the command and control channel. This rule triggers when the Trojan attempts to send sensitive data over FTP, HTTP, IMAP, or POP3, thereby using alternative protocols to evade detection."""",
     ""Explanation"": ""This event is generated when activity that attempts to send sensitive data over FTP, HTTP, IMAP, or POP3 is detected. The Trojan uses these alternative protocols to bypass security measures.""
   }
 ][
   {
     ""sid"": ""24426"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": ""\""Exploitation for Client Execution techniques involve exploiting software vulnerabilities in client applications to execute code. This rule detects an attempt to download a Java Trojan (Jacksbot) by exploiting a vulnerability in a file sharing application. The rule looks for specific patterns and strings in the file data, such as \""FLOOD DRAIN\"", \""/bin/bash\"", and references to specific files and directories that are associated with the Trojan's activity.\"""",
     ""Explanation"": ""Attempts to download and execute Java.Trojan.Jacksbot using a file sharing application vulnerability.""
   },
   {
     ""sid"": ""24426"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": ""\""External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. This rule detects an attempt to use a file sharing application as an external remote service to download and execute a Trojan. File sharing applications can provide a convenient way for attackers to transfer malicious files and gain access to a target network.\"""",
     ""Explanation"": ""Attempts to use a file sharing application as an external remote service to download and execute Java.Trojan.Jacksbot.""
   }
 ][
   {
     ""sid"": ""24426"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": ""\""Ingress Tool Transfer involves moving malicious tools onto a system, and this rule detects the possible download of the \""Java.Trojan.Jacksbot\"" by analyzing the contents of the file transfer. Jacksbot is a Remote Access Trojan (RAT) that can be used by attackers to remotely control infected systems."""",
     ""Explanation"": ""This rule is designed to detect the transfer of malicious tools, and the presence of Jacksbot is indicative of this.""
   },
   {
     ""sid"": ""24426"",
     ""Technique ID"": ""T1035"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": ""\""File and Directory Discovery techniques involve searching for and identifying files and directories of interest on a system. This rule looks for specific files and directories associated with Jacksbot, such as \"".minecraft\"", \""/etc/rc.common\"", \""/etc/rc.local\"", and \"".filezilla/recentservers.xml\""."""",
     ""Explanation"": ""This rule is designed to detect the presence of Jacksbot by looking for specific files and directories that are associated with it.""
   }
 ][
   {
     ""sid"": ""24426"",
     ""Technique ID"": ""T1556"",
     ""Technique Name"": ""Steal Token"",
     ""Quotes"": """"Steal Token techniques involve stealing access tokens that allow attackers to authenticate as the compromised user and bypass many forms of access control. The rule detects an attempt to obtain a user's Minecraft and FileZilla access credentials, which are often targeted by malware to gain persistent access to a system."""",
     ""Explanation"": ""Indicators of Compromise known to be associated with an APT group named COBALT GYPSY. Indicators include C2 domains, IP addresses, and malware samples associated with COBALT GYPSY implants.""
   },
   {
     ""sid"": ""24426"",
     ""Technique ID"": ""T1119"",
     ""Technique Name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve discovering information about remote systems without authenticating to them. The rule checks for communication with a C2 server known to be used by the Java.Trojan.Jacksbot malware, which uses this technique to establish a command and control channel with infected systems."""",
     ""Explanation"": """"Java.Trojan.Jacksbot class download""
   }
 ][
   {
     ""sid"": ""24426"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or capabilities required to support malicious operations onto victim systems. This rule detects the downloading of a Java Trojan (Jacksbot) which typically uses file transfer or network protocols to download malicious payloads onto compromised systems."""",
     ""Explanation"": ""This rule detects the downloading of a Java Trojan (Jacksbot) which typically uses file transfer or network protocols to download malicious payloads onto compromised systems.""
   }
 ][
     {
         ""sid"": ""24426"",
         ""Technique ID"": ""T1138"",
         ""Technique Name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve identifying and accessing files and directories on a system to locate information or data of interest. This rule detects activity associated with the 'Jacksbot' trojan, which is known for searching for specific files and directories on infected systems to gather information or install malware."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     },
     {
         ""sid"": ""24426"",
         ""Technique ID"": ""T1569"",
         ""Technique Name"": ""File Download"",
         ""Quotes"": """"File Download techniques involve transferring files from a remote system to a local system. This rule specifically identifies the downloading of a Java class file associated with the 'Jacksbot' trojan, which is often used to establish persistence or execute malicious payloads."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""24426"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking a user into executing malicious code, often by disguising it as legitimate content or exploiting vulnerabilities in applications or operating systems. This rule detects an attempt to download a malicious Java Trojan (Jacksbot) by sending a malicious class file to the victim's system. The Trojan is disguised as a legitimate class file and may be executed by the user unknowingly, allowing the attacker to gain control of the victim's system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""24426"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in web browsers or other software to execute malicious code on a victim's system without the user's knowledge or consent. This rule detects an attempt to exploit a vulnerability in the Java Runtime Environment (JRE) by sending a malicious class file to the victim's system. The malicious class file may execute arbitrary code on the victim's system, allowing the attacker to gain control of the system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""24426"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
     ][
     {
         ""sid"": ""24426"",
         ""Technique ID"": ""T1105"",
         ""Technique Name"": ""Initial Access"",
         ""Quotes"": """"Initial Access techniques are used to gain initial access to a network or system and establish a foothold. This rule detects malicious Java code attempting to download a Trojan (Jacksbot) and execute commands on the system, which could be used to establish persistence and facilitate further attacks."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     },
     {
         ""sid"": ""24426"",
         ""Technique ID"": ""T1122"",
         ""Technique Name"": ""Remote File Copy"",
         ""Quotes"": """"Remote File Copy techniques involve copying files from or to a remote system. The rule specifically detects the download of a malicious class file associated with Jacksbot, indicating that the adversary is attempting to install malware on the system for remote control or other malicious purposes."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     },
     {
         ""sid"": ""24426"",
         ""Technique ID"": ""T1064"",
         ""Technique Name"": ""Script"",
         ""Quotes"": """"Script techniques involve the use of scripts to perform malicious actions, such as downloading and executing malware or modifying system settings. The rule detects the presence of a malicious script containing commands associated with the Jacksbot Trojan, suggesting that the adversary is attempting to execute malicious code on the system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     },
     {
         ""sid"": ""24426"",
         ""Technique ID"": ""T1160"",
         ""Technique Name"": ""Cloud Service Discovery"",
         ""Quotes"": """"Cloud Service Discovery techniques involve identifying and gathering information about cloud services used by an organization. The rule does not directly detect cloud service discovery, but the presence of malware designed to target systems within a network suggests that the adversary may be attempting to identify and exploit cloud services as part of their attack."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
         ""sid"": ""24426"",
         ""Technique ID"": ""T1218"",
         ""Technique name"": ""System Binary Proxy Execution"",
         ""Quotes"": """"System Binary Proxy Execution techniques involve abusing trusted software to execute malicious code. This rule detects the use of a Java Trojan (Jacksbot) that downloads and executes malicious class files, which is a common method attackers use to gain control of a system by exploiting trusted binaries."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]","['T1140', 'T1499', 'T1048', 'T1203', 'T1133', 'T1105', 'T1035', 'T1556', 'T1119', 'T1105', 'T1138', 'T1569', 'T1204', 'T1189', 'T1190', 'T1105', 'T1122', 'T1064', 'T1160', 'T1218']",['T1087']
23612,"[
   {
     ""sid"": ""23612"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Malicious PDF"",
     ""Quotes"": """"Malicious PDF techniques involve using malicious PDF files to execute arbitrary code or deliver malware to a victim's system. This rule detects a PDF file containing embedded JavaScript in an XML template, which can be leveraged to execute malicious code in the context of the PDF reader."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Adobe Reader which could allow remote attackers to execute arbitrary code via a maliciously crafted PDF document.""
   }
 ][
   {
     ""sid"": ""23612"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted cross-site scripting (XSS) attack by identifying JavaScript contained in an XML template embedded in a PDF file. Attackers often use this technique to exploit vulnerabilities in web applications and gain unauthorized access to sensitive information.\"""",
     ""Explanation"": ""The rule detects a malicious attempt to exploit a vulnerability in a public-facing application by using JavaScript code embedded in a PDF file. This technique is commonly used to compromise web applications and steal sensitive data.""
   }
 ][
         ""sid"": ""23612"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a PDF document containing malicious JavaScript. Malicious actors often attempt to exploit PDF files to gain entry into systems."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a PDF document containing malicious JavaScript is detected.""
     ][
   {
     ""sid"": ""23612"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or text messages designed to trick victims into disclosing sensitive information, such as passwords or financial data. This rule detects an attempt to exploit a vulnerability in Adobe Reader by embedding JavaScript code in a PDF template, which could allow attackers to execute arbitrary code on the victim's system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""23612"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Template Injection"",
     ""Quotes"": """"Template Injection techniques involve embedding malicious content in templates or forms to execute code or manipulate the user interface of an application or platform. This rule detects an attempt to inject malicious JavaScript into an XML template embedded in a PDF document, which is a common technique used to exploit vulnerabilities in PDF viewers and execute arbitrary code on the victim's system."""",
     ""Explanation"": ""This event is generated when an XML template embedded in a PDF document contains malicious JavaScript.""
 ][
     ""sid"": ""23612"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploitation of vulnerabilities in public-facing applications to gain unauthorized access and execute arbitrary code. This rule detects an attempt to leverage a known vulnerability in Adobe Reader to execute arbitrary code within a victim's system via a malicious PDF file containing a JavaScript-based exploit."""",
     ""Explanation"": ""This event is generated when activity relating to possible file download activity is detected.""
 ][
   {
     ""sid"": ""23612"",
     ""Technique ID"": ""T1131"",
     ""Technique Name"": ""Data Encoding"",
     ""Quotes"": [
       ""Data Encoding techniques involve adding a layer of encryption or encoding to data to protect its confidentiality or integrity.""
     ],
     ""Explanation"": ""In this case, the rule detects an event where an attempt was made through a web application to open a PDF containing embedded XML that leveraged JavaScript.""
   }
 ][
   {
     ""sid"": ""23612"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""Malicious PDF or MS Office Document"",
     ""Quotes"": """"Malicious PDF or MS Office Document techniques involve embedding malicious code in PDF or MS Office documents, such as macros or scripts, to execute malicious activities when the document is opened or enabled."""",
     ""Explanation"": ""This event is generated when malicious PDF activity is detected. The rule triggers when a PDF document is detected to contain JavaScript code embedded in an XML template within the document."",
   },
   {
     ""sid"": ""23612"",
     ""Technique ID"": ""T1137"",
     ""Technique Name"": ""Office Application Startup"",
     ""Quotes"": """"Office Application Startup techniques involve leveraging Microsoft Office-based applications for persistence between startups."""",
     ""Explanation"": ""An XML file is often used to store data in Microsoft Office documents. The rule specifically looks for an XML template with an event activity to initialize a JavaScript application when the document is opened."",
   }
 ][
         ""sid"": ""23612"",
         ""Technique ID"": ""T1119"",
         ""Technique name"": ""Malicious Script"",
         ""Quotes"": """"Malicious Script techniques involve injecting malicious code into scripts, such as JavaScript or VBScript, which may be present on host systems or within web content. The rule detects the presence of a PDF file with an embedded JavaScript template, which may contain malicious code to execute arbitrary commands on the victim's system. This is a common technique used by attackers to exploit vulnerabilities in PDF readers and compromise systems."""",
         ""Explanation"": ""This rule is used to detect malicious PDF files that contain JavaScript code that may be used to exploit vulnerabilities in PDF readers and compromise systems.""
     ][
     {
         ""sid"": ""23612"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""User Execution"",
         ""Quotes"": """"User Execution techniques involve tricking a user into executing a malicious payload, such as through social engineering or phishing attacks. The rule detects an attempt to exploit a PDF document containing JavaScript to execute arbitrary code. This technique is commonly used to trick users into running malicious code by embedding JavaScript within a PDF document. The JavaScript will then execute malicious actions, such as downloading additional malware or stealing sensitive data."""",
         ""Explanation"": ""This rule is designed to match packets that contain a JavaScript embedded within an XML template in a PDF.""
     }
 ][
   {
     ""sid"": ""23612"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""The rule looks for PDF files with embedded XML containing JavaScript code, which is consistent with the behavior of exploiting this vulnerability.""
   }
 ]","['T1189', 'T1190', 'T1190', 'T1203', 'T1189', 'T1189', 'T1131', 'T1204', 'T1137', 'T1119', 'T1204', 'T1110']",['T1027']
46067,"[
   {
     ""sid"": ""46067"",
     ""Technique ID"": ""T1176"",
     ""Technique name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve monitoring and capturing network traffic to obtain sensitive information, such as credentials, session tokens, or other sensitive data. The rule detects outbound connections from an internal network to an external address, which could indicate an attacker attempting to exfiltrate sensitive data from the compromised system."""",
     ""Explanation"": ""The rule triggers when it finds a connection from the internal network (HOME_NET) to an external network (EXTERNAL_NET) on HTTP ports. The presence of the \""Expect: 100-continue\"" header is often used in HTTP communication to indicate that the client expects a 100 Continue response from the server before sending the request body. The rule also looks for \""pc=\"" and \""pc_data=\"" strings in the HTTP client body, which could be related to the Win.Trojan.yty malware or a similar threat actor utilizing a plugin download mechanism.""
   }
 ][
         ""sid"": ""46067"",
         ""Technique ID"": ""T1176"",
         ""Technique name"": ""Remote System Discovery"",
         ""Quotes"": """"Remote System Discovery techniques involve gathering information about remote systems, such as network topology, system configuration, and software versions, to identify potential targets for attack. The rule detects an outbound connection from a compromised host to a known command and control server used by the yty Trojan, which is a common method for attackers to establish a persistent connection to a compromised system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""46067"",
     ""Technique ID"": ""T1176"",
     ""Technique Name"": ""Packing"",
     ""Quotes"": """"Packing techniques involve using compression or encryption methods to hide malicious content within a file or network traffic, making it difficult to detect and analyze. This rule detects an outbound connection from a compromised host to a known Trojan command and control (C2) server, with the HTTP header ""Expect: 100-continue"" and specific content in the HTTP body (""pc="" and ""pc_data=""), which suggests that the malware is attempting to communicate with the C2 server using a custom protocol that is likely obfuscated or packed."""",
     ""Explanation"": ""Trojan attempts to connect to a known CnC IP address at port 80.  The Trojan may be sending a compressed or obfuscated payload.""
   }
 ][
         ""Sid"": ""46067"",
         ""Technique ID"": ""T1219"",
         ""Technique Name"": ""Remote System Discovery"",
         ""Quotes"": """"Remote System Discovery techniques involve gathering information about remote systems to prepare for attacks. A common method used is port scanning, which involves sending packets to a range of IP addresses on a target network to determine which ports are open and listening. Snort IDS can be used to detect such port scans."""",
         ""Explanation"": ""Snort detects port scans and raised an alert""
     ][
         ""sid"": ""46067"",
         ""Technique ID"": ""T1176"",
         ""Technique name"": ""Credential Dumping"",
         ""Quotes"": """"Credential Dumping techniques involve extracting credentials from compromised systems to facilitate follow-on access or privilege escalation. This rule detects an initial outbound connection from a host infected with the Win.Trojan.yty malware, which typically attempts to steal credentials from compromised systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""46067"",
         ""Technique ID"": ""T1176"",
         ""Technique name"": ""Remote Access Trojan"",
         ""Quotes"": """"RATs are malicious software that allows remote attackers to access and control an infected system. This rule detects an initial outbound connection from a Trojan downloader, which is a common RAT technique used to establish a command and control channel with an attacker."""",
         ""Explanation"": ""Trojan downloader is a type of malicious software that downloads and executes additional malicious software, in this case, another Trojan.""
     }
 ][
   {
     ""sid"": ""46067"",
     ""Technique ID"": ""T1176"",
     ""Technique name"": ""Browser Extensions"",
     ""Quotes"": ""\""Browser Extensions allow adversaries to modify the functionality of a user's web browser, track user activity, or steal sensitive information.\"""",
     ""Explanation"": ""The rule detects outbound connections from compromised hosts to a known malware command and control server. The malware uses a browser extension to establish the connection, which is consistent with the use of T1176: Browser Extensions for establishing persistent access to victim systems.""
   }
 ][
   {
     ""sid"": ""46067"",
     ""Technique ID"": ""T1176"",
     ""Technique Name"": ""Proxy"",
     ""Quotes"": """"Proxy techniques involve establishing a proxy server to redirect communication between two or more endpoints, often to bypass network security controls. This rule identifies outbound communication from an infected host attempting to connect to a remote proxy server, which is a common tactic used by malware to maintain covert communication with its command and control server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""46067"",
     ""Technique ID"": ""T1176"",
     ""Technique Name"": ""Network Share Discovery"",
     ""Quotes"": """"Network Share Discovery techniques involve discovering and enumerating network shares on remote systems to identify potential targets for exploitation. This rule detects an initial outbound connection from a compromised host to a remote server, indicating the possibility of the adversary attempting to establish a network connection to a shared resource on the server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""46067"",
     ""Technique ID"": ""T1177"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve actively probing network services to identify vulnerabilities or weaknesses that can be exploited. This rule detects an initial outbound connection from a compromised host to a remote server, indicating the possibility of the adversary attempting to scan for open ports or services on the server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""46067"",
         ""Technique ID"": ""T1176"",
         ""Technique name"": ""Command and Control Server"",
         ""Quotes"": """"Command and Control Server techniques involve communicating with an attacker's server to receive instructions, send data, or receive updates."""",
         ""Explanation"": ""This event is generated when a server is detected to be malicious.""
     }
 ][
     ""sid"": ""46067"",
     ""Technique ID"": ""T1176"",
     ""Technique Name"": ""Endpoint Denial of Service"",
     ""Quotes"": """"Endpoint Denial of Service techniques involve overwhelming or exhausting system resources on a target machine to render it unavailable to users or applications. This rule detects communication with a Trojan that attempts to connect to a command and control (C2) server while also attempting to download a plug-in, which is a common method used by malware to establish persistent access and execute malicious commands."""",
     ""Explanation"": ""The rule is triggered when an outbound connection is made to a remote host on a high port with the expectation header set to 100-continue, which is often used by malware to establish a command and control (C2) channel.""
 ]","['T1176', 'T1176', 'T1176', 'T1219', 'T1176', 'T1176', 'T1176', 'T1176', 'T1176', 'T1177', 'T1176', 'T1176']",['T1176']
41084,"[ {""sid"": ""41084"", ""Technique ID"": ""T1189"", ""Technique Name"": ""Exploitation for Client Execution"", ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side software, such as web browsers or email clients, to execute arbitrary code or gain unauthorized access to systems. This rule detects a landing page used by the Sundown Exploit Kit, which is commonly used to exploit vulnerabilities in web browsers to drop malware."""", ""Explanation"": ""This event is generated when activity relating to malware is detected.""}][
   {
     ""sid"": ""41084"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve gaining access to a system through a user visiting a website over the normal course of browsing. This rule specifically detects malicious obfuscated JavaScript code within an HTTP response, which is a common method used in drive-by compromise attacks to exploit vulnerabilities in web browsers and gain unauthorized access to the system."""",
     ""Explanation"": ""This event is generated when an attempt is made to exploit a client-side vulnerability using the Sundown exploit kit.""
   }
 ][
   {
     ""sid"": ""41084"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": ""\""Drive-by Compromise techniques involve tricking a user into visiting a malicious website to infect the user's system with malware.\"""",
     ""Explanation"": ""This rule detects the landing page of the Sundown exploit kit. This tactic typically uses pop-ups to trick the user into installing malware on the user's machine, thus compromising their system.""
   }
 ][
     ""sid"": ""41084"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of the Sundown Exploit Kit, which is a commonly observed exploit kit used to target web browsers and gain control of victim machines."""",
     ""Explanation"": ""The rule detects the exploitation of a public-facing application by using a specific exploit kit (Sundown Exploit kit).""
 ][
         ""sid"": ""41084"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in a web application by using a ""Sundown Exploit Kit"" landing page to obfuscate malicious code, which is a common method used by attackers to deliver exploit kits."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in a web application is detected.""
     ][
   {
     ""sid"": ""41084"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects the presence of the Sundown Exploit Kit, which is a well-known exploit kit used to deliver malware and compromise vulnerable web applications."""",
     ""Explanation"": ""The rule triggers when it detects a specific pattern associated with the Sundown Exploit Kit, such as the presence of obfuscated JavaScript code that attempts to create a new element and set its type to text/javascript.""
   }
 ][
   {
     ""sid"": ""41084"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Remote Services"",
     ""Quotes"": """"Exploit Remote Services techniques involve identifying and exploiting security vulnerabilities in publicly facing applications or services. This rule detects an attempt by the Sundown exploit kit to exploit a vulnerability in a web application to drop malware on the target system."""",
     ""Explanation"": ""This event is generated when exploit kit activity is detected.""
   }
 ][
         ""sid"": ""41084"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve tricking a victim into visiting a malicious website or opening a malicious file, which then exploits a vulnerability in the victim's software to install malware. This rule detects an attempt by the Sundown exploit kit to obfuscate its landing page using JavaScript, which is a common method used by drive-by compromise attacks to evade detection."""",
         ""Explanation"": ""This rule alerts when the Sundown exploit kit is attempting to obfuscate its landing page using JavaScript, which is a common technique used to evade detection and deliver malware.""
     ][
   {
     ""sid"": ""41084"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects a web-based attack using the Sundown exploit kit, which commonly leverages vulnerabilities in web browsers and plug-ins to infect systems with malware."""",
     ""Explanation"": ""The rule detects the Sundown exploit kit, which is used to exploit vulnerabilities in web applications and browsers.""
   }
 ][
   {
     ""sid"": ""41084"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Service"",
     ""Quotes"": """"Exploit Public-Facing Service techniques involve attackers targeting vulnerabilities in externally facing services to gain unauthorized access, execute arbitrary code, or perform other malicious actions. This rule specifically detects the use of the Sundown exploit kit, which is commonly used in malicious campaigns, indicating an attempt to exploit vulnerabilities in web-facing services."""",
     ""Explanation"": ""This attack pattern is used by the Sundown exploit kit. It Is a common tool used in malicious campaigns, which indicates an attempt to exploit vulnerabilities in web-facing services.""
   }
 ][
   {
     ""sid"": null,
     ""Technique ID"": ""T1123"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": null,
     ""Explanation"": ""This rule detects obfuscated scripts used by exploit kits like Sundown to deliver malicious payloads. Attackers use exploit kits to target web applications with known vulnerabilities to gain unauthorized access and execute arbitrary code.""
   },
   {
     ""sid"": null,
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": null,
     ""Explanation"": ""This rule detects the execution of obfuscated scripts on the target system. Attackers often use malicious scripts to gain remote access, install malware, or steal sensitive data.""
   }
 ]","['T1189', 'T1189', 'T1189', 'T1190', 'T1190', 'T1189', 'T1189', 'T1189', 'T1190', 'T1189', 'T1123', 'T1204']",['T1027']
48501,"[
   {
     ""sid"": ""48501"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This rule aims to identify malicious file transfer attempts, including the download of potentially harmful binaries or scripts.""
   }
 ][
   {
     ""sid"": ""48501"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Create or Modify System Resource"",
     ""Quotes"": """"Create or Modify System Resource techniques involve creating, modifying, or deleting system resources like files, services, registry keys, or processes. This rule detects the download of a variant of the 'Win.Tool.Delete' malware, which is known to create or modify system resources to establish persistence and compromise the system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""48501"",
     ""Technique ID"": ""T1008"",
     ""Technique name"": ""Fallback Channels"",
     ""Quotes"": """"Fallback Channels techniques involve establishing a secondary or backup communication channel with an actor or resource for maintaining access or persistence within a network in the event that the primary channel is disrupted or compromised. This rule detects an attempt to establish a secondary communication channel, possibly as a fallback in case the primary channel is lost, by monitoring for specific patterns in the protocol traffic."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""48501"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or malware to a target network via a download mechanism. This rule detects the download of a malicious tool or variant, specifically identified as ""Win.Tool.Delete,"" over a file transfer protocol (FTP, HTTP, IMAP, or POP3). Attackers use these protocols to transfer malicious executables or scripts to compromised systems for further exploitation."""",
     ""Explanation"": ""The rule triggers on the detection of a specific malware variant, ""Win.Tool.Delete,"" which is an indication of malware transfer onto the target network.""
   }
 ][
   {
     ""sid"": ""48501"",
     ""Technique ID"": ""T1164"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising the appearance or behavior of attackers, their tools, or malicious content to evade detection or deceive defenders. This rule detects Windows-based malware that attempts to download an executable file (.exe) using a file transfer protocol (FTP) connection. The malware may disguise itself as legitimate software or use other techniques to avoid detection by security controls."""",
     ""Explanation"": ""The rule triggers an alert when a file download attempt is detected using FTP or other file transfer protocols. The malicious payload may be disguised as a legitimate file to bypass security mechanisms.""
   }
 ][
   {
     ""sid"": ""48501"",
     ""Technique ID"": ""T1140"",
     ""Technique Name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscation/Decoding occurs when an adversary removes encryption or encoding from files or information, making it easier to understand or retrieve the intended data. This rule detects a download of a variant of Win.Tool.Delete. This variant contains encrypted data and requires decryption before being used. The rule identifies the presence of the encrypted data, indicating that the adversary is attempting to deobfuscate the data to execute the malware."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""48501"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingest Data from External Source"",
     ""Quotes"": """"Ingest Data from External Source techniques involve obtaining data from external sources, such as websites or public databases, to enrich adversary knowledge or support targeting. This rule detects an attempt to download a Win.Tool.Delete variant, a malicious tool used to delete files, indicating that an adversary may be attempting to gather information or prepare for follow-on attacks."""",
     ""Explanation"": ""Detects the download of a file with the filename of \""shutdown\"". The filename \""shutdown\"" is commonly associated with malware.""
 ][
   {
     ""sid"": ""48501"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Injection"",
     ""Quotes"": """"Injection techniques involve introducing malicious code into a system or application, often through user input or insecure APIs. This rule detects an attempt to inject malicious code into a web application via a file upload, which is a common method attackers use to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""The rule matches on the pattern of a file upload request with a malicious payload (/|00|q|00 20 00|&|00|&|00 20 00|s|00|h|00|u|00|t|00|d|00|o|00|w|00|n|00 20 00|/|00|r|00 20 00|/|00|f|00 20 00|/|00|t|00 20 00|0|00|0|00|), indicating an attempt to inject malicious code into the application.""
   }
 ][
         ""sid"": ""48501"",
         ""Technique ID"": ""T1484"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data using symmetric or asymmetric methods to provide confidentiality and integrity, making it difficult for defenders to analyze or recover the data. This rule detects an attempt to download a variant of Delete malware, which is often encrypted to evade detection and analysis."",
         ""Explanation"": ""This event is generated when an attempt to download a variant of Delete malware is detected.""
     ][
   {
     ""sid"": ""48501"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools onto a system or network to support malicious operations. The rule detects an attempt to download a variant of Win.Tool.Delete, which is a malicious tool used to delete files and directories on the target system."""",
     ""Explanation"": ""This rule is for identifying attempts to download malware tools. The malware tool is downloaded as a file with specific content.""
   }
 ][
     ""sid"": ""48501"",
     ""Technique ID"": ""T1574"",
     ""Technique Name"": ""Create or Modify System Process"",
     ""Quotes"": """"The adversary may attempt to execute malicious code in a variety of ways. The code may be injected into an existing process, hidden within a legitimate process, or executed as an independent process.""""
     ""Explanation"": ""This rule detects an attempt to create or modify a system process, which could be a sign of malicious activity.""
 ]","['T1105', 'T1105', 'T1008', 'T1105', 'T1164', 'T1140', 'T1105', 'T1105', 'T1484', 'T1105', 'T1574']",['T1070']
26803,"[
   {
     ""sid"": ""26803"",
     ""Technique ID"": ""T1530"",
     ""Technique Name"": ""DNS Data Exfiltration"",
     ""Quotes"": """"DNS Data Exfiltration techniques involve using the Domain Name System (DNS) to exfiltrate data from a compromised network. This rule detects DNS requests with suspicious characteristics, such as the presence of non-standard characters and unusual request patterns, which may indicate an attempt to exfiltrate data via DNS."""",
     ""Explanation"": ""DNS data exfiltration attempt.""
   }
 ][
         ""sid"": ""26803"",
         ""Technique ID"": ""T1048"",
         ""Technique Name"": ""Exfiltration Over Alternative Protocol"",
         ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve stealing data by exfiltrating it over a different protocol than that of the existing command and control channel. The rule detects an attempt to exfiltrate data via DNS requests disguised as normal DNS traffic."""",
         ""Explanation"": ""This rule is designed to detect malware attempting to exfiltrate data over DNS using a technique called ""DNS Exfiltration"". DNS Exfiltration involves encoding data within DNS requests to bypass traditional network security measures.""
     ][
   {
     ""sid"": ""26803"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services, such as cloud storage services, webmail services, and remote administration tools, to initially access and/or persist within a network. In this case, the IDS rule detects DNS data exfiltration attempts over UDP, which can be used by adversaries to exfiltrate sensitive information out of a network."""",
     ""Explanation"": ""DNS is used for data exfiltration, which can be used for command and control.""
   },
   {
     ""sid"": ""26803"",
     ""Technique ID"": ""T1008"",
     ""Technique name"": ""Fallback Channels"",
     ""Quotes"": """"Fallback Channels techniques involve using backup or alternate communication channels if the primary channel is compromised or inaccessible. In this case, the IDS rule detects DNS data exfiltration attempts over UDP, which can be used by adversaries to establish a fallback communication channel in case their primary channel is disrupted."""",
     ""Explanation"": ""DNS is not typically used for data exfiltration, so it serves as a fallback channel.""
   }
 ][
   {
     ""sid"": ""26803"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring data out of a network or system. This rule detects suspicious DNS traffic that appears to be exfiltrating data via DNS tunnels, where non-standard DNS queries are used to encode and transfer data over DNS."""",
     ""Explanation"": ""The rule detects a DNS request that contains a large amount of data in the query string, which is indicative of a potential data exfiltration attempt using a DNS tunnel.""
   }
 ][
   {
     ""sid"": ""26803"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Exfiltration Over DNS"",
     ""Quotes"": """"Exfiltration Over DNS techniques involve using the Domain Name System (DNS) protocol to exfiltrate data. The rule detects DNS queries containing exfiltrated data encoded in a specific format, indicating an attempt to transfer sensitive information out of the network using the DNS protocol."""",
     ""Explanation"": ""The rule specifically detects DNS queries with a specific byte pattern ""
   }
 ][
         ""sid"": ""26803"",
         ""Technique ID"": ""T1048"",
         ""Technique name"": ""Exfiltration Over DNS"",
         ""Quotes"": """"Exfiltration Over DNS (DNS Exfiltration) techniques involve using the Domain Name System (DNS) protocol to exfiltrate data from a compromised system. This rule detects a DNS query that matches the pattern associated with DNS exfiltration, where an attacker attempts to encode and exfiltrate data by crafting DNS queries with specially crafted subdomains."""",
         ""Explanation"": ""This event is generated when DNS data exfiltration attempt is detected.""
     ][
   {
     ""sid"": ""26803"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Application Layer Protocol"",
     ""Quotes"": ""\""Application Layer Protocol techniques involve using high-level protocols to avoid detection. The rule triggers on DNS traffic that is being used to exfiltrate data as it contains a base64-encoded string which is a common method of hiding data in network traffic."",
     ""Explanation"": ""DNS data exfiltration attempt was detected.""
   }
 ][
     {
         ""sid"": ""26803"",
         ""Technique ID"": ""T1071"",
         ""Technique Name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve unauthorized transfer of data from a system or network to an external location. The rule specifically detects DNS data exfiltration attempts, where malicious actors exfiltrate sensitive data by encoding it within DNS queries. This is a common method used by adversaries to evade detection and bypass network security controls."""",
         ""Explanation"": ""The rule detects an attempt to exfiltrate data using the DNS protocol, which is anomalous and potentially malicious.""
     }
 ][
   {
     ""sid"": ""26803"",
     ""Technique ID"": ""T1519"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve moving data from inside a targeted environment to an external location. This rule detects the exfiltration of data via DNS, which is a common method attackers use to stealthily transfer sensitive information out of a network. The rule looks for specific patterns in DNS requests, such as the presence of an encoded domain name and the use of non-standard DNS ports."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to exfiltrate data over DNS.""
   }
 ][
     {
         ""sid"": ""26803"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve transferring data out of a network or system, often in violation of security policies or to exfiltrate sensitive information. This rule detects an attempt to exfiltrate data via a DNS query using a specific pattern, indicating that the attacker is using the DNS protocol to hide the exfiltration of data."""",
         ""Explanation"": ""DNS is used to extract data from an internal network to external resource via specially crafted DNS requests.""
     }
 ][
         ""sid"": ""26803"",
         ""Technique ID"": ""T1071.001"",
         ""Technique name"": ""Data Exfiltration over DNS"",
         ""Quotes"": """"Data Exfiltration over DNS techniques involve exfiltrating data using the Domain Name System (DNS) protocol, which can allow attackers to bypass traditional security controls designed to detect other exfiltration methods."""",
         ""Explanation"": ""Detects domain names encoded using a specific format within DNS requests, which is a known technique used by malware to exfiltrate data via DNS.""
     ],
     [
         ""sid"": ""26803"",
         ""Technique ID"": ""T1548"",
         ""Technique name"": ""Exfiltration Over C2 Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel is a technique in which adversaries exfiltrate data over the C2 [command and control] channel."""",
         ""Explanation"": ""DNS is commonly used as a C2 channel for malware, so this rule may also be detecting exfiltration over a C2 channel.""
     ]
 ]","['T1530', 'T1048', 'T1133', 'T1008', 'T1071', 'T1048', 'T1048', 'T1071', 'T1071', 'T1519', 'T1071', 'T1071.001', 'T1548']",['T1020']
50104,"[
     ""sid"": ""50104"",
     ""Technique ID"": ""T1598.001"",
     ""Technique name"": ""SMB Relay"",
     ""Quotes"": """"SMB Relay techniques involve abusing the Server Message Block (SMB) protocol to establish a connection from a victim host to a malicious server that relays malicious requests back to the victim host, allowing adversaries to execute arbitrary code or access sensitive information. The rule detects an attempt to poison a Responder server using an SMB negotiation attack, which is a common method to exploit vulnerabilities in SMB implementations to achieve relay attacks."""",
     ""Explanation"": ""The rule detects malicious SMB traffic.""
 ][
         ""sid"": ""50104"",
         ""Technique ID"": ""T1543"",
         ""Technique name"": ""SMB Relay"",
         ""Quotes"": """"SMB Relay techniques abuse the Server Message Block (SMB) protocol to relay authentication requests from a client to a server without proper authorization. The rule detects an SMB negotiation request that is used in SMB relay attacks, which is a common method for attackers to gain unauthorized access to a network by impersonating legitimate clients."""",
         ""Explanation"": ""The rule is designed to detect SMB relay attacks, which abuse SMB to impersonate legitimate clients and gain unauthorized access to a network.""
     ]
 {}
 
 {}
 [
   {
     ""sid"": ""50104"",
     ""Technique ID"": ""T1582"",
     ""Technique name"": ""Responder Poisoning"",
     ""Quotes"": """"Responder poisoning is a technique that exploits a flaw in the NetBIOS protocol to redirect network traffic to a malicious host. The rule detects an attempt to poison a NetBIOS name service responder, which can allow attackers to intercept and manipulate network traffic."""",
     ""Explanation"": ""SMB Responder poisoner attack attempt""
   }
 ]
 {}
 [
         ""sid"": ""50104"",
         ""Technique ID"": ""T1135"",
         ""Technique name"": ""Network Denial of Service"",
         ""Quotes"": """"Network Denial of Service (DoS) techniques involve flooding a target system or network with data or packets to disrupt normal operations. This rule detects a Responder poisoning attack on port 445 (SMB), which is a common tactic used to perform DoS attacks by sending a large number of specially crafted packets to the target system, causing it to crash or become unresponsive."""",
         ""Explanation"": ""SMB protocol Denial of Service vulnerability in Microsoft Windows 2000 SP4 and Windows XP prior to SP3 allows remote attackers to cause a denial of service (DoS) via a malformed request.""
     ][
         ""sid"": ""50104"",
         ""Technique ID"": ""T1543"",
         ""Technique name"": ""SMB Poisoning"",
         ""Quotes"": """"SMB Poisoning techniques involve modifying SMB responses to manipulate clients into executing malicious code. The rule detects an SMB negotiation attack in which the attacker attempts to poison the responder's cache by sending a specially crafted SMB packet. The modified response can redirect the client to a malicious server or cause it to execute arbitrary code."""",
         ""Explanation"": ""This rule is designed to detect anomalous SMB traffic that could indicate a poisoning attack. The specific content pattern in the rule matches a known attack pattern used in SMB poisoning.""
     ][
   {
     ""sid"": ""50104"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing the obfuscation of malicious files or data to reveal their intended functionality. The rule detects an attack against the Server Message Block (SMB) protocol specifically targeting Responder poisoning, which often involves the use of obfuscated or encrypted malware or exploits."""",
     ""Explanation"": ""This rule is triggered when an attempt to poison the responder is detected, which is a technique used in relay attacks.""
   }
 ][
   {
     ""sid"": ""50104"",
     ""Technique ID"": ""T1543"",
     ""Technique Name"": ""Responder Poisoning"",
     ""Quotes"": """"Responder Poisoning techniques involve intercepting and manipulating network traffic, such as DNS or NetBIOS-NS requests, to redirect users to malicious or unauthorized systems. The rule looks specifically for patterns associated with NetBIOS-NS responder poisoning attacks, where an attacker attempts to poison the NetBIOS name resolution process to redirect traffic to a malicious host."""",
     ""Explanation"": """"The rule detects NetBIOS responder poisoning attacks, where an attacker manipulates DNS or NetBIOS-NS responses to redirect traffic to a malicious host.""
   }
 ][
         {
             ""sid"": ""50104"",
             ""Technique ID"": ""T1129"",
             ""Technique name"": ""SMB/RPC Reconnaissance"",
             ""Quotes"": """"SMB/RPC Reconnaissance techniques involve using SMB or RPC to gather information about a target system or network. This rule detects an attempt to exploit a vulnerability in the Microsoft Server Message Block (SMB) protocol, which attackers often use to gather information and gain unauthorized access to systems."""",
             ""Explanation"": ""The rule triggers on an SMB negotiation attempt in which the client sends a malformed packet designed to cause the server to respond with detailed information about itself. This information can include the operating system version, patch level, and other system configurations that attackers can use to identify and target vulnerabilities.""
         },
         {
             ""sid"": ""50104"",
             ""Technique ID"": ""T1540"",
             ""Technique name"": ""Modify Authentication Process"",
             ""Quotes"": """"Modify Authentication Process techniques involve altering the authentication process to bypass or weaken authentication mechanisms. This rule detects an attempt to exploit a vulnerability in the Microsoft Server Message Block (SMB) protocol, which attackers often use to modify the authentication process and gain unauthorized access to systems."""",
             ""Explanation"": ""The rule triggers on an SMB negotiation attempt in which the client sends a malformed packet designed to force the server to use a weaker authentication mechanism, such as NTLMv1, which is more susceptible to attack.""
         }
     ]","['T1598.001', 'T1543', 'T1582', 'T1135', 'T1543', 'T1048', 'T1543', 'T1129', 'T1540']",['T1187']
885,"[
   {
     ""sid"": ""885"",
     ""Technique ID"": ""T1188"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent communications to trick victims into revealing sensitive information or clicking malicious links. The rule indicates the presence of a web application vulnerability that allows attackers to access a 'bash' page, which could be used to capture sensitive information from users or execute arbitrary commands."""",
     ""Explanation"": ""This event is generated when an attacker tries to access a 'bash' page on a web application, which could indicate an attempt to exploit a vulnerability to gain unauthorized access or execute arbitrary commands.""
   }
 ][
   {
     ""sid"": ""885"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access the 'bash' URI, which could indicate an attempt to exploit a command injection vulnerability in a web application."""",
     ""Explanation"": "" This Snort rule detects attempts to access the '/bash' URI, which could be an indication of an attacker attempting to exploit a command injection vulnerability in a web application. Command injection vulnerabilities allow attackers to execute arbitrary commands on the underlying operating system, which can lead to a variety of malicious outcomes, including data exfiltration, system compromise, and remote code execution.""
   }
 ][
   {
     ""sid"": ""885"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a connection in which a request to '/bash' URI is being made. Adversaries might attempt to exploit a vulnerability in Bash to execute arbitrary commands or gain unauthorized access to the system."""",
     ""Explanation"": """"bash access"""" in the MSG field indicates a possible attempt to exploit a vulnerability in the Bash shell to gain access to the remote host running a web server.""
   }
 ]
 {}
 
 {}
 [
   {
     ""sid"": ""885"",
     ""Technique ID"": ""T1106"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using built-in scripting and command interpreter functionality in system or application software. The rule detects attempts to access a '/bash' URI, indicating a possible attempt to execute commands on the web server using the Bash command interpreter."""",
     ""Explanation"": ""This event is generated when a possible web application vulnerability is detected.""
   },
   {
     ""sid"": ""885"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command-Line Interface"",
     ""Quotes"": """"Command-Line Interface techniques involve executing commands through a command line shell to interact with the underlying operating system and perform various actions, such as executing programs or modifying files. The rule detects attempts to access a '/bash' URI, which could indicate an attempt to execute commands on the web server using the Bash command-line interface."""",
     ""Explanation"": ""This event is generated when a possible web application vulnerability is detected.""
   }
 ]
 {}
 [
     ""sid"": ""885"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve executing commands or scripts on a system to perform various tasks, including running malicious payloads, establishing remote access, and gathering system information. This rule detects an attempt to access the bash command-line interpreter via an HTTP request to '/bash', which could indicate an attacker attempting to execute arbitrary commands on the web server."""",
     ""Explanation"": ""The bash scripting may be used to perform malicious activities.""
 }
 ][
   {
     ""sid"": ""885"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access the ""/bash"" URI, which could be an indication of an attacker trying to exploit a command injection vulnerability in a web application to execute arbitrary commands on the server."""",
     ""Explanation"": ""Bash vulnerability in ASUSwrt-Merlin 380.68 and earlier, and 382.53 and earlier allows remote attackers to execute arbitrary commands via a crafted CGI request to the web interface, as demonstrated by a request that starts with the '/bash' URI.""
   }
 ]
 {}
 {}","['T1188', 'T1190', 'T1190', 'T1106', 'T1105', 'T1105', 'T1190']",['T1204']
30520,"[
         ""sid"": ""30520"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an OpenSSL SSLv3 heartbeat read overrun attempt, which is a vulnerability in OpenSSL that can allow remote attackers to crash vulnerable servers or potentially execute arbitrary code by sending a specially crafted heartbeat request."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in a public-facing application is detected.""
     ][
   {
     ""sid"": ""30520"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve probing a network to discover network services, open ports, and vulnerabilities. This rule detects attempts to exploit a vulnerability in OpenSSL by sending a specially crafted heartbeat message. Attackers use this vulnerability to obtain information about the target system, such as its operating system and software versions, which can aid in further exploitation."""",
     ""Explanation"": ""This rule triggers on an SSL/TLS heartbeat read overrun attempt. This usually coincides with attempts to exploit CVE-2014-0160.""
   }
 ]
 {}
 [
   {
     ""sid"": ""30520"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an OpenSSL SSLv3 Heartbeat vulnerability, which attackers can exploit to cause a buffer overflow on the server and potentially crash the service or execute arbitrary code remotely."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in the OpenSSL SSLv3 Heartbeat implementation, which could lead to a remote code execution attack. The rule matches traffic that contains the malicious heartbeat request, which triggers the buffer overflow vulnerability.""
   },
   {
     ""sid"": ""30520"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve actively scanning a network to discover available services and their associated ports. This rule detects an attempt to scan for vulnerable SSL/TLS services, such as OpenSSL, by sending a series of heartbeat requests to determine if the service is vulnerable to the Heartbeat vulnerability."""",
     ""Explanation"": ""This rule detects an attempt to scan for vulnerable SSL/TLS services, such as OpenSSL, by sending a series of heartbeat requests to determine if the service is vulnerable to the Heartbeat vulnerability.""
   }
 ]
 {}
 [
     {
         ""sid"": ""30520"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""Public facing applications may be probed to identify vulnerabilities that can be exploited to obtain unauthorized access.""
     }
 ][
         ""sid"": ""30520"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve scanning a network for open ports or services to identify targets for further exploitation. This rule detects an attempt to exploit a vulnerability in OpenSSL's SSLv3 heartbeat implementation, which allowed attackers to read arbitrary memory from the server. Such scanning behavior is typically associated with reconnaissance activities to probe and identify potential vulnerabilities."""",
         ""Explanation"": ""The rule is looking for an attempt to exploit a vulnerability in the OpenSSL SSLv3 heartbeat implementation, which allowed attackers to read arbitrary memory from the server.""
     ]
 {}
 
 {}
 [
         ""sid"": ""30520"",
         ""Technique ID"": ""T1222"",
         ""Technique name"": ""Exploitation of Remote Services"",
         ""Quotes"": """"Exploitation of Remote Services techniques involve targeting vulnerabilities in publicly accessible services on remote systems, typically through the network, to execute arbitrary code or gain unauthorized access. This rule detects an attempted exploitation of a vulnerability in the OpenSSL SSLv3 heartbeat mechanism, which could allow an attacker to execute arbitrary code on the vulnerable system."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in the OpenSSL SSLv3 heartbeat mechanism is detected.""
     ]
 {}
 ","['T1190', 'T1040', 'T1190', 'T1046', 'T1190', 'T1046', 'T1222']",['T1123']
57464,"
 {}
 
 {}
 [
     {
         ""sid"": ""57464"",
         ""Technique ID"": ""T1495"",
         ""Technique name"": ""Firmware Corruption"",
         ""Quotes"": """"Firmware Corruption techniques involve modifying legitimate firmware or installing counterfeit/altered firmware (e.g., BIOS, UEFI) to compromise memory, interfaces, or other system components. This rule detects malicious firmware modification attempts by searching for patterns indicating firmware corruption, which adversaries may use to gain persistent access to a system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""57464"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Adversaries may use Valid Accounts to log into a service that accepts remote connections, such as telnet, SSH, and VNC"""",
     ""Explanation"": ""The rule detects Perl.Backdoor.HARDPULSE variant inbound CNC connection""
   },
   {
     ""sid"": ""57464"",
     ""Technique ID"": ""T1091"",
     ""Technique Name"": ""Replication Through Removable Media"",
     ""Quotes"": """"Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes"""",
     ""Explanation"": ""The rule detects Perl.Backdoor.HARDPULSE variant which may use removable media to spread""
   },
   {
     ""sid"": ""57464"",
     ""Technique ID"": ""T1113"",
     ""Technique Name"": ""Screen Capture"",
     ""Quotes"": """"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation"""",
     ""Explanation"": ""The rule detects Perl.Backdoor.HARDPULSE variant which may use screen capture to gather information""
   }
 ]
 {}
 [
   {
     ""sid"": ""57464"",
     ""Technique ID"": ""T1140"",
     ""Technique Name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve decoding or decrypting files or information to reveal hidden content. This rule detects the presence of the 'Perl.Backdoor.HARDPULSE' backdoor, which uses base64 encoding to obfuscate its communication. The rule identifies the 'hashid' and 'checkcode' parameters in the HTTP request, which are likely used by the backdoor to communicate with its command and control server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""57464"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Establish Command and Control"",
         ""Quotes"": """"Establish Command and Control techniques involve establishing covert channels of communications for command and control (C2) of the adversary by using various techniques such as web shells, backdoors, and other mechanisms. The rule detects inbound connections to a specific URL with embedded parameters (/compcheckjava.cgi with 'hashid' and 'checkcode' parameters) which is a common method used by malware to establish C2 with its operators."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]{}
 {}
 [
   {
     ""sid"": ""57464"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""This rule is used to detect the exploitation of a web application vulnerability by a malicious actor. The attacker is attempting to execute a command on the web server by exploiting a vulnerability in the web application.""
   },
   {
     ""sid"": ""57464"",
     ""Technique ID"": ""T1106"",
     ""Technique Name"": ""Native API"",
     ""Quotes"": ""\""Adversaries may interact with the native OS application programming interface (API) to execute behaviors.\"""",
     ""Explanation"": ""This rule detects an attempt to execute a command on the web server. The attacker is likely using a native API to execute the command.""
   }
 ]
 {}
 ","['T1495', 'T1021', 'T1091', 'T1113', 'T1140', 'T1132', 'T1190', 'T1106']",['T1071']
36054,"[
   {
     ""sid"": ""36054"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve adversaries using existing remote access and management protocols to communicate with remote systems and execute commands or perform administrative functions."""",
     ""Explanation"": ""Backdoors and remote access tools typically use some form of protocol to communicate, such as HTTP, SSH, or SMB. This rule detects inbound connections from a known backdoor tool, indicating that an attacker is attempting to establish a remote connection to the system.""
   },
   {
     ""sid"": ""36054"",
     ""Technique ID"": ""T1218"",
     ""Technique name"": ""System Network Configuration Discovery"",
     ""Quotes"": """"System Network Configuration Discovery techniques involve adversaries gathering information about the network configuration of a system to identify potential attack vectors, such as open ports, services, and network shares."""",
     ""Explanation"": ""Backdoors and remote access tools often require specific network ports to be open in order to establish a connection. This rule detects attempts to connect to a specific port, which could indicate that an attacker is probing the system for vulnerabilities.""
   }
 ]
 {}
 
 {}
 [
   {
     ""sid"": ""36054"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Data Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Data Exfiltration Over Command and Control Channel techniques involve exfiltrating data from a compromised system over a command and control channel. The rule detects an inbound connection from an external IP address to a compromised internal host, which is a common method used by malware to exfiltrate data to a command and control server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""36054"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Snort rule 36054 detects suspicious inbound connections to HTTP ports (typically 80/443) that exhibit a specific byte pattern. This pattern is commonly associated with malicious traffic, such as that generated by the SYNful backdoor, which exploits vulnerabilities in iOS devices to establish covert connections to a remote server."""",
     ""Explanation"": ""The rule detects suspicious connections to HTTP ports that may be part of an attempt to exploit vulnerabilities in iOS devices.""
   }
 ]{}{}
 {}
 
 {}
 
 {}
 [
   {
     ""sid"": ""36054"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques are used by adversaries to establish a reliable communications channel with compromised systems to facilitate remote access and control."""",
     ""Explanation"": ""This rule detects an inbound connection from an external IP address to a port used by HTTP. The presence of the binary pattern ""|00 00 00| |45 25 6D| within the traffic indicates that the connection may be part of a command and control activity related to Ios.Backdoor.SYNful.""
   },
   {
     ""sid"": ""36054"",
     ""Technique ID"": ""T1493"",
     ""Technique name"": ""Create Account"",
     ""Quotes"": """"Create Account techniques involve creating accounts on systems or in cloud environments to aid in persistence and lateral movement."""",
     ""Explanation"": ""Malware often establishes persistence by creating new user accounts or modifying existing ones. This rule does not directly detect account creation, but it may indicate that malware is attempting to establish persistence on the system.""
   }
 ]","['T1133', 'T1218', 'T1132', 'T1190', 'T1132', 'T1493']",['T1205']
56595,"
 {}
 [
   {
     ""sid"": ""56595"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using a command shell or scripting language to execute malicious code or commands on a system. This rule detects an attempt to download the GORAT malware, which uses a scripting language to execute malicious commands on the infected system."""",
     ""Explanation"": ""This rule detects an attempt to download the GORAT malware, which is a backdoor Trojan that can execute commands on an infected system. The malware is downloaded via a file_data attachment in an email message.""
   }
 ]
 {}
 [
         ""sid"": ""56595"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting a software vulnerability on a client system to execute arbitrary code, establish persistence, or compromise other systems. This rule detects an attempted exploitation of a vulnerability in SMTP servers using the 'aqlKZ7wjzg0iKM00E1WB' exploit string, which is known to be associated with the MultiOS.Malware.GORAT malware."""",
         ""Explanation"": ""This event is generated when activity relating to backdoor malware is detected.""
     ]
 {}
 
 {}
 
 {}
 [
   {
     ""sid"": ""56595"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Inject Library"",
     ""Quotes"": """"Inject Library techniques involve inserting malicious code into a legitimate process or application in order to gain control or execute arbitrary code. This rule detects an attempt to inject a malicious library 'aqlKZ7wjzg0iKM00E1WB/jq9_RA46w91EKl9A02Dv/nbNdZiLsB1ci8Ph0fb64/9Ks1YxAE86iz9A0dUiDl' into a legitimate process or application, which is a common method used by malware to achieve persistence and evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""56595"",
     ""Technique ID"": ""T1135"",
     ""Technique name"": ""Modify Registry"",
     ""Quotes"": """"Modify Registry techniques involve modifying the Windows Registry to change system or application settings, or to create persistence mechanisms. This rule detects an attempt to modify a registry key 'HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' which is a common method used by malware to establish persistence."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]{}[
   {
     ""sid"": ""56595"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer involves transferring tools or malware onto a system using established network connectivity or access, often by leveraging an existing network connection such as email attachments or downloads from compromised websites."""",
     ""Explanation"": ""The rule triggers on a detected attempt to download malware via an email attachment, which is a common method used to deliver malicious payloads to target systems.""
   }
 ]
 {}
 ","['T1105', 'T1189', 'T1105', 'T1135', 'T1105']",['T1050']
31976,"[
   {
     ""sid"": ""31976"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": [
       """"Command and Scripting Interpreter techniques involve using an operating system's command or scripting interpreter to execute commands or scripts. This rule detects an attempt to exploit a command injection vulnerability by injecting a command into a Bash CGI environment variable. Attackers can use this technique to execute arbitrary commands on the server, potentially leading to compromise.""
     ],
     ""Explanation"": ""This event is generated when activity relating to command injection is detected.""
   }
 ]{}[
     ""sid"": ""31976"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a CGI environment variable injection vulnerability in Bash, which allows attackers to execute arbitrary commands on the web server."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a CGI environment variable injection vulnerability in Bash is detected.""
 ][
   {
     ""sid"": ""31976"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system's command interpreter to execute commands or scripts. This rule detects an attempt to inject a Bash command into a CGI environment variable, which could allow an attacker to execute arbitrary commands on the web server."""",
     ""Explanation"": ""This rule matches HTTP requests that contain a payload that attempts to inject a command into a Bash CGI environment variable. This technique is commonly used by attackers to gain unauthorized access to web servers and execute arbitrary code.""
   }
 ][
   {
     ""sid"": ""31976"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using command or scripting interpreters to execute malicious code or commands. The rule matches an attempt to inject a Bash command into a CGI environment variable, which could allow an attacker to execute arbitrary commands on the target system."""",
     ""Explanation"": ""This signature looks for instances of the Bash command interpreter being used in an environment variable.""
   }
 ][
   {
     ""sid"": ""31976"",
     ""Technique ID"": ""T1135"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging functionality provided by external remote services to achieve objectives. This rule detects an attempt to exploit a Bash CGI environment variable injection vulnerability, which allows an attacker to execute arbitrary commands on the target system. Attackers commonly use external services, such as web shells or SSH, to facilitate this type of exploitation."""",
     ""Explanation"": ""The alert is triggered when an incoming HTTP request contains the string ""() {"", which is a common pattern used in Bash CGI environment variable injection attacks.""
   }
 ]
 {}
 
 {}
 [
         ""sid"": ""31976"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring malicious tools, software, or other files from an external system into a compromised environment. This rule is triggered by the presence of a Bash CGI environment variable injection attempt in an HTTP request, which is a common technique used by attackers to upload malicious scripts or other files onto a web server."""",
         ""Explanation"": ""This event is triggered when there is an attempt to inject an environment variable into a Bash CGI script.""
     ][
   {
     ""sid"": ""31976"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command-Line Interface"",
     ""Quotes"": ""\""Command-Line Interface techniques employ the use of command-line interpreters to execute commands and interact with the system. This rule detects attempted Bash command injection by looking for the sequence \""() {\"" in the HTTP client body, which is a common technique used by attackers to execute arbitrary commands on the target system.\"""",
     ""Explanation"": ""OS-OTHER Bash CGI environment variable injection attempt.""
   },
   {
     ""sid"": ""31976"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. CGI scripts are a type of web application that can be vulnerable to command injection attacks, allowing attackers to execute arbitrary commands on the target system.\"""",
     ""Explanation"": ""OS-OTHER Bash CGI environment variable injection attempt.""
   }
 ]
 {}
 ","['T1105', 'T1190', 'T1105', 'T1105', 'T1135', 'T1105', 'T1105', 'T1110']",['T1204']
42834,"[
   {
     ""sid"": ""42834"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using web shells to facilitate remote access to and control of a system. This rule detects an incoming connection to a web shell (Win.Backdoor.Chopper) that is being used to execute commands on the target system. The web shell communicates with its command and control server by encoding commands in an HTTP request and hiding them within a base64-encoded string."""",
     ""Explanation"": ""Web shell activity detected.""
   }
 ]
 {}
 [
     {
         ""sid"": ""42834"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve gaining access to a web server and using a web shell to execute commands and control the server remotely. This rule detects an incoming connection to a web shell that is attempting to execute commands on the server using the 'eval' function."""",
         ""Explanation"": ""This event is generated when a web server is compromised by malware that uses a web shell to execute commands and control the server remotely.""
     }
 ][
     ""sid"": ""42834"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve deploying a web shell on a compromised system to provide remote access and control over the system. This rule detects the presence of a web shell, specifically the Chopper web shell, which is commonly used by threat actors to upload and execute arbitrary commands on the target system."""",
     ""Explanation"": ""This rule is designed to detect web shells being used to establish a connection to a remote host.""
 ][
   {
     ""sid"": ""42834"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web shells provide a means for adversaries to execute arbitrary commands and interact with a target system through an unauthenticated web interface. The rule detects an attempt to connect to a Chopper web shell, which is a commonly used backdoor that allows attackers to remotely control compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]{}
 {}
 [
     {
         ""sid"": ""42834"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell to execute commands on a web server, often leveraging vulnerabilities in web applications. This rule detects an attempted connection to a web shell on a compromised system using HTTP, which is a common method attackers use to gain unauthorized access and execute commands remotely."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ]{}
 {}
 [
         ""sid"": ""42834"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve deploying and interacting with a web shell, which is malicious code that allows attackers to execute arbitrary commands on a compromised web server. This rule detects an attempt to connect to a web shell using the 'z9=base64_decode' and '%40eval' parameters, which are common methods used by attackers to encode and execute commands on web servers."""",
         ""Explanation"": ""A web shell was detected contacting a command and control server.""
     ]","['T1100', 'T1100', 'T1100', 'T1100', 'T1100', 'T1100']","['T1505', 'T1219']"
47401,"[
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1092"",
     ""Technique Name"": ""Communication Through Removable Media"",
     ""Quotes"": """"Communication Through Removable Media techniques involve the use of removable media, such as USB drives or CD-ROMs, to transfer data between systems. The rule detects attempts to establish communication tunnels over ICMP packets, indicating the potential use of ICMP tunneling techniques to bypass network security controls and establish covert channels."""",
     ""Explanation"": ""This rule detects ICMP tunneling attempt to bypass network security controls and establish covert channels.""
   },
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1580"",
     ""Technique Name"": ""Cloud Infrastructure Discovery"",
     ""Quotes"": """"Cloud Infrastructure Discovery techniques involve discovering and enumerating infrastructure and resources within a cloud environment. This rule detects attempts to establish communication tunnels over ICMP packets, indicating the potential for reconnaissance activities to map and discover cloud infrastructure and resources."""",
     ""Explanation"": ""This event is related to cloud infrastructure discovery because an adversary is trying to find the available infrastructure in the network.""
   },
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1659"",
     ""Technique Name"": ""Content Injection"",
     ""Quotes"": """"Content Injection techniques involve inserting malicious content into systems through network traffic. This rule detects attempts to establish communication tunnels over ICMP packets, indicating the potential for adversaries to inject malicious content into systems by exploiting vulnerabilities or misconfigurations in network devices or applications."""",
     ""Explanation"": ""This event is related to content injection because an adversary is trying to inject malicious content into the victim's system.""
   }
 ][
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": `""Obfuscated Files or Information techniques involve intentionally encoding or hiding information in a file, registry key, or other data structure to prevent detection or reverse engineering.""`,
     ""Explanation"": ""ICMP tunneling is a technique that allows attackers to hide data within ICMP packets to bypass network defenses. This rule detects attempts to establish an ICMP tunnel using HTTP, which is a common method for obfuscating network traffic.""
   }
 ][
     {
         ""sid"": ""47401"",
         ""Technique ID"": ""T1008"",
         ""Technique name"": ""Fallback Channels"",
         ""Quotes"": """"Fallback Channels techniques involve establishing alternate communication mechanisms in case the primary channel is compromised or inaccessible, to ensure reliable command and control and avoid data transfer thresholds. The rule detects an ICMP packet containing an HTTP payload, which is a known method used to establish a covert communication channel over ICMP, bypassing traditional firewall and intrusion detection systems."""",
         ""Explanation"": ""ICMP tunneling attempt""
     }
 ][
     {
         ""sid"": ""47401"",
         ""Technique ID"": ""T1090"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve encoding information or files (e.g., malware) to avoid detection or analysis. This rule detects HTTP tunneling over ICMP, an obfuscation technique used to bypass firewalls and network security controls by hiding data within ICMP packets."""",
         ""Explanation"": ""This rule detects an attempt to tunnel HTTP traffic over ICMP, which can be used to bypass firewall rules or other network security controls.""
     }
 ][
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1053"",
     ""Technique Name"": ""Indicator Obfuscation"",
     ""Quotes"": """"Indicator Obfuscation techniques involve modifying or hiding indicators that could be used to identify adversary presence or activity. They can be used to evade detection, forensics, or investigation."""",
     ""Explanation"": ""The rule is detecting ICMP tunneling, which is a technique commonly used by adversaries to hide their malicious traffic within legitimate network traffic.""
   },
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1007"",
     ""Technique Name"": ""Network Tunneling"",
     ""Quotes"": """"Adversaries may use network protocols or application-layer protocols to encapsulate malicious traffic, allowing it to use trusted communication channels to pass inspection and detection controls."""",
     ""Explanation"": ""The rule is specifically designed to detect ICMP tunneling, which is a technique that involves encapsulating HTTP traffic within ICMP packets.""
   },
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Encoding"",
     ""Quotes"": """"Adversaries may use a variety of data encoding techniques to obfuscate malicious data, making it difficult for detection and analysis tools to identify."",
     ""Explanation"": ""ICMP tunneling itself can be considered a form of data encoding, as it involves hiding HTTP traffic within ICMP packets.""
   }
 ][
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1036"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding involves altering the content or format of data to make it more difficult to interpret or detect. This rule specifically identifies an attempt to tunnel HTTP traffic over ICMP, a technique that can be used to bypass firewall restrictions or evade detection. By encoding the HTTP data within ICMP packets, an adversary can potentially conceal malicious activity from security systems."""",
     ""Explanation"": ""This rule detects ICMP tunneling for HTTP traffic. This technique is often used to bypass firewalls or other network security controls.""
   },
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1001"",
     ""Technique name"": ""Data Obfuscation"",
     ""Quotes"": """"Data Obfuscation involves modifying data to make it more difficult to detect or understand. This rule specifically identifies an attempt to tunnel HTTP traffic over ICMP, a technique that can be used to evade detection. By disguising the HTTP data as ICMP packets, adversaries can make it harder for IDS systems to recognize and flag malicious activity."""",
     ""Explanation"": ""This rule detects ICMP tunneling for HTTP traffic. This technique is often used to bypass firewalls or other network security controls.""
   }
 ][
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1001"",
     ""Technique Name"": ""Network Denial of Service"",
     ""Quotes"": """"Network Denial of Service techniques involve causing a disruption in available network bandwidth, resources, or services, making them inaccessible or unusable to legitimate users. This rule detects an ICMP HTTP tunneling attempt, which can be used to bypass firewall restrictions and establish covert network connections, leading to potential network service disruption."""",
     ""Explanation"": ""Denial-of-service (DoS) attacks consume or exhaust system or network resources to prevent legitimate users from making use of these resources. Denial of service is a common goal in information warfare, as are theft of information, and unauthorized access.""
   }
 ][
     {
         ""sid"": ""47401"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Data Obfuscation"",
         ""Quotes"": """"Data Obfuscation techniques involve modifying the appearance or structure of data to conceal its true meaning. This rule detects a tunneling attempt over ICMP while obfuscating the payload as HTTP traffic, making it harder to identify and block malicious activities."""",
         ""Explanation"": ""This event is generated when a packet uses the ICMP protocol to send HTTP data, potentially indicating the use of a technique to obfuscate malicious activity.""
     }
 ][
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1027"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"In Obfuscated Files or Information techniques, adversaries encode or otherwise obscure data in a manner meant to prevent discovery or analysis. The rule detects an attempt to tunnel HTTP traffic over ICMP, which is a common obfuscation technique used by adversaries to bypass network defenses and evade detection."""",
     ""Explanation"": ""Obfuscated HTTP tunneling can be used to bypass application whitelisting and firewalls.""
   },
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1149"",
     ""Technique Name"": ""Network Traffic Tunneling"",
     ""Quotes"": """"In Network Traffic Tunneling techniques, adversaries encapsulate data within another network protocol to evade detection or inspection by security controls. This rule detects an attempt to tunnel HTTP traffic over ICMP, which is a common network tunneling technique used by adversaries to bypass network defenses and evade detection."""",
     ""Explanation"": ""ICMP tunneling provides a covert channel that can be used to exfiltrate data or launch attacks.""
   }
 ][
   {
     ""sid"": ""47401"",
     ""Technique ID"": ""T1095"",
     ""Technique name"": ""Non-Application Layer Protocol"",
     ""Quotes"": """"Non-Application Layer Protocol techniques involve using protocols outside the application layer (typically Layer 3 or Layer 4) to disguise malicious traffic. The rule detects ICMP traffic carrying HTTP data, which is often used for tunneling or evading network defenses."""",
     ""Explanation"": ""This rule identifies attempts to tunnel HTTP traffic over ICMP, which could indicate an attempt to bypass security controls or exfiltrate data.""
   }
 ][
     ""sid"": ""47401"",
     ""Technique ID"": ""T1006"",
     ""Technique name"": ""Data Obfuscation"",
     ""Quotes"": """"Data Obfuscation is a technique used by adversaries to hide or obscure data to evade or hinder analysis and detection. This rule detects an attempt to use ICMP tunneling to encapsulate HTTP traffic within ICMP packets, which is a common method used by adversaries to bypass network security controls."""",
     ""Explanation"": ""This rule is designed to detect attempts to obfuscate data over ICMP in order to evade detection and analysis.""
 ]","['T1092', 'T1580', 'T1659', 'T1020', 'T1008', 'T1090', 'T1053', 'T1007', 'T1071', 'T1036', 'T1001', 'T1001', 'T1071', 'T1027', 'T1149', 'T1095', 'T1006']",['T1048']
44475,"[
   {
     ""sid"": ""44475"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve intentionally encoding or modifying data to evade detection or analysis. This rule looks for a specific TLS handshake pattern that is used by GHBkdr malware to disguise its runtime activity, making it more difficult to detect and analyze."""",
     ""Explanation"": ""The detection of a specific TLS handshake pattern used by malware family GHBkdr to evade detection.""
   },
   {
     ""sid"": ""44475"",
     ""Technique ID"": ""T1027"",
     ""Technique Name"": ""Obfuscated Command and Control"",
     ""Quotes"": """"Obfuscated Command and Control techniques involve disguising or encrypting communication between a victim system and a command and control (C2) server to evade detection. In this rule, the malware uses an encoded TLS handshake to communicate with its C2 server, making it harder to identify and block the communication."""",
     ""Explanation"": ""Malware utilizing an obfuscated TLS handshake for command and control communication.""
   }
 ][
   {
     ""sid"": ""44475"",
     ""Technique ID"": ""T1568"",
     ""Technique Name"": ""Dynamic Resolution"",
     ""Quotes"": """"Dynamic Resolution techniques involve establishing connections to command and control infrastructure in a dynamic or randomized manner to evade common detection and remediation techniques. This rule detects a specific TLS handshake pattern used by the GHBkdr banking trojan to communicate with its command and control server, which is a known method employed by malware to dynamically establish connections and avoid detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""44475"",
         ""Technique ID"": ""T1068"",
         ""Technique name"": ""Exploitation for Privilege Escalation"",
         ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting software vulnerabilities to elevate privileges to gain additional capabilities within a victim's environment. The rule detects a malicious TLS handshake with a spoofed SNI field, which can be used to bypass security controls and escalate privileges on the target system, allowing adversaries to gain unauthorized access and control."""",
         ""Explanation"": ""The rule is triggered when a malicious TLS handshake with a spoofed SNI field is detected.""
     ][
         ""sid"": ""44475"",
         ""Technique ID"": ""T1544"",
         ""Technique Name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve hiding data within files or other forms to evade detection or analysis. The rule detects the use of TLS (Transport Layer Security) handshake spoofing in which an attacker disguises their malicious traffic to appear as legitimate HTTPS traffic, making it harder to identify and block."",
         ""Explanation"": ""The rule is looking for an encrypted TLS handshake. And the connection is using port 443.""
     ][
   {
     ""sid"": ""44475"",
     ""Technique ID"": ""T1567"",
     ""Technique Name"": ""TLS Session Renegotiation"",
     ""Quotes"": """"TLS Session Renegotiation techniques involve renegotiating an existing TLS session to potentially bypass authentication or gain additional access to data. This rule looks for a renegotiation request in a TLS handshake, which could indicate an attacker trying to exploit such a vulnerability."""",
     ""Explanation"": ""TLS handshake spoof runtime detection event was triggered by GHBkdr.""
   }
 ][
   {
     ""sid"": ""44475"",
     ""Technique ID"": ""T1583"",
     ""Technique Name"": ""Modify Authentication Process"",
     ""Quotes"": """"Modify Authentication Process techniques involve altering the authentication process of a system or application to bypass or evade authentication mechanisms. This rule detects a spoofed TLS handshake from a source within the protected network to an external destination, which could be an attempt to impersonate a legitimate client and gain unauthorized access to a remote service."""",
     ""Explanation"": ""A spoofed TLS handshake can be used to impersonate a legitimate client and gain unauthorized access to a remote service.""
   },
   {
     ""sid"": ""44475"",
     ""Technique ID"": ""T1507"",
     ""Technique Name"": ""Software Deployment Tools"",
     ""Quotes"": """"Software Deployment Tools techniques involve using legitimate or malicious software deployment tools to install unwanted software on a system. This rule detects the use of the GHBkdr backdoor, which can be deployed using various software deployment tools, to establish communication with a remote attacker and facilitate unauthorized access."""",
     ""Explanation"": ""GHBkdr backdoor can be deployed using various software deployment tools to establish communication with a remote attacker and facilitate unauthorized access.""
   }
 ][
   {
     ""sid"": ""44475"",
     ""Technique ID"": ""T1618"",
     ""Technique Name"": ""Fake TLS Server Certificate"",
     ""Quotes"": """"Fake TLS Server Certificate techniques involve creating and using forged TLS server certificates to impersonate legitimate websites or services. This rule detects a TLS handshake spoof by identifying a server certificate with a modified Subject Alternative Name (SAN) field to trick clients into accessing a malicious website instead of the intended destination."""",
     ""Explanation"": "" This rule detects a fake or forged TLS server certificate. Forged certificates are used to impersonate legitimate websites or services.""
   }
 ][
     {
         ""sid"": ""44475"",
         ""Technique ID"": ""T1088"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading is technique involves disguising the attacker or malicious activity as legitimate traffic or a system process to evade detection. This rule detects a TLS handshake spoofing technique used by GHBkdr (a backdoor trojan) to evade detection by posing as a legitimate HTTPS connection. The rule specifically matches the unique TLS handshake pattern generated by GHBkdr."""",
         ""Explanation"": ""This event is generated when malware tries to establish a connection to a remote host using a spoofed TLS handshake.""
     }
 ][
   {
     ""sid"": ""44475"",
     ""Technique ID"": ""T1591"",
     ""Technique name"": ""Gather Victim Org Information"",
     ""Quotes"": """"Gather Victim Org Information techniques allow adversaries to collect information about the targeted organization, such as its size, industry, and employee count, which can be useful in planning and carrying out attacks. The rule detects suspicious TLS handshake traffic containing a domain name (www.microsoft.com) that could be used for reconnaissance or to gather information about the victim organization."""",
     ""Explanation"": """"
   }
 ][
   {
     ""sid"": ""44475"",
     ""Technique ID"": ""T1007"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve intentionally encoding or otherwise obfuscating data to avoid detection. This rule aims to detect the GHBkdr malware family, which is known to disguise itself by spoofing the TLS handshake and using domain fronting to hide its malicious traffic. The rule specifically identifies a series of hexadecimal patterns used in the malware's communication, suggesting that it obfuscates its network communications."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""44475"",
     ""Technique ID"": ""T1111"",
     ""Technique Name"": ""Multi-Factor Authentication Interception"",
     ""Quotes"": """"Multi-Factor Authentication Interception techniques focus on targeting multi-factor authentication mechanisms to gain access to accounts. The rule's description mentions that the malware uses domain fronting to bypass security controls and evade detection. Domain fronting can be used to bypass multi-factor authentication mechanisms by tunneling malicious traffic through a legitimate website, making it appear as legitimate traffic."""",
     ""Explanation"": ""The rule detects the GHBkdr malware family, which uses domain fronting to bypass security controls and evade detection.""
   }
 ][
   {
     ""sid"": ""44475"",
     ""Technique ID"": ""T1539"",
     ""Technique Name"": ""Steal Web Session Cookie"",
     ""Quotes"": """"Steal Web Session Cookie techniques involve stealing web application or service session cookies and using them to gain access to web applications or Internet services as an authenticated user without needing credentials. The rule looks for a TLS handshake spoof runtime detection, which is a technique often used to steal web session cookies by intercepting and decrypting encrypted web traffic."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1132', 'T1027', 'T1568', 'T1068', 'T1544', 'T1567', 'T1583', 'T1507', 'T1618', 'T1088', 'T1591', 'T1007', 'T1111', 'T1539']",['T1195']
59929,"[
   {
     ""sid"": ""59929"",
     ""Technique ID"": ""T1005"",
     ""Technique Name"": ""Data Encrypted with RC4"",
     ""Quotes"": """"TTPs using RC4 can be a sign of malware. RC4 is a stream cipher that was once widely used to encrypt data, but it is now considered insecure due to several weaknesses, which can be utilized by an adversary to decrypt encrypted data"""",
     ""Explanation"": ""This rule detects an attempt to download a JSP web shell named 'Behinder' and its content indicates it uses the RC4 encryption, making it likely to be used for malicious activities.""
   }
 ][
   {
     ""sid"": ""59929"",
     ""Technique ID"": ""1294"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web shells are web pages with malicious code embedded in them that allow an attacker to execute arbitrary commands on the web server. This rule detects an attempt to download a JSP web shell, which is a common type of web shell written in Java that can be used to execute arbitrary code on a web server."""",
     ""Explanation"": ""detects an attempt to download a JSP web shell, which is a common type of web shell written in Java that can be used to execute arbitrary code on a web server.""
   }
 ][
         ""sid"": ""59929"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client applications to execute malicious code or commands. The rule detects an attempted download of a malicious JSP webshell named Behinder, which is commonly used by attackers to gain remote access and execute commands on vulnerable web servers."""",
         ""Explanation"": ""The rule indicates the presence of a malicious JSP webshell named Behinder, which is commonly used by attackers to gain remote access and execute commands on vulnerable web servers.""
     ][
     {
         ""sid"": ""59929"",
         ""Technique ID"": ""T1168"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve modifying an adversary's malicious behavior or artifacts to appear as though they belong to a trusted or benign source. This rule detects the download of a JSP web shell that uses a common obfuscation technique to evade detection, making the malicious code appear as legitimate Java code"""",
         ""Explanation"": ""Web shells are often used by attackers to maintain persistent access to compromised systems and execute arbitrary commands.""
     },
     {
         ""sid"": ""59929"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve moving malicious tools, such as remote access trojans (RATs) and web shells, into a target network"""",
         ""Explanation"": ""The rule detects an attempt to download a JSP web shell, which can be used by attackers to gain remote access to the system.""
     }   
 ][
         ""sid"": ""59929"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools from an external source to a target system to support the execution of malicious activity. This rule indicates the presence of a malicious Java Server Page (JSP) webshell that uses various obfuscation and encoding techniques to evade detection. JSP webshells provide remote access to a compromised system and can be used for a variety of malicious purposes, such as executing arbitrary commands, uploading and downloading files, and modifying the system configuration."""",
         ""Explanation"": ""This event is generated when incoming network traffic matches a rule that the user has configured in the IPS.""-T1057 POST File Upload[
     ""sid"": ""59929"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve converting encoded or obfuscated data into human-readable or executable form. This rule detects a JSP webshell attempting to download and execute malicious content, which often utilizes encoding or obfuscation to evade detection. The rule identifies specific patterns and keywords associated with this technique, such as '<%', 'java.util.*', and 'decodeBuffer', indicating the presence of obfuscated or encoded malicious content."""",
     ""Explanation"": ""This rule detects a JSP webshell that uses base64 encoding, which is a technique commonly used to obfuscate malicious content.""
 ][
   {
     ""sid"": ""59929"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shells are malicious scripts uploaded to a compromised web server that provide adversaries with remote access and control over the server. This rule detects an attempt to download a JSP web shell, which is a type of web shell written in Java. The rule identifies specific keywords and patterns associated with JSP web shells, such as '<%', 'java.util.*', 'extends ClassLoader', 'defineClass', 'getInstance(|22|AES|22|)', and 'decodeBuffer', which are used to establish a command shell and execute arbitrary code on the compromised server."""",
     ""Explanation"": ""The rule is looking for a download attempt of a JSP web shell.""
   }
 ][
     ""sid"": ""59929"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted drive-by download attack involving a malicious JSP webshell. Attackers often exploit vulnerabilities in web applications to deliver webshells that provide remote control capabilities."",
     ""Explanation"": ""This event is generated when a drive-by download attack is detected, which involves the automatic installation of a malicious download on a system by simply visiting a malicious website.""
 ][
   {
     ""sid"": ""59929"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a malicious attempt to download and execute a Java web shell (JSP.Webshell.Behinder) through a compromised web application. Webshells are often used by attackers to gain remote access to a compromised system and perform various malicious activities."""",
     ""Explanation"": ""This event is generated when activity relating to a malicious web shell is detected.""
   }
 ][
     ""sid"": ""59929"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted upload of a PHP webshell to an Apache server, which is a common method attackers use to exploit web applications and gain remote access to a system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""59929"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to download and execute a Java web shell, which is a common method attackers use to gain remote access to a web server by exploiting vulnerabilities in the web application."""",
     ""Explanation"": ""The rule detects a malicious attempt to download and execute a Java web shell. Web shells are often used by attackers to gain remote access to a web server by exploiting vulnerabilities in the web application. The rule matches on specific patterns and keywords used in web shells, such as \""<%\"", \""java.util.*\"", \""extends ClassLoader\"", \""defineClass\"", \""getInstance(|22|AES|22|)\"", and \""decodeBuffer\"".""
   }
 ]","['T1005', 'T1203', 'T1168', 'T1105', 'T1105', 'T1140', 'T1105', 'T1190', 'T1189', 'T1189', 'T1190']",['T1094']
50106,"[
   {
     ""sid"": ""50106"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Poisoning"",
     ""Quotes"": """"Poisoning techniques involve corrupting or modifying data to deceive or manipulate a system or user. In this case, the rule detects an SMB Responder poisoning attack attempt, which involves sending malicious responses to legitimate SMB requests, potentially leading to credential theft or session hijacking."""",
     ""Explanation"": ""The IDS rule detects an SMB Responder poisoning attack attempt characterized by a sequence of specially crafted SMB packets. Attackers use these packets to poison the SMB Responder service, making it vulnerable to potential credential theft or session hijacking""
   }
 ][
     {
         ""sid"": ""50106"",
         ""Technique ID"": ""T1195"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve probing a network to gather information about the services running on hosts or devices. This rule is triggered when an attacker sends a specially crafted NetBIOS Session Service (NBSS) packet, which is a common reconnaissance tactic to identify vulnerable systems on a network. The packet includes the string ""SMB"", indicating that the attacker is likely looking for systems running the SMB protocol, which is often targeted for exploitation."""",
         ""Explanation"": ""This event indicates that the device is scanning for SMB services on the network, which can be used to exploit vulnerabilities in SMB.""
     }
 ][
   {
     ""sid"": ""50106"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques involve exploiting vulnerabilities in remote services or applications accessible via network protocols (e.g., SMB, RDP, SSH) to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""The rule is used to detect a poisoner attack on the NetBIOS Session Service (NetBIOS-SSN), which is a remote service used for name resolution and session establishment. The attacker sends a specially crafted NetBIOS packet to the target to trigger a vulnerability in the service, allowing them to gain unauthorized remote access to the system.""
   }
 ][
         ""sid"": ""50106"",
         ""Technique ID"": ""T1487"",
         ""Technique name"": ""NetBIOS Sniffer"",
         ""Quotes"": """"NetBIOS Sniffer techniques focus on intercepting NetBIOS traffic for reconnaissance and potential exploitation. The rule identifies an attempt to poison NetBIOS name resolution, which is a common method used to intercept and manipulate NetBIOS traffic."""",
         ""Explanation"": ""This rule is triggered by a NetBIOS protocol violation attempt.""
     ][
         ""sid"": ""50106"",
         ""Technique ID"": ""T1199"",
         ""Technique name"": ""Trusted Relationship"",
         ""Quotes"": """"Trusted Relationship techniques involve exploiting trust between a victim and a third-party service or organization to gain access to resources or data. This rule involves an attack attempt on SMB ports, which is often an indication of attempted lateral movement or privilege escalation. The exploitation of trust relationships is a common tactic used by attackers to infiltrate systems and networks."""",
         ""Explanation"": ""The rule detects a Responder Poisoning attack attempt, which can be used by an attacker to poison the ARP cache of systems on the same network, potentially allowing the attacker to eavesdrop or intercept network traffic.""
     ][
   {
     ""sid"": ""50106"",
     ""Technique ID"": ""T1539"",
     ""Technique name"": ""Hijack Execution Flow"",
     ""Quotes"": """"Hijack Execution Flow techniques involve altering the normal flow of execution to redirect the course of a program or process toward malicious goals. This rule detects a server message block (SMB) attack that attempts to poison a responder by sending specially crafted packets, which is a common method attackers use to compromise systems and elevate privileges."""",
     ""Explanation"": ""This rule detects suspicious SMB traffic that may indicate an attempt to poison a responder, which could lead to remote code execution or privilege escalation.""
   }
 ][
   {
     ""sid"": ""50106"",
     ""Technique ID"": ""T1098"",
     ""Technique Name"": ""Account Manipulation"",
     ""Quotes"": """"Account Manipulation techniques involve modifying system or application accounts to elevate privileges, disable auditing, or establish persistence. This rule detects an attempt to manipulate SMB sessions by injecting malicious packets ('poisoning') to compromise user accounts and escalate privileges. The injected packets attempt to modify the 'Primary Group' field of the targeted session, potentially allowing the attacker to gain elevated access."""",
     ""Explanation"": ""This event is generated when activity relating to poisoning SMB attack attempt is detected.""
   }
 ][
         ""sid"": ""50106"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""The alert is generated because there is an attempt to exploit the SMB protocol. It appears that the attacker is trying to exploit a vulnerability in the SMB protocol using the Responder poison attack technique.""
     ][
   {
     ""sid"": ""50106"",
     ""Technique ID"": ""T1543"",
     ""Technique name"": ""Impair Defenses"",
     ""Quotes"": """"Impair Defenses techniques involve malicious modification or disabling of security mechanisms or features to make it easier to compromise a system or bypass security controls. This rule detects an attempt to exploit a vulnerability in the SMB protocol (CVE-2020-0796) that can allow attackers to execute arbitrary code by sending specially crafted packets. Exploiting this vulnerability can impair the defenses of a system by allowing attackers to bypass security mechanisms and gain unauthorized access."""",
     ""Explanation"": ""SMB is a file sharing protocol used in Windows systems. This IDS rule is looking for a specific pattern in SMB packets that is associated with a known vulnerability (CVE-2020-0796). If this pattern is detected, it could indicate that an attacker is attempting to exploit this vulnerability and impair the defenses of the system.""
   }
 ][
   {
     ""sid"": ""50106"",
     ""Technique ID"": ""T1093"",
     ""Technique name"": ""SMB Relay"",
     ""Quotes"": """"SMB Relay attack techniques involve abusing the Server Message Block (SMB) protocol to relay authentication credentials to remote systems, allowing them to access unauthorized resources and take control of hosts."""",
     ""Explanation"": ""This event is generated when an SMB relay attempt is detected, which is a technique that can be used to compromise remote systems by exploiting the SMB protocol.""
   },
   {
     ""sid"": ""50106"",
     ""Technique ID"": ""T1482"",
     ""Technique name"": ""SMB Signing"",
     ""Quotes"": """"SMB Signing techniques involve disabling or modifying SMB signing to maintain session connectivity for relay attacks or to evade authentication."""",
     ""Explanation"": ""This event is generated when an SMB relay attempt is detected, which can involve disabling or modifying SMB signing to evade authentication.""
   }
 ][
   {
     ""sid"": ""50106"",
     ""Technique ID"": ""T1090"",
     ""Technique Name"": ""Poisoning"",
     ""Quotes"": """"Poisoning techniques involve injecting malicious content into a process or on a network to disrupt or modify the normal course of execution. This rule detects an SMB attack attempt by exploiting a buffer overflow vulnerability in the Responder service, which is a common technique used by attackers to compromise systems by poisoning SMB connections."""",
     ""Explanation"": ""The rule is designed to detect the Responder poisoner SMB attack, which could lead to the unauthorized modification or disruption of the SMB service.""
   }
 ]","['T1132', 'T1195', 'T1210', 'T1487', 'T1199', 'T1539', 'T1098', 'T1190', 'T1543', 'T1093', 'T1482', 'T1090']",['T1187']
43289,"[
         ""sid"": ""43289"",
         ""Technique ID"": ""T1087"",
         ""Technique name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve searching for and identifying files and directories within a system to gather information about the system and its contents. This rule detects an attempt to access the '/etc/shadow' file, which contains hashed user passwords, indicating an attempt to gather sensitive system information."""",
         ""Explanation"": ""This event is generated when a web server receives a request for access to a file that could potentially disclose sensitive information such as user passwords.""
     ][
     ""sid"": ""43289"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching for and listing files or directories on a system to identify potential targets for exploitation. This rule detects an attempt to access the '/etc/shadow' file, which contains hashed user passwords, indicating an attempt to identify potential targets for credential theft."""",
     ""Explanation"": ""This rule is triggered when a request is made to access the '/etc/shadow' file, which contains hashed user passwords. This indicates that an attacker is attempting to gather information about the system in order to identify potential targets for credential theft.""
 ][
   {
     ""sid"": ""43289"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching a file system or network share to identify files or directories of interest. This rule looks for attempts to access the '/etc/shadow file,' which contains hashed user passwords on Unix-based systems. This can be a common activity during reconnaissance as attackers attempt to gather information about the system in preparation for further attacks."""",
     ""Explanation"": ""The rule associates with an attacker's reconnaissance, which is the first stage of the cyberattack lifecycle, where an attacker seeks information to identify potential vulnerabilities or points of entry that will enable them to exploit the system.""
   }
 ][
     {
         ""sid"": ""43289"",
         ""Technique ID"": ""T1087"",
         ""Technique Name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve searching for files and directories on a system to identify potential targets for exploitation or reconnaissance. The rule indicates an attempt to access the '/etc/shadow' file, which contains sensitive user account information, suggesting reconnaissance activities for potential credential harvesting or privilege escalation."""",
         ""Explanation"": ""This event is generated when an attempt to access the '/etc/shadow' file, which contains sensitive user account information, is detected. This could be an indication of reconnaissance activities for potential credential harvesting or privilege escalation.""
     }
 ][
     {
         ""sid"": ""43289"",
         ""Technique ID"": ""T1087"",
         ""Technique Name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve identifying and obtaining information about files and directories on a system or network. The rule detects an attempt to access the '/etc/shadow' file, which contains sensitive user account information (e.g., hashed passwords), indicating reconnaissance activity to gather information about the system."""",
         ""Explanation"": ""This event is generated when an attempt to access the '/etc/shadow' file is detected.""
     }
 ][
   {
     ""sid"": ""43289"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve discovering files and directories on a system to identify potential targets for exploitation. This rule detects an attempt to access the '/etc/shadow' file, which contains sensitive user information such as hashed passwords, indicating that an attacker is trying to gather information about the system."""",
     ""Explanation"": ""This rule detects an attempt to access the '/etc/shadow' file, which contains sensitive information such as hashed passwords.""
   }
 ][
   {
     ""sid"": ""43289"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Account Discovery"",
     ""Quotes"": ""\""Account Discovery techniques involve gathering information about valid accounts, usernames, or email addresses on a system or within a compromised environment.\"""",
     ""Explanation"": ""The rule detects an attempt to access the '/etc/shadow' file, which contains hashed user passwords and other sensitive information, indicating an attempt to gather account information.""
   }
 ][
     ""sid"": ""43289"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching for files and directories of interest on a system. This rule detects an attempt to access the '/etc/shadow' file, which contains hashed user passwords, indicating an attempt to gather sensitive information about user accounts on the system."""",
     ""Explanation"": ""This rule triggers when access to the /etc/shadow file is detected, which is an attempt to access sensitive system files associated with user account information. This is a common technique used by attackers to gather information.""
 ][
   {
     ""sid"": ""43289"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve stealing credentials or cryptographic keys from a system. This rule detects an attempt to access the '/etc/shadow' file, which contains hashed user passwords, indicating an attempt to obtain credentials for potential unauthorized access."""",
     ""Explanation"": ""The rule detects an attempt to access the /etc/shadow file, which contains hashed user passwords.""
   }
 ][
   {
     ""sid"": ""43289"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve accessing a system's files and directories to gather information about the system's configuration, installed software, or other sensitive information. This rule detects an attempt to access the '/etc/shadow' file, which contains hashed user passwords, indicating an attempt to gather sensitive information from the system."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to access the '/etc/shadow' file over HTTP, which is suspicious because the '/etc/shadow' file contains hashed user passwords.""
   }
 ][
         ""sid"": ""43289"",
         ""Technique ID"": ""T1087"",
         ""Technique name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve searching for or enumerating files and directories on a system to identify potential targets for compromise."""",
         ""Explanation"": ""This event is generated when an attempt is made to access the '/etc/shadow' file which contains the user's passwords. The rule indicates that an adversary is trying to find and access sensitive files on the system.""
     ]","['T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087']",['T1087']
28932,"[
   {
     ""sid"": ""28932"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Insecure Deserialization"",
     ""Quotes"": """"Exploit Insecure Deserialization techniques involve exploiting vulnerabilities in deserialization processes to execute malicious code. This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer's handling of CHM files, which could lead to arbitrary code execution."""",
     ""Explanation"": ""This event is generated when a browser attempts to load a Microsoft Internet Explorer CHM file, indicating a potential attempt to exploit a vulnerability.""
   }
 ][
   {
     ""sid"": ""28932"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a system by enticing a user into visiting a website, which then exploits vulnerabilities in the user's browser to install malware on the victim's system. The rule triggers when an Internet Explorer CHM file is loaded, which is a common attack vector used to exploit vulnerabilities in the browser and compromise the system."",
     ""Explanation"": ""This event is triggered when there is an attempted to load a CHM file which is common in a drive-by-compromise attack.""
   }
 ][
   {
     ""sid"": ""28932"",
     ""Technique ID"": ""T1495"",
     ""Technique Name"": ""Firmware Corruption"",
     ""Quotes"": """"Firmware Corruption techniques involve modifying or overwriting firmware, which is the low-level software that controls hardware devices, to impair their functionality or extract sensitive data. This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer's support for Compiled HTML (CHM) files to load arbitrary CHM files (which may contain malicious code) from a remote server, potentially allowing attackers to execute arbitrary code or access sensitive data on the victim's system."""",
     ""Explanation"": ""The rule triggers when an attempt is made to load a CHM file within the browser.""
   }
 ]""sid"": ""28932"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side software, such as web browsers. This rule detects an attempt to load a Microsoft Internet Explorer CHM file, which can be used to execute arbitrary code or download additional malicious content."""",
         ""Explanation"": ""This rule looks for the string ""showHelp("" followed by the string "".chm"" in a TCP stream. This can be used to detect Microsoft Internet Explorer CHM file load attempts.""[
   {
     ""sid"": ""28932"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Insecure Deserialization"",
     ""Quotes"": """"Exploit Insecure Deserialization techniques involve abusing a vulnerability in an application that does not properly handle the deserialization of objects, allowing adversaries to execute arbitrary code. The rule detects an attempted exploitation of a vulnerability in Microsoft Internet Explorer's CHM file handling, which can lead to remote code execution."""",
     ""Explanation"": ""The rule triggers on an attempt to load a CHM file which may lead to remote code execution if the file is malicious.""
   }
 ][
     ""sid"": ""28932"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve tricking a user into visiting or interacting with a malicious website or file. This rule detects an attempt to exploit a vulnerability in the CHM (Compiled HTML Help) file format, which can be used to execute arbitrary code on a victim's machine."""",
     ""Explanation"": ""The detection of an attempt to load a CHM file with malicious content indicates the presence of a drive-by compromise technique, where attackers attempt to exploit vulnerabilities in browsers or other applications to infect victim machines without user interaction.""
 ][
   {
     ""sid"": ""28932"",
     ""Technique ID"": ""T1116"",
     ""Technique name"": ""Create or Modify Registry Key or Value"",
     ""Quotes"": """"Create or Modify Registry Key or Value techniques involve modifying or creating registry keys to establish persistence or to alter system behavior. Internet Explorer uses the registry to store various settings which can be modified to change its behavior. This rule detects when a CHM (compiled help) file is loaded in IE which could indicate an attempt to modify registry settings for persistence."""",
     ""Explanation"": ""This event is generated when activity relating to browser plugins access is detected.""
   }
 ][
   {
     ""sid"": ""28932"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": ""\""Drive-by Compromise techniques involve exploiting vulnerabilities in software, such as web browsers, or malicious files to execute arbitrary code on a victim's computer without user interaction. This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer using a CHM file, which is commonly used to deliver drive-by attacks.\"""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""28932"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in Microsoft Internet Explorer that allows remote attackers to execute arbitrary code via a specially crafted CHM file."""",
     ""Explanation"": ""This rule is designed to detect attempts to exploit a vulnerability in Microsoft Internet Explorer that allows attackers to execute arbitrary code by loading a specially crafted CHM file. This rule is related to the T1190 technique because it involves exploiting a vulnerability in a public-facing application (Microsoft Internet Explorer) to gain unauthorized access and execute arbitrary code.""
   }
 ][
   {
     ""sid"": ""28932"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that appear to come from a legitimate source to trick users into providing sensitive information or clicking on malicious links. This rule detects an attempt to load a CHM (Compiled Help Module) file, which is a type of help file used by Microsoft applications, indicating a possible phishing attack where attackers may try to trick users into opening a malicious help file."""",
     ""Explanation"": ""This rule is triggered when a client attempts to access a CHM file from a remote server. CHM files can be used to deliver malicious content, such as malware or phishing links.""
   }
 ][
   {
     ""sid"": ""28932"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to load a CHM file in Internet Explorer, which can be used to exploit vulnerabilities in the browser and execute arbitrary code."""",
     ""Explanation"": ""CHM files can be used to exploit vulnerabilities in Internet Explorer and execute arbitrary code.""
   }
 ]","['T1189', 'T1189', 'T1495', 'T1189', 'T1189', 'T1189', 'T1116', 'T1189', 'T1190', 'T1189', 'T1190']",['T1218']
12775,"[
         ""sid"": ""12775"",
         ""Technique ID"": ""T1185"",
         ""Technique name"": ""Browser Session Hijacking"",
         ""Quotes"": """"Browser Session Hijacking techniques involve taking advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques"""",
         ""Explanation"": ""This rule detects an exploit attempt targeting the RealNetworks RealPlayer Ierpplug.dll ActiveX control, which could allow attackers to hijack browser sessions and execute arbitrary code on the victim's system.""
     ][
         ""sid"": ""12775"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve exploiting browser-based vulnerabilities to infect a system when a user unknowingly visits a compromised website. This rule detects the attempt to exploit a vulnerability in RealNetworks RealPlayer's 'Ierpplug.dll' ActiveX control, which is commonly used in drive-by download attacks to deliver malware to users."""",
         ""Explanation"": ""The event is an attempt to exploit a vulnerability in RealNetworks RealPlayer's 'Ierpplug.dll' ActiveX control, which is commonly used in drive-by download attacks to deliver malware to users.""
     ][
   {
     ""sid"": ""12775"",
     ""Technique ID"": ""T1187"",
     ""Technique Name"": ""Forced Authentication"",
     ""Quotes"": """"Forced Authentication techniques involve manipulating a user into providing credentials or authentication material through some form of trickery or coercion. The rule detects an attempt to exploit a vulnerability in the RealPlayer ActiveX control by tricking the user into executing a malicious file, which could allow the attacker to gain access to the user's credentials."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a forced authentication vulnerability in RealPlayer ActiveX control is detected.""
   }
 ][
   {
     ""sid"": ""12775"",
     ""Technique ID"": ""T1064"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a vulnerability in the RealNetworks RealPlayer ActiveX control, which attackers could use to execute arbitrary code on a victim's system."""",
     ""Explanation"": ""User attempt to exploit Internet Explorer Real Media Player ActiveX Remote Code Execution Vulnerability.""
   }
 ][
         ""sid"": ""12775"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to use a known exploit to attack a RealNetworks RealPlayer plugin. The exploit would allow an attacker to inject arbitrary code into the plugin and perform actions as the user running the plugin."""",
         ""Explanation"": ""The RealPlayer ActiveX control is vulnerable to a memory corruption vulnerability that could allow an attacker to execute arbitrary code on the user's computer. The control can be found in plugins for RealMedia Player, RealPlayer, RealOne Player, and RealPlayer Embedded. If the RealNetworks ActiveX control is installed on the system, the attacker can execute arbitrary code on the user's computer by injecting a specially crafted HTML page into Internet Explorer.""
     ][
   {
     ""sid"": ""12775"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Remote Services"",
     ""Quotes"": """"Exploit Remote Services techniques involve exploiting vulnerabilities in network services to gain unauthorized access to systems. This rule specifically targets an obfuscated exploit attempt for the RealPlayer ActiveX control, which attackers could use to execute arbitrary code and gain control of affected systems."""",
     ""Explanation"": ""This rule detects an attempted exploit of a vulnerability in RealPlayer's ActiveX control.  Successful exploitation could allow an attacker to execute arbitrary code on the target system.""
   }
 ][
     ""sid"": ""12775"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Vulnerable Browser"",
     ""Quotes"": """"Exploit Vulnerable Browser techniques involve targeting vulnerabilities in web browsers or their components, such as browser plugins or extensions, to execute arbitrary code or gain unauthorized access to sensitive information. This rule detects an attempted exploitation of the RealNetworks RealPlayer Ierpplug.dll ActiveX control, which was commonly used in drive-by-download attacks to install malware."""",
     ""Explanation"": ""Attempted exploitation of the IERPlug ActiveX control in RealPlayer to download and install malware.""
 ][
     {
         ""sid"": ""12775"",
         ""Technique ID"": ""T1189"",
         ""Technique Name"": ""Exploit Web Browser"",
         ""Quotes"": """"Exploit web browser techniques involve exploiting vulnerabilities in web browsers to execute arbitrary code or gain unauthorized access to systems. This rule detects an attempt to exploit a vulnerability in RealNetworks RealPlayer's Ierpplug.dll ActiveX control, which allows attackers to execute arbitrary code on vulnerable systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
         ""sid"": ""12775"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in RealPlayer's ActiveX control (""Ierpplug.dll"") which allows remote attackers to execute arbitrary code on vulnerable systems."""",
         ""Explanation"": ""This event is related to a attempted exploit of a remote code execution vulnerability that could allow an attacker to take control of an affected system.""
     ][
   {
     ""sid"": ""12775"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Browser"",
     ""Quotes"": """"Exploit Browser techniques involve targeting vulnerabilities in web browsers or their plugins to run arbitrary code or gain access to user data. The rule indicates an attempt to exploit a vulnerability in RealNetworks RealPlayer's Ierpplug.dll ActiveX control, which allows attackers to execute arbitrary code or gain elevated privileges on the system."""",
     ""Explanation"": ""Browser plugins are often used to extend the functionality of web browsers, but they can also introduce security vulnerabilities. This rule detects an attempt to exploit a vulnerability in a browser plugin.""
   },
   {
     ""sid"": ""12775"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking users into running malicious code, often by disguising it as legitimate software or luring them to malicious websites. The rule indicates an attempt to exploit a vulnerability in a browser plugin, which is a common method attackers use to trick users into running malicious code on their systems."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in a browser plugin, which is a common method attackers use to trick users into running malicious code on their systems.""
   }
 ][
   {
     ""sid"": ""12775"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Software Vulnerability"",
     ""Quotes"": """"Exploit Software Vulnerability techniques involve identifying and exploiting vulnerabilities in software to gain unauthorized access to systems or execute arbitrary code. The rule detects an attempt to exploit a vulnerability in RealPlayer's 'Ierpplug.dll' ActiveX control, which attackers could use to execute arbitrary code on vulnerable systems."""",
     ""Explanation"": ""The rule looks for specific data patterns that have been associated with an exploit targeting a vulnerability in RealPlayer's ActiveX control. If these patterns are detected, the rule triggers an alert, indicating a potential exploit attempt.""
   }
 ]","['T1185', 'T1189', 'T1187', 'T1064', 'T1190', 'T1189', 'T1189', 'T1189', 'T1190', 'T1189', 'T1204', 'T1189']",['T1027']
36666,"[
   {
     ""sid"": ""36666"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Access Software"",
     ""Quotes"": """"Remote Access Software techniques abuse legitimate remote access tools and services to facilitate remote access to a system. This rule detects outbound traffic to a known command and control server for the Tentobr Trojan, which is a remote access tool that adversaries can use to establish persistent access."",
     ""Explanation"": ""This rule detects outbound traffic to a known command and control server for the Tentobr Trojan, which is a remote access tool.""
   }
 ][
         ""sid"": ""36666"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over C2 Channel"",
         ""Quotes"": """"Exfiltration Over C2 Channel techniques involve using an existing command and control channel to exfiltrate data from a compromised system. The rule detects outbound communication from a compromised host to a known command and control server, indicating that the malware is attempting to exfiltrate data to the attacker via the established C2 channel."""",
         ""Explanation"": ""This rule appears to be related to a malware called Tentobr that is attempting to exfiltrate data to a command and control server using HTTP over port 80""
     ][
     ""sid"": ""36666"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (Tentobr) that sends captured user input to a remote server, which is a common method used by keyloggers to upload sensitive data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
         ""sid"": ""36666"",
         ""Technique ID"": ""T1021"",
         ""Technique Name"": ""Remote Services"",
         ""Quotes"": """"Remote Services techniques involve adversaries logging into a service that accepts remote connections, such as telnet, SSH, and VNC. This rule detects an outbound connection to a known botnet command and control server, indicating that a compromised host on the internal network is attempting to communicate with the external server for malicious purposes."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected. This rule detects outbound connections to known botnet command and control servers.""
     ][
   {
     ""sid"": ""36666"",
     ""Technique ID"": ""T1452"",
     ""Technique Name"": ""Command and Control Channel"",
     ""Quotes"": """"Command and Control Channel techniques involve establishing and maintaining communications between an adversary and an asset or victim, in order to send commands, receive data, or exfiltrate data. This rule detects an outbound command-and-control (C2) connection initiated by a machine infected with the Win.Trojan.Tentobr malware, likely to communicate with a remote attacker-controlled server."""",
     ""Explanation"": ""The rule detects a malware-related outbound connection to a known C2 server.""
   },
   {
     ""sid"": ""36666"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve extracting and transferring data from a compromised environment. The rule indicates that the Win.Trojan.Tentobr malware is sending data to a remote server, potentially exfiltrating sensitive information."""",
     ""Explanation"": ""The malware is sending information out over the network.""
   }
 ][
   {
     ""sid"": ""36666"",
     ""Technique ID"": ""T1450"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel involves the adversary communicating data back to a command and control server after compromising a system. The rule detects outgoing HTTP traffic to a '/botnet/suca.php' URI, which is associated with the Tentobr Trojan, indicating the exfiltration of data via a command and control channel."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""36666"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing actions taken to hide the true meaning of data or information. This rule identifies attempts to decode information sent from a compromised system to a remote server, which is a common behavior of malware."",
     ""Explanation"": ""The rule tries to detect a malware beaconing activity.""
   },
   {
     ""sid"": ""36666"",
     ""Technique ID"": ""T1598"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve locating and reading files and directories on a system to gather information about the system and environment. The rule's content inspection capability allows it to detect malware attempting to communicate with a remote server, which may indicate that the malware is gathering information about the compromised system."""",
     ""Explanation"": ""Malware may use file and directory discovery to gather information about the system and environment, for persistence, or to locate sensitive data.""
   }
 ][
     ""sid"": ""36666"",
     ""Technique ID"": ""T1562"",
     ""Technique name"": ""Phishing: C2 Profiles"",
     ""Quotes"": """"Phishing: C2 Profiles techniques involve using phishing to obtain credentials or other sensitive information from a target to establish command and control or communications channels with a victim and complete follow-on techniques. This rule detects outbound traffic to a known C2 domain associated with the Tentobr Trojan, which often uses phishing campaigns to distribute its malware payload."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""36666"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring data out of a system to an external location. The rule identifies outbound communication from a host infected with the Tentobr Trojan, which is known for exfiltrating sensitive data to a remote server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""36666"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control (C2) techniques involve establishing communication with a remote server, known as a C2 server, to receive commands and data from the adversary. This rule detects an outbound connection from a host infected with the Tentobr Trojan to a remote C2 server on port 80, which is a common method used by malware to communicate with its operators."""",
         ""Explanation"": ""This event is generated when a outbound connection is going outside of the network to communicate with the attacker.""
     }
 ][
     {
         ""sid"": ""36666"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an outbound connection to a URL (/botnet/suca.php) associated with the Tentobr Trojan, which is typically used to establish a connection to a command and control server and send sensitive information."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     },
     {
         ""sid"": ""36666"",
         ""Technique ID"": ""T1497"",
         ""Technique name"": ""XSL Style Sheet Processing"",
         ""Quotes"": """"XSL Style Sheet Processing techniques involve using XSL style sheets to transform XML data, which can be used to bypass defenses or execute arbitrary code. The rule detects an outbound connection to a URL (/botnet/suca.php) that contains an XSL style sheet, which could potentially be used for malicious purposes."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ]","['T1021', 'T1041', 'T1056', 'T1021', 'T1452', 'T1071', 'T1450', 'T1140', 'T1598', 'T1562', 'T1071', 'T1071', 'T1190', 'T1497']",['T1571']
34944,"[
   {
     ""sid"": ""34944"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Input Validation"",
     ""Quotes"": """"Input Validation techniques involve validating or sanitizing user-supplied data to prevent malicious input from compromising an application's intended functionality or security. This rule detects an attempt to exploit a credential disclosure vulnerability in the Arcserve Unified Data Protection Management console through an HTTP request with a specially crafted body containing the 'getBackupPolicy' parameter, which is a common method attackers use to bypass input validation mechanisms and gain access to sensitive information."""",
     ""Explanation"": ""This event is generated when 
 activity relating to an attacker trying to exploit a credential disclosure vulnerability is detected.""
   }
 ][
     ""sid"": ""34944"",
     ""Technique ID"": ""T1003"",
     ""Technique name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials from memory on a compromised system to gain access to other systems or escalate privileges. The rule detects an attempt to obtain credentials from an Arcserve Unified Data Protection server by exploiting a vulnerability that allows an attacker to retrieve hashed administrative credentials. This technique is commonly used by attackers to gain access to sensitive information stored on the server."""",
     ""Explanation"": ""This event correlates with the attempted theft of credentials. ""
 ][
   {
     ""sid"": ""34944"",
     ""Technique ID"": ""T1211"",
     ""Technique Name"": ""Exploitation for Defense Evasion"",
     ""Quotes"": """"Exploitation for Defense Evasion techniques involve exploiting a system or application vulnerability to bypass security features and evade detection or analysis. This rule detects an attempt to exploit a credential disclosure vulnerability in Arcserve Unified Data Protection Management service by sending a crafted HTTP request to the '/services/EdgeServiceImpl' URI with the 'getBackupPolicy' parameter in the request body."""",
     ""Explanation"": ""This rule is designed to detect attackers attempting to exploit a vulnerability in Arcserve Unified Data Protection Management service to disclose sensitive credentials.""
   }
 ][
     {
         ""sid"": ""34944"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Credential Dumping"",
         ""Quotes"": """"Credential Dumping techniques involve extracting authentication credentials from a system or authenticated session. This rule detects an attempt to exploit a vulnerability in the Arcserve Unified Data Protection Management software that allows attackers to dump credentials by sending a crafted HTTP request to a specific URI ('/services/EdgeServiceImpl') containing the 'getBackupPolicy' command."",
         ""Explanation"": ""This rule detects an attempt to dump credentials by exploiting a vulnerability in the Arcserve Unified Data Protection Management software.""
     }
 ][
     ""sid"": ""34944"",
     ""Technique ID"": ""T1552"",
     ""Technique name"": ""Unsecured Credentials"",
     ""Quotes"": """"Unsecured Credentials techniques involve obtaining and using credentials that are stored in a non-secure manner. This rule detects a credential disclosure attempt targeting Arcserve's Unified Data Protection Management solution. The rule looks for an HTTP request to the '/services/EdgeServiceImpl' URI with the 'getBackupPolicy' parameter in the body, which is a method used by attackers to extract credentials from the targeted system."""",
     ""Explanation"": ""This event is generated when activity relating to an insecure credential is detected.""
 ][
     {
         ""sid"": ""34944"",
         ""Technique ID"": ""T1555"",
         ""Technique name"": ""Credentials from Password Stores"",
         ""Quotes"": """"Credentials from Password Stores techniques involve searching for common password storage locations to obtain user credentials. This rule detects an attempt to access the Arcserve Unified Data Protection Management service with the 'getBackupPolicy' command, which may indicate an attempt to retrieve credentials or exploit vulnerabilities related to password storage."""",
         ""Explanation"": ""This event is generated when credential disclosure attempt for Arcserve Unified Data Protection Management is detected.""
     }
 ][
   {
     ""sid"": ""34944"",
     ""Technique ID"": ""T1531"",
     ""Technique Name"": ""Account Access Removal"",
     ""Quotes"": """"Account Access Removal techniques involve interrupting availability of system and network resources by inhibiting access to accounts utilized by legitimate users. This rule detects an attempt to exploit a credential disclosure vulnerability in the Arcserve Unified Data Protection Management service by sending a crafted HTTP request to the '/services/EdgeServiceImpl' endpoint. If successful, this could allow an attacker to obtain sensitive credentials and potentially gain unauthorized access to the system."""",
     ""Explanation"": ""This event is generated when activity relating to policy violation is detected.""
   },
   {
     ""sid"": ""34944"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Account Discovery"",
     ""Quotes"": """"Account Discovery techniques involve attempting to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This rule detects an attempt to exploit a credential disclosure vulnerability in the Arcserve Unified Data Protection Management service by sending a crafted HTTP request to the '/services/EdgeServiceImpl' endpoint. If successful, this could allow an attacker to obtain sensitive credentials and potentially identify valid accounts on the system."""",
     ""Explanation"": ""This event is generated when activity relating to policy violation is detected.""
   },
   {
     ""sid"": ""34944"",
     ""Technique ID"": ""T1134"",
     ""Technique Name"": ""Access Token Manipulation"",
     ""Quotes"": """"Access Token Manipulation techniques involve modifying access tokens to operate under a different user or system security context to perform actions and bypass access controls. This rule detects an attempt to exploit a credential disclosure vulnerability in the Arcserve Unified Data Protection Management service by sending a crafted HTTP request to the '/services/EdgeServiceImpl' endpoint. If successful, this could allow an attacker to obtain sensitive credentials and potentially forge access tokens to gain unauthorized access to the system."""",
     ""Explanation"": ""This event is generated when activity relating to policy violation is detected.""
   },
   {
     ""sid"": ""34944"",
     ""Technique ID"": ""T1098"",
     ""Technique Name"": ""Account Manipulation"",
     ""Quotes"": """"Account Manipulation techniques involve manipulating accounts to maintain and/or elevate access to victim systems. This rule detects an attempt to exploit a credential disclosure vulnerability in the Arcserve Unified Data Protection Management service by sending a crafted HTTP request to the '/services/EdgeServiceImpl' endpoint. If successful, this could allow an attacker to obtain sensitive credentials and potentially manipulate accounts to gain unauthorized access to the system."""",
     ""Explanation"": ""This event is generated when activity relating to policy violation is detected.""
   }
 ][
     ""sid"": ""34944"",
     ""Technique ID"": ""T1552"",
     ""Technique name"": ""Credentials from Passwords"",
     ""Quotes"": """"Credential harvesting techniques involve extracting credentials from password stores or leveraging password reuse across multiple accounts. This rule detects an attempt to disclose credentials from Arcserve Unified Data Protection Management, a backup and recovery software, by targeting its web management interface to retrieve backup policies. Attackers may use such credentials to gain access to sensitive data or disrupt backup operations."""",
     ""Explanation"": ""The rule indicates an attempt to retrieve credentials from Arcserve Unified Data Protection Management, a backup and recovery software, by targeting its web management interface.""
 ][
     ""sid"": ""34890"",
     ""Technique ID"": ""T1559"",
     ""Technique name"": ""Inter-Process Communication"",
     ""Quotes"": """"Inter-Process Communication techniques involve using mechanisms to facilitate communication between processes for the purpose of data exchange or control. This rule appears to detect an attempt to leverage COM (Component Object Model) to perform a lateral movement into another system and establish persistence by dumping hashed credentials, which aligns with how IPC mechanisms are commonly used by adversaries."""",
     ""Explanation"": ""The rule is detecting and blocking any attempt to use COM (Component Object Model) to perform a lateral movement into another system and establish persistence by dumping hashed credentials.""
 ][
   {
     ""sid"": ""34944"",
     ""Technique ID"": ""T1556"",
     ""Technique name"": ""Modify Authentication Process"",
     ""Quotes"": """"Modify Authentication Process techniques involve modifying authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts."""",
     ""Explanation"": ""The rule detects an attempt to exploit a credential disclosure vulnerability in Arcserve Unified Data Protection Management.""
   }
 ][
   {
     ""sid"": ""34944"",
     ""Technique ID"": ""T1539"",
     ""Technique name"": ""Steal Web Session Cookie"",
     ""Quotes"": """"Steal Web Session Cookie techniques involve stealing web application or service session cookies and using them to gain access to web applications or Internet services as an authenticated user without needing credentials. The rule detects an attempt to disclose credentials from Arcserve Unified Data Protection Management by extracting the session cookie from the HTTP request, which could allow an attacker to impersonate a legitimate user and access sensitive data."""",
     ""Explanation"": ""This event is generated when activity relating to policy violation is detected.""
   }
 ]","['T1071', 'T1003', 'T1211', 'T1110', 'T1552', 'T1555', 'T1531', 'T1087', 'T1134', 'T1098', 'T1552', 'T1559', 'T1556', 'T1539']",['T1003']
29383,"[
   {
     ""sid"": ""29383"",
     ""Technique ID"": ""T1574"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to evade detection and analysis by security tools. This rule detects an attempt to establish a VPN over DNS tunnel, which is a technique commonly used to bypass network restrictions and evade detection by encrypting traffic over DNS."",
     ""Explanation"": ""This rule is designed to detect attempts to establish a VPN over DNS tunnel, which may be used to bypass network restrictions and evade detection by encrypting traffic over DNS.""
   },
   {
     ""sid"": ""29383"",
     ""Technique ID"": ""T1071.001"",
     ""Technique name"": ""Data Encrypted over Command and Control Channel"",
     ""Quotes"": """"Data Encrypted over Command and Control Channel techniques involve encrypting data transmitted over command and control channels to evade detection and analysis by security tools. This rule detects an attempt to establish a VPN over DNS tunnel, which is a technique commonly used to bypass network restrictions by encrypting traffic over DNS."",
     ""Explanation"": ""This rule is designed to detect attempts to establish a VPN over DNS tunnel, which may be used to bypass network restrictions by encrypting traffic over DNS.""
   }
 ][
     ""sid"": ""29383"",
     ""Technique ID"": ""T1071.002"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or encrypting files or information to evade detection. This rule detects an attempt to download an application using the VPN over DNS technique, where a malicious application is hidden within a series of DNS requests, making it difficult for traditional security measures to detect."""",
     ""Explanation"": ""Obfuscated Files or Information technique is used to detect attempts to download malicious applications using the VPN over DNS technique.""
 ][
         ""sid"": ""29383"",
         ""Technique ID"": ""T1590"",
         ""Technique name"": ""Gather Victim Network Information"",
         ""Quotes"": """"Gather Victim Network Information techniques involve actively collecting information about the victim's networks to help inform targeting and exploitation efforts. This rule detects a VPN over DNS application that attempts to download from external servers, indicating attempts to establish a covert channel or initiate network reconnaissance."""",
         ""Explanation"": ""The rule involves actively collecting information about the victim's networks to help inform targeting and exploitation efforts.""
     ][
   {
     ""sid"": ""29383"",
     ""Technique ID"": ""T1571"",
     ""Technique Name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve using techniques to obscure the contents of data by changing its structure or encoding. The rule detects an attempt to download a VPN-over-DNS application, which is a technique often used by adversaries to bypass network security controls by encoding data within DNS requests."""",
     ""Explanation"": ""DNS is a protocol used to resolve domain names to IP addresses. Adversaries may abuse DNS to encode and exfiltrate data from a compromised system.""
   }
 ][
   {
     ""sid"": ""29383"",
     ""Technique ID"": ""T1071.002"",
     ""Technique name"": ""Data Exfiltration Over DNS"",
     ""Quotes"": """"Data Exfiltration Over DNS techniques use the normal functioning of the Domain Name System (DNS) for data transmission. This rule detects an attempt to exfiltrate data over DNS using the 'dns160.png', 'dns240.png', 'dns320.png', and 'fond-Snow-UI-Kit-2.png' files. The use of image files as part of the DNS exfiltration process is a common technique for avoiding detection."""",
     ""Explanation"": ""DNS exfiltration is a technique used to exfiltrate data over DNS requests. This rule detects an attempt to exfiltrate data over DNS using the 'dns160.png', 'dns240.png', 'dns320.png', and 'fond-Snow-UI-Kit-2.png' files.""
   }
 ][
     ""sid"": ""29383"",
     ""Technique ID"": ""T1071.001"",
     ""Technique name"": ""System Network Configuration Modification: DNS"",
     ""Quotes"": """"Modify DNS configurations to direct traffic through a malicious DNS server. VPN over DNS is a technique that allows remote users to access an internal network using a virtual private network (VPN) with tunneling taking place through DNS requests and responses. """",
     ""Explanation"": ""this rule can detect VPN over DNS traffic, which is when a DNS server is being used as a proxy for a VPN connection.""
 ]{
         ""sid"": ""29383"",
         ""Technique ID"": ""T1029"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting or encoding data to make it less accessible or usable if intercepted by adversaries. This rule detects a VPN over DNS application download attempt, which typically involves using encrypted DNS packets to tunnel VPN traffic over a standard DNS port. This encryption helps conceal the VPN traffic from detection by firewalls or other security devices."""",
         ""Explanation"": ""This rule detects a VPN over DNS application download attempt.""
     }[
         ""sid"": ""29383"",
         ""Technique ID"": ""T1579"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or encrypting files or information to evade detection or analysis. The rule detects traffic related to the 'VPN Over DNS' application, which may use techniques to obfuscate its communication to evade detection by firewalls or intrusion detection systems."",
         ""Explanation"": ""This event is generated when there is an attempt to download the VPN Over DNS application.""
     ][
   {
     ""sid"": ""29383"",
     ""Technique ID"": ""T1574"",
     ""Technique Name"": ""Hijack Execution Flow"",
     ""Quotes"": """"Hijack Execution Flow techniques involve modifying the way operating systems run programs, such as altering an application's control flow or executing arbitrary code. This rule detects the installation of VPN Over DNS, a mobile application that allows users to access blocked websites and services, which can be used by adversaries to bypass network security controls and access restricted content."""",
     ""Explanation"": """"
   }
 ][
   {
     ""sid"": ""29383"",
     ""Technique ID"": ""T1571"",
     ""Technique Name"": ""Non-Standard Port"",
     ""Quotes"": """"Non-Standard Port techniques involve using a protocol and port pairing that are typically not associated. This rule detects the use of port 25, typically used for SMTP, to transfer data associated with a VPN Over DNS application. Adversaries may use non-standard ports to avoid detection or to evade security controls that are configured to monitor or block traffic on standard ports."""",
     ""Explanation"": ""This rule detects an attempt to download a VPN Over DNS application using a non-standard port.""
   }
 ][
         ""sid"": ""29383"",
         ""Technique ID"": ""T1136"",
         ""Technique name"": ""Masquerading as Authentic Infrastructure"",
         ""Quotes"": """"Masquerading as Authentic Infrastructure techniques involve directing traffic to a malicious infrastructure that appears to be legitimate to the user or system. This rule detects exfiltration of data using DNS over HTTPS (DoH) through an SSH tunnel, which attackers may use to bypass network defenses or exfiltrate data across network boundaries."""",
         ""Explanation"": ""This alert is triggered when someone is attempting to use an SSH tunnel to exfiltrate data using DNS over HTTPS (DoH). This technique is commonly used by attackers to bypass network defenses or exfiltrate data across network boundaries.""
     ]","['T1574', 'T1071.001', 'T1071.002', 'T1590', 'T1571', 'T1071.002', 'T1071.001', 'T1029', 'T1579', 'T1574', 'T1571', 'T1136']",['T1021']
17571,"[
   {
     ""sid"": ""18263"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve attempting to gain access to accounts by iterating through a large number of possible passwords or passphrases until a successful login is achieved. This rule detects brute force attacks against SSH services by monitoring for repeated failed login attempts from the same IP address or host, indicating an attempt to guess the correct password."""",
     ""Explanation"": ""SSH brute force detection: possible ssh brute force attack detected. Too many failed login attempts.""
   }
 ][
   {
     ""sid"": ""17571"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve tricking a user into visiting a malicious website or clicking on a malicious attachment in order to download and install malware on their system. This rule detects an obfuscated instantiation of an ActiveX object within an HTTP response, which is a common method used by attackers to exploit browser vulnerabilities and install malware without user interaction."""",
     ""Explanation"": ""The rule is associated with a web browser plugin attempting to instantiate an ActiveX object, which may be indicative of a drive-by compromise attempt.""
   }
 ][
     ""sid"": ""17571"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve using publicly accessible resources or services to establish an initial foothold or maintain persistence within a target environment. Active X controls are a common method used by adversaries to exploit browser vulnerabilities and install malicious software."",
     ""Explanation"": ""This event is generated when the IDS detects an attempt to instantiate an ActiveX object, which is a common technique used by adversaries to exploit browser vulnerabilities and install malicious software.""
 ][
   {
     ""sid"": ""17571"",
     ""Technique ID"": ""T1119"",
     ""Technique Name"": ""Browser Extensions"",
     ""Quotes"": """"Browser Extensions techniques encompass the use of browser extensions to perform malicious activities such as data exfiltration, credential theft, or code execution. This rule detects a potentially malicious attempt to instantiate an ActiveX object using obfuscated code, often associated with browser extension-based attacks."""",
     ""Explanation"": ""This rule detects an attempt by a web browser plugin to instantiate an ActiveX object, which could be used by a malicious browser extension to perform malicious actions.""
   },
   {
     ""sid"": ""17571"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques encompass encoding or otherwise modifying files or information to evade detection or analysis. This rule detects the use of obfuscation techniques by identifying the presence of 'unescape' function calls within the HTTP traffic, often used to decode obfuscated data within malicious browser extensions or other web-based attacks."""",
     ""Explanation"": ""The rule detects the use of the 'unescape' function, which can be used to decode obfuscated data within malicious browser extensions or other web-based attacks.""
   }
 ][
         ""sid"": ""17571"",
         ""Technique ID"": ""T1137"",
         ""Technique name"": ""Browser Exploitation"",
         ""Quotes"": """"Browser Exploitation techniques involve exploiting vulnerabilities in web browsers to gain unauthorized access to a system. This rule specifically detects an obfuscated instantiation of an ActiveX object in a web browser, often used by malicious actors to execute arbitrary code or gain access to sensitive data."""",
         ""Explanation"": ""Browser exploitation used to download or execute malware on the user host, using malicious ActiveX components downloaded from a web page.""
     ][
   {
     ""sid"": ""17571"",
     ""Technique ID"": ""T1074"",
     ""Technique Name"": ""Data Staged"",
     ""Quotes"": """"Data Staged techniques involve adversaries copying data from its original location to another location for staging prior to Exfiltration. ActiveX is a framework that provides interoperability between web browsers and various software components and is commonly used by adversaries to execute malicious code or stage data for exfiltration."""",
     ""Explanation"": ""The rule searches for an instantiation of an ActiveXObject that is obfuscated by the use of methods like 'unescape' to hide the malicious intent of the object, which is a common technique used by adversaries to stage data for further exfiltration.""
   },
   {
     ""sid"": ""17571"",
     ""Technique ID"": ""T1136"",
     ""Technique Name"": ""Create Account"",
     ""Quotes"": """"Create Account techniques encompass adversaries creating user accounts on target systems or services, which can enable them to establish a foothold in the network. ActiveX controls can be used to create or modify objects on a system, including user accounts."""",
     ""Explanation"": ""The rule matches attempts to create new ActiveX objects, which could potentially be used to create user accounts on the target system, allowing adversaries to gain a persistent foothold in the network.""
   },
   {
     ""sid"": ""17571"",
     ""Technique ID"": ""T1587"",
     ""Technique Name"": ""Develop Capabilities"",
     ""Quotes"": """"Develop Capabilities techniques involve adversaries building capabilities that can be used during targeting, such as developing custom tools or modifying existing tools."""",
     ""Explanation"": ""The rule detects an attempt to instantiate an ActiveX object using obfuscated code, which is a common technique used by adversaries to develop custom tools or modify existing tools for malicious purposes.""
   }
 ][
         ""sid"": ""17571"",
         ""Technique ID"": ""T1070"",
         ""Technique name"": ""Browser Extensions"",
         ""Quotes"": """"Browser Extensions techniques involve using browser extensions to establish persistence or elevate privileges. This rule detects the obfuscated instantiation of an ActiveX object in a web browser, which is a common method used by browser extensions to gain access to the browser's functionality and potentially execute malicious actions."""",
         ""Explanation"": ""This event is generated when an ActiveX object is created which can potentially execute malicious actions""
     ][
   {
     ""sid"": ""17571"",
     ""Technique ID"": ""T1027"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve intentionally altering the format, content, or appearance of files or information to evade detection or hinder analysis. The Snort rule detects an attempt to instantiate an ActiveX object using obfuscated JavaScript techniques, specifically by using bitwise operators and string manipulation functions to evade detection. This is a common method used by attackers to bypass security controls and execute malicious code."""",
     ""Explanation"": ""Obfuscation of JavaScript code in order to bypass security controls and execute malicious code.""
   }
 ][
         ""sid"": ""17571"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Execution through Scripted Web Proxy"",
         ""Quotes"": """"Execution through Scripted Web Proxy techniques involve using a web proxy with malicious scripts to execute code on a victim's system. The rule identifies an attempt to instantiate an ActiveX object using obfuscated code, which is a common method used by malicious actors to bypass security controls and execute arbitrary code."""",
         ""Explanation"": ""This event is triggered when an attempt to instantiate an ActiveX object is detected in network traffic. Detection is based on attributes such as the file data containing the string ""new ActiveXObject"" and ""unescape,"" which are commonly used in malicious scripts to evade detection.""
     ][
   {
     ""sid"": ""17571"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Initial Access"",
     ""Quotes"": """"Initial access techniques are the first stage of an attack and can involve a variety of methods to gain initial foothold within a network. This rule detects the instantiation of an ActiveX object using the 'new ActiveXObject' function, which is often used by malware to execute malicious code by exploiting vulnerabilities in web browsers."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to instantiate an ActiveX object using the 'new ActiveXObject' function, which is a common technique used by malware to gain initial access to a system.""
   },
   {
     ""sid"": ""17571"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in software or applications that are commonly used by end users to gain unauthorized access to a system. This rule detects an attempt to exploit a vulnerability in a web browser using an ActiveX object, which is a common method used in drive-by compromise attacks to infect unsuspecting users."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to instantiate an ActiveX object using the 'new ActiveXObject' function, which is a common technique used in drive-by compromise attacks to infect unsuspecting users.""
   }
 ][
   {
     ""sid"": ""17571"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit an ActiveX vulnerability by instantiating an obfuscated ActiveX object, which is a common method attackers use to compromise web browsers and gain unauthorized access to systems."",
     ""Explanation"": ""The rule is designed to detect the exploitation of an ActiveX vulnerability using obfuscated code, which is a technique commonly used by attackers to bypass detection and gain access to systems.""
   }
 ]","['T1110', 'T1189', 'T1133', 'T1119', 'T1110', 'T1137', 'T1074', 'T1136', 'T1587', 'T1070', 'T1027', 'T1059', 'T1059', 'T1189', 'T1110']",['T1027']
1042,"[
   {
     ""sid"": ""1042"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects HTTP requests with 'Translate|3A| F' headers, which are used to exploit a server-side request forgery vulnerability in Microsoft IIS web servers, allowing an attacker to bypass authentication and view source code or perform other unauthorized actions."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Microsoft IIS web servers that allows an attacker to bypass authentication and view source code or perform other unauthorized actions by sending a specially crafted HTTP request with a 'Translate' header.""
   }
 ][
     {
         ""sid"": ""1042"",
         ""Technique ID"": ""T1068"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access a Microsoft IIS web server's source code using the 'Translate: F' header, which is a common method used by attackers to exploit web applications and gain access to confidential data."""",
         ""Explanation"": ""IIS 6.0 allows remote attackers to view source code of ASP pages, via a ""Translate"" HTTP header with a value of ""F"" (hex 0x46). This may aid in attacks.""
     }
 ][
   {
     ""sid"": ""1042"",
     ""Technique ID"": ""T1068"",
     ""Technique name"": ""Exploitation for Privilege Escalation"",
     ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting a system or application vulnerability to elevate privileges. This rule specifically looks for exploitation of a known vulnerability in IIS web servers, which attackers could use to gain higher privileges on the system."""",
     ""Explanation"": ""This rule is a detection of the ""IIS WebDAV Source Disclosure Vulnerability (CVE-2007-2347)"" in Microsoft IIS versions 6.0 and 7.0. This vulnerability is a buffer overflow in the WebDAV component of IIS, which allows attackers to execute arbitrary code on the target system with elevated privileges.""
   }
 ][
   {
     ""sid"": ""1042"",
     ""Technique ID"": ""T1094"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shells are backdoors that allow remote administration of compromised web servers. This rule detects the use of the 'Translate' request header to retrieve the source code of a web page, which is a common technique used to bypass web application firewalls and gain unauthorized access to web servers."""",
     ""Explanation"": ""IIS ISAPI Extension Denial of Service Vulnerability""
   }
 ][
         ""sid"": ""1042"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access the source code of a web page using the 'Translate:3A F' header, which is a common technique attackers use to exploit web application vulnerabilities."""",
         ""Explanation"": ""The attacker is using a web browser to send an HTTP request to a web server. The request includes a header that contains the string 'Translate:3A F'. This is a technique that can be used to exploit vulnerabilities in web applications that are not properly configured.""
     ][
   {
     ""sid"": ""1042"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting a vulnerability in client-side software, such as a web browser, to execute arbitrary code on the client machine. This rule detects an attempt to exploit a vulnerability in the Microsoft Internet Information Services (IIS) web server that allows remote attackers to view the source code of web pages by manipulating the 'Translate' header, which is a common method used to exploit vulnerabilities in web servers."""",
     ""Explanation"": ""This is an attack that exploits a vulnerability in a server-side application to gain access to the server.""
   },
   {
     ""sid"": ""1042"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Microsoft Internet Information Services (IIS) web server that allows remote attackers to view the source code of web pages by manipulating the 'Translate' header, which is a common method used to exploit vulnerabilities in web servers."""",
     ""Explanation"": ""This is an attack that exploits a vulnerability in a server-side application to gain access to the server.""
   }
 ][
   {
     ""sid"": ""1042"",
     ""Technique ID"": ""T1140"",
     ""Technique Name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing the encoding or obfuscation mechanisms used to hide malicious code or data within files or communications"""",
     ""Explanation"": ""This event is generated when a web server is attempting to view the source code of a file using a translate header, which could be an attempt to deobfuscate obfuscated malicious code.""
   }
 ][
   {
     ""sid"": ""1042"",
     ""Technique ID"": ""T1139"",
     ""Technique Name"": ""Application Layer Protocol Abuse"",
     ""Quotes"": """"Application Layer Protocol Abuse techniques involve abusing the functionality of standard application layer protocols to achieve malicious objectives. This rule detects the use of a malformed HTTP 'Translate' header to perform a view-source request, which is a common tactic used by attackers to bypass application-level security controls and access the source code of web pages."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in Microsoft IIS web server is detected.""
   }
 ][
   {
     ""Sid"": ""1042"",
     ""Technique ID"": ""T1140"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Internet Information Services (IIS) web servers that allows an attacker to view the source code of a web page by manipulating the 'Translate' header."""",
     ""Explanation"": ""This rule matches an attempt to exploit a vulnerability in IIS web servers where an unauthenticated attacker can view the source code of a web page by sending a specially crafted HTTP request with a 'Translate:' header.""
   },
   {
     ""Sid"": ""1042"",
     ""Technique ID"": ""T1559"",
     ""Technique Name"": ""Inter-Process Communication"",
     ""Quotes"": """"Inter-Process Communication (IPC) techniques involve using IPC mechanisms to facilitate communication between processes, often to facilitate lateral movement or command and control. This rule detects an attempt to exploit a vulnerability in IIS web servers that allows an attacker to execute arbitrary code by sending a specially crafted HTTP request that abuses IPC mechanisms."""",
     ""Explanation"": ""This rule matches an attempt to exploit a vulnerability in IIS web servers where an unauthenticated attacker can execute arbitrary code by sending a specially crafted HTTP request that abuses IPC mechanisms.""
   }
 ][
   {
     ""sid"": ""1042"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques involve taking advantage of vulnerabilities in exposed network services to execute arbitrary commands, gain unauthorized access to systems, or elevate privileges."""",
     ""Explanation"": ""This rule detects attempts to exploit a vulnerability in the HTTP service on IIS servers by sending a specially crafted HTTP request with the 'Translate|3A| F' header. Successful exploitation could allow an attacker to execute arbitrary code on the target system.""
   }
 ][
   {
     ""sid"": ""1042"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Microsoft IIS web servers by using the 'Translate' header to access the source code of web pages, which can be used to identify vulnerabilities or bypass security measures."""",
     ""Explanation"": ""This Snort rule detects a Translate3A attack, which is a web application attack that exploits a vulnerability in HTTP header handling to obtain sensitive information from the target website.""
   }
 ]","['T1190', 'T1068', 'T1068', 'T1094', 'T1190', 'T1110', 'T1190', 'T1140', 'T1139', 'T1140', 'T1559', 'T1110', 'T1190']",['T1119']
38355,"[
   {
     ""sid"": ""38355"",
     ""Technique ID"": ""T1091"",
     ""Technique name"": ""Remote File Copy"",
     ""Quotes"": """"Remote File Copy techniques involve transferring files from or to remote systems. The rule detects a variant of the NetWiredRC Trojan attempting to establish a keepalive connection, which is a common method used by malware to maintain a persistent connection with a command and control server for data exfiltration or remote control."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""38355"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to hinder forensic analysis or impede response to an incident. The rule detects a variant of the NetWiredRC Trojan that uses encryption to communicate with its command and control server, making it difficult for security analysts to track its activity."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""38355"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over C2 Channel"",
         ""Quotes"": """"Exfiltration Over C2 Channel techniques involve exfiltrating data over an existing command and control channel. The rule detects a specific pattern ('|01 00 00 00 01|') sent by the NetWiredRC Trojan variant to a remote server, which is consistent with data exfiltration behavior over an established command and control channel."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""38355"",
     ""Technique ID"": ""T1008"",
     ""Technique name"": ""Fallback Channels"",
     ""Quotes"": """"Fallback Channels techniques involve using additional or alternate communication channels to maintain reliable command and control and avoid data transfer thresholds. This rule detects a keepalive message from the NetWiredRC Trojan, which is known to use multiple communication channels, including HTTP and DNS, to maintain persistence and evade detection."""",
     ""Explanation"": ""This rule looks for the keepalive message sent by the NetWiredRC trojan. NetWiredRC uses multiple channels to communicate, making it more difficult to detect and block.""
   }
 ][
   {
     ""Sid"": ""38355"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Application Layer Protocol Abuse"",
     ""Quotes"": """"Application Layer Protocol Abuse techniques involve abusing application layer protocols to perform malicious activities, such as tunneling malicious traffic within legitimate protocols. The rule detects the presence of the NetWiredRC Trojan that uses an HTTP POST request with a specific header to communicate with its command and control server, which is an example of abusing an application layer protocol for malicious purposes."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""38355"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve gathering information about remote systems to identify potential targets or vulnerabilities. The rule triggers on a network packet with a specific pattern that matches the keep-alive communication of a known malware variant, indicating an attempt to establish a persistent connection to a remote server. This behavior is often used by malware to maintain a command-and-control channel after initial infection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""38355"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Application Layer Protocol Abuse"",
         ""Quotes"": """"Application Layer Protocol Abuse techniques involve using legitimate protocols for malicious purposes, such as sending unexpected or malformed data within a protocol to cause a buffer overflow or execute arbitrary code. This rule detects a variant of the Win.Trojan.NetWiredRC malware that uses a keepalive mechanism to maintain a persistent connection to a command and control server, which is a common method used by malware to evade detection and maintain access to compromised systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""Sid"": ""38355"",
     ""Technique ID"": ""T1080"",
     ""Technique Name"": ""Network Sniffing"",
     ""Quotes"": """"Adversaries may passively observe network traffic on a target network to collect information about the devices and applications in use, monitor user activity, and capture credentials or other sensitive data. This rule detects a keepalive message sent by a variant of NetWiredRC, which is a remote access tool used by adversaries to establish a persistent connection with compromised systems and exfiltrate sensitive information."",
     ""Explanation"": ""This event is generated when the NetWiredRC variant is used for network sniffing.""
   },
   {
     ""Sid"": ""38355"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Adversaries may use network scans to identify available network services on a target network, enumerate devices and services, and discover potential vulnerabilities or misconfigurations. This rule detects a keepalive message sent by a variant of NetWiredRC, which is a remote access tool used by adversaries to establish a persistent connection with compromised systems and exfiltrate sensitive information."",
     ""Explanation"": ""This event is generated when the NetWiredRC variant is used for network service scanning.""
   }
 ][
     {
         ""sid"": ""38355"",
         ""Technique ID"": ""T1043"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control (C2) techniques involve adversaries communicating with infrastructure under their control, which is often used to issue commands and tasks to systems already compromised by malware. The rule detects traffic patterns associated with the NetWiredRC (Backdoor.Win32.NetWiredRC) Trojan, which is known to communicate with a command and control server using a specific protocol."""",
         ""Explanation"": ""The rule indicates the connection to a known remote control server IP address which is used by malware for command and control.""
     },
     {
         ""sid"": ""38355"",
         ""Technique ID"": ""T1219"",
         ""Technique name"": ""Remote Access Software"",
         ""Quotes"": """"Remote Access Software techniques involve adversaries using legitimate remote desktop and management software to access and control remote systems. The rule detects traffic patterns associated with NetWiredRC, a Trojan that can leverage remote access tools to establish a persistent connection with a remote host."""",
         ""Explanation"": ""The rule triggers on network traffic that matches the communication patterns of remote access software, which could be used by attackers to remotely control compromised systems.""
     }
 ][
   {
     ""sid"": ""38355"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": ""\""Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects the presence of a Trojan (NetWiredRC) that uses a keep-alive mechanism, which is a common method used by malware to maintain a persistent connection with a command and control server."""",
     ""Explanation"": ""This event represents a successful keepalive method by the NetWiredRC Trojan.""
   }
 ][
   {
     ""sid"": ""38355"",
     ""Technique ID"": ""T1049"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques allow adversaries to remotely control a compromised system. This rule specifically detects activity associated with the NetWiredRC variant of the Win.Trojan malware, which is known to use a custom protocol over TCP to communicate with its command and control server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""38355"",
     ""Technique ID"": ""T1049"",
     ""Technique name"": ""System Network Connections Discovery"",
     ""Quotes"": """"System Network Connections Discovery techniques involve gathering information about network connections to or from a compromised system. This rule detects an established connection to a known command and control server for the NetWiredRC Trojan, which is commonly used for remote access and control of compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ]","['T1091', 'T1132', 'T1041', 'T1008', 'T1071', 'T1071', 'T1071', 'T1080', 'T1046', 'T1043', 'T1219', 'T1056', 'T1049', 'T1049']",['T1094']
29354,"[
   {
     ""sid"": ""29354"",
     ""Technique ID"": ""T1217"",
     ""Technique Name"": ""Browser Information Discovery"",
     ""Quotes"": ""\""Browser Information Discovery techniques involve enumerating information about browsers to learn more about compromised environments. The rule detects attempts to use the Foca tool to scan for vulnerable web applications, which often involves gathering browser-related information to identify potential attack vectors."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to use the Foca tool to scan for vulnerable web applications on a network.""
   }
 ][
   {
     ""sid"": ""29354"",
     ""Technique ID"": ""T1484"",
     ""Technique name"": ""Domain Policy Modification"",
     ""Quotes"": """"Domain Policy Modification techniques involve modifying the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. This rule detects an attempt to modify the domain policy by changing the default 'Deny' permission for the 'SeNetworkLogonRight' privilege to 'Allow' for the 'Everyone' group, which could allow adversaries to gain unauthorized access to the domain."""",
     ""Explanation"": ""The event that generated this alert indicates that a domain policy change has been attempted. Modification of the domain policy could allow adversaries to compromise the system or escalate privileges.""
   }
 ][
         ""sid"": ""29354"",
         ""Technique ID"": ""T1495"",
         ""Technique name"": ""Firmware Corruption"",
         ""Quotes"": """"Firmware Corruption techniques involve modifying or corrupting the firmware of a system or device to disrupt normal operation or render it inoperable. This rule detects an attempt by the Foca scanning tool to identify and exploit vulnerabilities in firmware, which could potentially lead to firmware corruption if the vulnerabilities are successfully exploited."""",
         ""Explanation"": ""Firmware Corruption techniques involve modifying or corrupting the firmware of a system or device to disrupt normal operation or render it inoperable. This rule detects an attempt by the Foca scanning tool to identify and exploit vulnerabilities in firmware, which could potentially lead to firmware corruption if the vulnerabilities are successfully exploited.""
     ],
     [
         ""sid"": ""29354"",
         ""Technique ID"": ""T1083"",
         ""Technique name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve searching for and identifying files and directories of interest on a system or network. This rule detects an attempt by the Foca scanning tool to identify and exploit vulnerabilities in firmware, which could potentially involve discovering and enumerating files and directories on the target system."""",
         ""Explanation"": ""This rule detects an attempt by the Foca scanning tool to identify and exploit vulnerabilities in firmware, which could potentially involve discovering and enumerating files and directories on the target system.""
     ]
 ][
   {
     ""sid"": ""29354"",
     ""Technique ID"": ""T1018"",
     ""Technique Name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve performing reconnaissance on a remote system to identify its characteristics, such as IP address, hostname, operating system, and open ports. The rule detects an attempted reconnaissance scan using the 'FOCA' tool, which is commonly used to collect information about web servers, including their hostname and IP address."""",
     ""Explanation"": ""The rule looks for reconnaissance activity from an external IP address.""
   }
 ][
         ""sid"": ""29354"",
         ""Technique ID"": ""T1482"",
         ""Technique name"": ""Footprinting"",
         ""Quotes"": """"Footprinting techniques involve gathering information about a target network to identify potential vulnerabilities. This rule detects the use of the FOCA (Fingerprinting Organism Collecting Analyzer) utility, which is a common tool used for network reconnaissance and vulnerability discovery."""",
         ""Explanation"": ""The rule triggers when user-agent FOCA tries to connect.""
     ][
     {
         ""sid"": ""29354"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted file scanning attack using the Foca tool, which is commonly used by attackers to gather information about web applications."""",
         ""Explanation"": ""This rule would categorize the detection as an attempt at exploiting a publicly facing web application, as it detects the use of the Foca tool, which is commonly used for this purpose.""
     }
 ][
   {
     ""sid"": ""29354"",
     ""Technique ID"": ""T1595"",
     ""Technique name"": ""Active Scanning"",
     ""Quotes"": """"Active Scanning refers to techniques used by adversaries to actively gather information, typically by executing scans or probes against a target network or system to identify vulnerable hosts or services. The rule triggers on attempts to scan using the Foca tool, which is used for web application reconnaissance and vulnerability assessment."""",
     ""Explanation"": ""This rule is triggered when there is an attempt to scan using the Foca tool, which is used for web application reconnaissance and vulnerability assessment.""
   },
   {
     ""sid"": ""29354"",
     ""Technique ID"": ""T1548"",
     ""Technique name"": ""Abuse Elevation Control Mechanism"",
     ""Quotes"": """"Abuse Elevation Control Mechanism techniques involve bypassing or subverting mechanisms designed to control privilege escalation to gain higher-level permissions. The rule triggers on attempts to exploit a Foca vulnerability that allows attackers to bypass access controls and gain elevated privileges."""",
     ""Explanation"": ""This rule is triggered when there is an attempt to exploit a Foca vulnerability that allows attackers to bypass access controls and gain elevated privileges.""
   }
 ][
     {
         ""sid"": ""29354"",
         ""Technique ID"": ""T1598"",
         ""Technique name"": ""Phishing for Information"",
         ""Quotes"": """"Phishing for Information techniques involve sending fraudulent emails or messages to trick users into revealing sensitive information that can be used for reconnaissance or targeting. This rule detects an attempt by the Foca scanning tool to gather information about a web server by sending a specially crafted HTTP request. Foca is commonly used by attackers to identify potential targets for exploitation."""",
         ""Explanation"": ""The presence of the Foca User-Agent header in an HTTP request often indicates that the request is part of a reconnaissance effort to gather information about a web server.""
     }
 ][
   {
     ""sid"": ""29354"",
     ""Technique ID"": ""T1493"",
     ""Technique Name"": ""Port Scanning"",
     ""Quotes"": ""\""Port Scanning techniques involve actively establishing network connections to a target's network from an external system to discover open ports and services.\"""",
     ""Explanation"": ""This rule detects attempted reconnaissance by identifying a specific pattern in the User-Agent header that is commonly associated with the Foca tool, which is used for scanning web applications and discovering open ports.""
   }
 ][
   {
     ""sid"": ""29354"",
     ""Technique ID"": ""T1492"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve searching for open ports and services on target systems, often as a precursor to other attacks. This rule detects an attempted connection to port 80 (HTTP) from an external source using the User-Agent header characteristic of the Foca web application scanner, indicating an attempt to gather information about the target system or potentially exploit vulnerabilities."""",
     ""Explanation"": ""This event is generated when a connection attempt for reconnaissance purposes is seen.""
   }
 ][
         ""sid"": ""29354"",
         ""Technique ID"": ""T1484"",
         ""Technique name"": ""Active Scanning"",
         ""Quotes"": """"T1484 Active Scanning adversaries use automated tools—often with minimal human interaction—to scan networks, systems, and applications for vulnerabilities, open ports, and services."""",
         ""Explanation"": ""This rule detects an attempted reconnaissance by the Foca tool, which is commonly used for scanning and identifying potential vulnerabilities in web applications.""
     ]","['T1217', 'T1484', 'T1495', 'T1083', 'T1018', 'T1482', 'T1190', 'T1595', 'T1548', 'T1598', 'T1493', 'T1492', 'T1484']",['T1083']
2589,"[
   {
     ""sid"": ""2589"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising the identity of malicious activity by mimicking legitimate or trusted entities to evade detection or deceive users. This rule detects an attempt to exploit the Windows Content-Disposition CLSID command to execute malicious code. Attackers often use legitimate-looking file extensions to bypass security measures and trick users into executing malware."""",
     ""Explanation"": ""Command execution attempt via Content-Disposition CLSID on MS Windows""
   }
 ][
   {
     ""sid"": ""2589"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve tricking a user into visiting a website that hosts malicious content, which then compromises the user's system. This rule specifically identifies an attempt to exploit a vulnerability in Microsoft Windows' handling of the 'Content-Disposition' header to execute arbitrary code, which is a common drive-by compromise method."""",
     ""Explanation"": ""This rule looks for a specific pattern in an HTTP header that is commonly used in drive-by compromise attacks. The pattern is associated with a CLSID that is used to execute arbitrary code on the target system.""
   }
 ][
   {
     ""sid"": ""2589"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting software vulnerabilities in client applications to execute arbitrary code. The rule detects an attempt to exploit a command execution vulnerability in Microsoft Windows via a specially crafted HTTP request that includes a CLSID and a '%2e' character, which is a common method used to bypass client-side security restrictions and execute arbitrary commands."""",
     ""Explanation"": ""A command execution vulnerability in Microsoft Windows Content-Disposition CLSID allows remote attackers to execute arbitrary code via a crafted HTTP request that includes a CLSID and a '%2e' character, as exploited in the wild in March 2010.""
   }
 ][
   {
     ""sid"": ""2589"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in web browsers or browser-based applications to infect systems through malicious downloads or drive-by attacks, in which a user simply visits a malicious website without any additional action being required. This rule triggers on attempts to download an executable file using the CLSID specification, which is commonly used in drive-by attacks."""",
     ""Explanation"": ""This rule has a specific rule id, sid:2589, that corresponds to an event when an attempt to download an executable file using the CLSID specification is detected. This particular technique is often used in drive-by attacks, in which attackers attempt to exploit vulnerabilities in web browsers or browser-based applications to infect systems without requiring any additional action from the user.""
   }
 ][
   {
     ""sid"": ""2589"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a COM object vulnerability in Microsoft Content-Disposition's CLSID to execute arbitrary commands, which is a common technique used by attackers to gain control of a system."""",
     ""Explanation"": ""COM object vulnerability in Microsoft Content-Disposition in Microsoft Windows 7 SP1 and Windows Server 2008 R2 SP1 allows remote attackers to execute arbitrary code via a crafted HTML document, aka ""COM Elevation of Privilege Vulnerability.""""
   }
 ][
   {
     ""sid"": ""2589"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking users into executing malicious code or commands, often through phishing emails or malicious websites. This rule detects an attempt to execute a command by embedding a CLSID (Class Identifier) in the 'Content-Disposition' header of an HTTP request, which is a method commonly used in phishing attacks to exploit vulnerabilities in Microsoft Windows applications."""",
     ""Explanation"": ""This event is generated when activity relating to exploitation of a vulnerability in Microsoft Windows Content-Disposition CLSID command is detected.""
   }
 ][
         ""sid"": ""2589"",
         ""Technique ID"": ""T1064"",
         ""Technique name"": ""Payload Execution via Malicious File"",
         ""Quotes"": """"Payload Execution via Malicious File techniques involve delivering a malicious payload to a victim system and executing it, often through the use of social engineering tactics. The rule detects attempts to execute commands using the Microsoft Windows CLSID method, which is a common technique used by attackers to exploit vulnerabilities and execute malicious code."""",
         ""Explanation"": ""The rule is designed to detect attempts to exploit a vulnerability in Microsoft Windows Content-Disposition CLSID.""
     ][
   {
     ""sid"": ""2589"",
     ""Technique ID"": ""T1200"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted exploit of a remote code execution vulnerability in Microsoft Windows via the Content-Disposition header. Successful exploitation could allow an attacker to execute arbitrary code on the target system."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""2589"",
     ""Technique ID"": ""T1202"",
     ""Technique Name"": ""Indirect Command Execution"",
     ""Quotes"": """"Indirect Command Execution techniques involve using legitimate system tools to execute commands or programs without directly calling them. This rule detects an attempt to exploit a vulnerability in Microsoft Windows by using the 'Content-Disposition' header to execute a command via the 'CLSID'. Attackers can abuse this technique to gain unauthorized access or control over the affected system."""",
     ""Explanation"": ""This event is generated when a command prompt is found.""
   }
 ][
   {
     ""sid"": ""2589"",
     ""Technique ID"": ""T1592"",
     ""Technique Name"": ""Create Object"",
     ""Quotes"": """"Create Object techniques involve creating a new object or file that may be used for persistence, privilege escalation, defense evasion, or other actions. In this case, the rule detects an attempt to create a COM object with the CLSID {3050f4d8-98B5-11CF-BB82-00AA00BDCE0B}, which is associated with the Windows Installer service. This technique is commonly used by malware to gain persistence or execute arbitrary code by exploiting vulnerabilities in the COM object."""",
     ""Explanation"": ""Creates a COM object associated with the Windows Installer service, indicating a potential attempt to gain persistence or escalate privileges.""
   }
 ][
         ""sid"": ""2589"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""User Execution"",
         ""Quotes"": """"User Execution techniques involve tricking a user into executing malicious code or commands. This rule detects a malicious attempt to execute a command on a Microsoft Windows system by exploiting the CLSID vulnerability in Internet Explorer's Content-Disposition header. Attackers may use this vulnerability to trick users into downloading and executing malicious files."""",
         ""Explanation"": ""This event will trigger when a CLSID (Class Identifier) from a URL query parameter is being used to create a file (normally an executable file or a script file) using the Content-Disposition header in an HTTP request, which can potentially lead to arbitrary code execution.""
     ]","['T1189', 'T1189', 'T1203', 'T1189', 'T1190', 'T1204', 'T1064', 'T1200', 'T1202', 'T1592', 'T1204']",['T1203']
24088,"[
   {
     ""sid"": ""24088"",
     ""Technique ID"": ""T1092"",
     ""Technique Name"": ""Communication Through Removable Media"",
     ""Quotes"": """"Communication Through Removable Media techniques involve establishing communications with compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. This rule detects suspicious ICMP traffic that may be used to establish a TCP tunnel for data exfiltration. Removable media could be used to transfer commands to the compromised host, which could then be used to establish the covert channel through ICMP traffic."""",
     ""Explanation"": ""This event is generated when Win.Trojan.Bledoor activity is detected.""
   }
 ][
   {
     ""sid"": ""24088"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Encoding"",
     ""Quotes"": ""\""Data Encoding techniques involve encoding data to evade detection or analysis. The rule detects a Trojan (Bledoor) that uses ICMP tunneling to establish a covert communication channel, which involves encoding data within ICMP packets to avoid detection by traditional security mechanisms."""",
     ""Explanation"": ""The rule detects malicious activity related to a trojan using ICMP tunneling.""
   },
   {
     ""sid"": ""24088"",
     ""Technique ID"": ""T1090"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": ""\""Masquerading techniques involve disguising malicious activity to appear legitimate or trusted. The rule detects a Trojan (Bledoor) that uses ICMP tunneling to establish a covert communication channel, which can be used to evade detection by impersonating legitimate ICMP traffic."""",
     ""Explanation"": ""The rule detects malicious activity related to a trojan using ICMP tunneling.""
   }
 ][
   {
     ""sid"": ""24088"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": ""\""File and Directory Discovery techniques involve enumerating files and directories or searching in specific locations of a host or network share for certain information within a file system. This rule detects a TCP tunnel encapsulated in ICMP packets, which is a technique commonly used for covert communication and data exfiltration. Attackers may use this technique to discover and access files and directories within the victim's network."",
     ""Explanation"": ""This rule detects malicious or anomalous activity.""
   },
   {
     ""sid"": ""24088"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a TCP tunnel encapsulated in ICMP packets, which is a technique commonly used for covert communication and data exfiltration. Attackers may use this technique to exploit vulnerabilities in public-facing applications and gain access to the victim's network."",
     ""Explanation"": ""This rule detects malicious or anomalous activity.""
   }
 ][
   {
     ""sid"": ""24088"",
     ""Technique ID"": ""T1091"",
     ""Technique Name"": ""Replication Through Removable Media"",
     ""Quotes"": ""\""Replication Through Removable Media techniques involve copying malicious software to removable media and leveraging Autorun features to execute the malware when the media is inserted into a system. This rule detects an attempt to establish a TCP tunnel over ICMP using the Bledoor Trojan, which is a common method for adversaries to remotely control compromised systems and transfer data or exfiltrate sensitive information."""",
     ""Explanation"": ""The rule detects Bledoor Trojan activity by identifying a specific pattern of ICMP packets used to establish a covert communication channel.""
   }
 ][
     {
         ""sid"": ""24088"",
         ""Technique ID"": ""T1090"",
         ""Technique Name"": ""Tunnel Encapsulation"",
         ""Quotes"": """"Tunnel Encapsulation techniques involve disguising malicious traffic within legitimate communication channels to evade detection. The rule detects a Win.Trojan.Bledoor TCP tunnel encapsulated within ICMP packets, which is a common method used by malware to establish covert communication channels and bypass network security controls."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
     ""sid"": ""24088"",
     ""Technique ID"": ""T1090"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
 ][
   {
     ""sid"": ""24088"",
     ""Technique ID"": ""T1090"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a TCP tunneling vulnerability in the Bledoor Trojan, which allows attackers to establish a persistent connection to a remote system over ICMP, bypassing traditional network defenses."""",
     ""Explanation"": ""The rule triggers when it detects a specific sequence of bytes, including ""|08 00 45|"", ""|00 00|"", ""|06|"", and ""|00 00 00 00|"" in ICMP packets, indicative of the Bledoor Trojan's TCP tunneling capability.""
   }
 ][
   {
     ""sid"": ""24088"",
     ""Technique ID"": ""T1572"",
     ""Technique name"": ""Protocol Tunneling"",
     ""Quotes"": """"Protocol Tunneling techniques involve encapsulating data within another protocol to bypass network security controls and evade detection. This rule detects Win.Trojan.Bledoor, a Trojan that creates an encrypted TCP tunnel inside ICMP packets to communicate with its command and control server, which is a common method used by malware to avoid detection by firewalls and intrusion detection systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""24088"",
     ""Technique ID"": ""T1090"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control (C2) techniques involve establishing communication with remote servers for the purposes of receiving commands, exfiltrating data, or otherwise managing the adversary's presence on a system. This rule detects a variant of the Bledoor Trojan that uses ICMP tunneling to establish a covert C2 channel."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""24088"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Data exfiltration over C2 Channel"",
     ""Quotes"": """"Data Exfiltration Over Command and Control Channel techniques describe scenarios in which adversaries exfiltrate data over established command and control channels. This rule is designed to detect when the Bledoor Trojan is using ICMP tunneling to exfiltrate data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""24088"",
         ""Technique ID"": ""T1095"",
         ""Technique name"": ""Non-Application Layer Protocol"",
         ""Quotes"": """"Non-Application Layer Protocol techniques involve using non-application layer protocols (e.g., ICMP, IGMP) for communication between the adversary and victim systems to bypass traditional network security defenses. This rule detects an attempt to establish a TCP tunnel within ICMP packets, which is a common technique used by adversaries to evade detection and exfiltrate data."""",
         ""Explanation"": ""This rule specifically matches ICMP packets with the following characteristics:
 - Magic number: 0x08 00 45
 - ICMP type: 8
 - ICMP code: 0
 - Data length: 6
 - Data content: 0x00 00 00 00
 These characteristics are consistent with the ICMP encapsulation of TCP packets, indicating an attempt to establish a TCP tunnel.""
     }
 ][
   {
     ""sid"": ""24088"",
     ""Technique ID"": ""T1090"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or otherwise disguising data to evade detection or analysis. This rule detects the use of a TCP tunnel hidden within ICMP packets, which is a common method used by malware to bypass network defenses and communicate with command and control servers while evading detection."""",
     ""Explanation"": ""Malware often uses obfuscation techniques to evade detection. This rule is for detection of malware using TCP tunnle.""
   }
 ]","['T1092', 'T1071', 'T1090', 'T1083', 'T1190', 'T1091', 'T1090', 'T1090', 'T1090', 'T1572', 'T1090', 'T1132', 'T1095', 'T1090']",['T1048']
56608,"[
   {
     ""sid"": ""56608"",
     ""Technique ID"": ""T1092"",
     ""Technique Name"": ""Communication Through Removable Media"",
     ""Quotes"": """"Communication Through Removable Media techniques involve using removable media to transfer data, such as commands or data, between systems. The rule detects an inbound connection attempt from Cobalt Strike, which is a tool used for remote access and command execution. Removable media could be used to transfer the Cobalt Strike payload or establish a connection between compromised hosts."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""56608"",
     ""Technique ID"": ""T1659"",
     ""Technique Name"": ""Content Injection"",
     ""Quotes"": """"Content Injection techniques involve inserting malicious content into a system or network to compromise or manipulate it. The rule detects an inbound connection attempt from Cobalt Strike, which can be used to inject malicious content into systems, such as shellcode or scripts."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""56608"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": ""\""Drive-by Compromise techniques involve infecting a victim system when a user visits a website that hosts malicious content, such as an exploit kit. This rule targets Cobalt Strike, a tool commonly used in adversary operations, and detects an inbound connection attempt from an external host, indicating potential exploitation attempts initiated through a drive-by compromise."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""56608"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging functionality provided by external services, such as cloud computing services, to execute malicious activities. Cobalt Strike is a legitimate remote administration tool that can be used for both legitimate and malicious purposes. In this rule, Cobalt Strike is being used to establish a connection to a remote host, which could be an indication of malicious activity."""",
     ""Explanation"": ""This rule detects an attempt to establish a connection to a remote host using Cobalt Strike, which is a tool commonly used by attackers for remote administration and command and control.""
   }
 ][
   {
     ""sid"": ""56608"",
     ""Technique ID"": ""T1489"",
     ""Technique Name"": ""Service Stop"",
     ""Quotes"": """"Service Stop techniques target and disable services to prevent their proper functioning. This rule detects an attempt to stop or disable the 'symantec Endpoint Protection' service, a common tactic of malware to evade detection and avoid interference with its malicious activities."""",
     ""Explanation"": ""This rule triggers when an attacker attempts to stop the Symantec Endpoint Protection service, which is responsible for providing real-time protection against viruses, spyware, and other malicious threats.""
   }
 ][
   {
     ""sid"": ""56608"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring adversary-controlled tools, such as remote access tools, malware, or exploit frameworks, to the target system to facilitate remote access or further exploitation."""",
     ""Explanation"": """"Cobalt Strike beacon inbound connection attempt"""" indicates an attempt to establish a connection to a Cobalt Strike beacon, which is a tool commonly used by attackers for remote access and command and control.""
   }
 ][
   {
     ""sid"": ""56608"",
     ""Technique ID"": ""T1489"",
     ""Technique name"": ""Domain Generation Algorithms"",
     ""Quotes"": """"Domain Generation Algorithms (DGAs) techniques involve using algorithms to generate large numbers of domain names, often for malicious purposes. This rule detects an inbound connection attempt from a Cobalt Strikebeacon, which is a remote access trojan that uses a DGA to generate unique domain names to communicate with its command and control server."""",
     ""Explanation"": ""This rule detects Cobalt Strike beacon inbound connection attempts. Cobalt Strike is a commercial post-exploitation agent that allows adversaries to maintain persistent access to compromised systems and conduct a wide range of malicious activities, including lateral movement, data exfiltration, and command execution.""
   }
 ][
   {
     ""sid"": ""56608"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Gatekeeper Bypass"",
     ""Quotes"": """"Gatekeeper Bypass techniques involve bypassing security measures that require authorization before allowing access to a resource. In this rule, Cobalt Strike is attempting to bypass defenses by establishing an encrypted communications channel with a command and control server, which is a common tactic used to evade detection mechanisms."",
     ""Explanation"": ""Cobalt Strike is a commercial post-exploitation agent that provides attackers with a graphical user interface for controlling compromised systems remotely. This rule detects an attempt to establish an inbound connection from the external network to a host on the internal network, which could indicate an attempt to bypass security measures and gain unauthorized access to the system.""
   }
 ][
   {
     ""sid"": ""56608"",
     ""Technique ID"": ""T1043"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques allow an adversary to communicate with compromised systems to issue commands, control the system, and exfiltrate data. This rule detects an inbound connection attempt to the Cobalt Strike beacon, which is a common tool used by adversaries for command and control."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""56608"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Establish Persistence"",
     ""Quotes"": """"Establish Persistence techniques involve maintaining access to a system or network after initial access has been obtained. Cobalt Strike is often used to establish persistence on compromised systems, allowing adversaries to maintain access and control over the system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""56608"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule may detect attempts to exploit vulnerabilities in web applications, which can be used to establish persistence or escalate privileges on the compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""56608"",
     ""Technique ID"": ""T1589"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve communication between an attacker and a compromised system to maintain persistence, exfiltrate data, and issue commands. The rule detects an inbound connection attempt from a Cobalt Strike beacon, which is a common tool used for these purposes."""",
     ""Explanation"": ""The Cobalt Strike beacon is likely used to establish a command and control channel to the compromised system, which could be used for a variety of malicious purposes, such as data exfiltration or remote command execution.""
   }
 ][
     {
         ""sid"": ""56608"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Establish Command and Control"",
         ""Quotes"": """"Establish Command and Control techniques involve establishing command and control (C2) channels for communication between an adversary and compromised systems. The rule detects an attempt by a Cobalt Strike beacon to establish an inbound connection to the external network, which is a common method used by adversaries to communicate with compromised systems and deliver malicious payloads."""",
         ""Explanation"": ""Trojan attempts to establish outbound connection.""
     }
 ][
     {
         ""sid"": ""56608"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""Remote Access Software"",
         ""Quotes"": """"Adversaries may use commercially available remote access software (RAS) tools to remotely access and control systems over a network, such as TeamViewer and Remote Desktop."""",
         ""Explanation"": ""The specified rule triggers when malware or other threat making use of Cobalt Strike beacon attempts to perform an inbound connection.""
     }
 ]","['T1092', 'T1659', 'T1189', 'T1133', 'T1489', 'T1105', 'T1489', 'T1192', 'T1043', 'T1105', 'T1189', 'T1589', 'T1105', 'T1133']",['T1020']
50028,"[
     ""sid"": ""50028"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-By Compromise techniques involve exploiting vulnerabilities in trusted software such as web browsers, email clients, and office productivity software to execute malicious code."",
     ""Explanation"": ""On Catalina, running .app bundles that have not been notarized will provide a warning prompt. Once a user accepts the prompt, while already having root privileges in Terminal, the prompt to grant access to the terminal is bypassed. This can allow for unauthorized changes to be executed, such as installing malware or modifying settings, without needing to provide explicit consent.""
 ][
   {
     ""sid"": ""50028"",
     ""Technique ID"": ""T1188"",
     ""Technique name"": ""Drive-by Download"",
     ""Quotes"": """"Drive-by Download techniques involve exploiting browser vulnerabilities to automatically download and install malicious software on a victim's system without their knowledge or consent. This rule detects a variant of the Osx.Adware.TotalAdviseSearch adware attempting to download and install itself onto a system via a malicious file download."""",
     ""Explanation"": ""The alert is triggered when an attempt is made to download a file with the characteristics of Osx.Adware.TotalAdviseSearch adware.""
   }
 ][
   {
     ""sid"": ""50028"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client software or applications to execute arbitrary code or gain unauthorized access to the client system. This rule detects an attempted download of the Osx.Adware.TotalAdviseSearch variant, which is known to exploit vulnerabilities in client applications to install malicious software."""",
     ""Explanation"": ""This rule triggers when an attempt is made to download the Osx.Adware.TotalAdviseSearch variant, which exploits vulnerabilities in client applications to install malicious software""
   }
 ][
   {
     ""sid"": ""50028"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingest Data from External Source"",
     ""Quotes"": """"Ingest Data from External Source techniques involve transmitting or extracting information from systems, devices, or services not operated or managed by the adversary, typically the internet or other external data source. This rule triggers when a client attempts to download a malicious executable file via FTP or HTTP, an indication that the client is obtaining data from an external source."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""50028"",
     ""Technique ID"": ""T1163"",
     ""Technique Name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding involves encoding, or encapsulating, data to bypass security defenses, such as intrusion detection systems or access controls."""",
     ""Explanation"": ""This rule detects an attempt to download a malicious Mach-O 64-bit executable. The binary data is encoded using a custom encoding scheme to evade detection by traditional signature-based IDS.""
   }
 ][
         ""sid"": ""50028"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools to the victim environment to support malicious operations. In this case, the rule alerts on an attempt to download a malicious Mach-O 64-bit executable, which could be used as a tool for further intrusion or exploitation."""",
         ""Explanation"": ""The rule triggers an alert when a file transfer attempt matches a specific pattern indicative of a malicious Mach-O 64-bit executable.""
     ],
     [
         ""sid"": ""50028"",
         ""Technique ID"": ""T1120"",
         ""Technique name"": ""Malicious File"",
         ""Quotes"": """"Malicious File techniques involve using malicious files to execute arbitrary code or gain unauthorized access to a system. The rule detects an attempt to download a malicious Mach-O 64-bit executable, which could contain malicious code capable of compromising the system."""",
         ""Explanation"": ""The rule triggers an alert when a file transfer attempt matches a specific pattern indicative of a malicious Mach-O 64-bit executable.""
     ]
 ][
   {
     ""sid"": ""50028"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve moving malicious tools or data onto a victim system. The rule detects an attempt to download a malicious Mach-O 64-bit executable file associated with the Osx.Adware.TotalAdviseSearch adware variant."""",
     ""Explanation"": """"PUA-ADWARE Osx.Adware.TotalAdviseSearch variant download attempt"""" suggests an attempt to download a potentially unwanted application or adware, which often involves installing malicious tools or components on the system.""
   }
 ][
   {
     ""sid"": ""50028"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve using encryption to ensure that adversary artifacts, such as staged payloads, are not discovered by defenders. The rule detects an attempt to download a Mach-O 64-bit executable (macho64le) file containing encrypted data, which is a common technique used by malware to evade detection and analysis."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""50028"",
     ""Technique ID"": ""T1119"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or otherwise altering files or information to make them difficult to detect or analyze. The rule detects an attempt to download a Mach-O 64-bit executable (macho64le) file containing encrypted data, which is a common technique used by malware to evade detection and analysis."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""50028"",
     ""Technique ID"": ""T1497"",
     ""Technique name"": ""Downloader"",
     ""Quotes"": ""\""Downloader techniques involve retrieving malicious software (malware) from a remote or internal location onto a victim system. This rule detects the download of a variant of the Osx.Adware.TotalAdviseSearch adware, which is typically downloaded through phishing emails or malicious websites."""",
     ""Explanation"": ""This event is generated when adware is downloaded onto a victim system.""
   }
 ][
   {
     ""sid"": ""50028"",
     ""Technique ID"": ""T1122"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that appear to come from a legitimate source to trick recipients into providing personal or sensitive information. This rule detects an attempt to download a variant of the Osx.Adware.TotalAdviseSearch adware, which is often distributed through phishing campaigns."""",
     ""Explanation"": ""This event is generated when suspicious activity relating to phishing is detected.""
   }
 ][
   {
     ""sid"": ""50028"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve removing or suppressing indicators of malicious activity to prevent detection, evade analysis, or hinder remediation efforts."",
     ""Explanation"": ""The rule aims to identify potential attempts to download a variant of the Osx.Adware.TotalAdviseSearch adware for macOS, which often uses stealthy techniques to avoid detection and persistence mechanisms to evade analysis and removal.""
   }
 ]","['T1197', 'T1188', 'T1203', 'T1105', 'T1163', 'T1105', 'T1120', 'T1105', 'T1105', 'T1119', 'T1497', 'T1122', 'T1105']",['T1643']
414,"[
     ""sid"": ""414"",
     ""Technique ID"": ""T1592"",
     ""Technique name"": ""ICMP Information Discovery"",
     ""Quotes"": """"ICMP Information Discovery techniques involve using ICMP packets to gather information about a network or specific hosts, such as network topology and host status."",
     ""Explanation"": ""This rule detects ICMPv6 Where-Are-You packets, indicating an attempt to gather information about the network.""
 
 ][
   {
     ""sid"": ""414"",
     ""Technique ID"": ""T1040"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve probing a network to identify hosts, services, and vulnerabilities. This rule detects an ICMPv6 'Where-Are-You' packet, which is a reconnaissance technique commonly used by attackers to map out a network and identify potential targets."""",
     ""Explanation"": ""An ICMPv6 \""Where-Are-You\"" packet is used to determine the reachability of other IPv6 nodes on a network.""
   }
 ][
   {
     ""sid"": ""414"",
     ""Technique ID"": ""T1590"",
     ""Technique name"": ""Gather Victim Network Information"",
     ""Quotes"": """"Gather Victim Network Information techniques involve gathering information about the victim's network to aid in targeting or exploitation efforts. This rule detects reconnaissance activity involving the use of ICMPv6 'Where-Are-You' packets, which can be used to map out a network's topology and identify potential targets."""",
     ""Explanation"": ""This event is generated when a network scan is detected.""
   }
 ][
         ""sid"": ""414"",
         ""Technique ID"": ""T1496"",
         ""Technique Name"": ""Resource Hijacking"",
         ""Quotes"": """"Resource Hijacking techniques involve leveraging the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. In this event, ICMPv6 traffic is being used to amplify and reflect attacks, which is a common method attackers use to exhaust resources on the target system."""",
         ""Explanation"": ""This event is generated when a system is being targeted by an amplification/reflection attack via ICMPv6.""
     ][
   {
     ""sid"": ""414"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": [
       ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."",
       """"
     ],
     ""Explanation"": ""This rule detects ICMPv6 (Internet Control Message Protocol version 6) 'Where-Are-You' Type 33 packets with 'undefined' code, which can be used for router discovery and may indicate reconnaissance and scanning activities.""
   },
   {
     ""sid"": ""414"",
     ""Technique ID"": ""T1484"",
     ""Technique name"": ""Discovery"",
     ""Quotes"": ""\""Discovery techniques involve gathering information about the target environment, including network infrastructure, operating systems, software applications, and user accounts. This rule detects ICMPv6 'Where-Are-You' Type 33 packets, which can be used for router discovery and may indicate reconnaissance and scanning activities."""",
     ""Explanation"": ""ICMPv6 'Where-Are-You' Type 33 packets are used for router discovery and may indicate reconnaissance and scanning activities.""
   }
 ][
   {
     ""sid"": ""414"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve using specialized tools or techniques to scan and identify available services on target systems. This rule detects ICMPv6 'Where-Are-You' Type 33 packets, which are used by reconnaissance tools to query routers and identify available IPv6 services and hosts on a network."""",
     ""Explanation"": ""This event is generated when an ICMPv6 packet is received on the protected interface with an ICMP Type of 33 (Where-Are-You).""
   }
 ][
     ""sid"": ""414"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve exfiltrating data over an established command and control channel, which is covert methods for the adversary to communicate with infected systems and gather intelligence from them."""",
     ""Explanation"": ""This event is generated when the specified ICMP traffic is detected. The specified ICMP traffic may be associated with an attempt to establish a covert command and control channel for data exfiltration.""
 ][
   {
     ""sid"": ""414"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve adversaries disguising their network traffic to appear as legitimate or benign by mimicking common protocols or network traffic patterns. This rule detects ICMPv6 'Where-Are-You' packets with an undefined ICMP code, which is a technique commonly used by attackers to scan for and identify active hosts on a network."""",
     ""Explanation"": ""This event is generated when an attempt is made by an attacker to gain information about the system as a preliminary step to an attack.""
   }
 ][
   {
     ""sid"": ""414"",
     ""Technique ID"": ""T1045"",
     ""Technique Name"": ""Uncommon Network Protocol"",
     ""Quotes"": """"Uncommon Network Protocol techniques involve using network protocols that are not commonly encountered to evade detection. This rule detects the rare use of ICMPv6 with the undefined ICMP code 33 which could be used by adversaries to blend in with network traffic and evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to ICMP traffic is detected.""
   }
 ][
     ""sid"": ""414"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Network Denial of Service"",
     ""Quotes"": """"An adversary may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. The rule detects a special code (icode) in ICMPv6 'Where-Are-You' packets with an ICMP type 33, which is typically used in DoS attacks to flood targets with excessive ICMP traffic, causing disruption in network services."""",
     ""Explanation"": ""The rule triggers when an ICMPv6 packet with an unrecognized ICMPv6 'Where-Are-You' code is received. ICMPv6 'Where-Are-You' messages are used in neighbor discovery, and an unrecognized code could indicate an attempt to disrupt neighbor discovery and cause a DoS.""
 ][
   {
     ""sid"": ""414"",
     ""Technique ID"": ""T1195"",
     ""Technique name"": ""Supply Chain Compromise"",
     ""Quotes"": """"Supply Chain Compromise techniques involve manipulating products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. ICMPv6 'Where-Are-You' messages are used for neighbor discovery, a critical part of IPv6 network configuration."""",
     ""Explanation"": ""This event is generated when an IPv6 neighbor discovery protocol (NDP) ""Where-Are-You"" message is received. NDP is used by IPv6 hosts to discover each other on a local network.""
   }
 ]","['T1592', 'T1040', 'T1590', 'T1496', 'T1190', 'T1484', 'T1040', 'T1041', 'T1068', 'T1045', 'T1498', 'T1195']",['T1592']
23621,"[
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve disguising the content of files or information to evade detection or analysis by security controls. This rule detects the use of an obfuscated JavaScript payload that is packed and further obfuscated with a secondary routine, which is a common technique used to evade detection and make analysis more difficult."""",
     ""Explanation"": ""Detects obfuscated JavaScript.""
   },
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Obfuscated Command and Scripting"",
     ""Quotes"": """"Obfuscated Command and Scripting techniques involve disguising the content of commands or scripts to evade detection or analysis by security controls. This rule detects the use of an obfuscated JavaScript payload that is packed and further obfuscated with a secondary routine, which is a common technique used to evade detection and make analysis more difficult."""",
     ""Explanation"": ""Detects obfuscated JavaScript.""
   }
 ][
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or packing files or information in a way that makes it difficult to reverse engineer or identify their true nature. The rule detects a known packer routine with secondary obfuscation, which is a technique often used by malware authors to evade detection and analysis."""",
     ""Explanation"": ""This rule detects the use of the eval() function with an obfuscated string that may be used to execute malicious code.""
   },
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve the use of tools or techniques to reverse the obfuscation or encoding of files or information to reveal their true nature. This rule detects the use of the eval() function with an obfuscated string that may be used to execute malicious code after it has been deobfuscated."""",
     ""Explanation"": ""This rule can detect attempts to deobfuscate files or information using an eval function.""
   }
 ][
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve modifying files or information to hinder analysis or detection. The rule triggers on the detection of an obfuscated payload using a known packer routine with secondary obfuscation, indicating an attempt to evade detection or analysis of malicious content."""",
     ""Explanation"": ""This event generates when an evasion technique is detected.""
   },
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing obfuscation or encoding mechanisms applied to files or information to extract the original content. The rule detects the use of a known packer routine, implying that the attacker is attempting to unpack or decode obfuscated malicious content to execute it."""",
     ""Explanation"": ""The even relates to the initiation of a file download, potentially containing malicious content like malware""
   }
 ][
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve intentionally encoding or hiding information to prevent detection by security tools or analysis. The rule looks for an indicator of obfuscation, specifically a known packer routine with secondary obfuscation. Packers are tools that compress and encrypt malicious code to evade detection."""",
     ""Explanation"": ""This rule triggers when an encrypted file is being transferred over FTP, HTTP, IMAP, or POP3, indicating the potential presence of malicious code.""
   },
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve removing or altering artifacts, such as files or registry keys, that could be used to detect or investigate malicious activity. The rule looks for an indicator of file obfuscation, which could be an attempt to hide malicious activity by modifying or removing evidence."""",
     ""Explanation"": ""This rule is triggered when an encrypted file is being transferred over FTP, HTTP, IMAP, or POP3, which could be an attempt to hide malicious activity by modifying or removing evidence.""
   }
 ][
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve obscuring or hiding malicious files, scripts, or data within other files or formats to evade detection. This rule is designed to detect a specific type of obfuscation technique known as 'eval+base64' which involve wrapping malicious code in base64 encoded strings and using the eval function to execute it."""",
     ""Explanation"": ""This Suricata rule matches requests in which the client is uploading a file that contains the string 'eval(function(p,a,c,k,e,r)'. The typical use case for such a request would be for the client to upload files that contain malware that exploit vulnerabilities on the server.""
   },
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve concealing the true purpose of a file, process, or network communication by mimicking legitimate system components or processes. This rule detects a technique known as 'WMI defense evasion' where an attacker attempts to bypass detection mechanisms by abusing the Windows Management Instrumentation (WMI) interface and using legitimate system calls to execute malicious actions."""",
     ""Explanation"": ""WMI is a system information interface that can be used to manipulate system settings and information on Windows systems. Masquerading techniques use various methods to avoid detection by security systems that analyze file names and network traffic patterns. In this case, the rule is able to detect a technique that uses the legitimate WMI interface to execute malicious activities.""
   }
 ][
     {
         ""sid"": ""23621"",
         ""Technique ID"": ""T1027"",
         ""Technique Name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve obscuring the contents of files or other artifacts to make them more difficult to analyze. This rule detects the usage of a known packer routine with secondary obfuscation, indicating an attempt to hide malicious content within a file."""",
         ""Explanation"": ""This rule triggers an alert when an attempt is made to obfuscate files or information, which can be an indication of malware or other malicious activity.""
     },
     {
         ""sid"": ""23621"",
         ""Technique ID"": ""T1140"",
         ""Technique Name"": ""Deobfuscate/Decode Files or Information"",
         ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing the obfuscation process to extract the original content of a file or other artifact. This rule detects the use of a known packer routine with secondary obfuscation, suggesting that adversaries may be attempting to de-obfuscate malicious content to evade detection."""",
         ""Explanation"": ""This rule triggers an alert when an attempt is made to deobfuscate or decode files or information, which can be an indication of malware or other malicious activity.""
     }
 ][
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or hiding malicious files or information in a way that makes them difficult to detect or analyze, such as using packers, encryption, or steganography. The rule looks for a pattern associated with a known packer, indicating the presence of an obfuscated file being transferred."""",
     ""Explanation"": ""This rule detects files using packers to make it harder for signature-based IDS to detect them.""
   },
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing the obfuscation or encoding of malicious files or information to reveal their original content. The rule looks for a pattern associated with a known packer, indicating the presence of an obfuscated file being transferred."""",
     ""Explanation"": ""This rule detects files using packers to make it harder for signature-based IDS to detect them.""
   }
 ][
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or encrypting files or information to evade detection by security defenses or to hide their true purpose. The rule detects a known packer routine with secondary obfuscation, which is a common method used by malware to evade detection and analysis."""",
     ""Explanation"": ""This event is generated when a packet is detected with data that appears to have been obfuscated.""
   },
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve restoring obfuscated or encrypted files or information to their original form to make them usable or to extract additional information. The rule detects a known packer routine with secondary obfuscation, which requires decoding or deobfuscation to reveal its true content."""",
     ""Explanation"": ""The event may also indicate an attempt to deobfuscate or decode previously obfuscated files or information.""
   }
 ][
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscation"",
     ""Quotes"": """"Obfuscation techniques involve intentionally modifying or encoding data, code, or other artifacts to make them difficult to understand or detect. This rule detects the presence of known packer routines with secondary obfuscation, which is a tactic commonly used by malware authors to evade detection."""",
     ""Explanation"": ""The rule detects an attempt to obfuscate data using a known packer routine, which is a common technique used by malware to evade detection.""
   },
   {
     ""sid"": ""23621"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing the effects of obfuscation to access or modify files or information. This rule detects the presence of known packer routines with secondary obfuscation, which is a tactic commonly used by malware authors to evade detection."""",
     ""Explanation"": ""The rule detects an attempt to deobfuscate or decode files or information, which is a common technique used by malware to evade detection.""
   }
 ][
         ""sid"": ""23621"",
         ""Technique ID"": ""T1027"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve attempting to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This rule detects the presence of a known packer routine with secondary obfuscation, indicating that the attacker is trying to hide the contents of the file from being easily analyzed."""",
         ""Explanation"": ""This event is generated when activity relating to Obfuscated Files or Information is detected."",
     ],
     [
         ""sid"": ""23621"",
         ""Technique ID"": ""T1140"",
         ""Technique name"": ""Deobfuscate/Decode Files or Information"",
         ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing the obfuscation or encoding mechanisms applied to files or information to reveal their true contents. This rule detects the presence of a known packer routine with secondary obfuscation, indicating that the attacker is trying to hide the contents of the file from being easily analyzed. Deobfuscation or decoding may be necessary to fully understand the attacker's intent and to identify potential indicators of compromise."""",
         ""Explanation"": ""This event is generated when activity relating to Deobfuscate/Decode Files or Information is detected."",
     ]
 ][
         ""sid"": ""23621"",
         ""Technique ID"": ""T1027"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve concealing malicious content or data to evade detection or analysis. The rule detects an obfuscated payload that uses the eval() function to decode a secondary obfuscated payload. Obfuscation is a common tactic used by attackers to hide malicious code or data from security tools."""",
         ""Explanation"": ""This event is generated when an attempt is made to access an obfuscated file.""
     ],
     [
         ""sid"": ""23621"",
         ""Technique ID"": ""T1140"",
         ""Technique name"": ""Deobfuscate/Decode Files or Information"",
         ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing the obfuscation process to reveal concealed malicious content or data. The rule detects an obfuscated payload that uses the eval() function to decode a secondary obfuscated payload. Deobfuscation is a common tactic used by attackers to decode or deobfuscate malicious code or data after it has been obfuscated."""",
         ""Explanation"": ""This event is generated when an attempt is made to deobfuscate an encoded file.""
     ]
 ]","['T1027', 'T1140', 'T1027', 'T1140', 'T1027', 'T1140', 'T1027', 'T1140', 'T1027', 'T1140', 'T1027', 'T1140', 'T1027', 'T1140', 'T1027', 'T1140', 'T1027', 'T1140', 'T1027', 'T1140', 'T1027', 'T1140']",['T1189']
13507,"[
     ""sid"": ""13507"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve transmitting exfiltrated data using command and control channels established by adversaries. This rule detects outbound connections made by the Evilotus variant, which is a known malware that establishes communication with a remote command and control server to transmit stolen data."""",
     ""Explanation"": ""This even triggers when the connection between host and external is established.""
 ][
         ""Sid"": ""13507"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control (C2) techniques involve establishing covert communications between an adversary and a compromised host to enable remote control and data exfiltration. The rule detects outbound connections to a known malicious domain (evilotus) associated with the Evilotus trojan, which is known for establishing command and control communication via its own proprietary protocol."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""13507"",
         ""Technique ID"": ""T1021"",
         ""Technique name"": ""Remote Access Software"",
         ""Quotes"": """"Remote Access Software is commonly used by legitimate remote technical support vendors and system administrators to remotely access and manage systems. However, adversaries may abuse such tools for lateral movement and remote access to victim systems. This rule detects a variant of the Evilotus remote access Trojan attempting to establish an outbound connection, indicating a potential attempt by an adversary to gain remote access to a system."""",
         ""Explanation"": ""Port scan with a SYN packet to port 80 on remote host""
     }
 ][
   {
     ""sid"": ""13507"",
     ""Technique ID"": ""T1496"",
     ""Technique Name"": ""Resource Hijacking"",
     ""Quotes"": ""Resource Hijacking techniques involve leveraging the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. The rule detects an outbound connection associated with the evilotus malware, which is known to abuse compromised systems for cryptocurrency mining or other resource-intensive activities."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""13507"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to make it difficult to analyze and identify. This rule detects outbound traffic associated with the Evilotus malware, which is known to use encryption to protect its communications and evade detection."""",
     ""Explanation"": ""The rule looks for encrypted data with the string ""0C|~|7F D8"" and the pattern ""|00 00 00|d|C8 00 00|"" within a specific distance. This pattern is associated with the Evilotus malware, which uses encryption to protect its communications and evade detection.""
   }
 ][
   {
     ""sid"": ""13507"",
     ""Technique ID"": ""T1136"",
     ""Technique name"": ""Create Account"",
     ""Quotes"": """"Create Account techniques involve the creation of system accounts to maintain persistent access, enabling an adversary to access and manipulate systems undetected for an extended period. The rule detects outbound communication associated with the Evilotus malware, a remote access trojan which often establishes persistence by creating new user accounts on the target system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""13507"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or capabilities from an external source to a target environment. This rule detects the outbound communication of the evilotus malware, which is typically used for remote administration by cybercriminals. The malware initiates this connection to establish remote control over the infected system."""",
     ""Explanation"": ""This rule identifies activity relating to the evilotus malware communicating with a remote server for command and control.""
   }
 ][
         ""sid"": ""13507"",
         ""Technique ID"": ""T1408"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve adversaries using deceptive techniques to disguise their identity, activity, or purpose. This rule specifically targets the Evilotus malware (variant 1.3.2) and detects its outbound connection by identifying unique patterns in the network traffic. The Evilotus malware is known to use various methods to evade detection and masquerade as legitimate network traffic."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     ""sid"": ""13507"",
     ""Technique ID"": ""T1564"",
     ""Technique Name"": ""Hide Artifacts"",
     ""Quotes"": """"Hide Artifacts techniques involve hiding or disguising artifacts associated with adversary activity to evade detection. This rule detects outbound communication from the 'evilotus' Trojan by looking for an encrypted payload within the network traffic. The use of encryption is a common method adversaries use to hide malicious activity and evade detection."""",
     ""Explanation"": ""The rule effectively detects a variant of a known Command and Control (C2) server communication from the evilotus trojan.""
 ][
         ""sid"": ""13507"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control (C2) techniques involve using various communication methods and protocols to maintain persistent control over compromised systems. This rule detects a specific pattern associated with the Evilotus variant 1.3.2 malware, which is known to be a trojan that communicates with its C2 server using a custom protocol."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""13507"",
     ""Technique ID"": ""T1433"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": [
       """"Network Service Scanning techniques involve automated processes that scan a network to identify systems and services that are vulnerable to attack. This rule detects outbound communication patterns associated with the Evilotus trojan, a type of malware known to use network scanning to identify and exploit vulnerable systems.""
     ],
     ""Explanation"": ""The rule is designed to detect network scanning behavior associated with the Evilotus trojan.""
   },
   {
     ""sid"": ""13507"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": [
       """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The Evilotus trojan is often used to exploit vulnerabilities in network services and applications, such as web servers or remote access tools.""
     ],
     ""Explanation"": ""The Evilotus trojan has been observed exploiting vulnerabilities in network services and applications, such as web servers or remote access tools.""
   },
   {
     ""sid"": ""13507"",
     ""Technique ID"": ""T1569"",
     ""Technique Name"": ""System Services"",
     ""Quotes"": [
       """"System Services techniques involve abusing system services or daemons to execute commands or programs. The Evilotus trojan can use system services to maintain persistence on infected systems, or to execute malicious code with elevated privileges.""
     ],
     ""Explanation"": ""The Evilotus trojan has been known to abuse system services to maintain persistence on infected systems, or to execute malicious code with elevated privileges.""
   }
 ]","['T1041', 'T1071', 'T1021', 'T1496', 'T1071', 'T1136', 'T1105', 'T1408', 'T1564', 'T1059', 'T1433', 'T1190', 'T1569']",['T1014']
16268,"[
   {
     ""sid"": ""16268"",
     ""Technique ID"": ""T1566"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": [
       """"Phishing techniques involve sending fraudulent emails or messages to trick users into revealing sensitive information or taking actions that could compromise their systems or accounts. This rule detects an attempted phishing attack involving the installation of the Win.Trojan.tdss.1.gen malware through a malicious website (yournewsblog.net) that aims to trick users into downloading and installing the malware.""
     ],
     ""Explanation"": ""This rule is related to phishing techniques as it involves sending a malicious link to a website that hosts the malware.""
   }
 ][
   {
     ""sid"": ""16268"",
     ""Technique ID"": ""T1114"",
     ""Technique Name"": ""Email Collection"",
     ""Quotes"": """"Email Collection techniques involve monitoring, intercepting, or otherwise collecting email communications for malicious purposes. This rule detects a Trojan (tdss.1) attempting to send emails to external recipients, which could potentially be used to exfiltrate sensitive information or spread malware."""",
     ""Explanation"": ""This rule detects malicious activity associated with the Win.Trojan.tdss.1.gen malware, which is known to send out spam emails.""
   }
 ][
   {
     ""sid"": ""16268"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule specifically detects a Trojan attempting to establish a command and control connection to 'yournewsblog.net' using the 'tdss' path, indicating an attempt to exploit a vulnerability on a web server to gain access to the network."""",
     ""Explanation"": ""This rule detects a Trojan attempting to establish a command and control connection to 'yournewsblog.net' using the 'tdss' path, indicating an attempt to exploit a vulnerability on a web server to gain access to the network.""
   }
 ][
     {
         ""sid"": ""16268"",
         ""Technique ID"": ""T1485"",
         ""Technique Name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to impair forensic analysis and make it more difficult for defenders to prevent the data from being stolen or misused. The rule detects communication with a malicious URL (yournewsblog.net) known to be used by the TDSS Trojan. The data sent to the URL is encrypted, making it harder to analyze and identify any malicious activity."",
         ""Explanation"": ""This event is generated when a host attempts to connect to a potentially malicious IP address. The connection is outbound, meaning that the host has initiated the connection to the remote IP address.""
     },
     {
         ""sid"": ""16268"",
         ""Technique ID"": ""T1071.001"",
         ""Technique Name"": ""Web Protocols - HTTP"",
         ""Quotes"": """"Web Protocols - HTTP techniques involve leveraging Hypertext Transfer Protocol (HTTP) to send and receive information over the Internet. This rule specifically detects an HTTP GET request to a malicious URL (yournewsblog.net), indicating that the host is attempting to communicate with a remote server using HTTP."",
         ""Explanation"": ""This event is generated when a host attempts to connect to a potentially malicious IP address. The connection is outbound, meaning that the host has initiated the connection to the remote IP address.""
     }
 ][
   {
     ""sid"": ""16268"",
     ""Technique ID"": ""T1115"",
     ""Technique name"": ""Domain Generation Algorithm"",
     ""Quotes"": """"Domain Generation Algorithms (DGAs) are algorithms used to generate domain names that are used by malware. DGAs are used to evade detection and to make it difficult to identify and block the malware's command-and-control (C2) infrastructure. This rule detects a DGA that is used by the Win.Trojan.tdss.1.gen malware, which is known to generate domains that are used for C2 communications."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""16268"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve modifying data to obscure its original form or make it more difficult to detect or understand. This rule detects an attempt to connect to a command and control server using a domain name that is encoded using an XOR function, which is a common method used by malware to hide its communication."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""16268"",
     ""Technique ID"": ""T1430"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising an adversary, tool, or infrastructure as a legitimate entity to avoid detection or gain access to a system. This rule detects an attempt to use a domain name that is similar to a legitimate news website (yournewsblog.net) to trick users into visiting a malicious website that hosts malware, which is a common tactic used by adversaries to distribute malware."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""16268"",
     ""Technique ID"": ""T1566"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that appear to come from a legitimate source to trick users into providing sensitive information or clicking on malicious links. This rule detects an attempt to use a domain name that is similar to a legitimate news website (yournewsblog.net) to trick users into visiting a malicious website that may attempt to steal credentials or infect devices with malware."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""16268"",
     ""Technique ID"": ""T1574"",
     ""Technique name"": ""Spearphishing Attachment"",
     ""Quotes"": """"Spearphishing Attachment techniques involve sending malicious attachments in emails to targeted individuals or organizations. This rule detects an attempt to use a domain name that is similar to a legitimate news website (yournewsblog.net) to trick users into visiting a malicious website that may attempt to deliver malicious attachments."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""16268"",
     ""Technique ID"": ""T1119"",
     ""Technique Name"": ""Automated Collection"",
     ""Quotes"": """"Automated Collection techniques involve the use of automated tools or scripts to gather information about a system or network, which is consistent with the rule's detection of malware attempting to establish a connection to a malicious domain (yournewsblog.net) for the purpose of data collection."""",
     ""Explanation"": ""The event is generated when activity relating to Win.Trojan.tdss.1.gen malware is detected.""
   },
   {
     ""sid"": ""16268"",
     ""Technique ID"": ""T1583"",
     ""Technique Name"": ""Acquire Infrastructure"",
     ""Quotes"": """"Acquire Infrastructure techniques involve obtaining or renting infrastructure, such as servers or virtual private servers (VPS), to support malicious activities. The rule's detection of malware attempting to establish a connection to a malicious domain (yournewsblog.net) suggests that the adversary may have acquired this infrastructure to host malicious content or services."""",
     ""Explanation"": ""The event is generated when activity relating to Win.Trojan.tdss.1.gen malware is detected.""
   }
 ][
         ""sid"": ""16268"",
         ""Technique ID"": ""T1055"",
         ""Technique name"": ""Process Injection"",
         ""Quotes"": """"Process Injection techniques involve injecting malicious code into a legitimate process in order to evade detection and execute arbitrary code. This rule detects the installation of the Win.Trojan.tdss.1.gen malware, which is known to use process injection techniques to compromise systems."""",
         ""Explanation"": ""This event is generated when malware is detected.""
     ][
   {
     ""sid"": ""16268"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into the compromised environment. This rule detects malicious communication between an infected host and a remote command-and-control (C&C) server associated with the Trojan malware family, known as """"Win.Trojan.tdss.1.gen"""". The attacker uses HTTP to transfer tools or files to the compromised host."""",
     ""Explanation"": ""This event is generated when an attempt is made by remote attacker to access to a web server through HTTP.""
   }
 ][
     {
         ""sid"": ""16268"",
         ""Technique ID"": ""T1048"",
         ""Technique name"": ""System Network Configuration Modification"",
         ""Quotes"": """"System Network Configuration Modification techniques involve making modifications to network configurations to establish network connectivity for malicious purposes such as data exfiltration or remote access. The rule detects an attempt to modify the system's network configuration by installing a Trojan on the host, which could allow an attacker to establish a persistent network connection to the compromised system."""",
         ""Explanation"": ""This event is generated by the Snort IDS when it detects an attempt to connect to a suspicious IP address or domain, which may be associated with malicious activity.""
     }
 ][
         ""sid"": ""16268"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to install a Win.Trojan.tdss.1.gen Trojan by exploiting a vulnerability in a web application on yournewsblog.net, which is a common method attackers use to install malware on target systems."""",
         ""Explanation"": ""This event is generated when activity relating to the installation of malware is detected.""
     ]","['T1566', 'T1114', 'T1190', 'T1485', 'T1071.001', 'T1115', 'T1132', 'T1430', 'T1566', 'T1574', 'T1119', 'T1583', 'T1055', 'T1105', 'T1048', 'T1190']",['T1014']
57975,"[
   {
     ""sid"": ""57975"",
     ""Technique ID"": ""T1570"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending sensitive or valuable data to a remote location through the command and control (C2) channel that an adversary has established. This rule is used to detect communications with a Win.Trojan.Raccoon variant, which is a remote access trojan, and it specifically looks for outgoing HTTP requests to URLs containing '/l/f/'. This behavior is consistent with data exfiltration over a C2 channel."""",
     ""Explanation"": ""This rule detects outbound requests from malware that are associated with outbound data exfiltration over a command and control channel.""
   }
 ][
         ""sid"": ""57975"",
         ""Technique ID"": ""T1008"",
         ""Technique name"": ""Network Share Discovery"",
         ""Quotes"": """"Network Share Discovery techniques involve searching for and identifying network shares on hosts within a network. This rule detects outbound requests from an infected host to a remote server, specifically looking for the presence of the ""/l/f/"" URI. This URI is commonly used by the Raccoon malware to establish communication with its command and control server and retrieve additional malicious components."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""57975"",
         ""Technique ID"": ""T1127"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve stealing data from a network or system and transferring it to an external location. This rule detects outbound requests from an infected host to a remote server, indicating an attempt to exfiltrate data from the compromised system to the attacker's controlled server."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
         ""sid"": ""57975"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Initial Access Broker"",
         ""Quotes"": """"Initial Access Brokers techniques involve leveraging access to compromised infrastructure to sell access to other adversaries or services that enable illicit access."""",
         ""Explanation"": ""This event is generated when a variant of the Raccoon trojan has been detected.""
     ][
   {
     ""sid"": ""57975"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": ""\""Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information.\"" The rule indicates the presence of a Trojan (Win.Trojan.Raccoon) that sends outbound requests to a specific URI (/l/f/), which is a common method used by malware to exfiltrate captured input data."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""57975"",
     ""Technique ID"": ""T1003"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": ""\""Data Exfiltration techniques involve transferring data from a victim system to another system.\"" The rule detects outbound requests made by the Trojan (Win.Trojan.Raccoon) to a specific URI (/l/f/), which is a common method used by malware to exfiltrate sensitive data."",
     ""Explanation"": ""Malware often exfiltrates data as a later stage objective.""
   }
 ][
   {
     ""sid"": ""57975"",
     ""Technique ID"": ""T1564"",
     ""Technique Name"": ""Hide Artifacts"",
     ""Quotes"": """"Hide Artifacts techniques involve measures taken by adversaries to conceal evidence of their presence or activities on a system. The rule detects Win.Trojan.Raccoon traffic specifically using a URI to ""/l/f/"" and without certain HTTP headers, which may indicate attempts to hide the malware's communication by using custom protocols or evading detection by security tools."""",
     ""Explanation"": ""The rule uses content inspection to detect URI and HTTP headers that are indicative of Win.Trojan.Raccoon variant outbound requests, suggesting that the malware is attempting to hide its artifacts by using non-standard communication patterns.""
   },
   {
     ""sid"": ""57975"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects Win.Trojan.Raccoon variant outbound requests specifically using a URI to ""/l/f/"" and without certain HTTP headers, which may indicate attempts to capture user input for malicious purposes, such as stealing credentials or sensitive information."""",
     ""Explanation"": ""The rule uses content inspection to detect URI and HTTP headers that are indicative of Win.Trojan.Raccoon variant outbound requests, suggesting that the malware is attempting to capture user input by using non-standard communication patterns.""
   }
 ][
     {
         ""sid"": ""57975"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. This rule detects a variant of the Raccoon Trojan attempting to establish communication with its command and control server using an external remote service. The rule specifically looks for outbound HTTP traffic with a URI containing ""/l/f/"", indicating an attempt to establish a connection with the Trojan's command and control infrastructure."""",
         ""Explanation"": ""This event is generated when the Snort IDS detects a connection to a remote host that is known to be used for malicious purposes.""
     }
 ][
   {
     ""sid"": ""57975"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve exfiltrating data over a protocol other than the command and control channel. This rule detects an outbound request made by the Raccoon trojan variant to a URL ending with '/l/f/' over HTTP, which is an indication of data exfiltration."""",
     ""Explanation"": ""It is trying to exfiltrate data over an alternative protocol in order to avoid detection.""
   },
   {
     ""sid"": ""57975"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve exfiltrating data over an existing command and control channel. This rule detects an outbound request made by the Raccoon trojan variant to a URL ending with '/l/f/' over HTTP, which is likely to be part of the trojan's command and control communication."""",
     ""Explanation"": ""Because this is a communication with the C&C server it is likely that it will be exfiltrating data.""
   }
 ][
     {
         ""sid"": ""57975"",
         ""Technique ID"": ""T1486"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve attackers attempting to mimic trusted entities, such as legitimate users or services, to gain unauthorized access or privileges within a system. The IDS rule detects outbound requests from compromised internal hosts to known command and control (C2) infrastructure associated with the Raccoon trojan. Adversaries often use trojans to establish backdoor channels for remote control, data exfiltration, and other malicious activities, often disguised as legitimate traffic."""",
         ""Explanation"": ""This event is generated when activity relating to malware (Raccoon variant) is detected. The malware is communicating with a command and control server, which is a common technique used by malware to receive instructions and send exfiltrated data.""
     }
 ][
   {
     ""sid"": ""57975"",
     ""Technique ID"": ""T1571"",
     ""Technique name"": ""Data from Local System"",
     ""Quotes"": """"Data from Local System techniques involve obtaining data from a local system, such as files, directories, or registry keys."""",
     ""Explanation"": ""The rule detects an outbound HTTP request to ""/l/f/"" from a compromised host, which is associated with the Raccoon Infostealer malware. Infostealers are known to exfiltrate sensitive data from infected systems, including files, directories, and registry keys.""
   },
   {
     ""sid"": ""57975"",
     ""Technique ID"": ""T1119"",
     ""Technique name"": ""Automated Collection"",
     ""Quotes"": """"Automated Collection techniques involve using automated tools to collect data from a system or network""
 ""Snort rules are often used to detect automated collection activities, such as the use of bots or scripts to scan systems for vulnerabilities or exfiltrate data."""",
     ""Explanation"": ""The rule detects an outbound HTTP request to ""/l/f/"" from a compromised host, which is associated with the Raccoon Infostealer malware. Infostealers are known to use automated tools to collect data from infected systems, including files, directories, and registry keys.""
   }
 ][
     ""sid"": ""57975"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve exfiltrating or transmitting data from a victim system to a command and control server over established communication channels. The rule identifies outgoing requests from a compromised system to a remote server with a specific URI (""/l/f/"") and characteristics (e.g., missing HTTP headers) indicative of communication with a Raccoon trojan variant. This type of communication is commonly used by malware for data exfiltration."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""Sid"": null,
     ""Technique ID"": ""T1001"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": null,
     ""Explanation"": ""This rule detects outbound traffic from a compromised host to a known C2 server. The traffic is associated with the Raccoon Trojan, which is known for stealing sensitive information and communicating with its C2 server over HTTP.""
   },
   {
     ""Sid"": null,
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Web Service"",
     ""Quotes"": null,
     ""Explanation"": ""This rule detects outbound traffic that may be used for exfiltration of sensitive data over HTTP. The traffic is associated with the Raccoon Trojan, which is known for exfiltrating stolen data using HTTP-based C2 communication.""
   }
 ]","['T1570', 'T1008', 'T1127', 'T1105', 'T1056', 'T1003', 'T1564', 'T1056', 'T1133', 'T1048', 'T1041', 'T1486', 'T1571', 'T1119', 'T1041', 'T1001', 'T1041']",['T1105']
8445,"[
   {
     ""sid"": ""8445"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring a tool or component into a target network from an external source. The rule specifically detects the download of an RTF file with an embedded OLE object, which could potentially be used to execute malicious code or deliver other payloads."""",
     ""Explanation"": ""This event is generated when an attempt is made to download a file that is suspected to be malicious.""
   }
 ][
         ""sid"": ""8445"",
         ""Technique ID"": ""T1137"",
         ""Technique Name"": ""Office Application Startup"",
         ""Quotes"": """"Office Application Startup techniques involve leveraging Microsoft Office-based applications for persistence between startups. The rule detects an attempt to download an RTF file with an embedded object, indicating a potential attempt to exploit vulnerabilities in Microsoft Office applications to gain persistent access to the target system."""",
         ""Explanation"": ""This event is generated when an attempt to download a Microsoft Windows RTF file with an embedded object package is detected.""
     ][
   {
     ""sid"": ""8445"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing the obfuscation process to extract useful information. The rule detects an attempt to download an RTF file with an embedded object package. Adversaries may use obfuscated or compressed files to evade detection and deliver malicious payloads."""",
     ""Explanation"": ""The rule is triggered when a file download attempt is detected with the filename extension '.rtf' and specific content patterns indicating the presence of an embedded object package.""
   },
   {
     ""sid"": ""8445"",
     ""Technique ID"": ""T1195"",
     ""Technique name"": ""Gather Victim Information"",
     ""Quotes"": """"Gather Victim Information techniques involve collecting information about a target's system and environment. The rule can detect an attempt to download an RTF file with an embedded object package. Such files may contain scripts or other malicious components that can gather information about the victim's system, such as user credentials, software configuration, and network settings."""",
     ""Explanation"": ""The rule is triggered when a file download attempt is detected with the filename extension '.rtf' and specific content patterns indicating the presence of an embedded object package.""
   }
 ][
         ""sid"": ""8445"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to prevent detection or analysis, for example, encrypting data at rest or in transit, or encrypting malicious code using encryption algorithms. The rule detects an attempt to download a malicious Microsoft Windows RTF file with an embedded object package, which could contain encrypted malicious code or encrypted data intended to evade detection."""",
         ""Explanation"": ""This rule is designed to detect malicious files that attempt to download or execute potentially malicious RTF files with embedded objects. These objects could contain malicious code or data that could be used to compromise the system.""
     ][
   {
     ""sid"": ""8445"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in software or web applications to infect a system when a user visits a malicious or compromised website. This rule triggers when an RTF file with an embedded object package (OLE) is downloaded, which is typically used by malicious websites to exploit vulnerabilities and install malware on the victim's system."""",
     ""Explanation"": ""The IDS rule signature focuses on detecting attempts to exploit a vulnerability in the way Microsoft Office handles embedded objects in RTF files. Exploitation of the vulnerability can allow for remote code execution on the target system, particularly when the user opens the malicious file.""
   }
 ][
         ""sid"": ""8445"",
         ""Technique ID"": ""T1133"",
         ""Technique Name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve utilizing external-facing remote services to initially access and/or persist within a network. This rule identifies an attempt to download an embedded object package from a Microsoft Windows RTF file, which could be leveraged by adversaries to establish a foothold on a system through malicious macros or other embedded content."""",
         ""Explanation"": ""This rule triggers an alert when a Microsoft Windows RTF file with an embedded object package is downloaded. These types of files may contain malicious macros or other embedded content that could be exploited by attackers to gain a foothold on a system.""
     ],
     [
         ""sid"": ""8445"",
         ""Technique ID"": ""T1083"",
         ""Technique Name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve enumerating files and directories or searching in specific locations of a host or network share for certain information within a file system. This rule analyzes file data and specifically looks for embedded object packages within RTF files, indicating an attempt to search for or access specific files or directories."""",
         ""Explanation"": ""This rule triggers an alert when a Microsoft Windows RTF file with an embedded object package is downloaded. These types of files may contain malicious macros or other embedded content that could be exploited by attackers to gain a foothold on a system.""
     ]
 ][
     {
         ""sid"": ""23934"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve tricking a user into visiting a website that hosts malicious content, such as an exploit kit, which can then infect the user's system with malware. This rule detects an attempt to download a malicious RTF file containing an embedded object package, which is a common method used in drive-by compromise attacks to exploit vulnerabilities in Microsoft Office applications."""",
         ""Explanation"": ""This event is generated when a file download attempt of a malicious RTF file with embedded object package is detected.""
     }
 ][
   {
     ""sid"": ""8445"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted download of a malicious Microsoft Windows RTF file with an embedded object package, which is a common method attackers use to exploit vulnerabilities in office productivity software."""",
     ""Explanation"": ""A malicious RTF file has an embedded object package.""
   }
 ][
         ""sid"": ""8445"",
         ""Technique ID"": ""T1112"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick users into clicking on malicious links or opening attachments that can lead to malware installation or credential theft. The rule detects an attempt to download a Microsoft Windows RTF file with an embedded object package, which is a common method used in phishing campaigns to deliver malicious payloads."""",
         ""Explanation"": ""This event is generated when an attempt to download a Microsoft Windows RTF file with an embedded object package is detected.""
     ][
         ""sid"": ""8445"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Malicious Document"",
         ""Quotes"": """"Malicious Document techniques involve using malicious documents such as Microsoft Office files, PDFs, or other file formats to deliver payloads or exploit vulnerabilities on victim systems. This rule detects attempts to download Microsoft Windows RTF (Rich Text Format) files with embedded object packages, which can be used to deliver malicious macros or other payloads."""",
         ""Explanation"": ""The rule aims to detect attempts to download a malicious RTF file, which is a common method to deliver malware payloads, through analysis of file header and content patterns.""
     ][
   {
     ""sid"": ""8445"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects the exploitation of an RTF file embedded object vulnerability, which is a common technique used by attackers to gain initial access to systems by sending malicious RTF files that execute arbitrary code when opened."""",
     ""Explanation"": ""This event is generated when the target system is receiving anomalous file data.""
   }
 ]","['T1105', 'T1137', 'T1105', 'T1195', 'T1105', 'T1189', 'T1133', 'T1083', 'T1189', 'T1190', 'T1112', 'T1189', 'T1189']",['T1204']
31858,"[
         ""sid"": ""31858"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in Scanbox exploit kit through an HTML code injection, which is a common method attackers use to exploit web applications by injecting malicious code into vulnerable websites."""",
         ""Explanation"": ""This event is generated when Scanbox exploit kit enumeration code is detected.""
     ][
     {
         ""sid"": ""31858"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects attempted exploitation of a vulnerability in the Scanbox Exploit Kit, which is a common tool used by attackers to deliver malicious payloads through web application attacks."""",
         ""Explanation"": ""This event is generated when there is an exploit attempt on an SMTP server.""
     }
 ][
   {
     ""sid"": ""31858"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Scanbox exploit kit, which is a common method attackers use to compromise web servers by exploiting vulnerabilities in web applications."""",
     ""Explanation"": ""Calling the get_html_translation_table() function with an argument of HTML_ENTITIES is not allowed in PHP and has been removed as of PHP 8.0.0.""
   }
 ][
   ""sid"": ""31858"",
   ""Technique ID"": ""T1587"",
   ""Technique name"": ""Post-Exploitation Collection"",
   ""Quotes"": """"Post-Exploitation Collection involves collecting data from already compromised systems for exfiltration or further exploitation. The rule triggers when an exploit kit sends a request to an SMTP server containing code that creates an iframe and attempts to collect information from the system, potentially leading to further compromise and data theft."""",
   ""Explanation"": ""This rule detects the Scanbox exploit kit which is used to deliver malware onto a vulnerable system""
 ][
   {
     ""sid"": ""31858"",
     ""Technique ID"": ""T1207"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve probing a network to identify vulnerabilities or weaknesses that can be exploited. This rule detects an attempt to exploit a vulnerability in the 'Scanbox' exploit kit by sending a specially crafted request to a SMTP server. Attackers often use exploit kits to scan networks for vulnerable systems and deliver malicious payloads."""",
     ""Explanation"": ""The rule looks for a specific pattern of data in the network traffic that is associated with the Scanbox exploit kit. This pattern is used to identify and block attempts to exploit vulnerabilities in SMTP servers.""
   }
 ][
     {
         ""sid"": ""31858"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in the Scanbox exploit kit, which is commonly used to target web applications and execute malicious code on victim systems."""",
         ""Explanation"": ""Exploit kit Scanbox tries to leverage server-side request forgery (SSRF) flaw in a web application to execute arbitrary code on the underlying system.""
     }
 ][
     {
         ""sid"": ""31858"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve gaining access to a system through a user visiting a website over the normal course of browsing. The rule detects a Scanbox exploit kit that utilizes unescaped characters to obfuscate malicious code within HTML. This code can be executed when a user visits a compromised website, leading to the attacker gaining access to the user's system."""",
         ""Explanation"": ""This rule is triggered when the SMTP server receives a suspicious email containing malicious HTML code that attempts to exploit vulnerabilities in the web browser or email client, potentially leading to a drive-by compromise.""
     }
 ][
   {
     ""sid"": ""31858"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects activity related to the Scanbox exploit kit, which is commonly used to exploit vulnerabilities in web applications and deliver malware."""",
     ""Explanation"": ""This rule detects an enumeration attempt for Microsoft IIS 6 through 7.5 unquoted path vulnerabilities.""
   }
 ][
   {
     ""sid"": ""31858"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in the Scanbox web server, which is a common target for attackers looking to exploit vulnerable web applications."""",
     ""Explanation"": ""This event is generated when the EXPLOIT-KIT Scanbox exploit kit enumeration code is detected.""
   }
 ][
   {
     ""sid"": ""31858"",
     ""Technique ID"": ""T1508"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring data from a compromised system to an external location. This rule relates to Data Exfiltration as it detects an exploit kit (Scanbox) attempting to enumerate the system by sending a specially crafted request to retrieve information about the target system's file system."""",
     ""Explanation"": ""The rule is triggered when a specially crafted request is sent by the Scanbox exploit kit to enumerate the target system's file system, which is a common technique used for reconnaissance and data gathering before launching an attack.""
   },
   {
     ""sid"": ""31858"",
     ""Technique ID"": ""T1171"",
     ""Technique Name"": ""Post-Exploitation Beacon"",
     ""Quotes"": """"Post-Exploitation Beacon techniques involve maintaining access to a compromised system by establishing a persistent communication channel, often referred to as a ""beacon"". This rule detects an attempt by an exploit kit (Scanbox) to establish a beacon by sending a specially crafted request to retrieve information about the target system's file system, which could be used to maintain access and facilitate further exploitation."""",
     ""Explanation"": ""The rule is triggered when a specially crafted request is sent by the Scanbox exploit kit to enumerate the target system's file system, which could be used to establish a persistent communication channel and maintain access to the compromised system.""
   }
 ][
     {
         ""sid"": ""31858"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of the Scanbox exploit kit, which is known to target vulnerabilities in web applications to install malware or compromise the system."""",
         ""Explanation"": ""The rule looks for a specific pattern in the traffic that is associated with the Scanbox exploit kit, which is often used to exploit vulnerabilities in web applications or external services.""
     }
 ]","['T1190', 'T1110', 'T1190', 'T1587', 'T1207', 'T1190', 'T1189', 'T1059', 'T1190', 'T1508', 'T1171', 'T1190']",['T1189']
30788,"[
         ""sid"": ""30788"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve actively probing and interrogating target systems to identify open ports and available services. In this case, the rule detects an OpenSSL Heartbleed vulnerability which could allow unauthorized remote attackers to read 64k of arbitrary server memory, including session-related information, via a specially crafted TLS handshake packet."""",
         ""Explanation"": ""Scan for listening port 443, 548, 992, 993, 995, 2484 and IPv6 over a SSL/TLS session to detect OpenSSL TLSv1.2 versions vulnerable to the Heartbleed vulnerability.""
     ][
   {
     ""sid"": ""30788"",
     ""Technique ID"": ""T1480"",
     ""Technique name"": ""Bypass User Account Control"",
     ""Quotes"": """"Bypass User Account Control techniques involve bypassing the User Account Control (UAC) mechanism to elevate privileges and execute arbitrary code. This rule detects an attempt to exploit a vulnerability in OpenSSL's heartbeat extension (CVE-2014-0160), which allows an attacker to read arbitrary memory on the server. Exploitation of this vulnerability can lead to the bypass of UAC and the execution of arbitrary code with elevated privileges."""",
     ""Explanation"": ""OpenSSL TLSv1.2 large heartbeat response - possible ssl heartbleed attempt""
   }
 ][
   {
     ""sid"": ""30788"",
     ""Technique ID"": ""T1598"",
     ""Technique Name"": ""Heartbleed"",
     ""Quotes"": """"The Heartbleed vulnerability is a serious vulnerability in the OpenSSL cryptographic library that allows attackers to read arbitrary memory of a TLS-using service via a specially crafted TLS heartbeat request. An attacker could exploit the vulnerability to obtain sensitive information such as server private keys, session cookies, and other secrets."""",
     ""Explanation"": ""TLS heartbeat request sent by a client""
   },
   {
     ""sid"": ""30788"",
     ""Technique ID"": ""T1118"",
     ""Technique Name"": ""Credential Theft"",
     ""Quotes"": """"Credential Theft techniques involve stealing, harvesting, or otherwise obtaining credentials that can be used to access systems, services, or data. The Heartbleed vulnerability could be exploited to steal TLS session cookies, which could then be used to impersonate users and access their accounts."""",
     ""Explanation"": ""The vulnerability could be exploited to steal TLS session cookies.""
   }
 ][
   {
     ""sid"": ""30788"",
     ""Technique ID"": ""T1118"",
     ""Technique name"": ""System Information Discovery"",
     ""Quotes"": """"System Information Discovery techniques involve gathering information about the system's configuration, software, and hardware to identify potential vulnerabilities or weaknesses. In this case, the rule detects a 'heartbeat response' from the OpenSSL implementation, which could be an attempt to exploit the 'Heartbleed' vulnerability, a common reconnaissance technique used to gather sensitive information from vulnerable systems."""",
     ""Explanation"": ""The rule is detecting a heartbeat response from the OpenSSL implementation.""
   }
 ][
   {
     ""sid"": ""30788"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve actively scanning systems for open ports and network services to identify potential vulnerabilities. This rule specifically detects a heartbleed attack attempt by detecting the characteristic heartbeat request packet, which is used to exploit the Heartbleed vulnerability in the OpenSSL library."""",
     ""Explanation"": ""Heartbleed is a vulnerability in the OpenSSL cryptographic library that allows attackers to read memory from a victim's server, potentially exposing sensitive information such as private keys and passwords.""
   }
 ][
         ""sid"": ""30788"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule triggers when it detects a large TLS heartbeat response, which could indicate an attempt to exploit the ""Heartbleed"" vulnerability (CVE-2014-0160), which is a well-known software bug in OpenSSL versions 1.0.1 through 1.0.1f. Exploiting this vulnerability can lead to the leakage of confidential information from the server's memory."""",
         ""Explanation"": ""This event is generated when a SERVER-OTHER OpenSSL TLSv1.2 large heartbeat response is detected, which may indicate an attempt to exploit the Heartbleed vulnerability""
     ][
   {
     ""sid"": ""30788"",
     ""Technique ID"": ""T1589"",
     ""Technique Name"": ""Heartbleed"",
     ""Quotes"": """"Heartbleed is a vulnerability in the OpenSSL TLS/SSL implementation that allows attackers to steal sensitive information from the memory of a vulnerable system. This rule detects a possible attempt to exploit the Heartbleed vulnerability by checking for a specific pattern in the TLS/SSL heartbeat response, which is a common method used by attackers to trigger the vulnerability."""",
     ""Explanation"": ""The Heartbleed Attack relies on the vulnerability associated with the heartbeat extension in the TLS/SSL implementations that allow attackers to retrieve sensitive data from the server's memory.""
   },
   {
     ""sid"": ""30788"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a possible attempt to exploit a vulnerability in the OpenSSL TLS/SSL implementation, which is a common target for attackers."""",
     ""Explanation"": ""This rule is looking specifically at a TLS/SSL vulnerability. Attackers can exploit public facing applications to gain access to unauthorised information.""
   }
 ][
         ""sid"": ""38563"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
     ][
   {
     ""sid"": ""30788"",
     ""Technique ID"": ""T1193"",
     ""Technique name"": ""Test Application Security"",
     ""Quotes"": """"Test Application Security techniques involve evaluating the security of applications or systems by probing for vulnerabilities, such as buffer overflows. This rule detects a potential Heartbleed attack on OpenSSL, which is a common method used to test the security of SSL/TLS implementations by exploiting a buffer overflow vulnerability."""",
     ""Explanation"": """"Heartbleed"" is a vulnerability in the OpenSSL cryptographic library that allows an attacker to read arbitrary memory contents from a victim's system. This vulnerability can be exploited to steal sensitive information such as private keys, passwords, and other sensitive data. The rule detects attempts to exploit this vulnerability by looking for specific patterns in the SSL/TLS traffic.""
   }
 ][
   {
     ""sid"": ""30788"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploit SSL/TLS Certificate"",
     ""Quotes"": """"Exploit SSL/TLS Certificate techniques involve manipulating SSL/TLS certificates to bypass authentication or otherwise compromise a system. The Heartbleed vulnerability, which this rule detects, allows attackers to obtain sensitive information from a system's memory by sending a specially crafted request to the server. This information could include private keys and other sensitive data that could be used to decrypt communications or impersonate the server."""",
     ""Explanation"": ""The rule detects an attempt to use the Heartbleed vulnerability, which is a flaw in the OpenSSL library that could allow an attacker to steal private keys and other sensitive information from a server.""
   }
 ][
   {
     ""sid"": ""30788"",
     ""Technique ID"": ""T1595"",
     ""Technique Name"": ""Heartbleed Exploit"",
     ""Quotes"": """"Heartbleed Exploit techniques involve exploiting a vulnerability in the OpenSSL cryptographic library that allows an attacker to read arbitrary memory from a system. The rule specifically detects attempts to exploit the Heartbleed vulnerability by looking for specific TLS heartbeat request and response patterns."""",
     ""Explanation"": ""This rule detects an attempted exploitation of OpenSSL's Heartbleed vulnerability.""
   }
 ]","['T1046', 'T1480', 'T1598', 'T1118', 'T1118', 'T1046', 'T1190', 'T1589', 'T1190', 'T1190', 'T1193', 'T1210', 'T1595']",['T1005']
32949,"[
   {
     ""sid"": ""32949"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools to the target environment for exploitation or persistence. This rule detects the download of an executable screensaver file, which could be an attempt to introduce malware onto the system by disguising it as a legitimate screensaver."""",
     ""Explanation"": ""Downloading of executable screensaver file""
   }
 ][
         ""sid"": ""32949"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in web browsers, browser plugins, or other components accessible via the web to execute arbitrary code. This rule detects an attempt to download an executable screensaver file, which is a common method used to exploit vulnerabilities in web browsers or browser plugins."""",
         ""Explanation"": ""This event is generated when a possible malicious download of executable screensaver is detected.""
     ][
   {
     ""sid"": ""32949"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising malicious content or activity as legitimate or benign in order to evade detection or deceive users. This rule detects the download of an executable screensaver file, which may be used to masquerade as legitimate software to gain access to a system."""",
     ""Explanation"": ""this rule detects the download of an executable screensaver file, which may be used to masquerade as legitimate software to gain access to a system.""
   },
   {
     ""sid"": ""32949"",
     ""Technique ID"": ""T1077"",
     ""Technique name"": ""File Download"",
     ""Quotes"": """"File Download techniques involve transferring a file from a remote system to a local system. This rule specifically detects the download of an executable screensaver file, which could potentially contain malicious code."""",
     ""Explanation"": ""An attacker may download a file to a compromised system to facilitate persistence, data exfiltration, or other malicious activity.""
   }
 ][
   {
     ""sid"": ""32949"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingest Data from External Removable Media"",
     ""Quotes"": """"Ingest Data from External Removable Media techniques involve extracting data from external removable media sources, such as USB drives, external hard drives, and optical media. This rule detects the download of an executable screensaver file, which could be used to deliver malware onto a system via removable media."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""32949"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised environment. This rule detects the download of an executable screensaver file, which is a common method attackers use to deliver malware or other malicious tools into a system."""",
     ""Explanation"": ""This Snort rule is looking for attempts to download executable screensaver files.""
 ][
   {
     ""sid"": ""32949"",
     ""Technique ID"": ""T1187"",
     ""Technique name"": ""Forced Authentication"",
     ""Quotes"": """"Forced Authentication techniques involve coercing or tricking a user into providing authentication credentials. The rule detects a download of an executable screensaver file, which could be used to trick a user into downloading and executing malicious software. Attachment-based spear phishing emails are a common method attackers use to distribute malicious payloads by forcing users to unknowingly download and execute malware disguising a legitimate screensaver."""",
     ""Explanation"": ""This rule detects a download of a screensaver which could be a form of malware.""
   }
 ][
     {
         ""sid"": ""32949"",
         ""Technique ID"": ""T1189"",
         ""Technique Name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve delivering malicious payloads or exploiting vulnerabilities on a system through a user visiting a website during the normal course of browsing. This rule detects the download of an executable screensaver file, which is a common technique used by malicious actors to trick users into downloading malware when visiting untrusted websites."""",
         ""Explanation"": ""This rule is designed to detect the download of an executable screensaver file, which is a common technique used by malicious actors to trick users into downloading malware when visiting untrusted websites.""
     },
     {
         ""sid"": ""32949"",
         ""Technique ID"": ""T1027"",
         ""Technique Name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to make it unintelligible or unusable without knowledge of the encryption key, thereby impacting data integrity or availability. This rule checks for encryption of downloaded files using the MZ header, which is a common indicator of Windows executables and could be used to detect malicious payloads encrypted to evade detection."""",
         ""Explanation"": ""This rule checks for encryption of downloaded files using the MZ header, which is a common indicator of Windows executables and could be used to detect malicious payloads encrypted to evade detection.""
     }
 ][
     ""sid"": ""32949"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking or coercing a user into performing an action that will execute malicious code, such as clicking on a link, opening an attachment, or running a program. This rule detects the download of an executable file to the user's computer, which is a common method for malware to propagate."""",
     ""Explanation"": ""This signature detects download of executable screensaver file which could be malicious.""
 ][
     ""sid"": ""32949"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Application Layer Protocol"",
     ""Quotes"": """"Application Layer Protocol techniques involve using standard, non-encrypted protocols to avoid detection or blend in with other traffic. This rule detects the download of an executable screensaver file over HTTP, where the file is identified by the presence of the 'MZ' header, which is common in executable files."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""32949"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve using software or malicious tools to gain unauthorized access or establish persistence on a system through the delivery of files. In this case, the rule detects the presence of a malicious payload or tool, indicated by the downloading of an executable screensaver file, which is often used as a means of delivering malware to a targeted system."""",
     ""Explanation"": ""The rule triggers when a client downloads a malicious screensaver file from the internet. Screensaver files can be used to deliver malware to a system.""
   },
   {
     ""sid"": ""32949"",
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve the use of legitimate or compromised credentials to establish persistence on a target system. The rule checks for the presence of a malicious payload or tool that is being downloaded as an executable screensaver file. This file may be used to install malware or establish a covert channel on the system, which could leverage valid accounts to maintain persistence."""",
     ""Explanation"": ""The rule triggers when a client downloads a malicious screensaver file from the internet. If the user has administrator privileges, the malware could use those privileges to install itself on the system or to create a new user account with administrator privileges.""
   }
 ][
   {
     ""sid"": ""32949"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""File Download"",
     ""Quotes"": """"File Download techniques involve retrieving a file from a remote location onto the victim system. This rule detects an attempt to download an executable screensaver file, which could potentially contain malicious code."""",
     ""Explanation"": ""This event is generated when the Download of executable screensaver file event is detected.""
   }
 ]","['T1105', 'T1189', 'T1140', 'T1077', 'T1105', 'T1105', 'T1187', 'T1189', 'T1027', 'T1204', 'T1071', 'T1105', 'T1078', 'T1105']",['T1546']
21108,"[
   {
     ""sid"": ""21108"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a victim's system through malicious content on a website or advertisement, typically without user interaction. This rule indicates the presence of a known exploit kit that uses obfuscated landing pages to deliver malicious payloads, which aligns with the goals of a drive-by compromise attack."""",
     ""Explanation"": ""This Snort rule triggers when it detects a pattern associated with an unknown exploit kit that uses obfuscated landing pages, which is commonly used in drive-by compromise attacks.""
   }
 ][
         ""sid"": ""21108"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a possible attempt to exploit a vulnerability in an unknown software application using a obfuscated landing page. Attackers may use obfuscation techniques to evade detection of malicious content."""",
         ""Explanation"": ""Possible attempt to exploit a vulnerability in an unknown software application using a obfuscated landing page.""
     ][
         ""sid"": ""21108"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of an unknown exploit kit by matching against a specific obfuscated landing page. Exploit kits often use obfuscated landing pages to bypass detection and deliver malicious payloads."""",
         ""Explanation"": ""This event is generated when a web-based exploit kit attempts to exploit a vulnerability.""
     ][
     {
         ""sid"": ""21108"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an HTTP response from an exploit kit that is known for its obfuscated landing pages. Exploit kits often deliver malicious payloads to victim systems by exploiting vulnerabilities in web applications or browsers."""",
         ""Explanation"": ""The rule looks for a specific HTTP response from an exploit kit. Exploit kits are often used to deliver malicious payloads to victim systems by exploiting vulnerabilities in web applications or browsers.""
     }
 ][
   {
     ""sid"": ""21108"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted 'obfuscated landing page' exploit by an unknown exploit kit, indicating an attempt to exploit a vulnerability in a web application or service."""",
     ""Explanation"": ""This event is generated when an unknown exploit kit is detected.""
   }
 ][
     ""sid"": ""21108"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting software vulnerabilities in client applications to execute arbitrary code. This rule detects an attempt to exploit a browser vulnerability to run malicious code on the victim's machine, such as executing shellcode or downloading and executing malware."",
     ""Explanation"": ""The rule looks for a malicious javascript file that exploits a vulnerability in the web browser.""
 ][
         ""sid"": ""21108"",
         ""Technique ID"": ""T1189"",
         ""Technique Name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in websites or web browsers to gain unauthorized access to systems. This rule detects an obfuscated landing page used by an exploit kit, which is a common method attackers use to redirect users to malicious websites that host exploits to gain unauthorized access."",
         ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in a web browser is detected.""
     ][
         ""sid"": ""21108"",
         ""Technique ID"": ""T1189"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects the presence of an unknown exploit kit by matching a specific obfuscated landing page. Exploit kits are often used to target vulnerabilities in web applications and can be used to deliver malware or compromise systems."""",
         ""Explanation"": ""This rule triggers when it detects the presence of an exploit kit.""
     ][
   {
     ""sid"": ""21108"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit unknown vulnerabilities using an obfuscated landing page, indicating a possible attempt to compromise the target system."""",
     ""Explanation"": ""This rule looks for exploit kit landing page that has been obfuscated with JavaScript.""
   }
 ][
         ""sid"": ""21108"",
         ""Technique ID"": ""T1127"",
         ""Technique name"": ""Trusted Developer Utilities Proxy Execution"",
         ""Quotes"": """"Trusted Developer Utilities Proxy Execution techniques involve abusing legitimate developer tools and utilities to mask malicious activity within trusted signed code. In this case, the rule aims to detect exploitation of a vulnerability that enabled attackers to execute arbitrary code using Microsoft's compiler 'csc.exe', an example of trusted developer utility abuse."""",
         ""Explanation"": ""Buffer overflow vulnerability in the .NET Framework could allow remote code execution.""
     ][
     {
         ""sid"": ""21108"",
         ""Technique ID"": ""T1187"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve disguising one's identity or actions to appear legitimate or benign. In this case, the rule detects a landing page used by an unknown exploit kit, which is disguised as an obfuscated file. Obfuscation techniques are commonly employed by attackers to evade detection and analysis."",
         ""Explanation"": ""This event is generated when activity relating to masking is detected.""
     },
     {
         ""sid"": ""21108"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve identifying and exploiting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The presence of an obfuscated exploit kit landing page indicates an attempt to exploit a vulnerability in a web application."""",
         ""Explanation"": ""This event is generated when activity relating to exploiting a public facing application is detected.""
     }
 ]","['T1189', 'T1190', 'T1190', 'T1189', 'T1190', 'T1203', 'T1189', 'T1189', 'T1189', 'T1127', 'T1187', 'T1203']",['T1027']
560,"[
     ""sid"": ""560"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Desktop Protocol (RDP)"",
     ""Quotes"": """"Remote Desktop Protocol (RDP) techniques involve using the Remote Desktop Protocol to connect to and take control of remote systems. This rule detects the presence of RFB traffic, which is used by the VNC remote desktop sharing tool, indicating an attempt to establish a remote connection to a system."""",
     ""Explanation"": ""The rule is related to the Remote Desktop Protocol, which is a commonly used technique for remote access to systems.""
 ][
   {
     ""sid"": ""23020"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve gathering information about remote systems to identify potential targets for exploitation. This rule detects an attempt to enumerate systems using the VNC protocol, which is commonly used by attackers to identify vulnerable hosts for remote access."""",
     ""Explanation"": ""The rule triggers on attempts to establish a VNC session, which could indicate reconnaissance activity targeting remote systems.""
   }
 ][
         ""sid"": ""560"",
         ""Technique ID"": ""T1049"",
         ""Technique name"": ""Remote Desktop Protocol"",
         ""Quotes"": """"Remote Desktop Protocol (RDP) techniques involve exploiting the RDP, which is a Microsoft proprietary protocol that allows users to remotely connect to a computer over a network connection, for various malicious purposes. This rule detects an attempted connection to a VNC server, which is similar to RDP as it allows for remote access, and could potentially be used for malicious purposes."""",
         ""Explanation"": ""This event is generated when VNC server traffic is detected.""
     ][
   {
     ""sid"": ""560"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve adversaries using valid accounts to log into services that accept remote connections, such as telnet, SSH, and VNC, to gain access to remote systems."""",
     ""Explanation"": ""The rule detects a VNC server response, which is associated with remote access.""
   }
 ][
   {
     ""sid"": ""560"",
     ""Technique ID"": ""T1043"",
     ""Technique name"": ""Internal Remote Services"",
     ""Quotes"": """"Internal Remote Services techniques involve leveraging remote access or management tools to gain access to internal systems. This rule detects traffic from a VNC server, which is a remote desktop software that allows remote users to access and control a graphical desktop environment on another computer. The use of VNC could potentially indicate an attacker attempting to gain remote access to internal systems for reconnaissance or data exfiltration purposes."""",
     ""Explanation"": ""RFB (Remote Frame Buffer) protocol is used by VNC (Virtual Network Computing) to provide remote access to graphical user interfaces.""
   }
 ][
   {
     ""sid"": ""560"",
     ""Technique ID"": ""T1049"",
     ""Technique Name"": ""Remote Desktop Protocol"",
     ""Quotes"": """"Remote Desktop Protocol (RDP) techniques involve using the RDP to establish remote access to target systems. This rule detects RDP server responses, indicating the presence of an RDP service on the destination host. RDP is commonly used by attackers to gain remote access to systems for reconnaissance, lateral movement, and various malicious activities."""",
     ""Explanation"": ""Remote Desktop Protocol (RDP), which allows remote access to a computer, is detected by this rule.""
   }
 ][
   {
     ""sid"": ""560"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Desktop Protocol (RDP)"",
     ""Quotes"": """"RDP allows a remote user to connect to a machine and interact with it as if they were sitting at the console. This rule detects the use of the RDP protocol, which is commonly abused by adversaries to gain remote access to systems for various malicious purposes, such as data exfiltration, malware deployment, or lateral movement."""",
     ""Explanation"": ""This event is generated when an RDP connection is detected.""
   }
 ][
   {
     ""sid"": ""560"",
     ""Technique ID"": ""T1043"",
     ""Technique Name"": ""Remote Desktop Protocol"",
     ""Quotes"": """"Remote Desktop Protocol (RDP) is a protocol that allows a user to remotely control another computer. Adversaries may use RDP to gain remote access to a victim's system and execute arbitrary commands or transfer files."""",
     ""Explanation"": ""This rule detects the presence of a VNC server, which is a remote desktop protocol that allows a user to remotely control another computer. This rule indicates that an external host is attempting to connect to a VNC server on the internal network, which could be an attempt by an adversary to gain remote access to a victim's system.""
   },
   {
     ""sid"": ""560"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve abusing legitimate remote services to achieve an attacker's objectives. Adversaries may use remote services to gain access to a victim's system, execute commands, or transfer files."""",
     ""Explanation"": ""This rule detects the presence of a VNC server, which is a remote service that allows a user to remotely control another computer. This rule indicates that an external host is attempting to connect to a VNC server on the internal network, which could be an attempt by an adversary to gain remote access to a victim's system.""
   }
 ][
   {
     ""sid"": ""560"",
     ""Technique ID"": ""T1049"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve leveraging system and network services, protocols, and ports for remote access and control of systems. This rule is triggered when a system responds with a Virtual Network Computing (VNC) server response, often used for remote desktop sharing, indicating a potential attempt by adversaries to establish a remote connection to the system."""",
     ""Explanation"": ""This event is generated when a VNC server is detected.""
   }
 ][
   {
     ""sid"": ""560"",
     ""Technique ID"": ""T1090"",
     ""Technique name"": ""Remote Desktop Protocol"",
     ""Quotes"": """"Remote Desktop Protocol (RDP) techniques involve using Microsoft's RDP to connect to and control remote systems. RDP is commonly used for remote administration and support, but it can also be abused by adversaries to gain unauthorized access to systems and exfiltrate data."""",
     ""Explanation"": ""This rule detects the presence of a VNC server.""
   }
 ][
         ""sid"": ""560"",
         ""Technique ID"": ""T1049"",
         ""Technique name"": ""Remote Desktop Protocol (RDP)"",
         ""Quotes"": """"Remote Desktop Protocol (RDP) techniques involve abusing the RDP protocol to gain unauthorized access to or execute commands on remote systems. This rule detects incoming connections to the RDP service on non-standard ports, which is a common tactic used by attackers to evade detection."""",
         ""Explanation"": ""This event is generated when there is a possible RFB (remote framebuffer) protocol communication detected. RFB is used in the VNC (Virtual Network Computing) remote desktop system.""
     ]","['T1021', 'T1071', 'T1049', 'T1021', 'T1043', 'T1049', 'T1021', 'T1043', 'T1021', 'T1049', 'T1090', 'T1049']",['T1021']
23620,"[
   {
     ""sid"": ""23620"",
     ""Technique ID"": ""T1088"",
     ""Technique Name"": ""Malicious Link"",
     ""Quotes"": """"Malicious Link techniques involve creating or using links that, when clicked or accessed, lead to malicious content or applications. The rule detects a malicious URL in a webpage's code that attempts to redirect users to a phishing site. Phishing sites often use deceptive links to trick victims into providing sensitive information, such as login credentials or financial data."""",
     ""Explanation"": ""This event is generated when an attempt to deliver malicious content to a host is detected.""
   }
 ][
   {
     ""sid"": ""23620"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": ""Drive-by Compromise is a technique used to infect a victim's system by exploiting a vulnerability in a web browser or other software.  This technique often involves using malicious advertisements or compromised websites to deliver the exploit."",
     ""Explanation"": ""The rule detects an attempted drive-by compromise attack,  as the malicious content is delivered through a file download.""
   }
 ][
     {
         ""sid"": ""23620"",
         ""Technique ID"": ""T1195"",
         ""Technique name"": ""Malvertising"",
         ""Quotes"": """"Malvertising techniques involve using online advertising to distribute malicious content to users. The rule detects a malicious redirect to a 'Twitter' frame which can be used to infect a system."""",
         ""Explanation"": ""This event is generated when an attempt to access an infected website is made.""
     },
     {
         ""sid"": ""23620"",
         ""Technique ID"": ""T1111"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-By Compromise techniques involve using malicious code embedded in websites or advertisements to compromise a system without requiring the user to explicitly download or interact with the code. The rule detects an attempt to redirect to a 'Twitter' frame which can be used to infect a system."""",
         ""Explanation"": ""This event is generated when an attempt to compromise a remote system is detected.""
     },
     {
         ""sid"": ""23620"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve uploading a script to a web server to allow remote access and control of the server. The rule detects an attempt to redirect to a 'Twitter' frame which may contain code to establish a web shell."""",
         ""Explanation"": ""This event is generated when an attempt to establish a web shell on a remote system is detected.""
     }
 ][
         ""sid"": ""23620"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve an attacker tricking a user into visiting a malicious website or opening a malicious document, which results in the installation of malicious software on the victim's system. This rule detects a malvertising attack, where an advertisement is used to distribute malware, which is a common method attackers use to compromise systems through web browsing."""",
         ""Explanation"": ""This event generates when malicious activity relating to compromised systems by downloading malicious software.""
     ][
         ""sid"": ""23620"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""Based on the rule, malvertising is attempting to redirect users to a malicious website by injecting malicious code into legitimate websites and advertisements.""
     ][
         ""sid"": ""23620"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects malicious code that attempts to redirect users to a Twitter page, which is a common technique used by attackers to exploit web applications and spread malware."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""23620"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve gaining access to a system through a user visiting a website over the normal course of browsing. This rule detects an attempted redirection from a malicious website to a Twitter iframe, which could be used to deliver malware or compromise the user's system."""",
     ""Explanation"": ""This rule detects malicious traffic that attempts to redirect users to a malicious website.""
   }
 ][
         ""sid"": ""23620"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Malicious Advertisement"",
         ""Quotes"": """"Adversaries may create malicious advertisements or otherwise leverage advertisements to lure users to websites with malicious content or to infect systems with malware. Malvertising can also be used as a mechanism to monitor or redirect traffic to malicious sites for a variety of reasons."""",
         ""Explanation"": ""This rule detects a malicious advertisement attempt by a Malvertising network that tries to redirect users to a malicious website.""
     ][
     ""sid"": ""23620"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve compromising a legitimate website or online advertisement to host malicious content that can be used to exploit unpatched or vulnerable browsers or plugins. This rule detects a malvertising redirect attempt, where malicious content is embedded within an online advertisement to compromise a user's system."""",
     ""Explanation"": ""This event is generated when a malicious advertisement attempts to redirect a user to a potentially malicious website.""
 ][
   {
     ""sid"": ""23620"",
     ""Technique ID"": ""T1123"",
     ""Technique Name"": ""Network Sniffing"",
     ""Quotes"": ""\""Network Sniffing techniques involve capturing network traffic using software or hardware-based tools to inspect and analyze the contents of the traffic. This rule looks for a pattern in the file data of FTP, HTTP, IMAP, and POP3 traffic that is indicative of malvertising, which involves injecting malicious advertisements into legitimate web pages or online advertising networks."""",
     ""Explanation"": ""The pattern in the file data, which includes references to Twitter and specific HTML attributes, suggests that the rule is designed to detect attempts to inject malicious advertisements into web pages. By capturing and analyzing network traffic, this rule can help organizations identify and block such malicious activity.""
   }
 ][
   {
     ""sid"": ""23620"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a host by exploiting a vulnerability in a web-based application or browser. This rule detects an attempt to leverage a malicious PHP script to redirect users to a malicious website. Such attacks exploit vulnerabilities in websites or web browsers and typically involve malicious advertisements or compromised websites that redirect users to malicious content."""",
     ""Explanation"": ""Malvertising network attempted redirect""
   }
 ]","['T1088', 'T1189', 'T1195', 'T1111', 'T1204', 'T1189', 'T1190', 'T1190', 'T1189', 'T1189', 'T1189', 'T1123', 'T1189']",['T1102']
47866,"[
         ""sid"": ""47866"",
         ""Technique ID"": ""T1140"",
         ""Technique name"": ""Deobfuscate/Decode Files or Information"",
         ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing obfuscation mechanisms to uncover hidden data or malicious code. This rule detects an obfuscated PowerShell command being executed, where the PowerShell string is encoded using a backslash escape sequence. Deobfuscating the command would reveal its true functionality, allowing attackers to execute malicious commands or scripts on the target system."""",
         ""Explanation"": ""This event is generated when a Dropper has executed a payload ""
     ],
         ""sid"": ""47866"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"Command and Scripting Interpreter techniques involve executing commands or scripts to perform malicious actions. This rule detects the execution of obfuscated PowerShell commands. PowerShell is a scripting language that can be used for various tasks, including system administration and automation. Attackers often use PowerShell to execute malicious commands remotely or to bypass security controls."""",
         ""Explanation"": ""This event is generated when a Dropper has executed a payload.""
     ][
         ""sid"": ""47866"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""User Execution"",
         ""Quotes"": """"User Execution techniques involve tricking users into executing malicious code. This rule detects an attempt to execute an obfuscated PowerShell script via a command line that begins with '|5C|x70|5C|x6F|5C|x77|5C|x65|5C|x72|5C|x73|5C|x68|5C|x65|5C|x6C|5C|x6C|5C|x2E|5C|x65|5C|x78|5C|x65|5C|x20|5C|x2D|5C|x65|5C|x78|5C|x65|5C|x63|5C|x75|5C|x74|5C|x69|5C|x6F|5C|x6E|5C|x70|5C|x6F|5C|x6C|5C|x69|5C|x63|5C|x79|5C|x20|5C|x62|5C|x79|5C|x70|5C|x61|5C|x73|5C|x73', which is a common method used by adversaries to bypass security controls and execute malicious payloads."""",
         ""Explanation"": ""Malicious script executes via the command-line using Windows PowerShell.""
     ][
   {
     ""sid"": ""47866"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system command shell, script interpreter, or other utility to execute arbitrary commands or scripts on a system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""47866"",
     ""Technique ID"": ""T1106"",
     ""Technique name"": ""Persistence: Registry"",
     ""Quotes"": """"Persistence: Registry techniques involve modifying the registry to achieve persistence on a system. This rule detects the creation of a registry key used by the Xbash dropper variant to establish persistence and execute malicious code."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""47866"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using a command-line interpreter (such as PowerShell or Bash) to execute commands or scripts, often retrieving the interpreter through various means such as downloading it or utilizing established interpreters on the system. This rule involves an obfuscated PowerShell invocation, highlighting the use of the PowerShell command-line interpreter to execute malicious scripts."""",
     ""Explanation"": ""This rule detects a malware that uses the PowerShell command-line interpreter to execute obfuscated commands or scripts retrieved from a remote source.""
 ][
   {
     ""sid"": ""47866"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using scripting or command interpreter functionality to execute follow-on actions such as accessing files, modifying the system, or otherwise controlling an environment.  The rule detects concealed execution of PowerShell, a scripting environment in Windows, by examining file data for a PowerShell command enclosed in double pipes ('||'). This technique is commonly used by malware to bypass detection and execute malicious payloads."""",
     ""Explanation"": ""PowerShell is a powerful scripting language built into the Windows operating system. It is commonly abused by malware to execute malicious commands and bypass security controls. This rule detects the execution of PowerShell commands that are obfuscated using a pipe character, which is indicative of malicious behavior.""
   }
 ][
         ""sid"": ""47866"",
         ""Technique ID"": ""T1495"",
         ""Technique name"": ""Firmware Corruption"",
         ""Quotes"": """"Firmware Corruption techniques involve modifying or disrupting the firmware of a device to disable security features or gain unauthorized access. This rule detects an attempt to modify the firmware of a Linksys router by exploiting a vulnerability in its web interface. Firmware corruption can allow attackers to gain persistence on a device, bypass security controls, and execute arbitrary code."""",
         ""Explanation"": ""Firmware corruption vulnerability in Cisco/Linksys EA6350, E4200, and E1200 routers allows remote attackers to cause a denial of service (device reboot) and execute arbitrary commands via unspecified vectors.""
     ][
         ""sid"": ""47866"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""Scripting"",
         ""Quotes"": """"Scripting techniques involve the execution of scripted code, which may be embedded within other files, such as email attachments or web pages, to perform malicious actions. This rule detects an attempt to execute a PowerShell script obfuscated with the '\' character, which is a common technique used by malware to evade detection and analysis."""",
         ""Explanation"": ""The rule looks for a specific pattern, ""|5C|x70|5C|x6F|5C|x77|5C|x65|5C|x72|5C|x73|5C|x68|5C|x65|5C|x6C|5C|x6C|5C|x2E|5C|x65|5C|x78|5C|x65|5C|x20|5C|x2D|5C|x65|5C|x78|5C|x65|5C|x63|5C|x75|5C|x74|5C|x69|5C|x6F|5C|x6E|5C|x70|5C|x6F|5C|x6C|5C|x69|5C|x63|5C|x79|5C|x20|5C|x62|5C|x79|5C|x70|5C|x61|5C|x73|5C|x73"", which is a hex-encoded representation of a part of a PowerShell script.""
     ][
   {
     ""sid"": ""47866"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve using various methods to communicate with remote systems to issue commands, control operations, and exfiltrate data. This rule triggers when it detects an attempt to execute an obfuscated PowerShell command, which is commonly used by adversaries to establish and maintain command and control over compromised hosts."""",
     ""Explanation"": ""The rule alerts us when Html.Dropper.Xbash variant attempts to invoke obfuscated PowerShell.""
   },
   {
     ""sid"": ""47866"",
     ""Technique ID"": ""T1036"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising the identity or attributes of a threat actor, such as hiding the true source or destination of communications, to avoid detection and attribution. In this case, the rule detects an attempt to obfuscate the PowerShell command by encoding it, potentially to evade detection and analysis."""",
     ""Explanation"": ""The rule alerts us when Html.Dropper.Xbash variant attempts to invoke obfuscated PowerShell.""
   }
 ][
   {
     ""sid"": ""47866"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system command or scripting interpreter to execute adversary-controlled code and perform various actions on the system. The rule detects an attempt to invoke powershell using obfuscated commands, which is a common method used by malware to evade detection and execute malicious code."""",
     ""Explanation"": ""This event is associated with an attempt to execute malicious powershell.""
   },
   {
     ""sid"": ""47866"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Injection"",
     ""Quotes"": """"Injection techniques involve inserting malicious code into an application or process to alter the application's behavior or flow. The rule detects the presence of a malicious HTML dropper that injects obfuscated PowerShell commands into the system, which is a common method used by malware to establish persistence."""",
     ""Explanation"": ""This event is associated with an attempt to inject malicious code.""
   }
 ][
   {
     ""Sid"": ""47866"",
     ""Technique ID"": ""T1000"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": ""\""Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side software to gain execution on the client system.\"""",
     ""Explanation"": ""This event is generated when the Html.Dropper.Xbash variant of malware attempts to invoke PowerShell using obfuscated techniques.""
   },
   {
     ""Sid"": ""47866"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": ""\""Drive-by Compromise techniques involve tricking a user into downloading and executing a malicious payload through social engineering or other deceptive means.\"""",
     ""Explanation"": ""The malware attempts to execute using obfuscated PowerShell commands, which could be triggered through social engineering or deceptive means.""
   }
 ][
   {
     ""sid"": ""47866"",
     ""Technique ID"": ""T1040"",
     ""Technique name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve capturing and examining network traffic to collect information about the devices and users on a network. This rule detects network traffic that matches a pattern associated with Html.Dropper.Xbash, which is a malware that uses PowerShell to execute malicious commands. The pattern involves specific PowerShell commands and file paths that are used by the malware to drop and execute malicious files."""",
     ""Explanation"": ""This event is generated when network traffic that matches a pattern associated with Html.Dropper.Xbash is detected.""
   },
   {
     ""sid"": ""47866"",
     ""Technique ID"": ""T1003"",
     ""Technique name"": ""OS Command Injection"",
     ""Quotes"": """"OS Command Injection techniques involve executing operating system commands through vulnerable applications or services. This rule detects network traffic that matches a pattern associated with Html.Dropper.Xbash, which is a malware that uses PowerShell to execute malicious commands. The pattern involves specific PowerShell commands that are used by the malware to execute malicious commands on the target system."""",
     ""Explanation"": ""This event is generated when network traffic that matches a pattern associated with Html.Dropper.Xbash is detected.""
   }
 ]","['T1140', 'T1059', 'T1204', 'T1059', 'T1106', 'T1059', 'T1059', 'T1495', 'T1204', 'T1059', 'T1036', 'T1059', 'T1105', 'T1000', 'T1189', 'T1040', 'T1003']",['T1059']
39930,"[
   {
     ""sid"": ""39930"",
     ""Technique ID"": ""T1017"",
     ""Technique name"": ""Credential Access"",
     ""Quotes"": """"Credential Access techniques involve obtaining user credentials, such as passwords, in order to facilitate unauthorized access to systems or data. This rule detects an attempt to access the 'ADMINID' credential of a Siemens IP-Camera by exploiting a vulnerability in the 'readfile.cgi' script, which is a common method attackers use to compromise web-based applications."""",
     ""Explanation"": ""The rule detects Siemens IP-Camera credential disclosure attempt.""
   }
 ][
     {
         ""sid"": ""39930"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted credential disclosure attempt against a Siemens IP-Camera 'readfile.cgi' CGI script, which is a common method attackers use to exploit web applications by exploiting vulnerabilities in CGI scripts."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a known vulnerability in web server software is detected.""
     }
 ][
   {
     ""sid"": ""39930"",
     ""Technique ID"": ""T1554"",
     ""Technique name"": ""Compromise Client Software Binary"",
     ""Quotes"": """"Compromise Client Software Binary techniques involve modifying or replacing legitimate client software binaries to establish persistent access to systems. This rule specifically detects an attempt to exploit a vulnerability in Siemens IP-Camera's web interface, which could allow an attacker to gain unauthorized access to sensitive information by compromising the client software."""",
     ""Explanation"": ""This rule is used to detect a specific attack against Siemens IP-Camera credential disclosure attempt.""
   }
 ][
         ""sid"": ""39930"",
         ""Technique ID"": ""T1220"",
         ""Technique name"": ""Credential Access"",
         ""Quotes"": """"Credential Access techniques involve obtaining, often via exploitation, legitimate credentials to access resources without needing to brute force credentials. In this case, the rule detects an attempt to exploit a web application vulnerability in a Siemens IP Camera to disclose credentials, such as usernames and passwords, which can be used to gain access to the device and its network."""",
         ""Explanation"": ""This event is generated when activity relating to a web server application is detected.""
     ][
     ""sid"": ""39930"",
     ""Technique ID"": ""T1002"",
     ""Technique Name"": ""Web Server Attacks"",
     ""Quotes"": """"Web Server Attacks techniques involve exploiting vulnerabilities in web servers or web applications to gain unauthorized access or compromise the server. This rule detects an attempt to exploit a known vulnerability in the Siemens IP-Camera using a file read vulnerability, which is a common method attackers use to steal credentials and other sensitive information from web servers."""",
     ""Explanation"": ""This event is generated when an attempt to compromise a web server is detected.""
 ][
     ""sid"": ""39623"",
     ""Technique ID"": ""T1592"",
     ""Technique name"": ""Gather Victim Host Information"",
     ""Quotes"": """"Gathering victim host information involves discovering information about the target host's network configuration, operating system, or other system characteristics. This rule matches traffic attempting to read the '/.git/config' file on a web server, a common method for attackers to gather information about the server's Git repository configuration."",
     ""Explanation"": ""This event is generated when activity relating to web servers is detected.""
     }
 ][
     {
         ""sid"": ""39930"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a Siemens IP Camera 'readfile.cgi' credential disclosure attempt, indicating an attempt to exploit a vulnerability in the camera's web interface."",
         ""Explanation"": ""The rule is trying to catch the exploitation of a vulnerability in the camera's web interface.""
     }
 ][
     {
         ""sid"": ""39930"",
         ""Technique ID"": ""T1538"",
         ""Technique name"": ""Credential Harvesting: Phishing"",
         ""Quotes"": """"Credential Harvesting: Phishing techniques involve sending emails or creating websites that impersonate legitimate entities to trick victims into providing their credentials. The rule detects attempts to exploit a vulnerability in Siemens IP-Camera's 'readfile.cgi' script, which allows attackers to harvest credentials by sending a specially crafted HTTP request."""",
         ""Explanation"": ""The rule matches phishing attempts to harvest credentials by impersonating a legitimate entity, in this case, Siemens IP-Camera.""
     }
 ][
   {
     ""sid"": ""39930"",
     ""Technique ID"": ""T1571"",
     ""Technique name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials or password hashes from a target system. The rule detects an attempt to exploit a vulnerability in Siemens IP Cameras by sending a specially crafted URI to the readfile.cgi script, which is an indication of attackers attempting to retrieve usernames and passwords."""",
     ""Explanation"": ""This rule looks for attempts to exploit a command injection vulnerability in Siemens IP-Cameras through the execution of the readfile.cgi script with the query parameter 'query=ADMINID'.""
   }
 ][
   {
     ""sid"": ""39930"",
     ""Technique ID"": ""T1611"",
     ""Technique Name"": ""Credential Access"",
     ""Quotes"": """"Credential Access techniques are used to obtain credentials necessary to successfully authenticate and access resources such as user accounts, service accounts, or cryptographic keys."""",
     ""Explanation"": ""This rule detects an attempt to access the Siemens IP Camera's credential information through a CGI script (readfile.cgi) using the 'query=ADMINID' parameter, which indicates an attempt to retrieve the camera's admin credentials.""
   }
 ][
         ""sid"": ""39930"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted credential disclosure attack on the Siemens IP Camera's web interface via the 'readfile.cgi' script, which is a common method attackers use to exploit web applications by manipulating URI parameters."""",
         ""Explanation"": ""The rule triggers on an attempt to access the Siemens IP camera's web interface using the 'readfile.cgi' script with the 'query=ADMINID' parameter, which is used to retrieve the camera's administrator credentials.""
     ]","['T1017', 'T1190', 'T1554', 'T1220', 'T1002', 'T1592', 'T1190', 'T1538', 'T1571', 'T1611', 'T1190']",['T1003']
47640,"[
   {
     ""sid"": ""47640"",
     ""Technique ID"": ""T1594"",
     ""Technique Name"": ""Modify Registry"",
     ""Quotes"": """"Modify Registry techniques involve accessing and modifying keys in the system registry to impact system behaviors or gain persistence. This rule detects modifications to the ""LoadAppInit_DLLs"" registry key, which could indicate an attempt to persistently execute a malicious DLL through registry manipulation."""",
     ""Explanation"": ""This event is generated when activity relating to modification of registry occurs.""
   }
 ][
   {
     ""sid"": ""47640"",
     ""Technique ID"": ""T1558"",
     ""Technique Name"": ""Certificate Transparency"",
     ""Quotes"": """"Certificate Transparency techniques involve leveraging Certificate Transparency to gather information about certificates and associated metadata to track TLS certificates deployed by adversaries, assist in cluster analysis and attribution, and perform TLS fingerprinting."""",
     ""Explanation"": ""This rule detects a SSL certificate with null issuer rdnSequence fields, which can be an indicator of malicious activity.""
   }
 ][
   {
     ""sid"": ""47640"",
     ""Technique ID"": ""T1608"",
     ""Technique Name"": ""X.509 Certificate Validation"",
     ""Quotes"": """"X.509 Certificate Validation techniques involve examining X.509 certificates to identify irregularities or indicators of compromise. This rule detects a server-side TLS certificate with null issuer relative distinguished name sequence (rdnSequence) fields, which is an anomaly that can indicate a malicious certificate or a certificate authority compromise."""",
     ""Explanation"": ""Detects an SSL certificate with null issuer rdnSequence fields.""
   }
 ][
   {
     ""sid"": ""47640"",
     ""Technique ID"": ""T1581"",
     ""Technique Name"": ""Compromise Public Key Infrastructure"",
     ""Quotes"": """"Compromise Public Key Infrastructure techniques can involve leveraging compromised certificates for Lateral Movement and remote code execution. This rule looks for anomalous X.509v3 certificates with null issuer rdnSequence fields, which could potentially be exploited to compromise the public key infrastructure of an organization or impersonate trusted entities."""",
     ""Explanation"": ""This event is generated when a server-side SSL certificate with null issuer rdnSequence fields is detected.""
   }
 ][
   {
     ""sid"": ""47640"",
     ""Technique ID"": ""T1595"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve using guesswork to obtain access to a system or data. The rule monitors attempted brute force attacks against an SSL/TLS server by detecting a series of consecutive handshake attempts. Attackers may use this technique to guess and attempt to authenticate with valid server credentials."""",
     ""Explanation"": ""This event is generated when a brute-force attack against an SSL/TLS service is detected.""
   }
 ][
   {
     ""sid"": ""47640"",
     ""Technique ID"": ""T1212"",
     ""Technique Name"": ""Exploitation for Credential Access"",
     ""Quotes"": """"Exploitation for Credential Access techniques involve exploiting software vulnerabilities to compromise credentials for use in gaining unauthorized access to a system or network. This rule detects an SSL certificate with null issuer rdnSequence fields, which is a potential indicator of a man-in-the-middle attack where an adversary intercepts and modifies SSL traffic to steal credentials."""",
     ""Explanation"": ""This event is generated when an SSL certificate with null issuer rdnSequence fields is detected. This could be an indicator of a man-in-the-middle attack, where an adversary intercepts and modifies SSL traffic to steal credentials.""
   }
 ][
   {
     ""sid"": ""47640"",
     ""Technique ID"": ""T1563"",
     ""Technique Name"": ""Modify Security Policy Rules"",
     ""Quotes"": """"Modify Security Policy Rules techniques involve changing security policies or configurations to reduce or disable security controls, allowing adversaries to bypass security measures or gain unauthorized access."""",
     ""Explanation"": ""This rule detects a TLS ServerHello message with null issuer rdnSequence fields, which can be used by attackers to bypass SSL/TLS certificate validation and impersonate legitimate websites.""
   }
 ][
     ""sid"": ""47640"",
     ""Technique ID"": ""T1604"",
     ""Technique Name"": ""Certificate Transparency"",
     ""Quotes"": """"Certificate Transparency is a technique involving the monitoring of SSL certificates to detect malicious activity or unauthorized issuance. This rule detects SSL certificates with null issuer rdnSequence fields, which is often associated with certificate transparency evasion tactics used by adversaries to hide their identities and avoid detection."""",
     ""Explanation"": ""This event is generated when a null issuer rdnSequence field is detected in an SSL certificate.""
 ][
   {
     ""sid"": ""47640"",
     ""Technique ID"": ""T1593.003"",
     ""Technique name"": ""Exploit Public-Facing Application: Web Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects the presence of null issuer rdnSequence fields in the SSL certificate presented by the server, which is a common indicator of phishing attacks or web application vulnerabilities."""",
     ""Explanation"": ""The rule looks for a null issuer rdnSequence field in an SSL certificate, which is often used in phishing attacks or web application vulnerabilities.""
   }
 ][
   {
     ""sid"": ""47640"",
     ""Technique ID"": ""T1218"",
     ""Technique Name"": ""Validating Security Controls Bypass"",
     ""Quotes"": """"Validating Security Controls Bypass techniques may be used to verify whether anticipated security controls are functioning as expected. The rule is detecting a malformed SSL certificate without an issuer distinguished name sequence, indicating a potential attempt to bypass security controls that rely on issuer validation."""",
     ""Explanation"": ""Certificate with NULL subject or issuer RDN sequence fields in SSL Server Hello""
   },
   {
     ""sid"": ""47640"",
     ""Technique ID"": ""T1497"",
     ""Technique Name"": ""Virtualization/Sandbox Evasion"",
     ""Quotes"": """"Virtualization/Sandbox Evasion techniques allow adversaries to bypass or detect virtualized or sandboxed environments in which they are being executed. The rule targets a malformed SSL certificate that could be used to trick certain applications or environments into believing they are not running in a virtualized or sandboxed environment."""",
     ""Explanation"": ""Malformed SSL certificates may be used to bypass security controls by exploiting specific behaviors of applications or environments.""
   }
 ][
   {
     ""sid"": ""47640"",
     ""Technique ID"": ""T1553"",
     ""Technique name"": ""Modify Registry"",
     ""Quotes"": """"Modify Registry techniques involve modifying the Windows Registry to change system configuration, create persistence mechanisms, or hide malicious artifacts. This rule detects an attempt to modify the 'HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run' registry key, which is a common location for malware to establish persistence by adding new entries that execute malicious code during system startup."""",
     ""Explanation"": ""The rule description indicates an attempt to modify the registry key HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run, which is commonly used by malware to establish persistence.""
   }
 ]","['T1594', 'T1558', 'T1608', 'T1581', 'T1595', 'T1212', 'T1563', 'T1604', 'T1593.003', 'T1218', 'T1497', 'T1553']",['T1102']
49292,"[
   {
     ""sid"": ""49292"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a remote code execution vulnerability in WinRAR, which is a common method used by attackers to execute malicious code on target systems."""",
     ""Explanation"": ""This rule is designed to detect an attempt to exploit a remote code execution vulnerability in WinRAR, which could allow an attacker to execute arbitrary code with elevated privileges on the system where the application is installed.""
   }
 ][
         ""sid"": ""49292"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""This event is generated when activity relating to file execution, including macro execution, can be detected.""
     ][
   {
     ""sid"": ""49292"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a remote code execution vulnerability in WinRAR using an ACE (Advanced Compression Evaluator) archive, which is a common method attackers use to exploit vulnerable software by tricking users into opening malicious archives."""",
     ""Explanation"": ""Remote code execution in WinRAR ACE exploit attempt.""
   }
 ][
         ""sid"": ""49292"",
         ""Technique ID"": ""T1220"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in software on a client (local) system to execute arbitrary code or gain access to sensitive information."""",
         ""Explanation"": """"FILE-OTHER WinRAR ACE remote code execution attempt"""" event has occurred. The rule triggers an alert when an attempt is made to exploit a remote code execution vulnerability in WinRAR ACE.""
     ][
   {
     ""sid"": ""49292"",
     ""Technique ID"": ""T1202"",
     ""Technique name"": ""Indirect Command Execution"",
     ""Quotes"": """"Indirect Command Execution involves making use of utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. The rule attempts to detect an attacker using WinRAR SFX (self-extracting archive) files to execute arbitrary commands remotely by exploiting the ACE format in the archive. This technique allows attackers to execute malicious code by abusing legitimate utilities and bypassing command execution restrictions."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""49292"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting software vulnerabilities in client applications to execute arbitrary code. This rule detects an attempted exploitation of a remote code execution vulnerability in WinRAR ACE, which allows attackers to execute arbitrary code on vulnerable systems by sending a specially crafted ACE archive."""",
         ""Explanation"": ""The rule detects an attempt to exploit a remote code execution vulnerability in WinRAR ACE.""
     ],
     [
         ""sid"": ""49292"",
         ""Technique ID"": ""T1068"",
         ""Technique name"": ""Exploitation for Privilege Escalation"",
         ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting software vulnerabilities to elevate privileges on a system. This rule detects an attempted exploitation of a privilege escalation vulnerability in WinRAR ACE, which allows attackers to elevate their privileges on vulnerable systems by sending a specially crafted ACE archive."""",
         ""Explanation"": ""The rule detects an attempt to exploit a privilege escalation vulnerability in WinRAR ACE.""
     ]
 ][
   {
     ""sid"": ""49292"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a buffer overflow vulnerability in the ACE (Advanced Compression Engine) component of WinRAR by sending a specially crafted RAR archive file. Successful exploitation could allow remote code execution on the vulnerable system."",
     ""Explanation"": ""This rule detects an attempt to exploit a file format vulnerability in WinRAR by sending a specially crafted RAR archive file.""
   }
 ][
     ""sid"": ""49292"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution (RCE) attack targeting a vulnerability in WinRAR's ACE (Advanced Compression Evaluator) archive format, which is a common method attackers use to exploit vulnerable applications by sending specially crafted files."""",
     ""Explanation"": ""This event is generated when activity relating to attempted user compromise is detected.""
 }
 ][
     ""sid"": ""49292"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution attack against a WinRAR ACE vulnerability, which is a common method attackers use to exploit file compression/decompression software."""",
     ""Explanation"": ""Remote code execution vulnerability in WinRAR before 5.70 allows remote attackers to execute arbitrary code via a crafted ACE archive.""
 ][
   {
     ""sid"": ""49292"",
     ""Technique ID"": ""T1223"",
     ""Technique Name"": ""Create or Modify Files or Directories"",
     ""Quotes"": """"Create or Modify Files or Directories techniques involve creating, modifying, or deleting files or directories on a victim system. This rule detects an attempt to exploit a remote code execution vulnerability in WinRAR, which is a common method for attackers to gain unauthorized access to a system and potentially escalate privileges."""",
     ""Explanation"": ""RAR archive contains payload of type ACE that may lead to remote code execution.""
   }
 ][
   {
     ""sid"": ""49292"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution vulnerability in the WinRAR ACE file format, which attackers could exploit by sending a specially crafted ACE file to a vulnerable system."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a remote code execution vulnerability in the WinRAR ACE file format is detected.""
   }
 ]","['T1190', 'T1190', 'T1203', 'T1220', 'T1202', 'T1203', 'T1068', 'T1190', 'T1203', 'T1203', 'T1223', 'T1190']",['T1547']
42835,"[
   {
     ""sid"": ""42835"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using malicious web shells to gain unauthorized remote access to a web server. This rule detects the presence of a Chopper web shell, which attackers often use to upload and execute arbitrary code on compromised web servers."""",
     ""Explanation"": ""This event is generated when a command and control server is detected.""
   }
 ][
         ""sid"": ""42835"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell, a malicious script that provides remote access and control of a web server, to facilitate attacker interaction with a compromised system. This rule detects a web shell connection to a compromised web server by inspecting HTTP traffic for a specific sequence of characters (=""edoced_46esab"") in the HTTP client body, which is a common technique used by attackers to establish a web shell."""",
         ""Explanation"": ""Attempts to establish a command and control channel via web shell.""
     ][
   {
     ""sid"": ""42835"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web-based interface to execute arbitrary commands on a compromised system. This rule detects the presence of a web shell, 'Chopper', which is a common backdoor used by attackers to maintain covert access to compromised systems via an HTTP connection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""42835"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shells are scripts that provide remote access to a web server. They can be used to execute commands, upload and download files, and perform other administrative tasks. This rule detects the presence of the Chopper web shell, which is commonly used by attackers to maintain remote access to compromised web servers."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected""
   }
 ][
   {
     ""sid"": ""42835"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised environment. The rule indicates the presence of a Chopper web shell connection, which is a common tool used by attackers to gain remote access and execute malicious commands on a compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""42835"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve installing a web shell on a target system to maintain access to the system via a web interface. This rule detects an attempt to establish a connection to a web shell hosted on the target system, using the 'X-Forwarded-For' header and a specific POST data pattern. Web shells are often used by attackers to maintain persistent access to compromised systems and facilitate remote code execution."""",
         ""Explanation"": ""Web shell detection has been added to this rule.""
     ][
   {
     ""sid"": ""42835"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell to gain remote access to a web application, typically by exploiting a vulnerability or misconfiguration. This rule detects a connection to a web shell known as 'Chopper', which is commonly used by attackers to execute commands, upload and download files, and perform other malicious activities on compromised web servers."""",
     ""Explanation"": ""This event is generated when a web server running on port 80 is exploited by a web shell.""
   }
 ][
     {
         ""sid"": ""39384"",
         ""Technique ID"": ""T1041"",
         ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve the use of command and control channels to exfiltrate data from a victim system. The rule detects traffic indicative of a Chopper web shell, which is a common tool used by attackers to establish a persistent connection to a compromised system and exfiltrate sensitive data."""",
         ""Explanation"": ""This rule flags connections to a known malicious IP address associated with a Chopper web shell.""
     }
 ][
   {
     ""sid"": ""42835"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve the use of scripts that run on web servers to facilitate remote control of a system. This rule targets the 'Chopper' web shell, which is a commonly used malicious script that attackers utilize to interact with compromised web servers by sending and receiving arbitrary commands."""",
     ""Explanation"": ""This rule is designed to detect the use of the 'Chopper' web shell, a common technique used by attackers to gain remote control of compromised web servers.""
   }
 ][
     ""sid"": ""42835"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve installing and interacting with a web shell, which is a malicious script that provides remote access and control over a web server. The rule detects traffic that matches the characteristics of a web shell connection for Win.Backdoor.Chopper, which is often used by threat actors to maintain access to compromised web servers."""",
     ""Explanation"": ""This event is generated when activity relating to a Trojan is detected.""
 ][
   {
     ""sid"": ""42835"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques are designed to create and maintain persistent communication channels between an adversary and compromised systems. This rule detects the presence of a web shell, which is a type of malicious script that allows an attacker to remotely control a compromised web server. The web shell is using the HTTP header 'X-Forwarded-For' and the POST parameter 'edoced_46esab' to communicate with a command and control server."""",
     ""Explanation"": ""This alert is triggered when a 'web shell' (a malicious script that allows an attacker to remotely control a compromised web server) is detected. The web shell hides malicious communication in HTTP POST parameters and uses the 'X-Forwarded-For' header to disguise its origin.""
   }
 ]","['T1100', 'T1100', 'T1100', 'T1100', 'T1105', 'T1100', 'T1100', 'T1041', 'T1100', 'T1100', 'T1100']","['T1505', 'T1219']"
47847,"[
         ""sid"": ""47847"",
         ""Technique ID"": ""T1106"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control techniques enable Adversaries to communicate with compromised systems to issue instructions, retrieve status, or exfiltrate data. This rule detects an incoming connection to port 25 on an SMTP server, and it uses file data and PCRE patterns to identify malicious activity such as PowerShell command execution and data exfiltration. These techniques are commonly employed by malware to establish a command-and-control channel with a remote server for further instructions and data transfer."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""47847"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Execution Guardrails"",
         ""Quotes"": """"Execution Guardrails techniques aim to prevent certain types of process execution, such as restricting specific applications or system commands. This rule detects the execution of a Powershell command downloaded from a remote server, indicating an attempt to bypass execution restrictions or run unauthorized code."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""47847"",
         ""Technique ID"": ""T1574"",
         ""Technique name"": ""Process Injection"",
         ""Quotes"": """"Process Injection involves executing malicious code in the address space of a legitimate process. This rule identifies the use of the '|' character in the PowerShell command, which is a common technique used to inject malicious code into a running process. By abusing the legitimate process, the attacker can evade detection and gain elevated privileges."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
         ""sid"": ""47847"",
         ""Technique ID"": ""T1003"",
         ""Technique Name"": ""OS Credential Dumping"",
         ""Quotes"": """"PowerShell scripts can be used to gather credentials from memory or the hard drive as part of credential dumping activities."""",
         ""Explanation"": ""This event is generated when Win.Downloader.DDECmdExec variant download is detected.""
     ],
     [
         ""sid"": ""47847"",
         ""Technique ID"": ""T1055"",
         ""Technique Name"": ""Process Injection"",
         ""Quotes"": """"Process Injection techniques introduce malicious code into a running process. In this specific alert, attackers are executing PowerShell commands using process injection, which involves injecting the 'powershell.exe' process to execute malicious code."""",
         ""Explanation"": ""This event is generated when Win.Downloader.DDECmdExec variant download is detected.""
     ],
     [
         ""sid"": ""47847"",
         ""Technique ID"": ""T1069"",
         ""Technique Name"": ""Permission Groups Discovery"",
         ""Quotes"": """"Permission Groups Discovery techniques allow adversaries to identify and leverage access control weaknesses in the targeted environment. This alert involves exploiting permission group vulnerabilities to access sensitive information or resources."""",
         ""Explanation"": ""This event is generated when Win.Downloader.DDECmdExec variant download is detected.""
     ],
     [
         ""sid"": ""47847"",
         ""Technique ID"": ""T1105"",
         ""Technique Name"": ""Network Share Discovery"",
         ""Quotes"": """"Network Share Discovery techniques enable adversaries to identify and interact with shared network resources. This rule is designed to detect malicious actors using SMB or other protocols to discover network shares and gain access to sensitive information or systems."""",
         ""Explanation"": ""This event is generated when Win.Downloader.DDECmdExec variant download is detected.""
     ],
     [
         ""sid"": ""47847"",
         ""Technique ID"": ""T1608"",
         ""Technique Name"": ""Software Packing"",
         ""Quotes"": """"Software Packing techniques involve obfuscating malicious software or data to evade detection or analysis."""",
         ""Explanation"": ""This event is generated when Win.Downloader.DDECmdExec variant download is detected.""
     ]
 ][
         ""sid"": ""47847"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Data Encoding"",
         ""Quotes"": """"Data Encoding techniques involve encoding data to avoid detection or manipulation by security controls. This rule detects an attempt to download a PowerShell script using Base64 encoding, which is a common method used by malware to evade detection and execute malicious code."""",
         ""Explanation"": ""This rule detects PowerShell commands encoded in base64, which are decoded and executed.""
     ][
         ""sid"": ""47847"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Signed Binary Proxy Execution"",
         ""Quotes"": """"Signed Binary Proxy Execution techniques involve the use of legitimate, trusted programs or scripts (typically signed by a valid authority) to execute malicious code."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""47847"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve moving malicious tools or data into a compromised environment to execute or facilitate attacks. This rule detects the presence of a variant of the 'Win.Downloader.DDECmdExec' malware using PowerShell commands, which is commonly used by adversaries to download and execute malicious tools or payloads into the compromised system."""",
         ""Explanation"": ""This rule is designed to detect a malicious PowerShell command being used to download a malicious payload from the Internet.""
     ][
   {
     ""sid"": ""47847"",
     ""Technique ID"": ""T1140"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising or hiding the true nature of something, such as an object or communication, to present it as something innocuous or benign. This rule detects an attempt to download a malicious PowerShell script hidden within a regular text document using a novel obfuscation technique, which is a common method attackers use to bypass detection and security controls."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""47847"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system's built-in command or scripting interpreter to execute commands or scripts. This rule detects malicious activity involving the PowerShell command-line interface, which is commonly abused by attackers to execute commands and scripts on target systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""47847"",
     ""Technique ID"": ""T1098"",
     ""Technique Name"": ""Execution through API"",
     ""Quotes"": """"Execution through API techniques involve using an application programming interface (API) to execute code. This rule specifically detects the use of the PowerShell API, which can be abused by attackers to execute arbitrary code on target systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""47847"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system's built-in or third-party command-line interpreters, such as PowerShell, to execute commands, scripts, or programs. This rule detects an attempt to download and execute a malicious PowerShell script, which is a common method attackers use to execute arbitrary commands and compromise systems."""",
     ""Explanation"": """"The rule detects an attempt to download a malicious PowerShell script using the DDECmdExec variant of the Win.Downloader malware. The script is downloaded using a command-line call to PowerShell and then executed, which could allow an attacker to execute arbitrary commands and compromise the system.""""
   }
 ][
   {
     ""sid"": ""47847"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using built-in system utilities or scripting languages to execute commands, download files, or automate tasks. This rule detects the use of PowerShell, a common scripting language used by malware to execute commands and download additional payloads."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""47847"",
     ""Technique ID"": ""T1140"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising an attack as legitimate traffic by mimicking innocent protocols or applications. This rule detects an attempt to download and execute malicious PowerShell code, which attackers often use to bypass traditional security controls by blending in with legitimate PowerShell usage."""",
     ""Explanation"": ""This event is generated when malware activity is detected. The rule triggers when a PowerShell command with specific characteristics is detected in the traffic, which could indicate malicious activity.""
   }
 ][
     ""sid"": ""47847"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising an adversary, activity, or tool as a trusted entity to avoid detection or mislead defenders. The rule detects a malware download attempt using PowerShell commands hidden within a file, which is a common technique used by adversaries to bypass security controls by disguising malicious activity as legitimate processes."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ]","['T1106', 'T1059', 'T1574', 'T1003', 'T1055', 'T1069', 'T1105', 'T1608', 'T1105', 'T1105', 'T1105', 'T1140', 'T1105', 'T1098', 'T1105', 'T1059', 'T1140', 'T1140']",['T1059']
21318,"[
         ""sid"": ""21318"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (Win.Trojan.FakeAV TDSS/PurpleHaze) that uses base64-encoded communication to evade detection, which is a common method used by keyloggers to stealthily capture input data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""21318"",
         ""Technique ID"": ""T1001"",
         ""Technique name"": ""Data Obfuscation"",
         ""Quotes"": """"Data Obfuscation techniques involve modifying data to make it difficult to understand. The rule indicates the presence of a Trojan (Win.Trojan.FakeAV TDSS/PurpleHaze) that utilizes base64 encoding to obfuscate its communication, which is a common method used by malware to evade detection by security tools."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
         ""sid"": ""21318"",
         ""Technique ID"": ""T1126"",
         ""Technique name"": ""Automated Control of Network Devices"",
         ""Quotes"": """"Automated Control of Network Devices techniques allow threat actors to control network devices (e.g., routers, switches, etc.) to gain or maintain access to connected systems, redirect traffic, or eavesdrop on communications. This rule detects an attempt by the TDSS/PurpleHaze variant of the Win.Trojan.FakeAV malware to send base64-encoded requests to control network devices, likely to redirect traffic to malicious servers."""",
         ""Explanation"": ""This rule triggers when detecting malicious traffic related to the FakeAV trojan. One of its features is to send base64-encoded requests for controlling network devices.""
     ],
     [
         ""sid"": ""21318"",
         ""Technique ID"": ""T1219"",
         ""Technique name"": ""Remote Access Software"",
         ""Quotes"": """"Remote Access Software techniques involve using legitimate remote desktop and remote support software to establish a command and control channel to target systems within networks. This rule detects an attempt by the TDSS/PurpleHaze variant of the Win.Trojan.FakeAV malware to send base64-encoded requests to control remote access software, likely to gain access to target systems and remotely execute commands."""",
         ""Explanation"": ""The FakeAV malware is known to use remote access software to gain access to target systems. This rule detects attempts to send base64-encoded requests for controlling remote access software.""
     ]
 ][
   {
     ""sid"": ""21318"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using command shells and scripting languages to execute commands on a system. This rule detects outbound traffic containing a base64-encoded payload that includes commands and scripting instructions, which can be executed by the malware (Win.Trojan.FakeAV) once it gains access to the target system."""",
     ""Explanation"": ""The rule detects outbound traffic containing a base64-encoded payload that includes commands and scripting instructions, which can be executed by the malware (Win.Trojan.FakeAV) once it gains access to the target system.""
   },
   {
     ""sid"": ""21318"",
     ""Technique ID"": ""T1114"",
     ""Technique Name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve creating or modifying system processes to execute malicious code or maintain persistence. The command and scripting instructions contained in the base64-encoded payload may involve creating or modifying system processes to achieve the malware's objectives on the target system."""",
     ""Explanation"": ""The command and scripting instructions contained in the base64-encoded payload may involve creating or modifying system processes to achieve the malware's objectives on the target system.""
   }
 ][
     ""sid"": ""21318"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending data exfiltrated from a victim system to a command and control server. This rule detects the exfiltration of sensitive data such as system information and process listings over an HTTP connection with a base64-encoded payload, which is a common method used by malware to exfiltrate data stealthily."""",
     ""Explanation"": ""This rule detects the exfiltration of sensitive data, such as system information and process listings, over an HTTP connection with a base64-encoded payload.""
 ][
   {
     ""sid"": ""21318"",
     ""Technique ID"": ""T1111"",
     ""Technique Name"": ""Data Compression"",
     ""Quotes"": ""Data Compression techniques involve compressing data before sending it over a network to reduce the bandwidth and storage requirements for transmitting the data. The rule detects outbound connections from a base64-encoded string that contains compressed data, which is a common method attackers use to evade detection by hiding malicious content inside compressed files."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""21318"",
     ""Technique ID"": ""T1008"",
     ""Technique Name"": ""Fallback Channels"",
     ""Quotes"": """"Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds."""",
     ""Explanation"": ""This rule detects an outbound connection to a known malicious IP address by a known Trojan variant, using base64-encoded data within an HTTP request, which is a common technique used by malware to establish a fallback communication channel.""
   },
   {
     ""sid"": ""21318"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"Adversaries may leverage external-facing remote services to initially access and/or persist within a network."""",
     ""Explanation"": ""This rule detects an outbound connection to a known malicious IP address by a known Trojan variant, using base64-encoded data within an HTTP request, which is a common technique used by malware to establish persistence via external remote services.""
   }
 ][
         ""sid"": ""21318"",
         ""Technique ID"": ""T1048"",
         ""Technique Name"": ""Exfiltration Over Alternative Protocol"",
         ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve exfiltrating data over a different protocol than the existing command and control channel. This rule detects an outbound connection to a known command and control server for the Win.Trojan.FakeAV malware, which is known to use HTTP to exfiltrate data. The attacker uses base64 encoding to obfuscate the exfiltrated data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""21318"",
         ""Technique ID"": ""T1404"",
         ""Technique name"": ""Connection Proxy"",
         ""Quotes"": """"Connection Proxy techniques involve redirecting communications between a victim and an adversary-controlled system to relay data, such as exfiltrated information or commands, through an intermediary."""",
         ""Explanation"": ""This rule detects an outbound connection associated with the Win.Trojan.FakeAV TDSS/PurpleHaze variant, where the traffic is base64 encoded and contains a GET request.""
     ][
         ""sid"": ""21318"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve disguising or altering adversary presence or intent to mislead or avoid detection from defensive systems and security personnel. The rule detects traffic from a compromised host to a known malware command-and-control (C2) server, where the adversary attempts to masquerade as a legitimate browser by setting the 'User-Agent' header to appear like a common web browser (e.g., Mozilla). This technique is often used to evade detection and analysis by security systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""21318"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending data from a compromised system to a remote command and control server. In this case, the rule detects an outbound connection from a host infected with the FakeAV TDSS/PurpleHaze variant of malware. The malware uses a base64-encoded GET request to exfiltrate data to a remote server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""21318"",
         ""Technique ID"": ""T1574"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script that provides adversaries with remote access to and control of a web server or application. The rule detects outbound traffic from an infected host attempting to connect to a web shell hosted on an external server, indicating that the adversary is using the web shell to maintain access to the compromised system."""",
         ""Explanation"": ""This rule detects outbound traffic from an infected host attempting to connect to a web shell hosted on an external server.""
     ]","['T1056', 'T1001', 'T1126', 'T1219', 'T1059', 'T1114', 'T1041', 'T1111', 'T1008', 'T1133', 'T1048', 'T1404', 'T1132', 'T1041', 'T1574']",['T1001']
19671,"[
   {
     ""sid"": ""19671"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploit Software Component"",
     ""Quotes"": """"Exploit Software Component techniques involve exploiting software components or frameworks to gain unauthorized access, execute arbitrary code, or achieve other malicious objectives. This rule detects an attempted exploitation of a Microsoft Internet Explorer XSLT memory corruption vulnerability, which could allow attackers to execute arbitrary code within the context of the user's browser."""",
     ""Explanation"": ""The rule triggers on an attempt to exploit a memory corruption vulnerability in Microsoft Internet Explorer, which could enable attackers to gain control of the target system.""
   }
 ][
  ""sid"": ""19671"",
  ""Technique ID"": ""T1189"",
  ""Technique name"": ""Exploit Software Vulnerability"",
  ""Quotes"": """"Exploit Software Vulnerability techniques involve leveraging vulnerabilities in software to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a memory corruption vulnerability in Microsoft Internet Explorer via malicious XSLT, which is a common method attackers use to exploit software vulnerabilities by manipulating inputs or data structures."""",
  ""Explanation"": ""This event is generated when activity relating to an attempted attack against a browser is detected.""
 ][
   {
     ""sid"": ""19671"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a memory corruption vulnerability in Microsoft Internet Explorer's XSLT processing engine, which could allow remote attackers to execute arbitrary code on the targeted system."""",
     ""Explanation"": ""This rule detects attempts to exploit a remote code execution vulnerability in the XSLT engine of Microsoft Internet Explorer 6 through 10. The vulnerability is triggered when a user visits a specially crafted website that contains malicious XSLT code. This code can then be executed by the XSLT engine, allowing the attacker to gain control of the user's computer.""
   }
 ][
   {
     ""sid"": ""19671"",
     ""Technique ID"": ""T1230"",
     ""Technique name"": ""Exploit Software Application"",
     ""Quotes"": """"Exploit Software Application techniques involve leveraging flaws or vulnerabilities in software applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a memory corruption vulnerability in Microsoft Internet Explorer (IE) using a specially crafted XSLT file. By triggering this vulnerability, an attacker could gain remote code execution capabilities on the target system."""",
     ""Explanation"": ""This rule detects a possible attempt to exploit a vulnerability in Microsoft Internet Explorer using the XSLT component. The XSLT component is a transformation engine that can be used to process and transform XML data.""
   },
   {
     ""sid"": ""19671"",
     ""Technique ID"": ""T1546"",
     ""Technique name"": ""Modify Registry"",
     ""Quotes"": """"Modify Registry techniques involve modifying the registry to change system settings, create persistence mechanisms, or compromise system integrity. This rule detects an attempt to modify the registry key ""HKLM\\SOFTWARE\\Microsoft\\Internet Explorer\\Main\\FeatureControl\\FEATURE_BROWSER_EMULATION"" to enable browser emulation mode, which could allow an attacker to bypass security restrictions and execute malicious code in the context of the browser."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to modify the registry key HKLM\\SOFTWARE\\Microsoft\\Internet Explorer\\Main\\FeatureControl\\FEATURE_BROWSER_EMULATION. This key is used to control the browser emulation mode setting in Internet Explorer. By modifying this key, an attacker could potentially bypass security restrictions and execute malicious code in the context of the browser.""
   }
 ][
   {
     ""sid"": ""19671"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploit Software Application"",
     ""Quotes"": """"Exploit Software Application techniques involve exploiting vulnerabilities in software applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a memory corruption vulnerability in Microsoft Internet Explorer's XSLT engine, which could allow attackers to execute arbitrary code on the victim's system."""",
     ""Explanation"": ""The rule looks for specific patterns in HTTP traffic that are indicative of an attempt to exploit the XSLT memory corruption vulnerability.""
   },
   {
     ""sid"": ""19671"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a memory corruption vulnerability in Microsoft Internet Explorer's XSLT engine, which is a common attack vector used by attackers to target web browsers."""",
     ""Explanation"": ""The rule looks for specific patterns in HTTP traffic that are indicative of an attempt to exploit the XSLT memory corruption vulnerability.""
   }
 ][
   {
     ""sid"": ""19671"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications to execute arbitrary code. This rule detects an attempt to exploit a remote memory corruption vulnerability in Internet Explorer through a malformed XSLT/XML document sent by the web server on unsuspecting clients. By exploiting this vulnerability, attackers can potentially execute arbitrary code on the client's system."""",
     ""Explanation"": ""This rule is designed to detect an attempt to exploit a client-side vulnerability in Microsoft Internet Explorer XSLT by sending a specially crafted XSLT/XML document to unsuspecting clients, which may lead to remote code execution.""
   }
 ][
         ""sid"": ""19671"",
         ""Technique ID"": ""T1070"",
         ""Technique name"": ""Browser Exploitation"",
         ""Quotes"": """"Browser Exploitation techniques involve attacking vulnerabilities in web browsers to execute arbitrary code or gain unauthorized access. This rule specifically detects an attempted exploitation of a memory corruption vulnerability in Microsoft Internet Explorer's XSLT processing engine, which could allow an attacker to execute arbitrary code on the victim's system."""",
         ""Explanation"": ""This event is generated when activity relating to Microsoft Internet Explorer XSLT memory corruption attempt is detected.""
     ][
   {
     ""sid"": ""19671"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a memory corruption vulnerability in Microsoft Internet Explorer's handling of XSLT, which could allow remote attackers to execute arbitrary code on vulnerable systems."""",
     ""Explanation"": ""This rule triggers alert if it detects an exploit attempt on a Microsoft Internet Explorer XSLT memory corruption vulnerability.""
   }
 ][
   {
     ""sid"": ""19671"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a memory corruption vulnerability in Microsoft Internet Explorer using an XSLT attack, which is a common method attackers use to target web browsers by manipulating XML documents."""",
     ""Explanation"": ""This rule detects an exploit targeting a memory corruption vulnerability in Internet Explorer using an XSLT attack. XSLT is a language for transforming XML documents, and this exploit attempts to use a specially crafted XSLT document to cause a memory corruption in Internet Explorer, which could lead to arbitrary code execution.""
   }
 ][
   {
     ""sid"": ""19671"",
     ""Technique ID"": ""T1220"",
     ""Technique Name"": ""XSL Script Processing"",
     ""Quotes"": """"XSL Script Processing techniques involve bypassing application control and obscuring execution of code by embedding scripts inside XSL files. This rule detects an attempt to exploit a memory corruption vulnerability in Microsoft Internet Explorer through XSLT script processing, which allows adversaries to execute arbitrary code."""",
     ""Explanation"": ""This event is generated when an attempt to exploit an XSLT script processing vulnerability in Internet Explorer is detected.""
   }
 ][
     ""sid"": ""19671"",
     ""Technique ID"": ""T1202"",
     ""Technique Name"": ""Exploit In-Memory Corruption"",
     ""Quotes"": """"Exploit In-Memory Corruption techniques involve attacking memory corruption vulnerabilities in software to gain arbitrary code execution or read data from memory. This rule detects a malicious script attempting to exploit an XML(Extensible Markup Language) Stylesheet Language(XSL) memory corruption vulnerability in Microsoft Internet Explorer, which is a common method used to execute arbitrary code by corrupting the memory of an application."""",
     ""Explanation"": ""The rule matches an XML (Extensible Markup Language) Stylesheet Language (XSL) memory corruption vulnerability in Microsoft Internet Explorer.""
 ]","['T1203', 'T1189', 'T1203', 'T1230', 'T1546', 'T1203', 'T1190', 'T1203', 'T1070', 'T1040', 'T1190', 'T1220', 'T1202']",['T1220']
38950,"[
   {
     ""sid"": ""38950"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques are used to move data from a victim system to a remote system under the control of the adversary. The rule detects an attempt by a password stealing Trojan (Win.Trojan.PassStealer) to exfiltrate passwords by sending them to a remote server. This is a common method used by malware to steal sensitive data from compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""38950"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve obtaining hashed or cleartext plaintext credentials from a system. The rule is triggered when a Trojan attempts to exfiltrate passwords from an infected system. The rule specifically checks for strings related to 'passwords' and 'password recordings', indicating the presence of credential theft activity."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""38950"",
     ""Technique ID"": ""T1020"",
     ""Technique Name"": ""Password Stealing"",
     ""Quotes"": """"Password Stealing techniques involve obtaining credentials, such as passwords, from legitimate users through various mechanisms, such as keyloggers or phishing scams. This rule detects a Trojan (PassStealer) attempting to exfiltrate passwords, which aligns with the Password Stealing tactic."""",
     ""Explanation"": ""This rule generates an alert when an attempt is made to exfiltrate passwords via a Trojan.""
   }
 ][
         ""sid"": ""38950"",
         ""Technique ID"": ""T1020"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve removing data from a target network or system. The rule indicates the detection of a Trojan (PassStealer) attempting to exfiltrate passwords, which is a common method used by attackers to steal sensitive information."""",
         ""Explanation"": ""The rule detects exfiltration of data.""
     ][
     {
         ""sid"": ""38950"",
         ""Technique ID"": ""T1020"",
         ""Technique Name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve unauthorized transfer of data from a targeted network or system to an external location. This rule detects the attempted exfiltration of passwords by a Trojan (PassStealer) over a file transfer protocol (FTP) connection. The rule specifically matches patterns related to password recording and IP addresses, indicating that the Trojan is attempting to steal and send sensitive data to an external destination."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""38950"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve the transfer of collected data to a remote system or resource via a command-and-control (C2) channel. This rule detects exfiltration of passwords to a remote system, likely harvested by Win.Trojan.PassStealer, through an FTP connection."""",
     ""Explanation"": ""This event is generated when a Trojan attempts to exfiltrate passwords.""
   }
 ][
         ""sid"": ""38950"",
         ""Technique ID"": ""T1020"",
         ""Technique Name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques allow adversaries to steal or transfer data from a compromised network to external locations. This rule detects a Windows-based Trojan (PassStealer) attempting to exfiltrate passwords. The rule matches on specific text strings ('Passwords Recorded On', 'Time of Recording', and 'IP Address') within a captured file, indicating the presence of a data exfiltration attempt."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""38950"",
         ""Technique ID"": ""T1020"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve transferring data from a compromised system to an external location. This rule detects an attempt by a Trojan (Win.Trojan.PassStealer) to exfiltrate passwords, which is a common method used by attackers to steal sensitive information."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""38950"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Automated Exfiltration"",
     ""Quotes"": """"Automated Exfiltration techniques involve the use of automated processes to extract data from a compromised system. The rule detects an attempt by the malware Win.Trojan.PassStealer to exfiltrate passwords from the compromised system, which is a common goal of many data theft attacks."""",
     ""Explanation"": ""This rule triggers an alert in the event of an attempt to steal a user's passwords over FTP by a malware called Win.Trojan.PassStealer.""
   }
 ][
   {
     ""sid"": ""38950"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Password Policy Discovery"",
     ""Quotes"": """"Password Policy Discovery techniques involve obtaining information about an organization's password policies and practices, such as password length and complexity requirements, to aid in the development of effective password cracking strategies. The rule identifies an attempt by malware to exfiltrate passwords, suggesting that the attacker is attempting to gain unauthorized access to the system by exploiting weak password policies or poor password hygiene."""",
     ""Explanation"": ""The rule detects attempts to exfiltrate passwords by a Trojan, which is a type of malware that can steal sensitive information from a compromised system.""
   }
 ][
   {
     ""Sid"": ""38950"",
     ""Technique ID"": ""T1020"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve removing or copying sensitive data from a network or system. In this instance, the rule detects an attempt by the malware 'Win.Trojan.PassStealer' to exfiltrate passwords by sending them to an external destination over FTP."""",
     ""Explanation"": ""The event in question is related to file data and a Trojan attempting to exfiltrate passwords. ""
   },
   {
     ""sid"": ""38950"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or malicious software to a target environment. The rule indicates that the malware is attempting to establish an outbound connection to exfiltrate data, which is a common method used by malware to transfer stolen information to a remote location."""",
     ""Explanation"": ""The event in question is related to file data and a Trojan attempting to exfiltrate passwords. ""
   }
 ]","['T1020', 'T1020', 'T1020', 'T1020', 'T1020', 'T1041', 'T1020', 'T1020', 'T1020', 'T1020', 'T1020', 'T1105']",['T1020']
57253,"[
   {
     ""sid"": ""57253"",
     ""Technique ID"": ""T1127"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending emails that appear to come from a trusted source to deceive recipients into providing sensitive information or clicking on malicious links. This rule detects an attempt to exploit a vulnerability in Microsoft Exchange Server that allows attackers to perform arbitrary file writes, which could lead to unauthorized access or the execution of malicious code."""",
     ""Explanation"": ""This vulnerability could be used to compromise Microsoft Exchange Server by sending a specially crafted email to the server.""
   }
 ][
         ""sid"": ""57253"",
         ""Technique ID"": ""T1587"",
         ""Technique name"": ""Boot or Logon Autostart Execution"",
         ""Quotes"": """"Boot or Logon Autostart Execution techniques involve executing code or scripts at system boot or user logon to establish persistence. This rule detects an attempt to modify a Windows registry key related to the Microsoft Exchange Server's 'DDIService.svc' component, which is a common method attackers use to achieve persistence by adding malicious code to the autostart registry key."""",
         ""Explanation"": ""Arbitrary file write attempt on Microsoft Exchange Server and Exchange Online""
     ][
     ""sid"": ""57253"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a Microsoft Exchange Server URL-based arbitrary file write vulnerability, which allows attackers to upload and write arbitrary files to the server's file system."""",
     ""Explanation"": ""This event is generated when a buffer overflow attack is detected on a Microsoft Exchange Server 2013 via RPC.""
 ][
     {
         ""sid"": ""57253"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in Microsoft Exchange Server to write arbitrary files, which can lead to remote code execution."""",
         ""Explanation"": ""This rule is designed to detect and block attempts to exploit a vulnerability in Microsoft Exchange Server that could allow an attacker to write arbitrary files to the server. The rule looks for specific URI and HTTP client body patterns that are associated with this exploit.""
     },
     {
         ""sid"": ""57253"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploit Web Application"",
         ""Quotes"": """"Exploit Web Application techniques involve targeting vulnerabilities in web applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in Microsoft Exchange Server that could lead to remote code execution."""",
         ""Explanation"": ""This rule is designed to detect and block attempts to exploit a vulnerability in Microsoft Exchange Server that could allow an attacker to exploit a web application vulnerability to gain unauthorized access or execute arbitrary code.""
     }
 ][
   {
     ""sid"": ""57253"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted write operation to an arbitrary file via Microsoft Exchange Server's 'DDIService.svc/SetObject' URI, indicating an attempt to exploit a vulnerability in the application."""",
     ""Explanation"": ""HTTP POST request with ""filepathname"" in body to ""/DDIService.svc/SetObject"" URI""
   }
 ][
   {
     ""sid"": ""57253"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""Exploitation for Uncontrolled Resource Consumption"",
     ""Quotes"": """"Exploitation for Uncontrolled Resource Consumption techniques involve exploiting application vulnerabilities to cause excessive resource consumption which degrades or denies service to legitimate users."""",
     ""Explanation"": ""This rule detects an attempted arbitrary file write vulnerability in Microsoft Exchange Server which could allow an attacker to execute arbitrary code on the target system.""
   }
 ][
     {
         ""sid"": ""57253"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file write attack on Microsoft Exchange Server's 'DDIService.svc' endpoint, which is a common method attackers use to exploit web applications by manipulating requests to manipulate files on the server."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in Microsoft Exchange Server 2013 SP1 is detected.""
     }
 ][
   {
     ""sid"": ""57253"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file write on a Microsoft Exchange Server via the '/DDIService.svc/SetObject' URI, which is used to manipulate files on the server."",
     ""Explanation"": ""This rule detects when a user attempts to write a file to the server, which could be used to upload malicious code or modify system files.""
   }
 ][
   {
     ""sid"": ""57253"",
     ""Technique ID"": ""T1112"",
     ""Technique name"": ""Lateral Movement"",
     ""Quotes"": """"Lateral Movement techniques involve moving within a compromised network to access other systems, escalate privileges, or maintain access to a target network. This rule detects an attempted abuse of the DDIService.svc in Microsoft Exchange Server to perform arbitrary file writes, which could allow an attacker to gain persistent access to the server and move laterally within the network."""",
     ""Explanation"": ""The rule suggests a potential attempt at lateral movement within the network, as it detects an attack targeting the DDIService.svc in Microsoft Exchange Server.""
   },
   {
     ""sid"": ""57253"",
     ""Technique ID"": ""T1543"",
     ""Technique name"": ""File and Directory Permissions Modification"",
     ""Quotes"": """"File and Directory Permissions Modification techniques involve modifying file or directory permissions to gain access to sensitive data or to maintain persistence on a system. This rule detects an attempt to perform arbitrary file writes, which could allow an attacker to modify file permissions and gain access to sensitive data or maintain persistence on the server."""",
     ""Explanation"": ""The rule detects an attacker's attempt to perform arbitrary file writes. This could allow an attacker to modify file permissions and gain access to sensitive data or establish persistence on the server.""
   }
 ][
         ""sid"": ""57253"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file write attack on the Microsoft Exchange Server 'DDIService.svc/SetObject' endpoint, which could allow attackers to upload and execute malicious files on the server."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a buffer overflow vulnerability in the Microsoft Exchange Server is detected.""
     ][
   {
     ""sid"": ""57253"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file write in Microsoft Exchange Server through the ""/DDIService.svc/SetObject"" URI, which is a common method attackers use to exploit web applications and gain unauthorized access to the system."""",
     ""Explanation"": ""Arbitrary file write vulnerability in Microsoft Exchange before 2016 allows remote attackers to execute arbitrary code or cause a denial of service (DoS) via a crafted request to the Exchange OWA service.""
   },
   {
     ""sid"": ""57253"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file write in Microsoft Exchange Server through the ""/DDIService.svc/SetObject"" URI, which is a common method attackers use to exploit web applications and gain unauthorized access to the system."""",
     ""Explanation"": ""Arbitrary file write vulnerability in Microsoft Exchange before 2016 allows remote attackers to execute arbitrary code or cause a denial of service (DoS) via a crafted request to the Exchange OWA service.""
   }
 ]","['T1127', 'T1587', 'T1189', 'T1190', 'T1203', 'T1190', 'T1204', 'T1190', 'T1190', 'T1112', 'T1543', 'T1190', 'T1204', 'T1190']",['T1106']
50466,"[
     ""sid"": ""50466"",
     ""Technique ID"": ""T1588"",
     ""Technique name"": ""Poisoning"",
     ""Quotes"": """"Poisoning techniques involve tampering with data that is used by the victim's system, such as modifying network routing tables to disrupt network traffic or modifying data in memory to bypass security controls. This rule detects an attempt to poison Responder servers, which are used for NetBIOS name resolution, by sending malicious SMB packets. The attack can disrupt network communication and allow attackers to redirect traffic to their own malicious servers."""",
     ""Explanation"": ""This event is generated when activity related to poisoning is detected.""
 ][
   {
     ""sid"": ""50466"",
     ""Technique ID"": ""T1583"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve using tools and techniques to scan for online systems and services in a network in order to identify potential targets for attack. The rule detects a Responder Poisoning attack, which is a technique commonly used to discover and attack Windows systems by sending specially crafted SMB packets to a target host. The rule looks for specific patterns within these SMB packets to identify the attack."""",
     ""Explanation"": ""SMB Negotiation request looks suspicious - possible attack attempt.""
   }
 ][
   {
     ""sid"": ""50466"",
     ""Technique ID"": ""T1543"",
     ""Technique Name"": ""Service Execution"",
     ""Quotes"": """"Service Execution involves adversaries executing a process to accomplish a specific goal. This rule targets a specific attack vector involving SMB and could be used to establish a persistent presence on a system."""",
     ""Explanation"": ""This rule is designed to detect attempts to compromise a system via the SMB protocol. SMB is a network protocol that allows computers to share files and printers, and it is a common target for attackers because it can be used to gain unauthorized access to a system or to spread malware.""
   },
   {
     ""sid"": ""50466"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""SMB/RPC Reconnaissance"",
     ""Quotes"": """"SMB/RPC Reconnaissance involves adversaries querying a SMB/RPC server to gather information. This rule targets a specific attack vector involving SMB and could be used to gather information about a system prior to launching an attack."""",
     ""Explanation"": ""This rule is designed to detect attempts to gather information about a system via the SMB protocol. SMB is a network protocol that allows computers to share files and printers, and it is a common target for attackers because it can be used to gain unauthorized access to a system or to spread malware.""
   }
 ][
         ""sid"": ""50466"",
         ""Technique ID"": ""T1543"",
         ""Technique name"": ""Responder Poisoning"",
         ""Quotes"": """"Attackers can use Responder to poison NetBIOS name resolution, allowing them to resolve NetBIOS names to IP addresses of their choosing.Responder is a tool created by Laurent Gaffie that allows attackers to poison NetBIOS name resolution. It can be used to redirect traffic to a malicious server, allowing attackers to intercept and modify communications."""",
         ""Explanation"": ""This rule detects an attempt to poison NetBIOS name resolution, which is a technique used by attackers to redirect traffic to a malicious server.""
     ],
     [
         ""sid"": ""50466"",
         ""Technique ID"": ""T1574"",
         ""Technique name"": ""Privilege Escalation"",
         ""Quotes"": """"Privilege Escalation techniques allow attackers to elevate their privileges to gain greater access and control over a system. Once an attacker has gained a foothold on a system, they may attempt to escalate their privileges to gain administrative access."""",
         ""Explanation"": ""This rule detects an attempt to escalate privileges, which is a technique used by attackers to gain greater access and control over a system.""
     ],
     [
         ""sid"": ""50466"",
         ""Technique ID"": ""T1482"",
         ""Technique name"": ""Domain Policy Modification"",
         ""Quotes"": """"Domain Policy Modification techniques allow attackers to modify Active Directory policies to gain greater control over a network. Attackers may modify group policies to add or remove users, change permissions, or disable security features."""",
         ""Explanation"": ""This rule detects an attempt to modify Active Directory policies, which is a technique used by attackers to gain greater control over a network.""
     ],
     [
         ""sid"": ""50466"",
         ""Technique ID"": ""T1068"",
         ""Technique name"": ""Vulnerability Scanning"",
         ""Quotes"": """"Vulnerability Scanning techniques involve using tools or scripts to identify vulnerabilities in systems. Attackers may use vulnerability scanners to identify unpatched systems or systems with exploitable vulnerabilities that can be used to gain unauthorized access."""",
         ""Explanation"": ""This rule detects an attempt to scan for vulnerabilities, which is a technique used by attackers to identify unpatched systems or systems with exploitable vulnerabilities.""
     ]
 ][
   {
     ""sid"": ""50466"",
     ""Technique ID"": ""T1573"",
     ""Technique Name"": ""Modify Registry"",
     ""Quotes"": """"Modify Registry techniques allow the modification of the target system's registry in order to persist adversarial activity, disable security features, or establish lateral movement capabilities. This rule specifically looks for an SMB negotiation request that attempts to poison the Responder service, which can lead to the attacker modifying the registry to achieve persistence or gain elevated privileges."""",
     ""Explanation"": ""This event is generated when an SMB negotiation request that attempts to poison the Responder service is detected. This can be used by an attacker to modify the registry and achieve persistence or gain elevated privileges.""
   }
 ][
         ""sid"": ""50466"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve using publicly accessible remote services to facilitate access to a network. This rule detects a Responder poisoning SMB negotiation attack, which involves exploiting a vulnerability in the SMB protocol to redirect network traffic and compromise systems. The rule specifically looks for a sequence of SMB packets that are characteristic of this attack, indicating that an attacker is attempting to establish a foothold on the network."""",
         ""Explanation"": ""This rule is designed to detect SMBResponder attacks, which use a rogue DHCP server to redirect traffic at the network level.""
     ][
   {
     ""sid"": ""50466"",
     ""Technique ID"": ""T1482"",
     ""Technique name"": ""Domain Trust Discovery"",
     ""Quotes"": """"Domain Trust Discovery techniques involve gathering information on trust relationships between domains to identify potential lateral movement opportunities. This rule detects malicious actors attempting to compromise Responder, a legitimate SMB signing tool used by Active Directory, by sending a specially crafted SMB packet that can potentially reveal domain trust relationships."""",
     ""Explanation"": ""This event is generated when a threat actor attempts to compromise Responder, a legitimate SMB signing tool used by Active Directory, by sending a specially crafted SMB packet that can potentially reveal domain trust relationships""
   }
 ][
         ""sid"": ""50466"",
         ""Technique ID"": ""T1598"",
         ""Technique name"": ""Responder exfiltration Over SMB/HTTP"",
         ""Quotes"": """"Responder exfiltration Over SMB/HTTP techniques involve exfiltrating data over SMB/HTTP using Responder, a tool that sends crafted SMB/HTTP packets to poison the victim's DNS cache and redirect network traffic to the attacker's controlled server. The rule looks for a sequence of SMB packets that are associated with the Responder tool, indicating an attempt to poison the victim's DNS cache."""",
         ""Explanation"": ""This event is generated when an SMB negotiation attempt is detected that can lead to poisoning of the target host's DNS cache.""
     ][
         ""sid"": ""50466"",
         ""Technique ID"": ""T1018"",
         ""Technique name"": ""SMB Relay"",
         ""Quotes"": """"SMB Relay techniques involve forwarding client SMB requests to a remote SMB server, allowing adversaries to access network resources and potentially elevate privileges. This rule detects an attempt to exploit a vulnerability in the SMB protocol by poisoning the Responder service, which could allow attackers to establish a relay and gain unauthorized access to the network."""",
         ""Explanation"": ""The event is generated when exploit attempt against SMBv2 is observed.""
     ][
     ""sid"": ""50466"",
     ""Technique ID"": ""T1582"",
     ""Technique name"": ""SMB Relay"",
     ""Quotes"": """"SMB Relay techniques involve abusing the SMB protocol to relay communications and bypass network restrictions. This rule detects an SMB negotiation attack attempt, suggesting an attempt to relay authentication or other network traffic through an intermediary system."""",
     ""Explanation"": ""The rule looks for attempts to negotiate an SMB session over TCP port 445, specifically looking for certain patterns in the SMB negotiation request.""
 ][
     {
         ""sid"": ""23934"",
         ""Technique ID"": ""T1595.001"",
         ""Technique name"": ""SMB Relay"",
         ""Quotes"": """"SMB Relay is a technique that allows an attacker to relay SMB traffic between a compromised and targeted system, enabling the attacker to execute code or steal data on the targeted system. This rule detects a malicious SMB negotiation attempt with the Responder poisoner tool, which is a common tool used by attackers to perform SMB Relay attacks."""",
         ""Explanation"": ""The rule detects a malicious SMB negotiation attempt with the Responder poisoner tool, which is a common tool used by attackers to perform SMB Relay attacks.""
     },
     {
         ""sid"": ""23934"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""The rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.""
     },
     {
         ""sid"": ""23934"",
         ""Technique ID"": ""T1484"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve an attacker impersonating another user, system, or service to gain unauthorized access to resources or perform malicious actions. This rule detects an attempt to impersonate a legitimate user by spoofing the SMB request's source IP address, which is a common technique used by attackers to evade detection and gain access to unauthorized resources."""",
         ""Explanation"": ""The rule detects an attempt to impersonate a legitimate user by spoofing the SMB request's source IP address, which is a common technique used by attackers to evade detection and gain access to unauthorized resources.""
     }
 ]","['T1588', 'T1583', 'T1543', 'T1083', 'T1543', 'T1574', 'T1482', 'T1068', 'T1573', 'T1133', 'T1482', 'T1598', 'T1018', 'T1582', 'T1595.001', 'T1190', 'T1484']",['T1187']
25503,"[
     {
         ""sid"": ""25503"",
         ""Technique ID"": ""T1014"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control techniques involve establishing and maintaining communications between an attacker and implants in target environments. This rule detects activity associated with the Necurs rootkit, which commonly uses the '/cgi-bin/sba.cgi' path to establish communication with its command and control server."""",
         ""Explanation"": ""This rule identifies activity associated with the Necurs botnet, specifically the POST request to ""/cgi-bin/sba.cgi"" which is used by Necurs-infected systems to communicate with the botnet's command and control infrastructure.""
     }
 ][
   {
     ""sid"": ""25503"",
     ""Technique ID"": ""T1136"",
     ""Technique name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve creating or modifying system processes to evade detection, elevate privileges, or establish persistence. This rule detects Necurs Rootkit activity through an HTTP POST request to '/cgi-bin/sba.cgi' with specific malicious content, which is associated with system process manipulation used by rootkits."""",
     ""Explanation"": ""The rule is a detection for the Necurs Rootkit, a malware that creates or modifies system processes to gain unauthorized access and control of a system.""
   }
 ][
         ""sid"": ""25503"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a remote code execution vulnerability in the Symantec Web Gateway 'sba.cgi' script, which is a common method attackers use to exploit web applications."""",
         ""Explanation"": ""This rule detects an attempted exploitation of a remote code execution vulnerability in the Symantec Web Gateway 'sba.cgi' script.""
     ][
     {
         ""sid"": ""25503"",
         ""Technique ID"": ""T1014"",
         ""Technique name"": ""Rootkit"",
         ""Quotes"": """"Rootkit techniques involve hiding the presence of programs, files, network connections, services, drivers, and other system components to evade detection and maintain persistence. The rule detects the presence of a Necurs Rootkit, which is known for using the 'sba.cgi' script to establish communication with its command and control server. This technique is commonly used by rootkits to maintain a persistent presence on a system and evade detection."""",
         ""Explanation"": ""This event is generated when activity relating to the Necurs Rootkit is detected.""
     }
 ][
     ""sid"": ""25503"",
     ""Technique ID"": ""T1014"",
     ""Technique name"": ""Create System Restore Point"",
     ""Quotes"": """"Create System Restore Point techniques involve creating a point-in-time snapshot of the system that can be used to restore the system to a previous state. A system restore point can be created by an adversary prior to making changes to the system to provide a means of reverting changes if they need to regain access to the system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""25503"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging and abusing external-facing services offered by third parties to facilitate access, persistence, or data exfiltration. This rule detects malicious activity associated with the Necurs botnet, which often uses compromised websites or legitimate-looking domains as command and control servers to communicate with infected systems."""",
     ""Explanation"": ""The rule detects a POST request to ""/cgi-bin/sba.cgi"" with a specific URI and a specially crafted HTTP body, which is a pattern associated with Necurs botnet activity. Necurs is known for using compromised websites to host malicious content and establish a command and control channel.""
   },
   {
     ""sid"": ""25503"",
     ""Technique ID"": ""T1014"",
     ""Technique name"": ""Remote Access Software"",
     ""Quotes"": """"Remote Access Software techniques involve using legitimate remote access tools or services to gain access to and control remote systems. In this case, the rule detects malicious activity associated with the Necurs botnet, which is known to use remote access tools to establish persistence and control over infected systems."""",
     ""Explanation"": ""The rule detects a POST request to ""/cgi-bin/sba.cgi"" with a specific URI and a specially crafted HTTP body, which is a pattern associated with Necurs botnet activity. Necurs has been observed using remote access tools to establish a persistent presence on compromised systems and allow remote control by attackers.""
   }
 ][
         ""sid"": ""25503"",
         ""Technique ID"": ""T1014"",
         ""Technique Name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve disguising the true nature of network communications by manipulating network packets to appear as legitimate traffic. This rule detects attempts by botnets to communicate with malicious servers while disguising themselves as normal web traffic. Botnets often use compromised devices as proxies to conceal their tracks and avoid detection."""",
         ""Explanation"": ""HTTP POST request to Necurs Botnet sba.cgi POST request to Necurs Botnet sba.cgi""
     ],
     [
         ""sid"": ""25503"",
         ""Technique ID"": ""T1071"",
         ""Technique Name"": ""Remote System Discovery"",
         ""Quotes"": """"Remote System Discovery techniques involve gathering information about remote systems, such as listing files and directories. This rule detects attempts to enumerate remote systems using HTTP requests to discover potential targets. Adversaries may use this technique for reconnaissance before launching targeted attacks."""",
         ""Explanation"": ""This event is used to detect botnets using the Necurs Rootkit.""
     ],
     [
         ""sid"": ""25503"",
         ""Technique ID"": ""T1048"",
         ""Technique Name"": ""Exfiltration over Alternative Protocol"",
         ""Quotes"": """"Exfiltration over Alternative Protocol techniques involve stealing data by exfiltrating it over a different protocol than that of the existing command and control channel. This rule detects outbound HTTP traffic from infected hosts to a malicious IP address that is different from the known command and control channels used by the Necurs botnet. Adversaries may use this technique to avoid detection and evade network defenses."""",
         ""Explanation"": ""This event is used to detect botnets using the Necurs Rootkit.""
     ]
 ][
     ""sid"": ""25503"",
     ""Technique ID"": ""T1014"",
     ""Technique name"": ""Credential Harvesting"",
     ""Quotes"": """"Credential Harvesting techniques involve obtaining authentication credentials, such as usernames and passwords, to access systems and applications."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected. The rule looks for a POST request to the ""/cgi-bin/sba.cgi"" URI, which is associated with the Necurs botnet, known for credential harvesting.""
 ][
     {
         ""sid"": ""25503"",
         ""Technique ID"": ""T1014"",
         ""Technique name"": ""Data Staged"",
         ""Quotes"": """"Data Staging involves storing data obtained during the course of the operation within target systems or networks. This rule detects a POST request to a known Necurs rootkit's 'sba.cgi' script, which commonly serves as a staging point for the malware to store sensitive data collected from the infected system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
         ""sid"": ""25503"",
         ""Technique ID"": ""T1014"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve disguising or encoding files or information to evade detection or analysis. This rule specifically detects the presence of the Necurs Rootkit, which is known for using obfuscation techniques, and the presence of malicious code in the 'sba.cgi' CGI script."""",
         ""Explanation"": ""This rule detects an attempt by the Necurs rootkit to establish a connection to the command and control server by posting malicious code to a web server via the 'sba.cgi' CGI script. The presence of non-ASCII characters in the HTTP client body is suspicious and indicates potential obfuscation.""
     ][
   {
     ""sid"": ""25503"",
     ""Technique ID"": ""T1014"",
     ""Technique name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve creating new processes or modifying existing ones with malicious code to maintain persistence or perform an action. The rule detects malicious activity by the Necurs Rootkit, which involves creating and modifying its own processes to maintain persistence and perform its malicious functions."""",
     ""Explanation"": ""Necurs Botnet uses the vulnerability CVE-2017-11882 to download a malicious payload and execute it, resulting in the creation and persistence of its processes on the infected system.""
   }
 ]","['T1014', 'T1136', 'T1190', 'T1014', 'T1014', 'T1133', 'T1014', 'T1014', 'T1071', 'T1048', 'T1014', 'T1014', 'T1014', 'T1014']",['T1014']
56610,"[
     {
         ""sid"": ""56610"",
         ""Technique ID"": ""T1041"",
         ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel involves using command and control channels to exfiltrate data. This rule detects outbound traffic from a Cobalt Strike beacon, which is a common tool used by attackers to establish a command and control channel for data exfiltration and other malicious activities."""",
         ""Explanation"": ""This event is generated when malicious activity relating to Cobalt Strike beacon is detected.""
     },
     {
         ""sid"": ""56610"",
         ""Technique ID"": ""T1485"",
         ""Technique Name"": ""Data Destruction"",
         ""Quotes"": """"Data Destruction involves destroying data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. This rule detects a Cobalt Strike beacon attempting to exfiltrate data, which could potentially lead to data destruction if the exfiltration is successful."""",
         ""Explanation"": ""This event is generated when malicious activity relating to Cobalt Strike beacon is detected.""
     }
 ][
         ""sid"": ""56610"",
         ""Technique ID"": ""T1563"",
         ""Technique name"": ""Remote Service Session Hijacking"",
         ""Quotes"": """"Remote Service Session Hijacking techniques involve taking control of preexisting sessions with remote services to gain elevated privileges or access to internal systems. This rule detects an outbound connection attempt to an external IP using a known Cobalt Strike beacon pattern, indicating that an attacker is attempting to establish a command and control channel to a remote Cobalt Strike server."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": null,
     ""Technique ID"": ""T1576"",
     ""Technique Name"": ""Beaconing"",
     ""Quotes"": """"Beaconing techniques involve using dedicated communication channels by malware to establish covert connections back to a command and control (C2) server for data exchange and remote control. The rule detects an outbound connection attempt made by Cobalt Strike, a legitimate penetration testing tool that can also be leveraged by adversaries for malicious purposes. Cobalt Strike beacons are known to use HTTP POST requests with specific headers and URI patterns to communicate with their C2 server, as observed in this rule."""",
     ""Explanation"": ""This rule is triggered when an HTTP POST request is made to an external IP address with specific header and URI patterns that are commonly used by Cobalt Strike beacons to communicate with their command and control server.""
   }
 ][
   {
     ""sid"": ""56610"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Beacon"",
     ""Quotes"": """"Beacon techniques involve using covert communication channels over networks to establish command and control (C2) with adversaries. This rule detects outbound traffic from a Cobalt Strike beacon, which is a common tool used by adversaries to maintain persistent access to compromised systems."""",
     ""Explanation"": ""Cobalt strike is a legitimate adversary simulation tool that attackers use to conduct penetration testing. Cobalt Strike is a powerful tool that can be used to perform a variety of malicious activities, including reconnaissance, exploitation, and data exfiltration.""
   }
 ][
   {
     ""sid"": ""56610"",
     ""Technique ID"": ""T1071.002"",
     ""Technique Name"": ""Command and Control Channel over C2 Communication Protocol"",
     ""Quotes"": """"Command and Control Channel over C2 Communication Protocol techniques involve the use of specific protocols for data transmission between an adversary and compromised systems. This rule detects an outbound connection attempt to a Cobalt Strike beacon, which is a type of C2 server used by adversaries to remotely control compromised systems."""",
     ""Explanation"": ""Cobalt Strike is a commercial, post exploitation agent that enables an attacker to execute commands and scripts on compromised hosts. Cobalt Strike is typically used to further exploit a victim's network after initial access is established.""
   },
   {
     ""sid"": ""56610"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised environment. This rule detects an outbound connection attempt to a Cobalt Strike beacon, which can be used by adversaries to transfer additional tools or malicious payloads into the compromised environment."""",
     ""Explanation"": ""Cobalt Strike is a commercial, post exploitation agent that enables an attacker to execute commands and scripts on compromised hosts. Cobalt Strike is typically used to further exploit a victim's network after initial access is established.""
   },
   {
     ""sid"": ""56610"",
     ""Technique ID"": ""T1219"",
     ""Technique Name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve gathering information about remote systems on a network. This rule detects an outbound connection attempt to a Cobalt Strike beacon, which can be used by adversaries to gather information about other systems on the network, such as hostnames, IP addresses, and operating systems."""",
     ""Explanation"": ""Cobalt Strike is a commercial, post exploitation agent that enables an attacker to execute commands and scripts on compromised hosts. Cobalt Strike is typically used to further exploit a victim's network after initial access is established.""
   },
   {
     ""sid"": ""56610"",
     ""Technique ID"": ""T1560"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve using C2 channels to exfiltrate data from a compromised system. This rule detects an outbound connection attempt to a Cobalt Strike beacon, which can be used by adversaries to exfiltrate sensitive data, such as credentials or financial information, from the compromised system."""",
     ""Explanation"": ""Cobalt Strike is a commercial, post exploitation agent that enables an attacker to execute commands and scripts on compromised hosts. Cobalt Strike is typically used to further exploit a victim's network after initial access is established.""
   }
 ][
   {
     ""sid"": ""56610"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve using a command and control (C2) channel to exfiltrate data from a compromised system. This rule detects outbound connections to Cobalt Strike, a commonly used C2 framework, indicating that an attacker is attempting to exfiltrate data from the compromised system."""",
     ""Explanation"": ""This event is generated when malware is detected.""
   }
 ][
   {
     ""sid"": ""56610"",
     ""Technique ID"": ""T1568"",
     ""Technique name"": ""Dynamic Resolution"",
     ""Quotes"": """"Dynamic Resolution techniques involve establishing connections to command and control infrastructure dynamically to evade common detections and remediations. The rule detects outbound connections to Cobalt Strike, a widely used adversary simulation and penetration testing tool, which adversaries may use to establish a dynamic command and control channel to evade detection."""",
     ""Explanation"": ""Cobalt Strike is a legitimate penetration testing tool that can be used by adversaries to simulate attacks and evade detection.""
   }
 ]
 [
   {
     ""sid"": ""56610"",
     ""Technique ID"": ""T1574"",
     ""Technique Name"": ""Beacon"",
     ""Quotes"": """"Beacon techniques involve the use of a communication channel to command and control (C2) infrastructure, allowing an adversary to interact with a compromised system. Cobalt Strike is a commercial tool commonly used by adversaries to establish a persistent presence on a compromised system and execute commands remotely. The rule detects an outbound connection attempt to the Cobalt Strike C2 infrastructure, which is used to maintain communication and control over the compromised system."""",
     ""Explanation"": ""The rule is designed to detect Cobalt Strike implants that beacon out to a C2. Beaconing behavior is a technique that the malware uses to communicate with the C2, allowing the attacker to send commands and updates to the compromised device.""
   },
   {
     ""sid"": ""56610"",
     ""Technique ID"": ""T1486"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact involves encrypting data that is intended to have a disruptive effect on system or information integrity. The rule looks for encrypted data in the beacon's communication, which could be used to hide malicious commands or data from detection."""",
     ""Explanation"": ""The malware may use encryption to hide malicious payload in the network traffic to by-pass traditional IDS or firewalls.""
   }
 ]
 [
   {
     ""sid"": ""56610"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Data Encapsulation"",
     ""Quotes"": """"Data Encapsulation involves hiding data inside of other data to hide its true purpose and/or evade detection. This rule detects Cobalt Strike beacon traffic encapsulated within an HTTP request, which is a common method used by attackers to establish covert channels and evade detection."""",
     ""Explanation"": ""This rule is looking for outbound connections from the internal network to external HTTP ports. The rule specifically looks for traffic that contains the string ""auth=0|5C 3B|loc=US"" in the HTTP header. This string is characteristic of Cobalt Strike beacons, which are used by attackers to maintain persistent access to compromised systems.""
   },
   {
     ""sid"": ""56610"",
     ""Technique ID"": ""T1567"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel involves exfiltrating data over an established command and control (C2) channel. This rule detects Cobalt Strike beacon traffic, which is a common method used by attackers to exfiltrate data from compromised systems."""",
     ""Explanation"": ""This rule is looking for outbound connections from the internal network to external HTTP ports. The rule specifically looks for traffic that contains the string ""auth=0|5C 3B|loc=US"" in the HTTP header. This string is characteristic of Cobalt Strike beacons, which are used by attackers to maintain persistent access to compromised systems and exfiltrate data.""
   }
 ][
     {
         ""sid"": ""56610"",
         ""Technique ID"": ""T1406"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve actively querying and fingerprinting remote systems to identify open ports and discover the services they offer. The rule alerts on an attempt to connect to Cobalt Strike's default server port (5000), which is a common method used by attackers for reconnaissance and to identify vulnerable systems."""",
         ""Explanation"": ""This event is generated when activity relating to the Cobalt Strike malware is detected.""
     }
 ][
   {
     ""sid"": ""56610"",
     ""Technique ID"": ""T1570"",
     ""Technique name"": ""Cobalt Strike Beacon"",
     ""Quotes"": """"Cobalt Strike Beacon techniques involve the use of the Cobalt Strike beacon for remote access and control of compromised systems. This beacon connects back to the attacker-controlled server via HTTP or HTTPS for command and control, similar to the behavior detected by this rule."""",
     ""Explanation"": ""Cobalt Strike refers to adversarial software commonly used for adversary-controlled remote access, command execution, and data exfiltration.""
   }
 ]","['T1041', 'T1485', 'T1563', 'T1576', 'T1110', 'T1071.002', 'T1105', 'T1219', 'T1560', 'T1041', 'T1568', 'T1574', 'T1486', 'T1132', 'T1567', 'T1406', 'T1570']",['T1020']
30777,"[
   {
     ""sid"": ""30777"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a possible attempt to exploit the Heartbleed vulnerability (CVE-2014-0160) , which affects OpenSSL versions 1.0.1 through 1.0.1f. The vulnerability allows an attacker to read up to 64K of server memory, which may include sensitive information .\"""",
     ""Explanation"": ""The rule detects a large heartbeat response from OpenSSL, which is indicative of a possible Heartbleed attempt.""
   }
 ][
     ""sid"": ""30777"",
     ""Technique ID"": ""T1482"",
     ""Technique name"": ""Heartbleed Exploit"",
     ""Quotes"": """"Heartbleed Exploit techniques involve exploiting the Heartbleed vulnerability in OpenSSL to steal server-side memory, which may contain sensitive information such as encryption keys and user data. The rule detects an attempt to use the Heartbleed vulnerability by sending a crafted TLS heartbeat request to exploit vulnerable OpenSSL servers."""",
     ""Explanation"": ""This event is generated when activity relating to the exploitation of the Heartbleed vulnerability is detected.""
 ][
   {
     ""sid"": ""30777"",
     ""Technique ID"": ""T1669"",
     ""Technique Name"": ""Defeat Encryption"",
     ""Quotes"": """"Defeat Encryption techniques involve bypassing or breaking encryption to gain unauthorized access to data. This rule detects a potential 'Heartbleed' vulnerability in OpenSSL implementations, which allows attackers to retrieve sensitive information from a server's memory by sending a crafted heartbeat request. Exploiting this vulnerability enables attackers to bypass SSL encryption and access plaintext data."""",
     ""Explanation"": ""This event is generated when OpenSSL SSLv3 is affected by Heartbleed Vulnerability (CVE-2014-0160), which can allow stealing of secrets from the server.""
   }
 ][
     ""sid"": ""30777"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempt to exploit the Heartbleed vulnerability in OpenSSL, which allows attackers to read arbitrary memory from the server, including potentially sensitive information such as encryption keys and session tokens."""",
     ""Explanation"": ""This event is generated when activity relating to a potential SSL Heartbleed attempt is detected.""
 ][
   {
     ""sid"": ""30777"",
     ""Technique ID"": ""T1208"",
     ""Technique name"": ""Information Disclosure: Heartbleed"",
     ""Quotes"": """"Information Disclosure: Heartbleed techniques involve exploiting a vulnerability in the implementation of TLS (Transport Layer Security) and DTLS (Datagram Transport Layer Security) encryption protocols, which allows access to sensitive information via  a remote server's memory"""",
     ""Explanation"": ""This event is generated when a scan is detected that targets SSLv3 HEARTBEAT vulnerabilities. SSLv3 Heartbleed is a vulnerability in the OpenSSL library that allows an attacker to steal information from a server by tricking it into sending out the contents of its memory""
   }
 ][
   {
     ""sid"": ""30777"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects potential attempts to exploit the Heartbleed vulnerability (CVE-2014-0160) in OpenSSL by sending a large heartbeat request and examining the response for signs of the vulnerability."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in the OpenSSL implementation of the TLS/SSL protocol is detected.""
   }
 ][
   {
     ""sid"": ""30777"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule triggers on large SSLv3 heartbeat responses, which may indicate an attempt to exploit the Heartbleed vulnerability (CVE-2014-0160) in OpenSSL. Attackers could exploit this vulnerability to obtain sensitive information from memory on vulnerable systems."""",
     ""Explanation"": ""This rule detects attempts to exploit a vulnerability in OpenSSL's SSLv3 implementation called Heartbleed, which allows attackers to read arbitrary memory from a vulnerable system.""
   }
 ][
   {
     ""sid"": ""30777"",
     ""Technique ID"": ""T1220"",
     ""Technique name"": ""Heartbleed"",
     ""Quotes"": """"Heartbleed is a vulnerability in OpenSSL versions before 1.0.2 that allows an attacker to read arbitrary memory from the target server. This rule detects a potential exploit attempt by sending crafted SSLv3 packets to the target server and examining the server's response for signs of the Heartbleed vulnerability."""",
     ""Explanation"": ""This event is generated when activity relating to SSLv3, Heartbleed is detected.""
   }
 ][
   {
     ""sid"": ""30777"",
     ""Technique ID"": ""T1044"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve probing a network for services and weaknesses. This rule identifies an attempt to perform a Heartbleed attack, which is a technique used to exploit a vulnerability in the OpenSSL library that allows attackers to retrieve sensitive information from a server's memory."""",
     ""Explanation"": ""This event is generated when an attempt to exploit the Heartbleed vulnerability is detected.""
   }
 ][
   {
     ""sid"": ""30777"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve reconnaissance activities to identify and gather information about hosts and services on a network. This rule detects the signature of a 'Heartbleed' attack, which is a well-known vulnerability that allows attackers to steal sensitive information from a server's memory. Attackers commonly use network service scanning techniques to identify vulnerable systems and launch Heartbleed attacks."""",
     ""Explanation"": ""The rule is triggered when the server sends back a large heartbeat response in SSLv3. This is a sign of a possible Heartbleed attempt. Heartbleed is a vulnerability in OpenSSL that allows attackers to read the server's memory, which could contain sensitive information such as passwords and encryption keys.""
   }
 ][
   {
     ""sid"": ""30777"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications to execute arbitrary code on a victim's system. The rule detects a potential attempt to exploit the OpenSSL Heartbleed vulnerability (CVE-2014-0160), which allows an attacker to retrieve memory contents that may contain sensitive information, including encryption keys, usernames, and passwords."""",
     ""Explanation"": ""This event is generated when a potential attempt to exploit the OpenSSL Heartbleed vulnerability (CVE-2014-0160) is detected.""
   }
 ]","['T1190', 'T1482', 'T1669', 'T1190', 'T1208', 'T1190', 'T1190', 'T1220', 'T1044', 'T1040', 'T1210']",['T1123']
26261,"[
         ""sid"": ""26261"",
         ""Technique ID"": ""T1192"",
         ""Technique Name"": ""Phishing for Credentials"",
         ""Quotes"": """"Phishing for Credentials techniques involve sending fraudulent emails or communications that appear to come from legitimate organizations in order to trick individuals into providing their credentials or other sensitive information. This rule detects an attempted phishing attack that uses a fake postal receipt to trick recipients into downloading a malicious file named 'Postal-Receipt.exe', which is a common method used by phishers to distribute malware."""",
         ""Explanation"": ""This event is generated when a phishing attempt is detected.""
     ][
     ""sid"": ""26261"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick individuals into revealing sensitive information or clicking on malicious links, often leading to malware infection or credential theft. This rule detects a phishing attack disguised as a ZIP file named """"Postal-Receipt.zip"""" delivered via HTTP, a common delivery mechanism for phishing emails."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""26261"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites to trick victims into providing sensitive information, such as credentials or financial data. The rule detects a phishing attack that uses a fake postal receipt to lure victims into downloading a malicious file (Postal-Receipt.exe)."""",
     ""Explanation"": ""Attempt to drop a file named \""Postal-Receipt.exe\"".""
   }
 ][
   {
     ""sid"": ""26261"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites to trick users into disclosing sensitive information or executing malicious code. The rule detects a fake postal receipt HTTP response phishing attack, where attackers attempt to trick users into downloading a malicious executable disguised as a receipt."""",
     ""Explanation"": ""This rule is to detect file download related to phishing activity.""
   }
 ][
   {
     ""sid"": ""26261"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating websites that appear legitimate to trick victims into revealing sensitive information such as credentials or financial data. This rule detects a phishing attack that uses a fake postal receipt as a lure to deliver a malicious payload (Postal-Receipt.exe) via an HTTP download."""",
     ""Explanation"": ""This event is generated when an email is determined to be a phishing attempt.""
   }
 ][
     ""sid"": ""26261"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing for Credentials"",
     ""Quotes"": """"Phishing for Credentials techniques involve attempting to acquire credentials by duping users into providing them through a fraudulent communication, such as an email, text message, or website. This rule matches a phishing campaign using fake postal receipts as a lure to trick users into downloading an attachment, where an analysis of the file metadata shows its true nature as a malicious executable file."""",
     ""Explanation"": ""The attacker replaces original content on a legitimate website with content of their own, typically through a drive-by download exploit, with the goal of obtaining personal information via phishing.""
 ][
   {
     ""sid"": ""26261"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that impersonate legitimate entities to trick users into disclosing sensitive information or installing malicious software. This rule detects an HTTP response containing a malicious ZIP file disguised as a postal receipt, which is a common tactic used in phishing attacks to trick users into downloading and executing malware."""",
     ""Explanation"": ""This event is generated when activity relating to phishing is detected.""
   }
 ][
   {
     ""sid"": ""26261"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or communications that appear to be from a legitimate source to trick victims into providing sensitive information or clicking on malicious links. This rule detects a phishing attack that uses a fake postal receipt as a lure to trick victims into downloading a malicious ZIP file containing an executable (Postal-Receipt.exe)."""",
     ""Explanation"": ""This event is likely part of a phishing attack.""
   }
 ][
     ""sid"": ""26261"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending deceptive communications (e.g., emails, text messages, phone calls) to trick users into providing sensitive information or taking actions that could compromise their systems or data. This rule detects an attempted phishing attack that uses a fake postal receipt to trick users into downloading and executing a malicious file (Postal-Receipt.exe)."""",
     ""Explanation"": ""The rule detects an attempt to download and execute a malicious file (Postal-Receipt.exe) using a fake postal receipt as a lure. This is a common phishing technique used to trick users into providing sensitive information or taking actions that could compromise their systems or data.""
 ][
   {
     ""sid"": ""26261"",
     ""Technique ID"": ""T1192"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites that mimic legitimate sites to trick users into revealing sensitive information such as credentials or financial data. This rule detects an HTTP response containing a fake postal receipt and a malicious executable file named 'Postal-Receipt.exe', which is a common tactic used in phishing attacks to lure victims into downloading and executing malware."""",
     ""Explanation"": ""Fake postal receipt HTTP Response phishing attack.""
   }
 ][
     ""sid"": ""26261"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating websites that mimic legitimate entities to trick individuals into providing sensitive information or giving up access to their accounts."""",
     ""Explanation"": ""This rule detects a phishing attack that attempts to deceive the victim and trick them into opening a malicious attachment named ""Postal-Receipt.exe"" by disguising it as a postal receipt.""
 ]","['T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192']",['T1566']
45173,"[
   {
     ""sid"": ""45173"",
     ""Technique ID"": ""T1070.004"",
     ""Technique Name"": ""Browser Extensions"",
     ""Quotes"": """"Browser Extensions are malicious browser extensions that may be used to perform various malicious behaviors such as downloading and installing malware, modifying browser settings, or stealing sensitive information."""",
     ""Explanation"": ""This rule detects an attempt to download a malicious file using a browser extension.""
   },
   {
     ""sid"": ""45173"",
     ""Technique ID"": ""T1562"",
     ""Technique Name"": ""Impair Defenses"",
     ""Quotes"": """"Impair Defenses techniques are used to disable or hinder security measures and mechanisms to make it easier to execute attacks. This rule detects an attempt to delete files in the Mozilla download directory, which could be an attempt to disable security measures or delete evidence of malicious activity."""",
     ""Explanation"": ""This rule detects an attempt to tamper with the file system in order to disable security measures.""
   }
 ][
     ""sid"": ""45173"",
     ""Technique ID"": ""T1556"",
     ""Technique name"": ""Browser Extensions"",
     ""Quotes"": """"Browser Extensions techniques involve modifying or abusing browser extensions to achieve malicious goals. This rule detects an attempt to delete a file from the Mozilla Firefox download directory using a malicious browser extension, which is a common method used by attackers to steal data or compromise the user's system."""",
     ""Explanation"": ""This signature detects a malicious browser extension, which may be used to steal data or compromise the user's system.""
 ][
     ""sid"": ""45173"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve using trial-and-error to guess login credentials or encryption keys"""",
     ""Explanation"": """"This rule detects attempts to download a file named 'hello' with an 'octet-stream' content type. This technique is commonly used by attackers to brute-force passwords or encryption keys, as they can repeatedly attempt different combinations without being rate-limited or blocked.""
 ][
     ""sid"": ""45173"",
     ""Technique ID"": ""T1548"",
     ""Technique name"": ""Delete Files or Directories"",
     ""Quotes"": """"Delete Files or Directories techniques involve deleting files or directories in order to erase evidence, disrupt operations, or otherwise impede an investigation. This rule detects an attempt by a malicious actor to delete files in the user's download directory using a malicious link. The adversary could use this technique to remove important files or data from the victim's system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
     ""sid"": ""45173"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""File Deletion"",
     ""Quotes"": """"File Deletion techniques involve deleting files or directories from a system. This rule detects an attempt to delete a file from a Mozilla Firefox download directory using a malicious hyperlink, which could be used by adversaries to remove sensitive files or disrupt system operations."""",
     ""Explanation"": ""This event is generated when the program tries to download the file from a malicious website.""
 ][
   {
     ""sid"": ""45173"",
     ""Technique ID"": ""T1566"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites to trick users into providing sensitive information such as login credentials or financial data. This rule detects an attempted phishing attack that uses email to direct users to a malicious website designed to steal login credentials by imitating a legitimate login page."""",
     ""Explanation"": ""The rule triggers when it detects an email with a malicious link that leads to a phishing website. The website attempts to trick the user into providing their login credentials, which can be used to compromise their account.""
   }
 ][
         ""sid"": ""45173"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve gaining access to a victim system through a user visiting a website during the normal course of browsing. This rule detects an attempt to exploit a vulnerability in Mozilla Firefox to delete files from the user's download directory by tricking the user into clicking on a malicious link. This is a common technique used in drive-by compromise attacks, where attackers use malicious websites or advertisements to exploit vulnerabilities in browsers or plugins."""",
         ""Explanation"": ""This event is generated when a file deletion attempt is detected.""
     ][
   {
     ""sid"": ""45173"",
     ""Technique ID"": ""T1119"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending emails or creating websites that appear to be legitimate in an attempt to deceive users into disclosing sensitive information or executing malicious code. This rule detects a malicious link in a phishing email that appears to be from a legitimate Mozilla support address and attempts to trick users into downloading malware."""",
     ""Explanation"": ""The rule detects an attempt to download a malicious file from a phishing email.""
   }
 ][
   {
     ""Sid"": ""123456"",
     ""Technique ID"": ""T1122"",
     ""Technique Name"": ""File and Directory Deletion"",
     ""Quotes"": ""Adversaries may delete files and/or directories to remove evidence of system compromise, disable services, or disrupt normal operations."",
     ""Explanation"": ""Detects a potential attempt to delete a directory on a web server""
   }
 ][
         ""sid"": ""45173"",
         ""Technique ID"": ""T1106"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encoding data or files in a way that makes them difficult to detect or analyze. In this rule, malicious content is being downloaded from the ""data:application/octet-stream"" URI scheme, which allows attackers to encode data as text strings and bypass traditional detection mechanisms."""",
         ""Explanation"": ""This event is generated when a browser attempts to download a file from the internet that is encoded in a way that makes it difficult to detect or analyze.""
     ][
   {
     ""sid"": ""45173"",
     ""Technique ID"": ""T1115"",
     ""Technique Name"": ""Modify User Account"",
     ""Quotes"": """"Modify User Account techniques include modifying the permissions or capabilities of existing user accounts to aid in lateral movement, privilege escalation, or establishing persistence. The rule detects a malicious attempt to delete a file in the Mozilla download directory, which could be part of an effort to modify or manipulate user accounts or gain unauthorized access to sensitive information."""",
     ""Explanation"": ""This rule is designed to detect a malicious attempt to delete a file in the Mozilla download directory. This could be an indication of an attempt to modify user accounts or gain unauthorized access to sensitive information.""
   },
   {
     ""sid"": ""45173"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Delete File or Directory"",
     ""Quotes"": """"Delete File or Directory techniques involve deleting files or directories to disrupt system functionality, destroy evidence, or gain access to sensitive information. The rule detects a malicious attempt to delete a file in the Mozilla download directory, which could be part of an effort to delete evidence of an attack or to gain access to sensitive information."""",
     ""Explanation"": ""This rule is designed to detect a malicious attempt to delete a file in the Mozilla download directory. This could be an indication of an attempt to delete evidence of an attack or to gain access to sensitive information.""
   }
 ]","['T1070.004', 'T1562', 'T1556', 'T1110', 'T1548', 'T1204', 'T1566', 'T1189', 'T1119', 'T1122', 'T1106', 'T1115', 'T1068']",['T1070']
30521,"[
     ""sid"": ""30521"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Denial of Service"",
     ""Quotes"": """"Network Denial of Service techniques involve disrupting the normal traffic of a targeted network or service by overwhelming it with traffic or exploiting vulnerabilities. This rule detects an attempted 'OpenSSL TLSv1 heartbeat read overrun' attack, which involves sending a specially crafted TLS heartbeat request to a vulnerable OpenSSL server to cause a denial of service."""",
     ""Explanation"": ""Conditions: The rule triggers when a TLS client sends a heartbeat request with a length value greater than 128.""
 ][
     ""sid"": ""30521"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted TLSv1 heartbeat read overrun vulnerability in OpenSSL, which is a common method for attackers to exploit vulnerable systems."""",
     ""Explanation"": ""The flaw is in the way OpenSSL handles TLS/SSL heartbeat packets.""
 ][
     ""sid"": ""30521"",
     ""Technique ID"": ""T1446"",
     ""Technique name"": ""Server Software Component Interaction"",
     ""Quotes"": """"Server Software Component Interaction techniques involve interacting with the functionality of server software and collaboration tools to retrieve system information. This rule detects an attempted read overrun vulnerability in the OpenSSL TLSv1 heartbeat protocol, which can be used by attackers to gather server information or potentially execute arbitrary code."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a known vulnerability in the OpenSSL TLSv1 heartbeat protocol is detected.""
 ][
         ""sid"": ""30521"",
         ""Technique ID"": ""T1225"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an OpenSSL TLSv1 heartbeat read overrun vulnerability (CVE-2014-0160) in SSL clients, which can be exploited by attackers to cause a denial-of-service condition or execute arbitrary code on the target system."""",
         ""Explanation"": ""An attacker can exploit this issue to cause a denial of service or execute arbitrary code due to a read overrun vulnerability in the handling of TLS/SSL heartbeat messages.""
     ][
   {
     ""sid"": ""30521"",
     ""Technique ID"": ""T1616"",
     ""Technique Name"": ""Port Scanning"",
     ""Quotes"": """"Port Scanning techniques involve systematically scanning or probing systems for open ports that may indicate potential vulnerabilities. This rule detects an attempt to use the OpenSSL TLSv1 heartbeat read overrun vulnerability to scan for open ports on the target system, which attackers commonly use for port scanning and vulnerability assessment."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in OpenSSL TLSv1 heartbeat read overrun is detected.""
   }
 ][
   {
     ""sid"": ""30521"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques involve exploiting vulnerabilities in remote services to gain unauthorized access to internal systems. This rule detects an attempt to exploit a vulnerability in the OpenSSL TLS heartbeat implementation (CVE-2014-0160), which could allow an attacker to execute arbitrary code on the target system."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in the OpenSSL TLS heartbeat implementation is detected.""
   }
 ][
         ""sid"": ""30521"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over C2 Channel"",
         ""Quotes"": """"Exfiltration Over C2 Channel techniques involve the use of a covert communication channel to transfer data from a compromised system to an adversary-controlled system. This rule detects a heartbeat read overrun attempt on port 443, which is a common tactic used by attackers to exfiltrate data or execute commands on a compromised system."""",
         ""Explanation"": ""OpenSSL TLSv1 heartbeat read overrun attempt - vulnerable client response""
     ][
         ""sid"": ""30521"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Network Denial of Service"",
         ""Quotes"": """"Network Denial of Service techniques involve attempts to make a network resource unavailable to its intended users by disrupting the applications or services that reside on a host. This rule triggers when a vulnerable TLS client responds to a heartbeat request with an oversized response, which can lead to a denial of service condition on the server due to resource exhaustion."""",
         ""Explanation"": ""This event is generated when an attempt to cause a denial of service on a network is detected.""
     ],
     ""sid"": ""30521"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an OpenSSL TLSv1 heartbeat read overrun attempt, which is a known vulnerability that allows attackers to crash vulnerable TLS servers."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a public-facing application is detected.""
     ][
   {
     ""sid"": ""30521"",
     ""Technique ID"": ""T1202"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending malicious emails or messages that appear to come from a legitimate or known sender in order to trick the recipient into giving up sensitive information or clicking on a malicious link. This rule detects a possible phishing attempt by detecting the presence of a malicious URL in an email or message that is designed to look like it is from a legitimate domain."""",
     ""Explanation"": ""This rule identifies attempts to exploit a vulnerability in the OpenSSL TLS heartbeat implementation, which can lead to remote code execution on the target system. Phishing emails often contain malicious links that direct users to websites that host exploit code or malware.""
   }
 ][
   {
     ""sid"": ""30521"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. OpenSSL is a popular open-source cryptographic library used in many applications. This rule detects an attempt to exploit a TLS heartbeat read overrun vulnerability in OpenSSL versions 1.0.1 through 1.0.1f (CVE-2014-0160).\"""",
     ""Explanation"": ""An attempt to exploit a vulnerability in the OpenSSL TLS library is detected. OpenSSL is a popular open-source cryptographic library used in many applications, including web servers and VPNs. This particular vulnerability allows an attacker to send a specially crafted TLS heartbeat request that can cause the server to crash or leak memory, potentially leading to remote code execution.""
   }
 ][
         ""sid"": ""30521"",
         ""Technique ID"": ""T1420"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an OpenSSL TLSv1 heartbeat read overrun attempt, which is a vulnerability that can lead to remote code execution on affected systems."""",
         ""Explanation"": ""This event is generated when a client attempts to exploit a vulnerability in an SSL/TLS implementation.""
     ]","['T1046', 'T1190', 'T1446', 'T1225', 'T1616', 'T1210', 'T1041', 'T1210', 'T1190', 'T1202', 'T1190', 'T1420']",['T1123']
50029,"[
   {
     ""sid"": ""50029"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools from an external source into an environment. This rule looks for a pattern associated with a variant of OSX.Adware.TotalAdviseSearch, an adware program that is often downloaded by malicious advertisements or phishing emails."""",
     ""Explanation"": ""This rule likely detects an attempt to download and install OSX.Adware.TotalAdviseSearch, which is a type of malicious software that can display unwanted advertisements, redirect web traffic, and collect user data.""
   }
 ][
   {
     ""sid"": ""50029"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve copying and transferring tools and malicious software (e.g., Remote Access Trojans) to victim systems. The rule detects an attempt to download a macOS adware variant (TotalAdviseSearch) via a suspicious file transfer over SMTP, suggesting the use of an ingress tool to establish a foothold on the target system."""",
     ""Explanation"": ""This alert is generated when the Snort IDS detects a suspicious file transfer over SMTP.""
   },
   {
     ""sid"": ""50029"",
     ""Technique ID"": ""T1498"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule could also detect attempts to exploit a vulnerability in the SMTP server's software to gain unauthorized access to the system."""",
     ""Explanation"": ""This alert is generated when the Snort IDS detects an attempt to exploit a vulnerability in the SMTP server's software.""
   }
 ][
         ""sid"": ""50029"",
         ""Technique ID"": ""T1147"",
         ""Technique name"": ""File Download"",
         ""Quotes"": """"File Download techniques involve transferring or copying files from remote systems to local systems. This rule detects an attempt to download a file associated with Osx.Adware.TotalAdviseSearch, which is a known advertising malware for macOS. Malware often uses file download techniques to download and install malicious payload on victim systems."""",
         ""Explanation"": ""This event is generated when activity relating to PUA-ADWARE Osx is detected.""
     ][
     {
         ""sid"": ""50029"",
         ""Technique ID"": ""T1202"",
         ""Technique Name"": ""Exploit Software Application"",
         ""Quotes"": """"Exploit Software Application techniques involve exploiting vulnerabilities in application software to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the macOS installer package, allowing the attacker to execute arbitrary code and gain privileges on the victim's system."""",
         ""Explanation"": ""This rule detects a potential exploitation attempt of an unknown/unspecified vulnerability in macOS installer package.""
     },
     {
         ""sid"": ""50029"",
         ""Technique ID"": ""T1499"",
         ""Technique Name"": ""Malicious File"",
         ""Quotes"": """"Malicious File techniques involve the use of malicious files to compromise a system. This rule detects an attempt to download a malicious file from a remote server, which could contain malware or be used to deliver malware to the victim's system."""",
         ""Explanation"": ""This rule detects the download of a malicious file named 'TotalAdviseSearch'.""
     }
 ][
     {
         ""sid"": ""50029"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted malware download of Osx.Adware.TotalAdviseSearch variant, which is often distributed through malicious advertisements or compromised websites."""",
         ""Explanation"": ""This rule is triggered when a file with a Mach-O 64-bit little-endian header is detected in the file data, which is a common format for malware on macOS.""
     }
 ][
         ""sid"": ""50029"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve leveraging remote-facing services available via third-party providers, such as email services (SMTP, IMAP, POP3), to establish an initial foothold in a target environment. This rule detects an attempt to download an OSx adware variant using SMTP, which is a common method for delivering malicious content via external communication channels."""",
         ""Explanation"": ""This event is generated when activity relating to suspicious file download is detected.""
     ][
   {
     ""sid"": ""50029"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve luring users to attacker-controlled websites to install malicious software. This rule detects a variant of Osx.Adware.TotalAdviseSearch attempting to download via a malicious URL. It indicates that a user may have visited a compromised website that hosted the malicious payload, which would then attempt to download the adware onto the user's system."""",
     ""Explanation"": ""This event is generated when activity relating to adware is detected.""
   }
 ][
         ""sid"": ""50029"",
         ""Technique ID"": ""T1559"",
         ""Technique name"": ""Scheduled Task/Job"",
         ""Quotes"": """"Scheduled Task/Job techniques involve abusing task schedulers or job schedulers to execute commands or programs on a system at specific intervals or times."""",
         ""Explanation"": ""This event is generated when a potentially unwanted application is detected as it attempts to download adware.""
     ][
   {
     ""sid"": ""50029"",
     ""Technique ID"": ""T1166"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites to trick users into divulging sensitive information or clicking on malicious links. This rule detects an attempt to download Osx.Adware.TotalAdviseSearch, which is a type of adware that can be distributed through phishing emails or malicious websites."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""50029"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve using automated or manual reconnaissance techniques to identify open ports and running services on computers in order to provide a tactical view of the target environment."""",
         ""Explanation"": ""This rule detects an attempt to scan a remote host for open ports, which is a common reconnaissance technique used to identify potential targets for attack.""
     ][
     {
         ""sid"": ""50029"",
         ""Technique ID"": ""T1566.003"",
         ""Technique Name"": ""Masquerading - macOS"",
         ""Quotes"": """"Masquerading techniques involve disguising malware or malicious activity as legitimate processes or software to evade detection or analysis. This rule detects a variant of the Osx.Adware.TotalAdviseSearch adware for macOS that uses a Mach-O executable to download and install additional malicious components. Masquerading as a legitimate application is a common tactic used by macOS malware to avoid detection."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ]","['T1105', 'T1105', 'T1498', 'T1147', 'T1202', 'T1499', 'T1189', 'T1133', 'T1189', 'T1559', 'T1166', 'T1040', 'T1566.003']",['T1643']
300307,"[
   {
     ""sid"": ""300307"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Insecure Deserialization"",
     ""Quotes"": """"Exploit Insecure Deserialization techniques involve manipulating serialized objects to execute arbitrary code or gain unauthorized access to a system. This rule detects an attempt to exploit a buffer overflow vulnerability in OpenSSL's x509 crafted email address function, which can lead to remote code execution."""",
     ""Explanation"": ""OpenSSL x509 crafted email address buffer overflow attempt.""
   }
 ][
   {
     ""sid"": ""300307"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploit Software Application"",
     ""Quotes"": """"Exploit Software Application techniques involve targeting and exploiting vulnerabilities in software applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted buffer overflow attack on OpenSSL email address handling using crafted email addresses, which is a common method attackers use to exploit vulnerabilities in software applications by overwriting memory buffers with malicious code."""",
     ""Explanation"": ""The event triggers when the snort rule attempts to detect an SSL buffer overflow attack.""
   }
 ][
   {
     ""sid"": ""300307"",
     ""Technique ID"": ""T1220"",
     ""Technique Name"": ""Exploit Software Application"",
     ""Quotes"": """"Exploit Software Application techniques involve searching for and leveraging vulnerabilities in software applications to gain unauthorized access, execute arbitrary code, or cause a denial-of-service condition."""",
     ""Explanation"": ""The rule triggers when it detects an attempt to exploit a buffer overflow vulnerability in the OpenSSL x509 library. This vulnerability can allow an attacker to execute arbitrary code on the target system.""
   }
 ][
   {
     ""sid"": ""300307"",
     ""Technique ID"": ""T1208"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted buffer overflow attack on OpenSSL's x509 crafted email address, which is a common method attackers use to exploit vulnerabilities in web applications."""",
     ""Explanation"": ""The event is generated when an encrypted SSL buffer overflow attack is detected.""
   }
 ][
   {
     ""sid"": ""300307"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution involves exploiting software vulnerabilities to achieve remote code execution directly on a victim's client device. This rule detects an attempt to exploit a buffer overflow vulnerability in OpenSSL, which can be leveraged by adversaries to execute arbitrary code on the affected machine and gain control of the system."""",
     ""Explanation"": ""The rule triggers when an OpenSSL x509 crafted email address buffer overflow attempt is detected. This technique is commonly used to exploit this vulnerability in OpenSSL.""
   }
 ][
     {
         ""sid"": ""300307"",
         ""Technique ID"": ""T1068"",
         ""Technique name"": ""Exploitation for Privilege Escalation"",
         ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting software vulnerabilities to elevate privileges. The rule detects an OpenSSL x509 crafted email address buffer overflow attempt, which is a common technique used to escalate privileges and gain access to sensitive data."""",
         ""Explanation"": ""OpenSSL x509 crafted email address buffer overflow attempt.""
     }
 ][
   {
     ""sid"": ""300307"",
     ""Technique ID"": ""T1220"",
     ""Technique name"": ""Exploit Format String Vulnerability"",
     ""Quotes"": """"Exploit Format String Vulnerability techniques involve exploiting format string vulnerabilities in software to execute arbitrary code. This rule detects an attempt to exploit a format string vulnerability in OpenSSL by crafting a crafted email address that triggers a buffer overflow in the OpenSSL x509 function. Exploitation of such vulnerabilities can lead to arbitrary code execution and system compromise."""",
     ""Explanation"": ""This event is generated by an attempt to exploit a format string vulnerability in OpenSSL x509.""
   }
 ][
         ""sid"": ""300307"",
         ""Technique ID"": ""T1220"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted OpenSSL x509 crafted email address buffer overflow attempt, which is a common method attackers use to exploit web applications by manipulating input data."""",
         ""Explanation"": ""The rule triggers when it detects an attempt to exploit a buffer overflow vulnerability in OpenSSL x509 crafted email addresses.""
     ][
         ""sid"": ""300307"",
         ""Technique ID"": ""T1195"",
         ""Technique name"": ""Exploitation for Privilege Escalation"",
         ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting vulnerabilities in software to gain elevated privileges on a system. This rule detects an attempted buffer overflow exploit targeting the OpenSSL x509 crafted email address function. If successful, this exploit could allow an attacker to execute arbitrary code with elevated privileges."""",
         ""Explanation"": ""This rule is triggered when OpenSSL receives a crafted email address that causes a buffer overflow. This could lead to arbitrary code execution with elevated privileges.""
     ][
   {
     ""sid"": ""300307"",
     ""Technique ID"": ""T1115"",
     ""Technique Name"": ""Buffer Overflow"",
     ""Quotes"": """"Buffer Overflow techniques involve writing data beyond the intended boundaries of a buffer, typically leading to memory corruption and the execution of arbitrary code. The rule detects an attempt to exploit a buffer overflow vulnerability in OpenSSL's x509 certificate processing, allowing an attacker to execute arbitrary commands on the system."""",
     ""Explanation"": ""The rule detects a vulnerability in OpenSSL where it is possible to send specially crafted certificate requests that cause the server to crash or execute arbitrary code. This rule attempts to detect such crafted certificate requests by looking for the crafting pattern in the SSL traffic.""
   }
 ][
   {
     ""sid"": ""300307"",
     ""Technique ID"": ""T1220"",
     ""Technique name"": ""Exploit Software Vulnerability"",
     ""Quotes"": """"Exploit Software Vulnerability techniques involve exploiting known vulnerabilities in software to gain unauthorized access or execute arbitrary code. This rule detects an attempted buffer overflow attack on the OpenSSL x509 library, which is a common vulnerability that attackers exploit to gain control of systems."""",
     ""Explanation"": ""This event is generated when a potential exploit of a vulnerability in OpenSSL is detected.""
   }
 ]","['T1189', 'T1210', 'T1220', 'T1208', 'T1110', 'T1068', 'T1220', 'T1220', 'T1195', 'T1115', 'T1220']",['T1189']
42066,"[
   {
     ""sid"": ""42066"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempt to exploit a vulnerability in a WordPress plugin, which could allow an attacker to delete arbitrary files on the target system."""",
     ""Explanation"": ""This rule matches requests to the ""/wp-admin/admin-ajax.php"" endpoint with a ""plugin="" parameter and an ""action=delete"" parameter, which is consistent with an attempt to exploit a vulnerability in a WordPress plugin that allows arbitrary file deletion.""
   }
 ][
   {
     ""sid"": ""42066"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file deletion in a WordPress plugin via the 'admin-ajax.php' script, which is a common method attackers use to exploit web applications by manipulating plugin functionalities."""",
     ""Explanation"": ""This rule alerts on attempts to exploit a vulnerability in a WordPress plugin that allows arbitrary file deletion.""
   }
 ][
   {
     ""sid"": ""42066"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to delete arbitrary files in a WordPress plugin through a crafted HTTP request to the '/wp-admin/admin-ajax.php' endpoint, which is a common method attackers use to exploit vulnerabilities in plugins."""",
     ""Explanation"": ""File deletion vulnerability in WordPress plugins allows unauthenticated attackers to delete arbitrary files by sending a crafted HTTP request.""
   }
 ][
   {
     ""sid"": ""42066"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file deletion in a WordPress plugin via the ""/wp-admin/admin-ajax.php"" endpoint, which is a common method attackers use to exploit web applications."""",
     ""Explanation"": ""The rule detects an attempt to delete an arbitrary file in a WordPress plugin via the '/wp-admin/admin-ajax.php' endpoint. This could allow an attacker to delete critical files and compromise the website.""
   }
 ][
   {
     ""sid"": ""42066"",
     ""Technique ID"": ""T1499"",
     ""Technique name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve reversing obfuscation or encoding mechanisms in order to extract useful information or code. This rule detects an exploit that leverages a plugin vulnerability in WordPress to delete an arbitrary file, which could involve decoding the malicious payload or arguments within the HTTP request's body to execute the desired action."""",
     ""Explanation"": ""Bad parameters sent to the 'WP GDPR Delete My Data' plugin in WordPress 4.9.6 through 5.3.2 can lead to arbitrary file deletion.""
   },
   {
     ""sid"": ""42066"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an exploit that leverages a plugin vulnerability in WordPress to delete an arbitrary file, which involves exploiting a vulnerability in a public-facing web application."""",
     ""Explanation"": ""Bad parameters sent to the 'WP GDPR Delete My Data' plugin in WordPress 4.9.6 through 5.3.2 can lead to arbitrary file deletion.""
   }
 ][
     {
         ""sid"": ""42066"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted plugin deletion in a WordPress site through the '/wp-admin/admin-ajax.php' page, which is a common method attackers use to exploit web applications by manipulating user input."""",
         ""Explanation"": ""This event is generated when activity relating to web application attacks is detected.""
     }
 ][
   {
     ""sid"": ""42066"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an arbitrary file deletion attempt on a WordPress plugin via the '/wp-admin/admin-ajax.php' page, a common method attackers use to exploit web applications by abusing legitimate functionality."""",
     ""Explanation"": ""This rule is triggered when an attempt to delete a file on a WordPress plugin is detected, which is indicative of an attempt to exploit a vulnerability in the plugin.""
   }
 ][
   {
     ""sid"": ""42066"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in a Wordpress plugin that allows an unauthenticated attacker to delete arbitrary files on the server, highlighting the risk of unpatched or vulnerable web applications."""",
     ""Explanation"": ""This rule detects an attempt to delete a file on a wordpress server without authentication exploiting a vulnerability in a Wordpress plugin.""
   }
 ][
   {
     ""sid"": ""42066"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a file deletion vulnerability in a WordPress plugin through a crafted HTTP request to the 'admin-ajax.php' script. Attackers could use this vulnerability to delete arbitrary files on the server, potentially leading to data compromise or website disruption."""",
     ""Explanation"": ""The misuse of a file deletion vulnerability in mediaelement.js of WordPress plugin VideoWhisper Video Embed 2.3.1 allows remote attackers to delete arbitrary files via a crafted HTTP request.""
   }
 ][
   {
     ""sid"": ""42066"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in a WordPress plugin, which could allow an attacker to delete arbitrary files on the server. A successful exploit could lead to the attacker gaining control of the website or server."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in WordPress plugin to delete arbitrary files on the server.""
   },
   {
     ""sid"": ""42066"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploit Web Application"",
     ""Quotes"": """"Exploit Web Application techniques involve exploiting vulnerabilities in web applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in a WordPress plugin, which could allow an attacker to delete arbitrary files on the server. A successful exploit could lead to the attacker gaining control of the website or server."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in WordPress plugin to delete arbitrary files on the server.""
   }
 ][
     {
         ""sid"": ""42066"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule identifies an attempted arbitrary file deletion exploit in a Wordpress plugin, which is a common method used by attackers to compromise web servers."""",
         ""Explanation"": ""The rule is designed to detect an attempt to exploit a vulnerability in a Wordpress plugin, which could allow an attacker to delete arbitrary files on the server.""
     },
     {
         ""sid"": ""42066"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control techniques involve establishing bi-directional communication with a remote adversary-controlled server for the purpose of receiving commands and exfiltrating data. The rule detects an attempt to communicate with a remote server via an HTTP request to ""/wp-admin/admin-ajax.php"", which is a common method used by malware to establish covert communication with a command and control server."""",
         ""Explanation"": ""The rule identifies an attempt to establish a command and control connection with a remote server, which could be used by an attacker to control the compromised system.""
     }
 ]","['T1190', 'T1190', 'T1190', 'T1190', 'T1499', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1203', 'T1190', 'T1059']",['T1070']
44388,"[
   {
     ""sid"": ""44388"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques are used to obtain credentials from a system. The rule detects an attempt to exploit a vulnerability in multiple routers' 'getcfg.php' script, which could allow attackers to obtain sensitive configuration information, including credentials."""",
     ""Explanation"": ""This event is generated when activity relating to attempted credential access is detected.""
   }
 ][
   {
     ""sid"": ""44388"",
     ""Technique ID"": ""T1598"",
     ""Technique name"": ""Phishing for Information"",
     ""Quotes"": """"Phishing for Information techniques involve sending emails or other messages that appear to come from a legitimate source to trick users into revealing sensitive information or clicking on malicious links. In this case, the rule detects an attempt to exploit a vulnerability in the 'getcfg.php' script on multiple routers to obtain sensitive configuration information."""",
     ""Explanation"": ""Phishing for information is a technique used by attackers to gather sensitive information from users through deceptive means, such as phishing emails.""
   }
 ][
         ""sid"": ""44388"",
         ""Technique ID"": ""T1595"",
         ""Technique Name"": ""Credential Dumping"",
         ""Quotes"": """"Credential Dumping techniques involve extracting credentials, such as usernames and passwords, from a compromised system or application. This rule detects an attempt to exploit a credential disclosure vulnerability in the 'getcfg.php' script on multiple routers, which can lead to the extraction of router credentials."""",
         ""Explanation"": ""This event is generated when a directive in a URL is recognized as suspicious or malicious.""
     ][
   {
     ""sid"": ""44388"",
     ""Technique ID"": ""T1598"",
     ""Technique Name"": ""Credential Harvesting"",
     ""Quotes"": """"Credential Harvesting techniques involve gathering credentials through phishing, brute force attacks, and other methods to gain access to systems or accounts."""",
     ""Explanation"": ""This rule detects an attempt to exploit a credential disclosure vulnerability in multiple routers by sending a request to the '/getcfg.php' page with a specially crafted HTTP body containing the string 'AUTH'. This technique is commonly used by attackers to harvest credentials from vulnerable systems.""
   },
   {
     ""sid"": ""44388"",
     ""Technique ID"": ""T1593"",
     ""Technique Name"": ""Search Open Websites/Domains"",
     ""Quotes"": """"Search Open Websites/Domains techniques involve searching freely available websites and/or domains for information about victims that can be used during targeting."""",
     ""Explanation"": ""This rule detects an attempt to exploit a credential disclosure vulnerability in multiple routers by sending a request to the '/getcfg.php' page. Attackers may search open websites and domains for information about vulnerable routers, such as firmware versions and default configurations, to target and exploit them.""
   }
 ][
         ""sid"": ""44388"",
         ""Technique ID"": ""T1482"",
         ""Technique name"": ""Credential Dumping"",
         ""Quotes"": """"Credential Dumping techniques involve extracting credentials or authentication material from a target system to gain access or maintain persistence. By monitoring HTTP traffic for patterns associated with credential dumping, this rule can detect attempts to extract credentials from web application configuration files."""",
         ""Explanation"": ""Multiple routers getcfg.php credential disclosure attempt made.""
     ][
     ""sid"": ""44388"",
     ""Technique ID"": ""T1590"",
     ""Technique name"": ""Gather Victim Network Information"",
     ""Quotes"": """"Gather Victim Network Information techniques involve gathering information about the target network's topology, configuration, and resources. This rule detects an attempt to exploit a known vulnerability in multiple router models that allows attackers to obtain sensitive information by sending a specially crafted HTTP request to the '/getcfg.php' page, which is commonly used to gather network configuration details."""",
     ""Explanation"": ""The rule is designed to detect attempts to exploit this vulnerability, which could allow an attacker to gain access to sensitive information about the network, such as network topology, IP addresses, and device configurations.""
 ][
   {
     ""sid"": ""44388"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted credential disclosure attack on a 'getcfg.php' page of multiple routers, which is a common method attackers use to exploit web applications to obtain sensitive information."""",
     ""Explanation"": ""The rule looks for attempts to exploit a credential disclosure vulnerability in the getcfg.php page of multiple routers.""
   }
 ][
   {
     ""sid"": ""44388"",
     ""Technique ID"": ""T1595"",
     ""Technique name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping is a technique used by attackers to obtain credentials from a compromised system or network. This rule detects an attempt to exploit a vulnerability in multiple routers by sending a crafted HTTP request to the '/getcfg.php' page, which may allow an attacker to disclose sensitive credentials."""",
     ""Explanation"": ""The rule is detecting an attempted credential disclosure attack on routers.""
   },
   {
     ""sid"": ""44388"",
     ""Technique ID"": ""T1484"",
     ""Technique name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve monitoring and capturing network traffic to obtain sensitive information. This rule detects the presence of a network sniffer attempting to capture traffic on the network."""",
     ""Explanation"": ""The rule is detecting network sniffing activity on the network.""
   }
 ][
   {
     ""sid"": ""44388"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Account Discovery"",
     ""Quotes"": """"Account Discovery techniques involve enumerating and identifying user accounts, groups, or other entities on a system or network. This rule detects an attempt to disclose credentials by sending an HTTP request containing a Base64-encoded string to a specific URI ('/getcfg.php') on routers. This type of attack often targets default credentials or weak configurations, which could lead to unauthorized access to the device."""",
     ""Explanation"": ""The rule is triggered when a specific URI is accessed with a suspicious HTTP body that contains an encoded string. This behavior is consistent with attempts to exploit vulnerabilities in web applications to disclose credentials or other sensitive information.""
   }
 ][
   {
     ""sid"": ""44388"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted credential disclosure attack on the getcfg.php page, which is a common method attackers use to exploit web applications by stealing credentials."""",
     ""Explanation"": ""This event is generated when a probing attempt or vulnerability detection is seen on the network. This rule matches behavior associated with credential harvesting.""
   },
   {
     ""sid"": ""44388"",
     ""Technique ID"": ""T1598.002"",
     ""Technique name"": ""Credential Dumping: Local System"",
     ""Quotes"": """"Credential Dumping: Local System techniques involve reading credentials from the local system's memory or disk which can be used to move laterally or gain persistence on the system. This rule specifically looks for the presence of the Mimikatz tool, which is commonly used to dump credentials from a compromised system."""",
     ""Explanation"": ""This event is generated when a probing attempt or vulnerability detection is seen on the network. This rule matches behavior associated with credential harvesting.""
   }
 ][
   {
     ""sid"": ""44388"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve passively monitoring network traffic to capture information, such as credentials, financial data, or other sensitive information. This rule detects suspicious reconnaissance attempts targeting routers using the 'getcfg.php' script, which is known to be vulnerable to credential disclosure attacks through network sniffing."""",
     ""Explanation"": ""This event is detected when a router is being scanned or attacked using a specific script known to be used for exploiting vulnerabilities in routers.""
   },
   {
     ""sid"": ""44388"",
     ""Technique ID"": ""T1135"",
     ""Technique Name"": ""Network Share Discovery"",
     ""Quotes"": """"Network Share Discovery techniques involve searching for shared folders and drives on remote systems to identify potential sources of information to gather. This rule detects reconnaissance attempts targeting routers using the 'getcfg.php' script, which may indicate an attempt to gather configuration information from shared network resources."""",
     ""Explanation"": ""This event is detected when a router is being scanned or attacked using a specific script known to be used for exploiting vulnerabilities in routers.""
   }
 ]","['T1110', 'T1598', 'T1595', 'T1598', 'T1593', 'T1482', 'T1590', 'T1190', 'T1595', 'T1484', 'T1087', 'T1190', 'T1598.002', 'T1040', 'T1135']",['T1003']
26639,"[
   {
     ""sid"": ""26639"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""The rule is configured to detect an XML digital signature transformation of a digest value, which is a technique used in exploiting XML-based vulnerabilities in applications.""
   }
 ][
   {
     ""sid"": ""41440"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule checks if there is an attempt to exploit known vulnerabilities (CVE-2019-3489) by sending specially crafted HTTP requests to the CouchDB server. Exploiting these vulnerabilities could lead to remote code execution and account takeover."""",
     ""Explanation"": ""This rule detects exploitation attempts against CVE-2019-3489 in CouchDB.""
   }
 ][
   {
     ""sid"": ""26639"",
     ""Technique ID"": ""T1185"",
     ""Technique Name"": ""Browser Session Hijacking"",
     ""Quotes"": """"Browser Session Hijacking techniques involve exploiting vulnerabilities and functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques."""",
     ""Explanation"": ""This rule is designed to detect attacks that attempt to hijack or manipulate browser sessions.""
   },
   {
     ""sid"": ""26639"",
     ""Technique ID"": ""T1217"",
     ""Technique Name"": ""Browser Information Discovery"",
     ""Quotes"": """"Browser Information Discovery techniques involve enumerating information about browsers to learn more about compromised environments."""",
     ""Explanation"": ""This rule also detects attempts to gather information about the browser in use, which can be used for further exploitation or fingerprinting.""
   }
 ][
         ""sid"": ""26639"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""**This rule is designed to detect attempts to exploit a remote code execution vulnerability in the XML digital signature transformation of digest value on Microsoft Internet Explorer.""
     ][
     ""sid"": ""26639"",
     ""Technique ID"": ""T1057"",
     ""Technique name"": ""Process Injection"",
     ""Quotes"": """"Process Injection involves injecting malicious code into a legitimate process to execute it with the privileges of that process. This rule detects the injection of digitally signed XML code into Microsoft Internet Explorer (IE), a common vector used to bypass security measures and execute malicious code with the privileges of the IE process."""",
     ""Explanation"": ""The pcre expression in this rule matches digital signatures in XML documents containing a specific pattern [^]*\x26lt\x3bCanonicalizationMethod[^]*\x26lt\x3bDigestValue\x26gt\x3b(?P<DV[^\x26]+).*[^\x2f]DigestValue(?!P=DV)/Rms, indicating an attempt to inject malicious code into IE.""
 ][
 {
 ""sid"": ""26639"",
 ""Technique ID"": ""T1211"",
 ""Technique name"": ""Exploitation for Defense Evasion"",
 ""Quotes"": """"Exploitation for Defense Evasion techniques involve exploiting a system or application vulnerability to bypass security features and impair defense mechanisms. This rule detects an attempt to exploit a buffer overflow vulnerability in the Microsoft XML Core Services (MSXML) to execute arbitrary code, which is a common method attackers use to evade detection and bypass security controls."""",
 ""Explanation"": ""The rule triggers when the attacker sends a specially crafted XML document to trigger the vulnerability in MSXML, leading to arbitrary code execution and potential defense evasion.""
 }
 ][
   {
     ""sid"": ""26639"",
     ""Technique ID"": ""T1140"",
     ""Technique Name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve transforming obfuscated or encoded data into a more usable format. This rule detects a potential attempt to deobfuscate XML data, specifically targeting Microsoft Internet Explorer's XML digital signature transformation of digest values. Attackers may use this technique to bypass security controls or gain access to sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to XML data being deobfuscated is detected.""
   }
 ][
   {
     ""sid"": ""26639"",
     ""Technique ID"": ""T1574.003"",
     ""Technique name"": ""Use Alternate Authentication Material - Digital Signature"",
     ""Quotes"": """"Use Alternate Authentication Material techniques involve authenticating using a digital signature rather than a password or token. This rule detects an attempt to use an XML digital signature to authenticate to a web server, which is an uncommon method that can be used to bypass traditional authentication mechanisms."""",
     ""Explanation"": ""The rule looks for a specific XML pattern for an XML digital signature. This is related to the technique because it is an alternate way to do authentication.""
   }
 ][
     {
         ""sid"": ""26639"",
         ""Technique ID"": ""T1010"",
         ""Technique Name"": ""Application Window Discovery"",
         ""Quotes"": """"Application Window Discovery techniques involve enumerating open application windows on a target system to identify running applications and their associated windows. This rule detects an attempt by an attacker to enumerate application windows on a target system, which is a common technique used to identify potential targets for further exploitation."""",
         ""Explanation"": ""This rule detects attempts to enumerate application windows on a target system, which is a common technique used to identify potential targets for further exploitation.""
     },
     {
         ""sid"": ""26639"",
         ""Technique ID"": ""T1059"",
         ""Technique Name"": ""Command and Control"",
         ""Quotes"": """"Command and Control (C2) techniques involve establishing and maintaining communications between a victim system and a remote attacker. This rule detects an attempt to establish a C2 channel over the HTTP protocol, which is a common method used by attackers to communicate with compromised systems."""",
         ""Explanation"": ""This rule detects attempts to establish a C2 channel over the HTTP protocol, which is a common method used by attackers to communicate with compromised systems.""
     }
 ][
     ""sid"": ""26639"",
     ""Technique ID"": ""T1122"",
     ""Technique name"": ""XSL Script Processing"",
     ""Quotes"": """"XSL Script Processing techniques involve abusing Extensible Stylesheet Language Transformations (XSLT) to bypass application control and execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer's XML digital signature transformation process by injecting malicious XSLT code into an XML document to execute arbitrary code."""",
     ""Explanation"": ""This event is generated when activity relating to a Microsoft Internet Explorer XML digital signature transformation of digest value is detected.""
 ][
         ""sid"": ""26639"",
         ""Technique ID"": ""T1556"",
         ""Technique name"": ""Modify Authentication Process"",
         ""Quotes"": """"Modify Authentication Process techniques involve altering authentication mechanisms to gain unauthorized access to systems. This rule detects an attempt to manipulate the XML digital signature transformation of a digest value in a browser, which can be used to bypass or weaken authentication mechanisms."""",
         ""Explanation"": ""This event is triggered when an attempt is made to modify the authentication process, which could be an indication of a compromise.""
     ],
     [
         ""sid"": ""26639"",
         ""Technique ID"": ""T1112"",
         ""Technique name"": ""Modify Registry"",
         ""Quotes"": """"Modify Registry techniques involve interacting with the Windows Registry to hide configuration information, remove information as part of cleanup, or to aid in persistence and execution. This rule detects an attempt to modify the XML digital signature transformation of a digest value in a browser, which can involve modifying registry settings related to XML processing and digital signatures."""",
         ""Explanation"": ""This event is generated when a registry key is modified, which could be an indication of malware or other unauthorized activity.""
     ]
 ]","['T1190', 'T1189', 'T1185', 'T1217', 'T1190', 'T1057', 'T1211', 'T1140', 'T1574.003', 'T1010', 'T1059', 'T1122', 'T1556', 'T1112']",['T1220']
41978,"[
   {
     ""sid"": ""41978"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a publicly accessible SMB service on the target host, which could allow an attacker to execute arbitrary code remotely."""",
     ""Explanation"": ""SMB remote code execution attempt in Microsoft Windows Server 2008 R2 SP1 and Microsoft Windows 7 SP1 allows remote attackers to execute arbitrary code via crafted packets to port 445/tcp.""
   }
 ][
   {
     ""sid"": ""41978"",
     ""Technique ID"": ""T1025"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a remote code execution vulnerability in Microsoft Windows SMB, which is a common attack method used to compromise systems by sending specially crafted packets to exploit the vulnerability."""",
     ""Explanation"": ""SMB Remote Code Execution Vulnerability in Microsoft Windows 10 2004 and 20H2, Windows Server, version 2004 and 20H2 allows remote attackers to execute arbitrary code via a crafted packet, aka 'Windows SMBv3 Server Remote Code Execution Vulnerability'.""
   }
 ][
         ""sid"": ""41978"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted SMB remote code execution attack by targeting a specific vulnerability in Microsoft Windows."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a remote code execution vulnerability in Microsoft Windows SMB is detected.""
     ][
         ""sid"": ""41978"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution attack on the Microsoft Windows SMB service, which is a common method attackers use to exploit vulnerabilities in SMB by sending specially crafted packets."""",
         ""Explanation"": ""This Snort rule detects an SMBv3 OpLock request with a RequestCount field that is greater than 20. This anomalous condition can be an indicator of a potential exploit attempt against CVE-2020-0796, allowing unauthenticated attackers to execute arbitrary code on the target system.""
     ][{""sid"": ""41978"", ""Technique ID"": ""T1210"", ""Technique name"": ""Exploitation for Client Execution"", ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in software that is installed on target systems to execute malicious code. This rule detects an attempt to exploit a remote code execution vulnerability in Microsoft Windows SMB (Server Message Block), which is a protocol used for sharing files and printers over a network. This vulnerability allows remote attackers to execute arbitrary code on vulnerable systems by sending a specially crafted SMB packet."""", ""Explanation"": ""This event is generated when activity relating to the exploitation of a system vulnerability is detected.""}][
     ""sid"": ""41978"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques involve targeting vulnerabilities in remote services to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a remote code execution vulnerability in the Microsoft Windows SMB protocol, which is commonly exploited to gain unauthorized access to systems and networks."""",
     ""Explanation"": ""The rule specifically looks for a malformed SMB request that attempts to execute arbitrary code on the target system.""
 ][
   {
     ""sid"": ""41978"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""SMB Relay"",
     ""Quotes"": """"SMB Relay techniques involve abusing legitimate token negotiation within the SMB protocol to execute arbitrary code on remote systems. This rule specifically detects an SMB request that has an excessively large TotalDataCount field, which is a common artifact of SMB Relay attacks."""",
     ""Explanation"": ""Possible SMB Relay: TotalDataCount field in SMB request is excessively large.""
   }
 ][
         ""sid"": ""41978"",
         ""Technique ID"": ""T1105"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a SMB remote code execution attempt on Windows systems. SMB is a network protocol used for file and printer sharing, and it can be exploited to execute arbitrary code if a vulnerability is present."""",
         ""Explanation"": ""SMB (Server Message Block) protocol vulnerability in Microsoft Windows Servers and Desktops before 2019 and Windows 10 before 19H2 allows remote attackers to execute arbitrary code via spoofed network packets, aka ""EternalBlue"".""
     ],
     [
         ""sid"": ""41978"",
         ""Technique ID"": ""T1203"",
         ""Technique Name"": ""Create or Modify System Process"",
         ""Quotes"": """"Create or Modify System Process techniques involve creating new processes or modifying existing ones to gain persistence or escalate privileges. This rule may detect an attempt to create a new process or modify an existing one, which could be an indication of an attacker trying to gain persistence or escalate privileges."""",
         ""Explanation"": ""SMB (Server Message Block) protocol vulnerability in Microsoft Windows Servers and Desktops before 2019 and Windows 10 before 19H2 allows remote attackers to execute arbitrary code via spoofed network packets, aka ""EternalBlue"".""
     ]
 ][
   {
     ""sid"": ""41978"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications to execute arbitrary code, such as browser-based attacks using JavaScript or buffer overflows in native programs. The rule triggers when a malicious SMBv3 packet is detected, which can be used by attackers to exploit vulnerabilities in SMBv3 and execute arbitrary code on the target system."""",
     ""Explanation"": ""Remotely exploitable buffer overflow vulnerability in the Microsoft SMBv3 protocol in Microsoft Windows 10 and Windows Server 2019, possibly other versions of Windows as well.""
   }
 ][
         ""sid"": ""41978"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an SMB remote code execution attempt, which is a common method attackers use to exploit vulnerabilities in SMB implementations. The rule looks for a specific sequence of bytes that is present in malicious SMB requests."""",
         ""Explanation"": ""SMB (Server Message Block) provides shared access to files, printers, and other resources on a network. Remote code execution vulnerability in Microsoft Windows SMBv3 allows remote attackers to execute arbitrary code via a crafted SMB packet.""
     ][
         ""sid"": ""41978"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""Remote Services"",
         ""Quotes"": """"Remote Services technique involves accessing and controlling a remote system through a service that provides remote access capabilities. In this rule, the SMB protocol is being targeted, which is a common method used by attackers to gain remote access to systems and execute malicious code."""",
         ""Explanation"": ""Microsoft Windows SMB remote code execution attempt.""
     ],
     [
         ""sid"": ""41978"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting a vulnerability in a client-side application to execute arbitrary code on the client system. SMB is a client-server protocol, and this rule detects an attempt to exploit a vulnerability in the SMB client to execute arbitrary code on the target system."""",
         ""Explanation"": ""Microsoft Windows SMB remote code execution attempt.""
     ]
 ]","['T1190', 'T1025', 'T1190', 'T1190', 'T1210', 'T1210', 'T1071', 'T1105', 'T1203', 'T1210', 'T1190', 'T1133', 'T1210']",['T1189']
27960,"[
         ""sid"": ""27960"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system's command-line interpreter or scripting environment to execute commands or scripts, which can be used to perform a wide range of malicious activities. This rule detects an attempt to upload a file named '.performance.txt' to the 'StartupItems' folder on macOS, which is a common technique used by malware to gain persistence on a system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""27960"",
         ""Technique ID"": ""T1489"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities within web browsers or browser plugins to execute malicious code on victim machines. This rule targets attempts to exploit vulnerabilities in Safari's WebKit framework by utilizing malicious JavaScript or HTML embedded in web pages, which could allow remote attackers to execute arbitrary code on affected machines."""",
         ""Explanation"": ""Webkit vulnerability that may allow remote attackers to execute arbitrary code or cause a denial of service (JavaScript JIT spray) via a crafted website, related to the \""arr\"" function and JavaScriptCore.""
     ][
         ""sid"": ""27960"",
         ""Technique ID"": ""T1199"",
         ""Technique name"": ""Rootkit"",
         ""Quotes"": """"Rootkit techniques involve installing persistent software on a system, usually to maintain access to a system after initial compromise. This rule detects an attempt by the OSX.Trojan.Renepo rootkit to upload a file to the '/System/Library/StartupItems' directory, which is a common method used by rootkits to establish persistence on macOS systems."""",
         ""Explanation"": ""This event is generated when the IDS detects that malware is trying to upload a file to the '/System/Library/StartupItems' directory, which is common for rootkits to hide their files and maintain persistence on the system.""
     ][
     {
         ""sid"": ""27960"",
         ""Technique ID"": ""T1014"",
         ""Technique Name"": ""Rootkit"",
         ""Quotes"": """"Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components."""",
         ""Explanation"": ""The rule detects an attempt to upload a rootkit file to the 'System Library StartupItems' folder, which is a common technique used by rootkits to gain persistent access to the system.""
     }
 ][
   {
     ""sid"": ""27960"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""The event is generated when an attempt to upload a file is made in a Trojan rootkit.""
   }
 ][
     {
         ""sid"": ""27960"",
         ""Technique ID"": ""T1553.004"",
         ""Technique name"": ""Rootkit Uninstallation or Uninstall Resistance"",
         ""Quotes"": """"Rootkit Uninstallation or Uninstall Resistance techniques describe actions taken by adversaries to prevent or impede the identification, detection, and removal of a rootkit. The rootkit may attempt to disable security tools, prevent access to system logs, or interfere with attempts to uninstall or remove the rootkit."""",
         ""Explanation"": ""Detection of OSX.Trojan.Renepo rootkit upload attempt.""
     }
 ][
     ""sid"": ""27960"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Data Compressed"",
     ""Quotes"": """"Data Compression techniques involve compressing and transferring data to evade detection. In this case, the rule detects an attempt to upload a compressed file named '.performance.txt' to the StartupItems folder in '/System Library', which is a common method attackers use to establish persistence and hide malicious payloads on macOS systems."""",
     ""Explanation"": ""Malware often uses data compression & encryption techniques to evade detection.""
 ][
   {
     ""sid"": ""27960"",
     ""Technique ID"": ""T1574"",
     ""Technique Name"": ""Create Account"",
     ""Quotes"": """"Create Account techniques involve creating new user accounts on a system or application to gain access or elevate privileges. This rule detects an attempt by OSX.Trojan.Renepo to create a new account named '.performance.txt' in the 'System Library StartupItems' directory, which is a common method used by malware to establish persistence on a system."""",
     ""Explanation"": ""OSX.Trojan.Renepo rootkit upload attempt. Renepo creates a hidden launch daemon (/Library/LaunchDaemons/.com.apple.netbiosd.plist) and a launch agent (/Library/LaunchAgents/.com.apple.eppc.plist) to maintain persistence.""
   },
   {
     ""sid"": ""27960"",
     ""Technique ID"": ""T1140"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising the identity of malicious activity as benign or expected activity to avoid detection. This rule detects an attempt by OSX.Trojan.Renepo to disguise its malicious activity as a legitimate process named '.performance.txt' in the 'System Library StartupItems' directory. By using a seemingly innocuous name, the malware can evade detection and establish persistence on the system."""",
     ""Explanation"": ""OSX.Trojan.Renepo rootkit upload attempt. Renepo creates a hidden launch daemon (/Library/LaunchDaemons/.com.apple.netbiosd.plist) and a launch agent (/Library/LaunchAgents/.com.apple.eppc.plist) to maintain persistence.""
   },
   {
     ""sid"": ""27960"",
     ""Technique ID"": ""T1580"",
     ""Technique Name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve modifying existing system processes or creating new ones to achieve persistence or execute malicious functionality. This rule detects an attempt by OSX.Trojan.Renepo to create a new system process named '.performance.txt' in the 'System Library StartupItems' directory. By creating a new process, the malware can establish persistence on the system and execute malicious activities without being easily detected."""",
     ""Explanation"": ""OSX.Trojan.Renepo rootkit upload attempt. Renepo creates a hidden launch daemon (/Library/LaunchDaemons/.com.apple.netbiosd.plist) and a launch agent (/Library/LaunchAgents/.com.apple.eppc.plist) to maintain persistence.""
   }
 ][
   {
     ""sid"": ""27960"",
     ""Technique ID"": ""T1074"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding involves altering the format or structure of data for purposes such as concealing its true meaning, bypassing security measures, or avoiding detection. In this rule, the use of the pipe (|) character to delimit different sections of the message suggests that the malware is attempting to encode data to evade detection or analysis."""",
     ""Explanation"": ""This rule detects OSX.Trojan.Renepo attempting to upload a rootkit to a remote server.""
   },
   {
     ""sid"": ""27960"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve intentionally altering or disguising data or code to make it more difficult to understand or detect. The rule indicates the presence of a Trojan (Renepo) that is attempting to upload a file named '.performance.txt' to a remote server. However, the file's name is likely obfuscated to avoid detection by security mechanisms."""",
     ""Explanation"": ""This rule detects OSX.Trojan.Renepo attempting to upload a rootkit to a remote server.""
   }
 ][
   {
     ""sid"": ""27960"",
     ""Technique ID"": ""T1492"",
     ""Technique name"": ""Rootkit"",
     ""Quotes"": """"Rootkit techniques involve modifying the operating system or application software to hide malicious code, processes, or network traffic. This rule detects an attempt to install a rootkit on a macOS system by uploading a file to the 'StartupItems' directory, which would allow the rootkit to persist after a system reboot."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""27960"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Network Denial of Service"",
     ""Quotes"": ""\""Network Denial of Service (DoS) attacks target availability by consuming system resources, such as bandwidth or processing power, making them unavailable to legitimate users.\"""",
     ""Explanation"": ""The rule detects an attempt to upload a rootkit to a system, which could potentially lead to a denial of service attack.""
   },
   {
     ""sid"": ""27960"",
     ""Technique ID"": ""T1136"",
     ""Technique name"": ""Rootkit"",
     ""Quotes"": ""\""Rootkits are malicious software that provide attackers with privileged access and the ability to maintain persistence on a compromised system.\"""",
     ""Explanation"": ""The rule detects an attempt to upload a rootkit to a system, which could potentially give attackers privileged access to the system.""
   }
 ]","['T1059', 'T1489', 'T1199', 'T1014', 'T1190', 'T1553.004', 'T1105', 'T1574', 'T1140', 'T1580', 'T1074', 'T1027', 'T1492', 'T1498', 'T1136']",['T1014']
36585,"[
   {
     ""sid"": ""36585"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""This rule targets the Apache web server and detects an attempt to execute arbitrary code using the 'mod_cgi' module. Attackers may use this technique to gain unauthorized access or escalate privileges on the target system.""
   }
 ][
         ""sid"": ""36585"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""User Execution"",
         ""Quotes"": """"User Execution techniques involve tricking or coercing a user into executing code on their system. This rule specifically detects an attempt to execute AppleScript code in Safari, likely through a malicious website or phishing email. Attackers use this technique to gain unauthorized access or execute arbitrary code on a user's device."""",
         ""Explanation"": ""This detection is based upon HTTP traffic for the FTP or HTTP File Data protocol. It will trigger on file data and applescript content present.""
     ][
   {
     ""sid"": ""36585"",
     ""Technique ID"": ""T1185"",
     ""Technique Name"": ""Browser Session Hijacking"",
     ""Quotes"": """"Browser Session Hijacking techniques involve taking advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques."""",
     ""Explanation"": ""This rule identifies an attempt to execute malicious applescript code in the context of the Apple Safari browser. Attackers may leverage browser session hijacking to gain unauthorized access to user sessions and perform actions on their behalf.""
   }
 ][
   {
     ""sid"": ""36585"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking or coercing a user into running malicious code on a targeted system. This rule specifically detects an attempt to execute an AppleScript code through a web browser, which could allow an attacker to gain remote control of the user's system."""",
     ""Explanation"": ""This rule is designed to detect attempts to execute arbitrary code on a system by tricking a user into running a malicious script. The rule specifically looks for attempts to execute AppleScript code through a web browser, which could allow an attacker to gain remote control of the user's system.""
   }
 ][
   {
     ""sid"": ""36585"",
     ""Technique ID"": ""T1555"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking users into executing malicious code or commands. This rule detects an attempt to execute AppleScript code in Safari, which could be used to perform unauthorized actions or gain access to sensitive data."""",
     ""Explanation"": ""This event is generated when a user attempts to execute applescript code in Safari.""
   }
 ][
     {
         ""sid"": ""36585"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve leveraging vulnerabilities in client-side applications to execute unauthorized code on a victim's system. This rule detects an attempt to exploit a vulnerability in Apple Safari using an applescript:// URI, which could allow an attacker to execute arbitrary code in the context of the user's browser."""",
         ""Explanation"": ""This event is generated when activity relating to exploiting a vulnerability in client-side applications to execute unauthorized code on a victim's system is detected.""
     }
 ][
     ""sid"": ""36585"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a user's system through malicious content on a website or other untrustworthy resource. This rule detects an attempt to execute AppleScript code through a web browser, which could allow an attacker to remotely control the victim's system."""",
     ""Explanation"": ""This event is generated when an attempt is made by a remote attacker to execute applescript code on the victim's system via a web browser.""
 ][
   {
     ""sid"": ""36585"",
     ""Technique ID"": ""T1177"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking or coercing a user into executing malicious code, often by disguising its true purpose or source. In this case, the rule detects an attempt to execute AppleScript code from a web browser, which could be used to execute malicious commands or compromise the user's system."""",
     ""Explanation"": ""The rule detects an Applescript execution attempt, which could be leveraged to execute malicious code on the victim's system.""
   }
 ][
         ""sid"": ""36585"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Scripting"",
         ""Quotes"": """"Scripting techniques involve the use of a scripting language to perform tasks on a system, such as executing commands, modifying files, or accessing data. The rule specifically mentions 'applescript' code execution, which is a scripting language used in Apple's macOS operating system."""",
         ""Explanation"": ""This rule matches Applescript code execution attempt, which could be malicious.""
     ][
   {
     ""sid"": ""36585"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve enticing a user to execute malicious code or commands by taking advantage of weaknesses in human behavior or interaction with systems. This rule detects an attempt to execute AppleScript code in Safari, which could allow an attacker to gain control of the user's browser or system if the user approves the execution."""",
     ""Explanation"": ""The rule is to detect Applescript execution on a web browser by the user.""
   }
 ][
   {
     ""sid"": ""36585"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking or coercing users into executing malicious code or commands on their own systems. This rule detects an attempt to run an AppleScript payload in a web browser. AppleScripts are commonly used to automate tasks or control applications. In this case, an attacker may attempt to exploit vulnerabilities in the AppleScript interpreter to execute arbitrary code on the victim's system."""",
     ""Explanation"": ""Attempts to execute malicious code on a user's system by tricking them into running an AppleScript.""
   }
 ]","['T1190', 'T1204', 'T1185', 'T1204', 'T1555', 'T1203', 'T1189', 'T1177', 'T1203', 'T1204', 'T1204']",['T1059']
18717,"[
   {
     ""sid"": ""18717"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve encoding or encrypting data to make the content of command and control traffic more difficult to detect. The rule detects outbound communication from a Trojan (Banker.QO) that uses the string 'RooTKit+By+Iron+Mask+%2D+Espanha' as part of its communication, which suggests that the data may be encoded to evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""18717"",
     ""Technique ID"": ""T1485"",
     ""Technique name"": ""Data Destruction"",
     ""Quotes"": """"Data Destruction techniques involve destroying data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. The rule indicates the presence of a Trojan (Banker.QO) that is known to destroy data and files on compromised systems, which can lead to data loss and disruption of critical services."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""18717"",
         ""Technique ID"": ""T1563"",
         ""Technique name"": ""Remote Service Session Hijacking"",
         ""Quotes"": """"Remote Service Session Hijacking techniques involve taking control of existing sessions with remote services to move laterally within a network and elevate privileges. The rule detects outbound traffic associated with a Trojan variant known as 'Win.Trojan.Banker.QO,' which often uses remote access tools to establish command and control connections and control infected systems remotely."""",
         ""Explanation"": ""This rule detects an outbound connection made by a Trojan variant known as 'Win.Trojan.Banker.QO,' which is associated with malware activity. The malware can establish command and control connections and control infected systems remotely.""
     ][
         ""sid"": ""18717"",
         ""Technique ID"": ""T1408"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve disguising the identity of a user or system to appear as a legitimate entity. This rule identifies an outbound connection from a compromised host to a known command-and-control server associated with the Win.Trojan.Banker.QO malware, which is known to use various methods of masquerading to evade detection, such as spoofing IP addresses or using encryption to conceal its communication."""",
         ""Explanation"": ""This rule detects a Trojan attempting to connect to a known C&C server.""
     ][
   {
     ""sid"": ""18717"",
     ""Technique ID"": ""T1140"",
     ""Technique Name"": ""Connection Proxy"",
     ""Quotes"": """"Connection Proxy techniques involve establishing a proxy connection to an external system to facilitate communication and data exchange between two endpoints. In this case, the rule detects outbound traffic containing the string ""RootKit+By+Iron+Mask+%2D+Espanha"", which suggests a connection to a known malware command and control server used by the ""Banker.QO"" Trojan. This indicates an attempt to establish a connection to a remote system for malicious purposes."""",
     ""Explanation"": ""The event includes external IP address, external port number, internal IP address, and internal port number.""
   }
 ][
     ""sid"": ""18717"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised environment. The rule detects outbound traffic containing 'RooTKit+By+Iron+Mask+%2D+Espanha', which is a known Trojan used to establish remote access to the infected system. The transfer of such tools is often associated with establishing persistence and expanding the attacker's foothold."""",
     ""Explanation"": ""Detects outbound connection attempts made by malware.""
 ][
     {
         ""sid"": ""18717"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects an outbound connection from a compromised host to a command and control server associated with the Win.Trojan.Banker.QO variant, which is known to use keylogging capabilities to steal financial information."""",
         ""Explanation"": ""This rule detects malware activity related to the Win.Trojan.Banker.QO variant, which is known for its keylogging capabilities.""
     }
 ][
 ""sid"": ""18717"",
 ""Technique ID"": ""T1485"",
 ""Technique Name"": ""Deobfuscate/Decode Files or Information"",
 ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve converting encoded or obfuscated data into a usable format. This rule detects an outbound connection attempting to send the string 'RootKit By Iron Mask - Espanha', which is likely an encoded or obfuscated payload. Decoding or deobfuscating this payload could reveal malicious code or sensitive information."""",
 ""Explanation"": ""The full description of the rule is: outbound connection contains malicious payload from an infected host.""
 ][
     {
         ""sid"": ""18717"",
         ""Technique ID"": ""T1437"",
         ""Technique Name"": ""Extending Attack"",
         ""Quotes"": """"Extending Attack techniques involve expanding existing access, privileges, or resources to increase the impact of an attack. This rule detects an outbound connection from a compromised host to a known command and control server associated with the Win.Trojan.Banker.QO variant. The attacker may attempt to use this connection to extend the scope of their compromise or exfiltrate sensitive data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""18717"",
     ""Technique ID"": ""T1497"",
     ""Technique name"": ""Outbound Command and Control"",
     ""Quotes"": """"Outbound Command and Control techniques involve adversary use of compromised systems to connect to external command and control (C2) servers or infrastructure for malicious purposes. This rule detects outbound communication from an infected system to a known C2 server associated with the Win.Trojan.Banker.QO variant, indicating possible remote control or data exfiltration activities."""",
     ""Explanation"": ""The traffic is going out of the network to a malicious IP address.""
   },
   {
     ""sid"": ""18717"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Interactive Process Injection"",
     ""Quotes"": """"Interactive Process Injection involves executing malicious code within the address space of a running process by taking advantage of various mechanisms. This rule triggers when the body of an HTTP request contains the string 'RooTKit+By+Iron+Mask+%2D+Espanha', which may indicate an attempt to inject malicious code into a process using a web-based exploit."""",
     ""Explanation"": ""This payload is used to inject a malicious code into a process.""
   }
 ][
     {
         ""sid"": ""18717"",
         ""Technique ID"": ""T1480"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve an adversary using a non-malicious, legitimate entity as a decoy to hide or facilitate malicious activity. This rule looks for outbound traffic that contains the user agent ""Iron Mask - Espanha"", which is associated with a known banking Trojan."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""18717"",
     ""Technique ID"": ""T1568"",
     ""Technique Name"": ""Modify Registry"",
     ""Quotes"": """"Modify Registry techniques involve adding, modifying, or deleting registry keys or values to modify system behavior or persist malicious code. The rule detects communication with an Iron Mask Rootkit, which typically modifies registry keys to gain persistence and evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""18717"",
     ""Technique ID"": ""T1574"",
     ""Technique Name"": ""Process Injection"",
     ""Quotes"": """"Process Injection techniques involve injecting malicious code into a running process to execute it in the context of that process. The rule detects communication with an Iron Mask Rootkit, which typically injects malicious code into legitimate processes to gain persistence and evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""18717"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve probing a network to identify open ports and running services. The rule detects outbound connections to external IP addresses on HTTP ports, which is a common method used by malware to communicate with command and control servers."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""18717"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Discovery"",
     ""Quotes"": """"Network Service Discovery techniques involve identifying and enumerating services running on a network. The rule detects outbound connections to external IP addresses on HTTP ports, which is a common method used by malware to communicate with command and control servers."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1132', 'T1485', 'T1563', 'T1408', 'T1140', 'T1105', 'T1056', 'T1485', 'T1437', 'T1497', 'T1105', 'T1480', 'T1568', 'T1574', 'T1105', 'T1046']",['T1014']
37304,"[
   {
     ""sid"": ""37304"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve actively scanning a network or system to identify potential targets for exploitation or attack. This rule detects Hola VPN sending a 'ping' message to non-HTTP ports (22222 and 22223) on external IPs, which is a common method used by attackers to identify open ports and services for further exploitation."""",
     ""Explanation"": ""The alert is generated when non-http port ping activity is detected.""
   }
 ][
     {
         ""sid"": ""37304"",
         ""Technique ID"": ""T1021"",
         ""Technique name"": ""Remote System Discovery"",
         ""Quotes"": """"Remote System Discovery techniques involve gathering information about remote systems or services to identify potential targets or vulnerabilities. The rule detects a non-HTTP port ping sent by Hola VPN, which is a common reconnaissance technique used to identify and target potential victims."""",
         ""Explanation"": ""This event is generated when a non-standard HTTP port ping is detected.""
     }
 ][
   {
     ""sid"": ""37304"",
     ""Technique ID"": ""T1509"",
     ""Technique name"": ""Proxy"",
     ""Quotes"": """"Proxy techniques involve using a proxy host, such as Hola VPN, to redirect network traffic, potentially masking malicious activity. The rule specifically checks for non-HTTP traffic on ports used by Hola VPN, which could indicate anomalous communication using a VPN tunnel."""",
     ""Explanation"": ""This event is generated when Hola VPN is detected on the network.""
   }
 ][
   {
     ""Sid"": ""37304"",
     ""Technique ID"": ""T1218"",
     ""Technique name"": ""Port Scanning"",
     ""Quotes"": """"Port Scanning techniques involve systematically probing a range of IP addresses and ports to identify active systems and ports that are listening for connections. This rule detects Hola VPN sending non-HTTP port pings to external IP addresses on ports 22222 and 22223, which is a common technique used by attackers to scan for open ports and identify potential vulnerabilities."""",
     ""Explanation"": """"APP-DETECT Hola VPN non-http port ping"""" message indicates that Hola VPN is pinging non-HTTP ports.
   }
 ][
     ""sid"": ""37304"",
     ""Technique ID"": ""T1112"",
     ""Technique name"": ""Ping"",
     ""Quotes"": """"Ping techniques involve sending ICMP echo request messages to target devices to determine their presence and availability on a network. This rule detects Hola VPN's non-standard ping method, which involves sending a '/ping?rmt_ver' request to a specific port. Adversaries may use ping techniques for reconnaissance purposes, such as identifying active hosts and network topology."""",
     ""Explanation"": ""This rule detects non-standard ping method that Hola VPN uses to perform reconnaissance.""
 ][
   {
     ""sid"": ""37304"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of Hola VPN, a network tunneling service that can be used to bypass firewalls and network restrictions. Hola VPN uses a technique called 'Input Capture' to collect user input data, such as login credentials, browsing history, and other sensitive information."""",
     ""Explanation"": ""Hola VPN is a Virtual Private Network (VPN) that allows users to browse the internet through a secure, encrypted tunnel. Hola VPN uses a technique called 'Input Capture' to collect user input data, such as login credentials, browsing history, and other sensitive information.""
   }
 ][
   {
     ""sid"": ""37304"",
     ""Technique ID"": ""T1043"",
     ""Technique Name"": ""Internal Remote Services"",
     ""Quotes"": """"Internal Remote Services techniques involve establishing remote desktop services or other internal remote access and management tools to facilitate lateral movement and remote control of systems."""",
     ""Explanation"": ""The rule detects the Hola VPN client pinging an unknown server on non-standard ports (22222, 22223), which could be an attempt to establish a remote access or management connection as part of a lateral movement strategy.""
   },
   {
     ""sid"": ""37304"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve using legitimate remote access and management tools to establish a remote connection to a target system, often in support of other attacks."""",
     ""Explanation"": ""The rule detects the Hola VPN client making a connection to a remote server on non-standard ports (22222, 22223), which could be an indication of an attacker attempting to establish a remote access connection for malicious purposes.""
   }
 ][
     {
         ""sid"": ""37304"",
         ""Technique ID"": ""T1049"",
         ""Technique name"": ""System Network Connections Discovery"",
         ""Quotes"": """"System Network Connections Discovery techniques involve obtaining information about network connections to or from the compromised system. The rule detects Hola VPN sending a 'ping' request to a non-HTTP port over the network, indicating an attempt to establish a connection."""",
         ""Explanation"": ""This event is linked to the Hola VPN application's method of establishing a connection, which involves sending a 'ping' request to a non-HTTP port.""
     }
 ][
     {
         ""sid"": ""37304"",
         ""Technique ID"": ""T1572"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve attempting to obtain credentials or other sensitive information from users by impersonating a legitimate entity or service. This rule detects an attempt to communicate with a non-HTTP port (22222 or 22223) associated with Hola VPN, which has been known to be used for phishing and other malicious activities."""",
         ""Explanation"": ""Hola VPN has been accused of phishing as well as not being safe to use. This event is generated when Hola VPN is detected.""
     }
 ][
     ""sid"": ""37304"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve modifying the network characteristics of adversary-controlled systems to appear legitimate, such as by using virtual private networks (VPNs) or Tor, or by imitating authorized users or devices. This rule detects a Hola VPN ping request sent to a non-HTTP port, which could indicate an attacker attempting to mask their traffic as legitimate VPN activity."""",
     ""Explanation"": ""In this rule the ping request from Hola VPN is detected in a non-HTTP port, which violates the policy.""
 ]{
     ""sid"": ""37304"",
     ""Technique ID"": ""T1117"",
     ""Technique name"": ""Proxy Pivoting"",
     ""Quotes"": """"Proxy Pivoting techniques involve using proxies to establish a connection from a compromised system to a target system, bypassing network controls and security measures. This rule detects traffic from a Hola VPN client to a non-standard port (22222 or 22223), which may indicate an attempt to use the VPN as a proxy for malicious activities."""",
     ""Explanation"": ""Hola is a peer-to-peer VPN service. It is possible to abuse Hola's services to perform malicious activities such as phishing, spamming, or malware distribution.""
 }","['T1046', 'T1021', 'T1509', 'T1218', 'T1112', 'T1056', 'T1043', 'T1021', 'T1049', 'T1572', 'T1048', 'T1117']",['T1021']
37306,"[
         ""sid"": ""37306"",
         ""Technique ID"": ""T1067"",
         ""Technique name"": ""VPN"",
         ""Quotes"": """"VPN techniques involve using virtual private networks (VPNs) to establish encrypted communications channels over a shared network, allowing remote access to private networks. The rule detects an attempt by the Hola VPN client to establish a connection by sending a request to a specific URI, which is a common method used by VPNs to initialize their connections."""",
         ""Explanation"": ""This rule is designed to detect and block attempts to establish a connection with the Hola VPN service.""
     ][
         ""sid"": ""37306"",
         ""Technique ID"": ""T1137"",
         ""Technique name"": ""Office Application Startup"",
         ""Quotes"": """"Office Application Startup techniques involve using Microsoft Office applications (e.g., Word, Excel, PowerPoint) as an attack vector by leveraging features or macros to establish persistence, execute malicious code, or exfiltrate data. This rule detects an attempt by Hola VPN to start up, which can be an indication of malicious activity as VPNs can be used to bypass security controls and access restricted resources."""",
         ""Explanation"": ""The rule detects a Hola VPN startup attempt, which is a potentially malicious activity.""
     ][
   {
     ""sid"": ""37306"",
     ""Technique ID"": ""T1574"",
     ""Technique Name"": ""Proxy"",
     ""Quotes"": """"Proxy techniques involve using a proxy server to mediate communication between the adversary and the target system. The rule identifies communication with the Hola VPN, a popular proxy service, indicating the use of a proxy for anonymization or bypassing security controls."""",
     ""Explanation"": ""This event is generated when Hola VPN is detected.""
   }
 ][
         ""sid"": ""37306"",
         ""Technique ID"": ""T1036"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve modifying the appearance of an entity (e.g., process, file, network connection) to appear as something different. This rule detects an attempt by Hola VPN to connect to its command and control server, which is a common method used by malware to evade detection by masquerading as legitimate traffic."""",
         ""Explanation"": ""This rule detects Hola VPN client connecting to the Hola VPN command and control server.""
     ][
   ""sid"": ""37306"",
   ""Technique ID"": ""T1190"",
   ""Technique name"": ""Exploit Public-Facing Application"",
   ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted attack on the Hola! VPN client to start it up, which could lead to a variety of malicious activities, such as data exfiltration or remote code execution."""",
   ""Explanation"": ""The rule detects a Hola VPN startup attempt over HTTP, which could be an indication of malicious activity.""
 ][
   {
     ""sid"": ""37306"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. This rule detects a Hola VPN startup attempt by monitoring for traffic to a specific URI on an external Hola VPN server. Hola VPN is a free VPN service that allows users to access blocked websites and content. By detecting the startup request to the Hola VPN server, this rule can identify potential attempts to establish a VPN connection and bypass network security controls."""",
     ""Explanation"": ""This rule detects Hola VPN startup attempts.""
   }
 ][
   {
     ""sid"": ""37306"",
     ""Technique ID"": ""T1137"",
     ""Technique Name"": ""Proxy"",
     ""Quotes"": """"Proxy techniques involve using a compromised system or third-party service as an intermediary for communications in order to conceal the true source or destination, often to avoid detection, authentication, or other defenses. The rule detects Hola VPN attempting to establish a connection to its service, which provides a proxy service for users to bypass geographic restrictions and access blocked content."""",
     ""Explanation"": ""This event is generated when activity relating to a proxy or VPN program is detected.""
   }
 ][
         ""sid"": ""37306"",
         ""Technique ID"": ""T1016"",
         ""Technique name"": ""System Network Configuration Discovery"",
         ""Quotes"": """"System Network Configuration Discovery techniques involve gathering information about the network configuration and settings, such as IP and/or MAC addresses, of systems they access through information discovery of remote systems."""",
         ""Explanation"": ""This rule is triggering on traffic traversing the network""
     ],
     [
         ""sid"": ""37306"",
         ""Technique ID"": ""T1049"",
         ""Technique name"": ""System Network Connections Discovery"",
         ""Quotes"": """"System Network Connections Discovery techniques involve attempting to get a listing of network connections to or from the compromised system they're currently accessing or from remote systems by querying for information over the network."""",
         ""Explanation"": ""The rule is monitoring connections on the network""
     ]
 ][
   {
     ""sid"": ""37306"",
     ""Technique ID"": ""T1581"",
     ""Technique Name"": ""Proxy Execution"",
     ""Quotes"": """"Proxy Execution techniques involve leveraging a trusted intermediary or proxy to execute commands or make connections on behalf of an adversary. Hola VPN is a proxy service that allows users to access content that may be blocked in certain regions. By detecting the startup attempt of Hola VPN, this rule is likely identifying an attempt to access blocked content or bypass security controls."""",
     ""Explanation"": ""Hola VPN is commonly used by threat actors to access malicious and phishing websites that could lead to further malicious activities like malware infection, data exfiltration, or system compromise""
   }
 ][
     {
         ""sid"": ""37306"",
         ""Technique ID"": ""T1016"",
         ""Technique Name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve disguising the identity of an actor or behavior to evade detection or attribution. Hola VPN modifies browser User-Agents to blend with legitimate traffic, avoid detection, and circumvent geo-restrictions."""",
         ""Explanation"": ""This rule detects Hola VPN traffic and specifically notes that the VPN modifies the User-Agent string in an attempt to disguise its identity.""
     }
 ][
   {
     ""sid"": ""37306"",
     ""Technique ID"": ""T1584"",
     ""Technique Name"": ""Credential Access: Application Clients"",
     ""Quotes"": """"Credential Access: Application Clients techniques involve using a compromised application client, such as a VPN client, to access credentials or compromise the underlying network. This rule detects an attempt to establish a connection to the Hola VPN service, which could be used by an attacker to exfiltrate credentials or gain access to internal resources."""",
     ""Explanation"": ""This event is generated when an attempt to start the Hola VPN application is detected.""
   }
 ]","['T1067', 'T1137', 'T1574', 'T1036', 'T1190', 'T1133', 'T1137', 'T1016', 'T1049', 'T1581', 'T1016', 'T1584']",['T1021']
56864,"[
   {
     ""sid"": ""56864"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve sending collected data to a command and control (C2) server over an established communications channel. The rule triggers on an SSL handshake with a server certificate issued by 'ACME Shell Co.', which is associated with malware using SSL for C2 communications."""",
     ""Explanation"": ""This event is generated when the IPS detects activity relating to malware that communicates with remote command-and-control servers.""
   }
 ][
   {
     ""sid"": ""56864"",
     ""Technique ID"": ""T1588"",
     ""Technique Name"": ""Obtain Capabilities"",
     ""Quotes"": """"Obtain Capabilities techniques involve purchasing or stealing capabilities that can be used during targeting. In this case, the rule detects the presence of a malicious SSL certificate issued by ""ACME Shell Co.0"" in the server's hello message during an SSL handshake, which could indicate that an adversary has obtained or created a fake certificate to facilitate encrypted communication with a command and control server."""",
     ""Explanation"": ""SSL/TLS is used to establish secure communication channels between two parties. A malicious SSL certificate can enable attackers to intercept or modify the communications in order to steal information or compromise systems.""
   },
   {
     ""sid"": ""56864"",
     ""Technique ID"": ""T1572"",
     ""Technique Name"": ""Protocol Tunneling"",
     ""Quotes"": """"Protocol Tunneling techniques involve tunneling network communications within a separate protocol to avoid detection and filtering. This rule specifically detects the use of an SSL certificate with the issuer name ""ACME Shell Co.0"" during the server's hello message, which could indicate that an adversary is using SSL tunneling to conceal malicious traffic and circumvent network security controls."""",
     ""Explanation"": ""SSL tunneling involves encapsulating network traffic within SSL or TLS, making it appear as legitimate and encrypted traffic to evade detection by security tools and access control mechanisms.""
   }
 ][
     ""sid"": ""56864"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Remote Service Exploitation"",
     ""Quotes"": """"Remote service exploitation techniques involve exploiting vulnerabilities in remote services over the network to gain unauthorized access or execute arbitrary code. SSL certificate issuance is a common component of malware command and control activities, and the rule specifically detects the issuance of certificates for 'ACME Shell Co.', which is associated with the GORAT malware."""",
     ""Explanation"": ""This event is generated when a command and control connection is detected""
 ][
     {
         ""sid"": ""56864"",
         ""Technique ID"": ""T1568"",
         ""Technique name"": ""Trust Exploitation"",
         ""Quotes"": """"Trust Exploitation techniques involve abusing trusted relationships between computers, such as those created by certificates, to gain unauthorized access or execute arbitrary code. The rule detects the presence of a certificate from 'ACME Shell Co.0' in SSL traffic, which is a known issuer of malicious certificates used by attackers to establish encrypted communication channels for command and control."""",
         ""Explanation"": ""Certificate is issued by a commercial Certificate Authority. Associated with malware.""
     },
     {
         ""sid"": ""56864"",
         ""Technique ID"": ""T1033"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve hiding the identity of a user or device to appear as a legitimate entity on a network to evade detection and gain access to systems or data. The rule detects the presence of a certificate from 'ACME Shell Co.0' in SSL traffic, which attackers may use to masquerade as a legitimate organization to establish encrypted communication channels for command and control."""",
         ""Explanation"": ""The rule detects SSL communication that is potentially a command and control channel for malware.""
     }
 ][
     ""sid"": ""56864"",
     ""Technique ID"": ""T1591"",
     ""Technique name"": ""Gather Victim Org Information"",
     ""Quotes"": """"Adversaries may gather information about the victim's organization that can be used during targeting."""",
     ""Explanation"": """"""This rule detects an attempt to establish a command and control connection with a malware identified as MultiOS.Malware.GORAT. The malware is known to gather information about the victim's organization, such as network topology, system configuration, and user credentials, which can be used to target and compromise additional systems. The use of SSL encryption in the communication suggests that the adversaries are attempting to hide their activities and evade detection.""""""
 ][
         ""sid"": ""56864"",
         ""Technique ID"": ""T1589"",
         ""Technique name"": ""Gather Victim Identity Information"",
         ""Quotes"": """"Gather Victim Identity Information techniques involve retrieving information about the targeted person or entity, such as names, addresses, phone numbers, and other data. The rule highlights the presence of an SSL certificate issued by ""ACME Shell Co.0,"" which may be used by threat actors to conceal their identity and impersonate legitimate companies or organizations."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""56864"",
     ""Technique ID"": ""T1585"",
     ""Technique name"": ""Establish Accounts"",
     ""Quotes"": """"Establish Accounts techniques involve creating accounts (e.g., via compromised credentials, brute force, social engineering, or internal service mechanisms) that are used for persistence, lateral movement, and command and control."""",
     ""Explanation"": ""This rule detects the use of the ""ACME Shell Co.0"" certificate, which is known to be used by the GORAT malware for establishing secure communication channels. This certificate is used by the malware to establish a command and control channel with a remote server, which is a common method used by malware to maintain persistence and control over infected systems.""
   },
   {
     ""sid"": ""56864"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve exfiltrating data over an existing command and control channel."""",
     ""Explanation"": ""This rule detects the use of the ""ACME Shell Co.0"" certificate, which is known to be used by the GORAT malware for establishing secure communication channels. This certificate is used by the malware to establish a command and control channel with a remote server, which is a common method used by malware to exfiltrate stolen data.""
   }
 ][
     ""sid"": ""23932"",
     ""Technique ID"": ""T1082"",
     ""Technique name"": ""System Information Discovery"",
     ""Quotes"": """"System Information Discovery techniques involve techniques for obtaining information about the operating system and hardware of the target system. The rule detects reconnaissance activity where the attacker is attempting to gather system information, such as the operating system and hardware details, by sending crafted packets to the target system."""",
     ""Explanation"": ""The rule monitors network traffic for attempts to exploit a remote authentication protocol, which is a common method for attackers to gather information about the target system.""
 ][
   {
     ""sid"": ""56864"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing and maintaining covert channels of communication between a victim system and a remote attacker or infrastructure. This rule triggers when an SSL certificate issued by ""ACME Shell Co.0"" is used to establish a command and control connection via port 443. This technique is commonly used by malware to communicate with its C2 server securely."""",
     ""Explanation"": ""The alert is triggered when there is a command and control (C2) communication between the victim system and a remote attacker. This communication is being established over SSL using a certificate issued by 'ACME Shell Co.0'.""
   }
 ][
     {
         ""sid"": ""56864"",
         ""Technique ID"": ""T1568"",
         ""Technique name"": ""Certificate Trust Manipulation"",
         ""Quotes"": """"Certificate Trust Manipulation involves modifying or intercepting trusted certificates to undermine trust in a system or organization. This event is generated when an SSL certificate is presented to the server that appears to be signed by a trusted certificate authority, but is in fact a malicious certificate. This type of certificate could be used to intercept and decrypt encrypted traffic, or to impersonate a trusted website."""",
         ""Explanation"": ""This event is generated when an SSL certificate is presented to the server that appears to be signed by a trusted certificate authority, but is in fact a malicious certificate.""
     },
     {
         ""sid"": ""56864"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning involves using scanning tools to identify listening ports, network services, and associated software versions on a network. This rule detects the use of the 'nmap' network scanner to perform a port scan on the target host, which is a common method for attackers to discover potential vulnerabilities."""",
         ""Explanation"": ""An attacker could use this port scan to identify potential vulnerabilities in the target host.""
     },
     {
         ""sid"": ""56864"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""An attacker could use this SQL injection vulnerability to gain unauthorized access to the web application.""
     }
 ][
   {
     ""sid"": ""56864"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Domain Generation Algorithms"",
     ""Quotes"": """"Domain Generation Algorithms (DGAs) are algorithms used by malware to generate domain names for use in command and control (C2) communications. This rule detects a DGA pattern used by the GORAT malware, which is known to generate domain names using a specific algorithm based on the current date and a hardcoded seed value."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""56864"",
     ""Technique ID"": ""T1104"",
     ""Technique Name"": ""Multi-Stage Channels"",
     ""Quotes"": """"Multi-Stage Channels techniques involve using multiple stages or layers of communication to establish and maintain command and control (C2) channels between an adversary and compromised systems. This rule detects a connection to a C2 server using SSL, which is a common method for malware to establish a secure and encrypted communication channel with its operators."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1041', 'T1588', 'T1572', 'T1071', 'T1568', 'T1033', 'T1591', 'T1589', 'T1585', 'T1041', 'T1082', 'T1105', 'T1568', 'T1046', 'T1190', 'T1105', 'T1104']",['T1094']
24095,"[
   {
     ""sid"": ""24095"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools from an external source to the target environment for execution. This rule detects an attempt to download the TeamViewer installer, which could be used as a tool for remote access and control, over HTTP. This is a common method used by adversaries to gain access to target systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""24095"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in a web application by sending a specially crafted HTTP request to download the TeamViewer installer. This is a common method used by attackers to exploit web applications and gain unauthorized access to target systems."""",
     ""Explanation"": ""Active exploitation attempt against a vulnerablility within a public-facing application.""
   }
 ][
   {
     ""sid"": ""24095"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted download of a known Teamviewer installer, which could potentially lead to the exploitation of vulnerabilities in Teamviewer's software."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""24095"",
     ""Technique ID"": ""T1486"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to increase the difficulty of detecting malicious content, such as payloads or commands. The Snort rule detects an attempt to download an encrypted Teamviewer installer, which could be a potential malware payload encrypted to evade detection."""",
     ""Explanation"": ""The rule looks for a specific byte pattern and the presence of ""www.teamviewer.com"" in the content, suggesting an attempt to download an installer for TeamViewer software.""
   },
   {
     ""sid"": ""24095"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingest Data from External Source"",
     ""Quotes"": """"Ingest Data from External Source techniques involve obtaining data from external sources to enhance targeting or operations. The Snort rule detects an attempt to download an installer from ""www.teamviewer.com,"" indicating the possibility of obtaining malicious payloads or updates from an external source."""",
     ""Explanation"": ""The rule looks for a specific byte pattern and the presence of ""www.teamviewer.com"" in the content, suggesting an attempt to download an installer for TeamViewer software.""
   }
 ][
         ""sid"": ""24095"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted download of a Teamviewer installer, which could be used by an adversary to gain remote access to a system."""",
         ""Explanation"": ""This event is generated when the Teamviewer installer is downloaded""
     ][
   {
     ""sid"": ""24095"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring executable files or scripts from external systems into a compromised environment. The event detected in this rule shows an attempt to download the Teamviewer installer, indicating that an attacker is attempting to install a remote access tool on the target system."""",
     ""Explanation"": ""A remote desktop application is being installed on the computer.""
   }
 ][
         ""sid"": ""24095"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. This rule detects an attempt to download the Teamviewer installer, which is a common method used by attackers to establish remote access to a target system."""",
         ""Explanation"": ""This rule is related to T1133 because it detects an attempt to download the Teamviewer installer, which is a common method used by attackers to establish remote access to a target system.""
     ][
     ""Sid"": ""24095"",
     ""Technique ID"": ""T1159"",
     ""Technique Name"": ""Software Discovery"",
     ""Quotes"": """"Software Discovery techniques involve identifying and gathering information about software installed on a victim system. This rule detects an attempt to download the Teamviewer installer, which could be part of an attacker's reconnaissance phase to identify and target specific software for exploitation."""",
     ""Explanation"": ""The rule detects an attempt to download the Teamviewer installer ("".exe"" file), which is associated with a known remote access tool. This suggests that an attacker may be attempting to gain access to a target system by exploiting vulnerabilities in Teamviewer.""
 ][
     ""sid"": ""24095"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in client-side applications (for example, web browsers, email clients), often through malicious websites or advertisements, to compromise a victim's system. This rule looks for suspicious communication patterns associated with TeamViewer, which can be used to exploit vulnerabilities in client-side software to execute arbitrary code."""",
     ""Explanation"": ""Download of potential malware binary.""
 ][
     ""sid"": ""24095"",
     ""Technique ID"": ""T1194"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve compromising a user's system by exploiting a vulnerability in a web browser or other trusted software. This rule detects an attempt to download the Teamviewer installer, which is a common method used in drive-by compromise attacks to install malicious software on a victim's system."""",
     ""Explanation"": ""TeamViewer is commonly abused in web-based drive-by download attacks.""
 ][
   {
     ""sid"": ""24095"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted download of a Teamviewer installer, which could be used to gain remote access to a system. Attackers often use social engineering techniques to trick users into downloading and installing malicious software, which can then be used to exploit vulnerabilities in public-facing applications."""",
     ""Explanation"": ""The rule detects download attempts for Teamviewer installer, which could be used by the adversaries to get access to a system remotely.""
   },
   {
     ""sid"": ""24095"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""钓鱼"",
     ""Quotes"": """"钓鱼 techniques involve sending malicious emails or creating malicious websites that appear to be legitimate in order to trick users into providing sensitive information or installing malicious software. This rule detects an attempted download of a Teamviewer installer, which could be used to gain remote access to a system. Attackers often use social engineering techniques to trick users into downloading and installing malicious software, which can then be used to exploit vulnerabilities in public-facing applications."""",
     ""Explanation"": ""The rule detects download attempts for Teamviewer installer, which could be used by the adversaries to get access to a system remotely.""
   }
 ][
         ""sid"": ""24095"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""This event is generated when Teamviewer installer download attempt activity is detected.""
     ]","['T1105', 'T1190', 'T1190', 'T1486', 'T1105', 'T1190', 'T1105', 'T1133', 'T1159', 'T1189', 'T1194', 'T1190', 'T1203', 'T1190']",['T1219']
26774,"[
     {
         ""sid"": ""26774"",
         ""Technique ID"": ""T1196"",
         ""Technique name"": ""Establish Command and Control"",
         ""Quotes"": """"Establish Command and Control techniques involve establishing covert communication with external systems to send stolen data (exfiltration), receive instructions (command), or receive malicious payloads. This rule detects an outbound connection from an infected host to ""/loader.cpl"" using the HTTP protocol, which is a common method used by malware to establish a command and control channel with malicious servers."""",
         ""Explanation"": ""This event is generated when malware attempts to establish command and control with an HTTP server""
     }
 ][
   {
     ""sid"": ""26774"",
     ""Technique ID"": ""T1196"",
     ""Technique Name"": ""Install Root Certificate"",
     ""Quotes"": """"Install Root Certificate techniques involve installing a custom root certificate on a victim system to establish trust with malicious infrastructure. The rule detects an outbound connection to a web page that attempts to install a root certificate, which is a common technique used by malware to evade detection and establish secure communication channels."""",
     ""Explanation"": ""A new variant of the Luder worm has emerged and its primary activity is the installation of a root certificate (or trusted publisher) on the victim system, which is used for man-in-the-middle attacks against HTTPS traffic.""
   }
 ][
     ""sid"": ""26774"",
     ""Technique ID"": ""T1196"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising data or actions to appear legitimate or from a trusted source. In this rule, the malware is attempting to blend in with normal web traffic by using a legitimate URI (/loader.cpl) and HTTP headers. This is a common tactic to evade detection by security measures that rely on identifying known malicious patterns."""",
     ""Explanation"": ""This event is generated when outbound activity related to malware is detected.""
 ][
     {
         ""sid"": ""26774"",
         ""Technique ID"": ""T1196"",
         ""Technique name"": ""API Token Theft"",
         ""Quotes"": """"API Token Theft techniques involve stealing or abusing API tokens or keys to gain unauthorized access to applications or services. This rule detects outbound connections made by the Win.Worm.Luder worm variant to a remote server ('/loader.cpl') while searching for a specific HTTP header ('|3B 20|MSIE|20|') and excluding another header ('|0D 0A|Accept-Language:'). The presence of these headers indicates a potential attempt to steal or abuse API tokens or keys."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""26774"",
     ""Technique ID"": ""T1196"",
     ""Technique name"": ""Create Well-Known Software Proxy"",
     ""Quotes"": """"Create Well-Known Software Proxy techniques involve establishing a proxy that uses legitimate and trusted software or functions to relay malicious traffic and increase the chances of communication with command-and-control (C2) servers. In this rule, the adversary establishes an outbound connection to a remote server using the sfc.exe process, which is a legitimate Windows system file checker utility. This technique is commonly used by malware to blend in with legitimate system processes and evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""26774"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted connection to a compromised website hosting a malicious executable ('loader.cpl') used by the Win.Worm.Luder worm to propagate itself."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""26774"",
     ""Technique ID"": ""T1196"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve attempting a large number of trials to guess a password or other secret, often through automated means. This rule detects outbound connections to a URL (/loader.cpl) associated with the Win.Worm.Luder variant, which could be part of a brute-force attack to gain access to vulnerable systems."""",
     ""Explanation"": ""Detects an outbound connection to a loader.cpl URL associated with Win.Worm.Luder.""
   }
 ][
   {
     ""sid"": ""26774"",
     ""Technique ID"": ""T1196"",
     ""Technique Name"": ""Create Artifact"",
     ""Quotes"": """"Create Artifact techniques involve deliberately creating evidence of adversary activity to manipulate the perception of forensic analysts."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""26774"",
     ""Technique ID"": ""T1196"",
     ""Technique name"": ""Invoke Abnormal CMD or PS Command"",
     ""Quotes"": """"Invoke Abnormal CMD or PS Command techniques involve using command shells to execute system commands or run scripts. This rule detects outbound traffic from a compromised host attempting to connect to a remote Command and Control (C&C) server using the 'loader.cpl' URI path, which is commonly used by malware to establish a connection to a remote server for command and control purposes."""",
     ""Explanation"": ""This rule detects malicious traffic related to the ""Luder"" worm.""
   }
 ][
         ""sid"": ""26774"",
         ""Technique ID"": ""T1196"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading involves modifying or replacing a system or account to make it appear as something else and evade detection. A type of masquerading, spoofing, occurs when an entity pretends to be another entity (e.g., a machine, application, or service) to compromise or deceive. The rule detects the LOL.LOL ""loader.cpl"" process, which is related to the WinLuder worm, making a malicious HTTP request to a remote host; this behavior often indicates the presence of a masquerade as the worm may attempt to mimic legitimate network traffic to bypass defenses."""",
         ""Explanation"": ""Worm creates a malicious DLL file named ""loader.cpl"" or ""iexplore.dll"" in the System32 directory on victim computer that will be loaded and executed by Internet Explorer. This malicious DLL replicates itself by creating copies of the ""loader.cpl"" file in the Temp and Recycle Bin directories, and then uses Windows scheduled tasks and registry entries to attempt to automatically execute itself at every system restart. The worm also drops Service exe and hpd.exe files in the Windows system directory and is also be installed as a service with the name ""hpd"" that allows the attacker to access the infected system remotely.""
     ][
         ""sid"": ""38534"",
         ""Technique ID"": ""T1196"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve creating emails or websites that appear to be legitimate, but are designed to deceive users into providing sensitive information or accessing malicious content. This rule detects the presence of the Win.Worm.Luder variant, which commonly spreads through phishing campaigns. The worm uses social engineering techniques to trick users into opening malicious attachments or clicking on links that lead to the worm's payload."""",
         ""Explanation"": ""This rule detects outbound connections to a known malware control server, indicating a potential phishing attack.""
     ]","['T1196', 'T1196', 'T1196', 'T1196', 'T1196', 'T1190', 'T1196', 'T1196', 'T1196', 'T1196', 'T1196']",['T1218']
56612,"[
     {
     ""sid"": ""56612"",
     ""Technique ID"": ""T1435"",
     ""Technique Name"": ""Command and Control Channel"",
     ""Quotes"": """"Command and Control Channel techniques involve establishing secure communications channels for remote control and data exfiltration. This rule detects outbound beacon attempts from a compromised host to an external server, which is a common method for malware to establish communication with its command and control server, such as for data exfiltration or receiving commands."""",
     ""Explanation"": ""This rule matches when a client sends an HTTP request with a specific pattern in the URI and header, which is used by the malware as a way of identifying itself to and communicating with the command and control server.""
     }
 ][
         ""sid"": ""56612"",
         ""Technique ID"": ""T1572"",
         ""Technique name"": ""Protocol Tunneling"",
         ""Quotes"": """"Protocol Tunneling techniques involve encapsulating network communications within a different protocol to evade detection, network filtering, or to enable access to otherwise unreachable systems. This rule detects an outbound beacon attempt by malware (FeyeYelp) using HTTP headers to tunnel communications."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""56612"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve stealing data from a compromised environment. In this rule, the alert message ('MALWARE-CNC Rat.Tool.FeyeYelp variant outbound beacon attempt') indicates an attempt by malware to exfiltrate data. The malicious traffic exhibits specific patterns, such as the presence of the 'request_origin=user' and 'parent_request_id=' parameters in the HTTP request, which are commonly used by malware to exfiltrate sensitive information."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""56612"",
         ""Technique ID"": ""T1572"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve exfiltrating data via established command and control (C2) channels. This rule specifically targets exfiltration attempts over HTTP, as indicated by the presence of the HTTP traffic and the detection of malware ('Rat.Tool.FeyeYelp') that is known to use HTTP for C2 communication. The rule checks for specific patterns within the HTTP request, such as the presence of the 'request_origin=user' and 'parent_request_id=' parameters, which are commonly used by malware to exfiltrate data over HTTP."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
         ""sid"": ""56612"",
         ""Technique ID"": ""T1056"",
         ""Technique name"": ""Input Capture"",
         ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule detects an attempt by the Rat.Tool.FeyeYelp variant to send keylog data to its command and control server, which is a common method used by keyloggers to steal sensitive information."""",
         ""Explanation"": ""The rule suggests a possible malware activity by detecting an attempt to establish communication with a command and control (C&C) server.""
     ][
     {
         ""sid"": ""56612"",
         ""Technique ID"": ""T1504"",
         ""Technique Name"": ""Establish Output Function"",
         ""Quotes"": """"Establish Output Function techniques involve configuring malware or adversary tools to transmit information or requests to a remote system. The rule detects an outbound beacon attempt by the Rat.Tool.FeyeYelp variant, suggesting that malware is attempting to establish a connection with a remote server to transmit stolen data or receive further instructions."""",
         ""Explanation"": ""This event is generated when a request is sent to the remote server with the specific HTTP headers and URI parameters.""
     },
     {
         ""sid"": ""56612"",
         ""Technique ID"": ""T1071"",
         ""Technique Name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve stealing or transferring sensitive data from an organization's network or systems to an external location. The rule detects an outbound beacon attempt by the Rat.Tool.FeyeYelp variant, indicating that malware may be attempting to exfiltrate sensitive data from the compromised system."""",
         ""Explanation"": ""This event is generated when a request is sent to the remote server with the specific HTTP headers and URI parameters.""
     }
 ][
   {
     ""sid"": ""56612"",
     ""Technique ID"": ""T1008"",
     ""Technique name"": ""Fallback Channels"",
     ""Quotes"": """"Fallback Channels techniques involve employing secondary or alternative channels for communication by adversaries who anticipate that primary channels may be compromised or unavailable."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   ""sid"": ""56612"",
   ""Technique ID"": ""T1048"",
   ""Technique Name"": ""Exfiltration Over Alternative Protocol"",
   ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve exfiltrating data over a protocol other than the command and control channel. This rule detects an outbound beacon attempt by the Rat.Tool.FeyeYelp malware, which uses HTTP to communicate with its command and control server instead of the more typical TCP-based channels."""",
   ""Explanation"": ""The rule suggests exfiltration of data over an alternative protocol because it detects a malware beacon using HTTP instead of TCP.""
 ][
   {
     ""sid"": ""56612"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring data from a compromised system to an external system. This rule detects an outbound beacon attempt from the Rat.Tool.FeyeYelp malware, which is known to exfiltrate sensitive data to a remote server."""",
     ""Explanation"": ""Detect all outbound connections to port 80 from internal hosts with the pattern ""/parent_request_id=[^&\x3B]{128}/i"" in the HTTP URI.""
   },
   {
     ""sid"": ""56612"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve the communication between an attacker and a compromised system to maintain persistence, execute commands, or transfer data. This rule detects an outbound beacon attempt to a known command and control server used by the Rat.Tool.FeyeYelp malware."""",
     ""Explanation"": ""Detect all outbound connections to port 80 from internal hosts with the pattern ""/parent_request_id=[^&\x3B]{128}/i"" in the HTTP URI.""
   }
 ][
   {
     ""sid"": ""56612"",
     ""Technique ID"": ""T1569"",
     ""Technique name"": ""Dropper"",
     ""Quotes"": """"Dropper techniques involve using a seemingly innocuous file to execute or install additional malicious software. The rule detects outbound traffic from an infected host attempting to download a dropper variant of the FeyeYelp remote access tool (RAT). The dropper is disguised as a seemingly legitimate HTTP request with specific headers and URI parameters related to FeyeYelp's communication patterns."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""56612"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve using established command and control channels to exfiltrate data from compromised systems. This rule flags outbound beacon attempts made by the Rat.Tool.FeyeYelp malware, which typically uses HTTP GET requests to communicate with its command and control server and exfiltrate collected data."""",
     ""Explanation"": ""The malware tool FeyeYelp is a remote administration tool (RAT) that is used for remote control of a victim's machine.""
   },
   {
     ""sid"": ""56612"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve the unauthorized transfer of data from a compromised system to an external location, such as a command and control server. This rule detects exfiltration attempts by the Rat.Tool.FeyeYelp malware, which uses HTTP GET requests to transmit sensitive data back to its operators."""",
     ""Explanation"": ""Data exfiltration is a technique used by adversaries to move data from a compromised system to an external location under their control.""
   }
 ][
         ""sid"": ""56612"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve transferring data from compromised systems to C2 servers. This rule detects outbound beacon attempts from malware, which is a common method to establish a communication channel with a C2 server for exfiltration purposes."""",
         ""Explanation"": ""This event is generated when Rat.Tool.FeyeYelp variant outbound beacon attempt is detected.""
     ]","['T1435', 'T1572', 'T1071', 'T1572', 'T1056', 'T1504', 'T1071', 'T1008', 'T1048', 'T1132', 'T1048', 'T1569', 'T1041', 'T1071', 'T1041']",['T1041']
31070,"[
     ""sid"": ""31070"",
     ""Technique ID"": ""T1014"",
     ""Technique name"": ""Create Web Shell"",
     ""Quotes"": """"Create Web Shell techniques involve installing and executing a web shell on a targeted system to maintain remote access and control capabilities. The rule detects an outbound connection to a known malicious URL, which is commonly used by malware to establish a web shell on compromised hosts."""",
     ""Explanation"": ""This rule triggers when outbound traffic attempts to connect to IP addresses or domains associated with command and control or malware-related activity.""
 ][
         ""sid"": ""31070"",
         ""Technique ID"": ""T1014"",
         ""Technique Name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve scanning networks for listening services and identifying vulnerabilities. This rule detects outbound connections to a specific HTTP port, which could be part of an attacker's reconnaissance phase or an attempt to exploit a specific service. The rule also includes content matching for specific HTTP headers and URI, which further suggests that the activity is related to malware communication."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""31070"",
     ""Technique ID"": ""T1014"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring information or data out of a system or network without authorization. The rule indicates an outbound connection to a potentially malicious domain associated with the Necurs botnet, which is commonly used for data exfiltration purposes."""",
     ""Explanation"": ""This event is generated when an outbound connection to a potentially malicious domain associated with the Necurs botnet, which is commonly used for data exfiltration purposes.""
   }
 ][
   {
     ""sid"": ""31070"",
     ""Technique ID"": ""T1014"",
     ""Technique Name"": ""Rootkit"",
     ""Quotes"": """"Rootkit techniques involve hiding malicious components from detection by security tools or mechanisms. This rule detects an outbound connection to a web server hosting the Necurs rootkit, which is known for its stealthy techniques to evade detection and establish persistent presence on victim systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""31070"",
         ""Technique ID"": ""T1014"",
         ""Technique name"": ""Rootkit"",
         ""Quotes"": """"Rootkit techniques involve the installation of malicious code on a system that provides persistence and the ability to hide malicious components from the operating system. The rule detects a connection to a known Necurs C2 server, which is used by the Necurs botnet to control infected systems and install rootkits."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""31070"",
     ""Technique ID"": ""T1014"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or otherwise hiding data or information within a file or resource. The rule detects outbound communication from a host infected with the Necurs rootkit, which is known to use obfuscated techniques to evade detection and analysis."""",
     ""Explanation"": ""This event is generated when malicious content is sent from infected host (malware spam).""
   },
   {
     ""sid"": ""31070"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve encoding data or information in a manner that requires additional effort or knowledge to decode or process. The rule detects outbound communication from a host infected with the Necurs rootkit, which is known to use data encoding techniques to hide its malicious activities."""",
     ""Explanation"": ""This event is generated when malicious content is sent from infected host (malware spam).""
   }
 ][
   {
     ""sid"": ""31070"",
     ""Technique ID"": ""T1014"",
     ""Technique Name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve opening a communications channel with an attacker-controlled server for the purpose of receiving commands, exfiltrating data, and maintaining persistence. This rule detects outbound HTTP traffic to a known Necurs command and control server, which is used by malware to establish communication and receive commands from the attacker."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""31070"",
     ""Technique ID"": ""T1008"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring data from a compromised system to an external location. This rule detects outbound HTTP traffic to a known Necurs command and control server, which can be used by malware to exfiltrate sensitive data from the compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""31070"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve using an existing command and control (C2) channel to exfiltrate data from a compromised system. This rule detects outbound HTTP traffic to a known Necurs command and control server, which can be used by malware to exfiltrate data over the established C2 channel."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""31070"",
     ""Technique ID"": ""T1014"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": ""\""Obfuscated Files or Information techniques involve modifying files or other information in order to hide their true purpose or contents from inspection by security tools or personnel.\"""",
     ""Explanation"": ""\""This IDS rule detects outbound communication from a host infected with the Necurs rootkit, which often uses obfuscated techniques to evade detection by security tools. The rule looks for specific HTTP POST requests with particular header and content characteristics associated with Necurs activity.""
   }
 ][
   {
     ""sid"": ""31070"",
     ""Technique ID"": ""T1014"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve actively interrogating a network or system to determine what services are running, what software is installed, or what ports are open. This rule detects outbound connections from infected hosts to a known command and control server (C2) associated with the Necurs botnet. Attackers often use these C2 servers to deploy malware and execute commands on compromised systems."""",
     ""Explanation"": ""A malicious website was used to download and install a file called ""winlogon.exe,' which was then scheduled to run at startup in the victim's computer. The file created a svchost.exe process and injected malicious code into it.""
   }
 ][
   {
     ""sid"": ""31070"",
     ""Technique ID"": ""T1014"",
     ""Technique name"": ""Create or Modify Files or Directories"",
     ""Quotes"": """"Create or Modify Files or Directories techniques involve manipulating the file system to create, modify, or delete files or directories, potentially including malware or other malicious content. The rule indicates outbound communication to a malicious domain (/docs/index.php) associated with the Necurs botnet, which is known for using modified versions of legitimate files to hide its malicious activity."""",
     ""Explanation"": ""This event is generated when evidence of Necurs botnet activity is detected.""
   }
 ][
   {
     ""sid"": ""31070"",
     ""Technique ID"": ""T1014"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve adversaries using established command and control channels to exfiltrate data from a victim system. This rule detects malicious traffic indicative of a Necurs rootkit attempting to exfiltrate data over an HTTP connection. Necurs is known to use HTTP POST requests to send stolen information to remote servers."""",
     ""Explanation"": ""Necurs rootkit is known for using outbound connections to exfiltrate data over HTTP.""
   }
 ]","['T1014', 'T1014', 'T1014', 'T1014', 'T1014', 'T1014', 'T1071', 'T1014', 'T1008', 'T1041', 'T1014', 'T1014', 'T1014', 'T1014']",['T1014']
50098,"[
         ""sid"": ""50098"",
         ""Technique ID"": ""T1595.001"",
         ""Technique name"": ""Man-in-the-Middle"",
         ""Quotes"": """"Man-in-the-Middle techniques involve intercepting or modifying communications between two parties to gain unauthorized access to data or systems. This rule detects an attempted poisoning attack on an HTTP server using the Responder tool, which attackers use to intercept and manipulate HTTP traffic."""",
         ""Explanation"": ""This event is generated when the Snort IDS detects an attack against a web server using the Responder tool.""
     ][
     {
         ""sid"": ""50098"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Data from Local System"",
         ""Quotes"": """"Data from Local System techniques involve extracting data from the local system, which may include sensitive or proprietary information. This rule detects an attempt to exfiltrate data from a compromised system using the 'Spider Shell', a common tool used by attackers to maintain unauthorized access and steal sensitive data."""",
         ""Explanation"": ""This rule identifies an attempt to retrieve confidential information from a system using an unauthorized tool, such as a webshell or a remote access tool (RAT). The attacker is trying to collect sensitive data from the compromised system and may use this information for further malicious activities.""
     },
     {
         ""sid"": ""50098"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in a web application using the 'Responder' tool, a common tool used by attackers to conduct reconnaissance and gain unauthorized access to vulnerable systems."""",
         ""Explanation"": ""The rule looks for a specific pattern of traffic that is associated with the Responder tool, which can be used to identify attempts to exploit vulnerabilities in web applications. This technique is commonly used to gain unauthorized access to systems and networks and may lead to further malicious activities.""
     }
 ][
   {
     ""sid"": ""50098"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Abuse Elevation Control Mechanism"",
     ""Quotes"": """"Abuse Elevation Control Mechanism techniques involve manipulating elevation control mechanisms, such as capabilities, privileges, or sudo, to gain unauthorized access or privileges on a system. This rule detects an attempt to exploit a vulnerability in the 'Responder' software, which is a tool used for network security,"""",
     ""Explanation"": ""this rule triggers an alert when an attempt is made to exploit a known vulnerability in the 'Responder' software to gain elevated privileges or execute arbitrary code.""
   }
 ][
         ""sid"": ""50098"",
         ""Technique ID"": ""T1021"",
         ""Technique name"": ""Remote Services"",
         ""Quotes"": """"Remote Services techniques involve interacting with or abusing remote communication protocols or services to achieve objectives. The rule detects the presence of the 'Spider Shell' web shell, which allows attackers to execute arbitrary commands on a compromised web server. Web shells are commonly used by adversaries to maintain persistent access, upload and download files, and execute commands on the underlying system."""",
         ""Explanation"": ""The presence of a web shell is an indication that an attacker has gained unauthorized access to the web server and is using it to execute malicious activities.""
     ][
         ""sid"": ""50098"",
         ""Technique ID"": ""T1490"",
         ""Technique name"": ""Inhibit System Recovery"",
         ""Quotes"": """"Inhibit System Recovery techniques involve actions taken by adversaries to disable or manipulate system recovery mechanisms to hinder forensic analysis or recovery operations. This rule detects an attack that attempts to poison the Responder service, which is a critical component of the Windows operating system responsible for managing network name resolution. By poisoning the Responder service, attackers can manipulate or block legitimate DNS requests, disrupt network communication, and potentially prevent system recovery."""",
         ""Explanation"": ""This rule is triggered when an attempt is made to poison the Responder service, which can be used to disrupt network communication and prevent system recovery.""
     ][
     ""sid"": ""50098"",
     ""Technique ID"": ""T1495"",
     ""Technique name"": ""Firmware Corruption"",
     ""Quotes"": """"Firmware Corruption involves modifying or overwriting firmware in order to disrupt the normal operation of devices or systems. This rule detects a potential attempt to corrupt firmware by sending a specific payload to a device over HTTP. Firmware corruption can lead to denial of service or arbitrary code execution on the affected device."""",
     ""Explanation"": ""This rule alerts on the presence of a known malicious payload that attempts to corrupt firmware on a device.""
 ][
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1451"",
     ""Technique name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve removing or modifying artifacts that may be used to detect the presence of an adversary on a system, such as registry keys, files, or processes."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1565"",
     ""Technique name"": ""Rootkit"",
     ""Quotes"": """"Rootkit techniques involve installing malicious software or modifying system settings to maintain persistence and evade detection and removal."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1571"",
     ""Technique name"": ""SQL Injection"",
     ""Quotes"": """"SQL Injection techniques involve exploiting vulnerabilities in SQL queries to gain unauthorized access to or manipulate databases."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1487"",
     ""Technique name"": ""Domain Generation Algorithms"",
     ""Quotes"": """"Domain Generation Algorithms (DGAs) are techniques that use mathematical algorithms to generate pseudorandom domain names that are used as part of command-and-control communications or to evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve encoding data to make it harder to detect or understand."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1567"",
     ""Technique name"": ""Exfiltration Over Web Service"",
     ""Quotes"": """"Exfiltration Over Web Service techniques involve using legitimate web services to exfiltrate data from a victim system."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1008"",
     ""Technique name"": ""Data Destruction"",
     ""Quotes"": """"Data Destruction techniques involve destroying or altering data on a system to prevent its recovery or analysis."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Sandbox Evasion"",
     ""Quotes"": """"Sandbox Evasion techniques involve bypassing or disabling security mechanisms used to isolate and analyze suspicious code or processes."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1562"",
     ""Technique name"": ""Impair Defenses"",
     ""Quotes"": """"Impair Defenses techniques involve disabling or degrading security mechanisms to make it easier to compromise a system."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve exfiltrating data over an existing command-and-control channel."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1114"",
     ""Technique name"": ""Email Collection"",
     ""Quotes"": """"Email Collection techniques involve collecting email messages and attachments."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1585"",
     ""Technique name"": ""Establish Accounts"",
     ""Quotes"": """"Establish Accounts techniques involve creating and cultivating accounts with services that can be used during targeting."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   },
   {
     ""sid"": ""50055"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve gaining access to a system through a user visiting a website over the normal course of browsing."""",
     ""Explanation"": ""This event is generated when activity relating to a threat indicator is detected.""
   }
 ][
   {
     ""sid"": ""50098"",
     ""Technique ID"": ""T1565"",
     ""Technique name"": ""Poisoning"",
     ""Quotes"": """"Poisoning involves modifying or replacing data to intentionally introduce errors, corruption, or unexpected behavior. This rule detects an attempt to poison the Domain Name System (DNS) by sending a specially crafted DNS response to a victim, which can lead to arbitrary code execution or data manipulation."""",
     ""Explanation"": ""This rule is designed to detect poisoning of DNS.""
   },
   {
     ""sid"": ""50098"",
     ""Technique ID"": ""T1040"",
     ""Technique name"": ""Network Denial of Service"",
     ""Quotes"": """"Network Denial of Service techniques involve overwhelming a target network resource with excessive traffic to disrupt or disable its normal functioning. This rule detects an attempt to launch a distributed denial of service (DDoS) attack against a web server by flooding it with HTTP requests."""",
     ""Explanation"": ""This rule is designed to detect a denial of service attack.""
   }
 ][
         ""sid"": ""50098"",
         ""Technique ID"": ""T1491"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell, which is malicious code hosted on a web server, to execute arbitrary commands and control a compromised system remotely. This rule detects the presence of the 'Spider Shell' web shell, which is a commonly used tool by attackers to gain persistent access to compromised web servers."""",
         ""Explanation"": ""This event is generated to detect when a Web Shell is used to access and control a compromised system over HTTP/S.""
     ][
     ""sid"": ""50098"",
     ""Technique ID"": ""T1491"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell to establish a remote connection to a compromised web server and execute arbitrary commands. This rule detects an attempt to exploit a web shell named 'Spider Shell', which suggests that an attacker is trying to gain unauthorized access to the web server and execute malicious commands."""",
     ""Explanation"": ""The rule is triggered by a file containing the string ""Welcome To Spider Shell!"", which is a common indicator of a web shell attack.""
 ][
     {
         ""sid"": ""50098"",
         ""Technique ID"": ""T1545"",
         ""Technique name"": ""Misinformation"",
         ""Quotes"": """"Misinformation techniques involve spreading false or misleading information to cause confusion, panic, or distrust. This rule detects an attempt to poison DNS responses by sending a spoofed DNS reply that redirects traffic to a malicious IP address. DNS poisoning is a common method used to spread misinformation and direct users to phishing or malware distribution sites."""",
         ""Explanation"": ""This event is generated when activity relating to a DNS poisoning attack is detected.""
     }
 ]","['T1595.001', 'T1071', 'T1210', 'T1498', 'T1021', 'T1490', 'T1495', 'T1451', 'T1565', 'T1571', 'T1190', 'T1487', 'T1071', 'T1567', 'T1008', 'T1210', 'T1562', 'T1041', 'T1114', 'T1585', 'T1189', 'T1565', 'T1040', 'T1491', 'T1491', 'T1545']",['T1566']
37298,"[
   {
     ""sid"": ""37298"",
     ""Technique ID"": ""T1574"",
     ""Technique Name"": ""Install Rootkit"",
     ""Quotes"": """"This technique involves installing software on a target system that can hide itself and provide attackers with privileged access to the system. The rule detects a hostname, 'perr.hola.org', associated with a VPN service. However, the User-Agent field contains 'wget', which is a tool commonly used to download and install software. This combination of indicators suggests an attempt to install a rootkit or other malicious software that can provide remote access and persistence on the target system."""",
     ""Explanation"": ""This rule is detecting an attempt to install the Hola VPN.""
   }
 ][
   {
     ""sid"": ""37298"",
     ""Technique ID"": ""T1435"",
     ""Technique Name"": ""Drop Files"",
     ""Quotes"": """"Drop Files techniques involve copying files (malicious or otherwise) from an attacker-controlled location to the victim system. The rule indicates an attempt to install Hola VPN, which is a commercial VPN service, by downloading an installer file from the perr.hola.org domain. Attackers could abuse VPN services to establish tunnels for malicious purposes, such as accessing internal resources or exfiltrating data."""",
     ""Explanation"": ""This event is generated when activity relating to a policy violation is detected.""
   }
 ][
   {
     ""sid"": ""37298"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted installation of the Hola VPN software by identifying a specific User-Agent string and Host header combination associated with the VPN's installation process."""",
     ""Explanation"": ""This event is generated when an attempt to install the Hola VPN software is detected.""
   }
 ][
     {
         ""sid"": ""37298"",
         ""Technique ID"": ""T1152"",
         ""Technique Name"": ""Software Packing"",
         ""Quotes"": """"Software Packing techniques involve wrapping executable code with other layers of code to obfuscate the original functionality. This rule detects an attempt to install Hola VPN, which uses packers to hide its true purpose and evade detection by security tools."""",
         ""Explanation"": ""This event is generated when the VPN client software is installed to provide advanced protection on the web.""
     }
 ][
   {
     ""sid"": ""37298"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This rule triggers an alert to detect an attempt by Hola VPN to establish a connection from a monitored internal network to an external web address.""
   }
 ][
     {
         ""sid"": ""37298"",
         ""Technique ID"": ""T1133"",
         ""Technique Name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve abusing functionality provided by services that are exposed on external networks. This rule detects an attempt to install the Hola VPN, which typically involves establishing a connection to Hola's external servers. Hola VPN is primarily used by individuals to circumvent regional internet restrictions or improve their privacy, but it can also be leveraged by adversaries to route traffic through a compromised server for malicious purposes."""",
         ""Explanation"": ""It can be used to bypass restrictions and it can be abused for malicious purposes.""
     },
     {
         ""sid"": ""37298"",
         ""Technique ID"": ""T1008"",
         ""Technique Name"": ""Fallback Channels"",
         ""Quotes"": """"Fallback Channels techniques involve establishing secondary communication channels as a backup in case the primary channel is compromised or unavailable. The Hola VPN can be used as a backup channel for data exfiltration or command and control, as it provides an alternative way to communicate with C2 servers or transfer data if the primary channel is blocked or detected."""",
         ""Explanation"": ""It can provide an alternative way to communicate or transfer data.""
     }
 ][
   {
     ""sid"": ""37298"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting a publicly accessible website to infect a user's system without requiring any user interaction. This rule detects an attempt to install the Hola VPN software through a compromised website, indicating a possible drive-by compromise attack."""",
     ""Explanation"": ""This event is generated when activity relating to Hola VPN installation is detected.""
   }
 ][
   {
     ""sid"": ""37298"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""System Network Connection Discovery"",
     ""Quotes"": ""\""Network connections can be used to gather information to inform future actions.\"""",
     ""Explanation"": ""This rule detects a Hola VPN installation attempt by identifying a specific HTTP header pattern used by Hola VPN during its installation process. The rule monitors network connections to detect and block attempts to establish a connection to Hola VPN's servers.""
   },
   {
     ""sid"": ""37298"",
     ""Technique ID"": ""T1504"",
     ""Technique Name"": ""Obtain Capabilities"",
     ""Quotes"": ""\""Adversaries may attempt to obtain elevated capabilities for the purposes of persistence, privilege escalation, or lateral movement.\"""",
     ""Explanation"": ""By detecting the Hola VPN installation attempt, this rule helps prevent adversaries from obtaining unauthorized capabilities on the system. Hola VPN can be used as a tool for anonymizing network traffic and bypassing security controls, allowing adversaries to evade detection and gain access to sensitive information or systems.""
   }
 ][
     ""sid"": ""37298"",
     ""Technique ID"": ""T1564"",
     ""Technique name"": ""Proxy"",
     ""Quotes"": """"Proxy techniques involve establishing a connection between two endpoints via a third-party system, allowing the attacker to redirect traffic and potentially bypass network controls or access restricted resources. This rule specifically detects an attempt to install the Hola VPN software, which is a proxy service that can be used to mask a host's IP address and location."""",
     ""Explanation"": ""This event is generated when activity relating to using proxy software is detected. Some proxy software can be used to access restricted resources.""
 ][
   {
     ""sid"": ""37298"",
     ""Technique ID"": ""T1554"",
     ""Technique Name"": ""Hidden Agents"",
     ""Quotes"": """"Hidden Agents techniques involve concealing malicious functionality within trusted resources to evade detection. This rule detects traffic associated with the installation process of Hola VPN, which is a popular anonymity tool that can be used to bypass internet surveillance and restrictions. Adversaries may leverage legitimate tools like Hola VPN to mask malicious activity and evade detection."""",
     ""Explanation"": ""Hola VPN allows you to bypass geographically restricted content. It is also used to hide your real IP address.""
   }
 ][
   {
     ""sid"": ""37298"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to install Hola VPN using wget. Hola VPN is a free VPN service that allows users to bypass geographic restrictions. Attackers may use Hola VPN to access internal resources or to exfiltrate data."""",
     ""Explanation"": ""This event is generated when an attempt to install Hola VPN is detected.""
   }
 ]","['T1574', 'T1435', 'T1190', 'T1152', 'T1190', 'T1133', 'T1008', 'T1189', 'T1083', 'T1504', 'T1564', 'T1554', 'T1190']",['T1021']
44559,"[
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1005"",
     ""Technique Name"": ""Data from Local System"",
     ""Quotes"": """"Data from Local System techniques involve searching local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration. The rule detects PowerShell commands being sent to a remote host via file transfer protocols, which is a common method used by malware to exfiltrate data from a compromised system."""",
     ""Explanation"": ""PowerShell commands are sent to a remote host via file transfer protocols.""
   },
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve exfiltrating data to an adversary-controlled command and control server over a covert communication channel. The rule detects PowerShell commands being sent to a remote host via file transfer protocols, which is a common method used by malware to exfiltrate data from a compromised system."""",
     ""Explanation"": ""PowerShell commands are sent to a remote host via file transfer protocols.""
   },
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1140"",
     ""Technique Name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve using Obfuscated Files or Information to hide artifacts of an intrusion from analysis. The rule detects obfuscated PowerShell commands being sent to a remote host, which is a common method used by malware to evade detection by security tools."""",
     ""Explanation"": ""Obfuscated PowerShell commands are sent to a remote host.""
   }
 ][
         ""sid"": ""44559"",
         ""Technique ID"": ""T1003"",
         ""Technique name"": ""OS Credential Dumping"",
         ""Quotes"": """"Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software."""",
         ""Explanation"": ""This rule detects attempts to dump credentials using the Windows Management Instrumentation Command-line (WMIC) tool, which is often used by adversaries to extract credentials from compromised systems.""
     ],
     [
         ""sid"": ""44559"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"Adversaries may execute commands and scripts on a local system or remote system to perform tasks such as downloading and executing additional tools, conducting reconnaissance, modifying system settings, or exfiltrating data."""",
         ""Explanation"": ""This rule detects attempts to execute PowerShell commands from a remote system, which is a common method used by adversaries to execute malicious commands and scripts on compromised systems.""
     ],
     [
         ""sid"": ""44559"",
         ""Technique ID"": ""T1105"",
         ""Technique Name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Adversaries may encrypt data to make it difficult to analyze, detect, or recover. Encryption can make it more difficult for defenders to identify and stop malicious activity."""",
         ""Explanation"": ""This rule detects attempts to execute obfuscated PowerShell commands, which is a common method used by adversaries to evade detection by security tools and make it more difficult to analyze and respond to malicious activity.""
     ]
 ][
         ""sid"": ""44559"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"Command and Scripting Interpreter techniques involve using command shells and scripting languages to execute commands, scripts, or binaries on a system. This rule detects an attempt to download and execute a malicious PowerShell script from a remote server, which is a common method used by malware to gain persistence and execute arbitrary commands on compromised systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1205"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit CVE-2017-11882 (Equation Editor) in Word documents, which attackers use to download and execute malicious code."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1074"",
     ""Technique Name"": ""PowerShell"",
     ""Quotes"": """"PowerShell is a powerful scripting environment that is part of the Microsoft Windows operating system. It can be used to automate tasks, manage systems, and perform various other operations. This rule detects the use of PowerShell to execute malicious commands, which is a common tactic used by attackers to gain unauthorized access to systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system command shell or scripting language to execute commands or scripts that perform malicious actions. The rule detects the presence of the Emotet Trojan, which is known to use PowerShell scripts for persistence, data exfiltration, and other malicious activities."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data or communications to prevent detection and analysis by security tools. The rule detects the Emotet Trojan, which is known to use various encryption methods to protect its malicious payload and communications, making it harder to detect and analyze its behavior."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects the Emotet Trojan, which has been known to exploit vulnerabilities in applications like Microsoft Office to gain a foothold in target systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve using covert communication channels to manage and control an adversary's presence on the target network. This rule detects malicious traffic from the Emotet Trojan, a known dropper for other malware, which uses obfuscated PowerShell commands to communicate with its command and control server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching or enumerating files and directories on a host in order to identify and locate data of interest. This rule indicates the presence of the Emotet Trojan, which is known to leverage file and directory discovery techniques during its reconnaissance stage to search for files and directories with specific extensions (e.g., .doc, .xls) that it targets for exploitation."""",
     ""Explanation"": ""The rule detects malicious traffic from the Emotet Trojan, which is known to leverage file and directory discovery techniques during its reconnaissance stage to search for files and directories with specific extensions (e.g., .doc, .xls) that it targets for exploitation.""
   },
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1047"",
     ""Technique Name"": ""Execution through User Execution"",
     ""Quotes"": """"Execution through User Execution techniques involve tricking a user into executing malicious code or commands. This rule indicates the presence of the Emotet Trojan, which typically spreads through phishing emails and uses social engineering techniques to trick users into opening malicious attachments or clicking on malicious links, which can lead to the execution of malicious payloads."""",
     ""Explanation"": ""The rule detects malicious traffic from the Emotet Trojan, which typically spreads through phishing emails and uses social engineering techniques to trick users into opening malicious attachments or clicking on malicious links, which can lead to the execution of malicious payloads.""
   }
 ][
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter involves running commands or scripts to affect system behavior. The rule detects an attempt to execute a PowerShell command embedded in a Word or Excel file, which is a common technique used by malware to execute malicious code without being detected."""",
     ""Explanation"": ""This rule is triggered when a file containing a PowerShell command is detected.""
   },
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve executing a process or script directly by the user, often under the guise of a legitimate application. This rule detects an attempt to execute a PowerShell command embedded in a Word or Excel file, which could be executed by the user upon opening the file."""",
     ""Explanation"": ""This rule is triggered when a file containing a PowerShell command is detected.""
   }
 ][
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve communicating with remote servers to receive instructions and exfiltrate data. This rule detects malicious PowerShell commands being sent to an external IP address, which is a common method used by malware to establish communication with a command and control server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1033"",
     ""Technique name"": ""System Owner/User Discovery"",
     ""Quotes"": """"System Owner/User Discovery techniques involve identifying the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. This rule checks if the file being transferred is a 'doc' or 'xls' file and if it contains the string ""powershell"", which is a common method used by malware to identify potential victims and target systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve establishing covert communication channels with a remote actor to control victim systems. In this case, the rule detects obfuscated PowerShell commands being sent from the victim system to an external command and control server, which is a common method of maintaining persistent access and executing malicious commands on compromised systems."""",
     ""Explanation"": ""This event is generated when the system detects a malware communication attempting to establish command-and-control.""
   }
 ][
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking a user into executing a payload, which can be a file, script, or other malicious content. This rule detects the presence of the Word Trojan Emotet, which often arrives via phishing campaigns and uses obfuscated PowerShell scripts to execute its malicious payload."""",
     ""Explanation"": ""This rule is designed to detect the delivery of Word documents containing the Emotet Trojan, which often arrives via phishing campaigns and uses obfuscated PowerShell scripts to execute its malicious payload.""
   },
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1003"",
     ""Technique Name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials from the operating system, such as password hashes, Kerberos tickets, or other forms of authentication material. This rule detects the presence of the NisSrv utility, which can be used to dump user credentials from a NTLM authentication database."""",
     ""Explanation"": ""NisSrv is a tool that can be used to dump user credentials from a NTLM authentication database.""
   }
 ][
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system command or scripting interpreter, such as Windows PowerShell, to execute commands on a system. The rule detects an attempt to use a PowerShell command to execute an obfuscated script, which could be used to perform various malicious activities such as downloading and executing additional malware or establishing a remote connection."""",
     ""Explanation"": ""Attempt to execute a powershell command and communicate with a remote host.""
   },
   {
     ""sid"": ""44559"",
     ""Technique ID"": ""T1027"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve disguising or encoding information to evade detection or analysis. The rule specifically looks for obfuscated PowerShell commands, which could be used to hide malicious intent or bypass security controls."""",
     ""Explanation"": ""Obfuscation of powershell command to bypass security controls.""
   }
 ]","['T1005', 'T1041', 'T1140', 'T1003', 'T1059', 'T1105', 'T1059', 'T1205', 'T1074', 'T1059', 'T1071', 'T1190', 'T1059', 'T1083', 'T1047', 'T1059', 'T1204', 'T1059', 'T1033', 'T1059', 'T1204', 'T1003', 'T1059', 'T1027']",['T1059']
47462,"[
   {
     ""sid"": ""47462"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. ActiveX controls, like the one targeted in this rule, are a common attack vector for exploiting web applications and gaining access to underlying systems."""",
     ""Explanation"": """"
   },
   {
     ""sid"": ""47462"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""PowerShell"",
     ""Quotes"": """"PowerShell is a scripting environment and command-line shell in the Microsoft Windows operating system. It provides a powerful and flexible way to manage and automate tasks. Adversaries may use PowerShell to execute commands, scripts, and other malicious actions on a compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to a power shell exploit is detected.""
   }
 ][
     {
         ""sid"": ""47462"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""User Execution"",
         ""Quotes"": """"User Execution techniques involve tricking a user into executing a payload on their system, such as malicious scripts or remote access tools. This rule detects an attempt to exploit a vulnerability in CTSWebProxy ActiveX control through web browsing, which could allow attackers to gain elevated privileges on the system by executing arbitrary commands as the user."""",
         ""Explanation"": ""Attempt of the CTSWebProxy ActiveX control privilege escalation vulnerability in Microsoft Internet Explorer.""
     },
     {
         ""sid"": ""47462"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in CTSWebProxy ActiveX control through web browsing, which could allow attackers to gain elevated privileges on the system by executing arbitrary commands as the user."""",
         ""Explanation"": ""Attempt of the CTSWebProxy ActiveX control privilege escalation vulnerability in Microsoft Internet Explorer.""
     }
 ][
   {
     ""sid"": ""47462"",
     ""Technique ID"": ""T1064"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted privilege escalation attack against the CTSWebProxy ActiveX control, which is a common method attackers use to exploit vulnerabilities in web browsers or plugins."""",
     ""Explanation"": ""This event is generated when an attacker attempts to exploit a known vulnerability in a public-facing application.""
   }
 ][
   {
     ""sid"": ""47462"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side software, such as web browsers and plugins, to execute arbitrary code. This rule detects an attempt to exploit a privilege escalation vulnerability in the CTSWebProxy ActiveX control, which is a common method attackers use to gain elevated privileges on target systems."""",
     ""Explanation"": ""This rule detects an attempt to exploit a privilege escalation vulnerability in the CTSWebProxy ActiveX control.""
   }
 ][
   {
     ""sid"": ""47462"",
     ""Technique ID"": ""T1068"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted privilege escalation attack via the CTSWebProxy ActiveX control, which is a common method attackers use to exploit web browsers and gain elevated privileges on the target system."""",
     ""Explanation"": ""This rule is related to an attempted privilege escalation attack via the CTSWebProxy ActiveX control, which is a common method attackers use to exploit web browsers and gain elevated privileges on the target system.""
   },
   {
     ""sid"": ""234567"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking or otherwise coercing a user into executing malicious code, such as through phishing or social engineering. This rule detects an attempt to exploit a vulnerability in the Adobe Flash Player, which is a common method attackers use to trick users into downloading and executing malicious content."""",
     ""Explanation"": ""This rule is related to an attempt to exploit a vulnerability in the Adobe Flash Player, which is a common method attackers use to trick users into downloading and executing malicious content.""
   }
 ][
     ""sid"": ""47462"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve enumerating or searching files and directories to gain information about the file system and identify potential targets or vulnerabilities."""",
     ""Explanation"": ""Adversaries may enumerate files and directories to identify potential targets or vulnerabilities that can be exploited to gain access or escalate privileges.""
 ][
   {
     ""sid"": ""47462"",
     ""Technique ID"": ""T1628"",
     ""Technique name"": ""Browser ActiveX Control Exploitation"",
     ""Quotes"": """"Browser ActiveX Control Exploitation techniques involve exploiting vulnerabilities in Microsoft's ActiveX control component, typically within Internet Explorer to execute arbitrary code."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in the CTSWebProxy ActiveX control, which could allow an attacker to elevate privileges and execute arbitrary code.""
   },
   {
     ""sid"": ""47462"",
     ""Technique ID"": ""T1068"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in the CTSWebProxy ActiveX control, which is a publicly facing web application component.""
   },
   {
     ""sid"": ""47462"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve gaining access to a system through a user visiting a website over the normal course of browsing."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in the CTSWebProxy ActiveX control, which could be triggered by a user visiting a malicious website.""
   }
 ][
   {
     ""sid"": ""47462"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Insecure Deserialization"",
     ""Quotes"": """"Exploit Insecure Deserialization techniques may be used to exploit vulnerabilities in software that does not perform deserialization securely, which can lead to remote code execution, elevation of privileges, or other malicious actions. The rule specifically mentions the CTSWebProxy ActiveX control and attempts to execute commands using PowerShell, suggesting that the attack may involve exploiting a deserialization vulnerability in the ActiveX control to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""47462"",
         ""Technique ID"": ""T1176"",
         ""Technique name"": ""Browser Extensions"",
         ""Quotes"": """"Browser Extensions techniques involve the use of browser extensions to gain access to victim systems or to enhance the capabilities of malicious software. This rule detects an attempt to exploit a vulnerability in the CTSWebProxy ActiveX control to execute arbitrary code using the 'PSHCMD' parameter, which is a common method attackers use to escalate privileges by leveraging browser extensions."""",
         ""Explanation"": ""CTSWebProxy ActiveX elevation of privilege vulnerability""
     ][
      ""sid"": ""47462"",
      ""Technique ID"": ""T1068"",
      ""Technique name"": ""Exploitation for Privilege Escalation"",
      ""Quotes"": """"Exploitation for Privilege Escalation techniques involve targeting specific software (e.g., third party plugins or helper programs) for exploitation to escalate privileges on a target system. This rule detects an attempted exploitation of a privilege escalation vulnerability in a browser plugin (CTSWebProxy ActiveX) to execute arbitrary commands or gain elevated privileges."""",
      ""Explanation"": ""This rule is triggered when the CTSWebProxy ActiveX plugin attempts to escalate privileges by exploiting a flaw in the plugin to execute arbitrary code.""
 ][
         ""sid"": ""47462"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit In-Memory Corruption Vulnerability"",
         ""Quotes"": """"Exploit In-Memory Corruption Vulnerability techniques involve exploiting vulnerabilities in software that result in memory corruption, allowing adversaries to execute arbitrary code or gain unauthorized access. This rule detects an attempt to exploit a privilege escalation vulnerability in the CTSWebProxy ActiveX control, which allows attackers to execute arbitrary commands on the system by leveraging a memory corruption issue."""",
         ""Explanation"": ""This rule triggers when CTSWebProxy ActiveX privilege escalation attempt is detected.""
     ]","['T1068', 'T1048', 'T1204', 'T1189', 'T1064', 'T1189', 'T1068', 'T1204', 'T1083', 'T1628', 'T1068', 'T1189', 'T1189', 'T1176', 'T1068', 'T1189']",['T1059']
37299,"[
   {
     ""sid"": ""37299"",
     ""Technique ID"": ""T1574"",
     ""Technique Name"": ""Install Root Certificate"",
     ""Quotes"": """"Install Root Certificate involves installing a root certificate on a victim host to enable the interception and decryption of encrypted network traffic. Hola VPN is known to install a root certificate on the victim's system to allow it to intercept and decrypt HTTPS traffic for the purpose of providing a VPN service."""",
     ""Explanation"": ""This rule detects an attempt to install Hola VPN, which is a VPN service that has been known to install a root certificate on the victim's system, allowing it to intercept and decrypt HTTPS traffic.""
   }
 ][
   {
     ""sid"": ""37299"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to install Hola VPN, which is a known tool for bypassing geo-restrictions and accessing blocked content. Attackers may exploit vulnerabilities in Hola VPN's installation process to gain unauthorized access to the target system."""",
     ""Explanation"": ""This event is generated by an attempt to download Hola VPN software.""
   }
 ][
   {
     ""sid"": ""37299"",
     ""Technique ID"": ""T1187"",
     ""Technique Name"": ""Proxy Avoidance"",
     ""Quotes"": """"Proxy Avoidance techniques involve techniques to bypass or avoid security mechanisms such as application proxies.Hola VPN is a commonly used tool to bypass online censorship and restrictions."""",
     ""Explanation"": ""The network traffic is originating from the internal network to an external IP on port 80. This is indicative of outbound traffic, potentially for accessing external resources.""
   }
 ][
     ""sid"": ""37299"",
     ""Technique ID"": ""T1071.001"",
     ""Technique name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve removing or disabling security controls or mechanisms that can detect or prevent adversary activity. This rule detects an attempt to disable security controls, such as installing Hola VPN, which can potentially bypass network security measures and allow unauthorized access to restricted resources."""",
     ""Explanation"": ""Hola VPN is a free and easy-to-use VPN service that allows you to unblock websites and browse the internet privately. However, Hola VPN has also been known to be used by attackers to bypass security controls and access restricted resources.""
 ][
   {
     ""sid"": ""37299"",
     ""Technique ID"": ""T1562"",
     ""Technique Name"": ""Impair Defenses"",
     ""Quotes"": """"The rule triggers when a client attempts to install the Hola VPN application, which can be used to bypass network restrictions and access blocked content. Blocking this installation can help prevent malicious actors from using the VPN to evade detection or exfiltrate sensitive data."""",
     ""Explanation"": ""Hola VPN installation attempt detected.""
   }
 ][
   {
     ""sid"": ""37299"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. Hola VPN is a service that allows users to access websites anonymously by routing their traffic through its network of servers. This rule detects an attempt to install Hola VPN, which could be used by adversaries to establish a foothold in a network."""",
     ""Explanation"": ""This event is generated when traffic associated with the Hola VPN is detected""
   }
 ][
     ""sid"": ""37299"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve compromising a system through a user visiting a website over the normal course of browsing. This rule detects an attempt to install the Hola VPN software, which is often bundled with adware and other potentially unwanted programs (PUPs). Attackers may use drive-by compromise techniques to distribute malware or PUPs through malicious advertisements or compromised websites."""",
     ""Explanation"": ""This event is generated when installation of Hola VPN setup is detected.""
 ][
   {
     ""sid"": ""37299"",
     ""Technique ID"": ""T1480"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve an adversary using the identity or appearance of another entity to compromise or gain access to a system or network."", ""
     ""Explanation"": ""This rule detects an attempt to install Hola VPN, which is a service that can be used to bypass geographic restrictions. This suggests that the attacker is trying to mask their true identity or location.""
   }
 ][
   {
     ""sid"": ""37299"",
     ""Technique ID"": ""T1595"",
     ""Technique name"": ""Active Scanning"",
     ""Quotes"": """"Active Scanning techniques involve the use of various tools and techniques to probe and scan networks and systems for vulnerabilities, weaknesses, and information gathering purposes. This rule detects the presence of Hola VPN, which is often used for anonymizing web traffic, and may indicate an attempt by an adversary to scan and probe the network for potential vulnerabilities to exploit."""",
     ""Explanation"": ""This event is generated when activity relating to Hola VPN installation attempt is detected.""
   },
   {
     ""sid"": ""37299"",
     ""Technique ID"": ""T1010"",
     ""Technique name"": ""Application Window Discovery"",
     ""Quotes"": """"Application Window Discovery techniques involve obtaining a listing of open application windows on a target system. This rule monitors for the presence of specific user agents associated with Hola VPN, which may indicate an attempt by an adversary to establish a connection and gain access to the target system. By identifying open application windows, adversaries can gain insights into the user's activities and target specific applications for further exploitation."""",
     ""Explanation"": ""This event is generated when activity relating to Hola VPN installation attempt is detected.""
   }
 ][
         ""sid"": ""37299"",
         ""Technique ID"": ""T1550"",
         ""Technique name"": ""Use Alternate Authentication Material"",
         ""Quotes"": """"Use Alternate Authentication Material techniques involve using authentication material, such as password hashes, Kerberos tickets, and application access tokens, to move laterally within an environment and bypass normal system access controls. This rule detects an attempt to install Hola VPN, which is a proxy service that provides access to blocked websites. Hola VPN uses a network of peer-to-peer proxies, which can be used to bypass firewalls and access restricted content. This technique is often used by attackers to bypass security controls and gain access to a target network."""",
         ""Explanation"": ""This event is likely part of the installation process for the Hola VPN software or one of it's components.""
     ][
     {
         ""sid"": ""37299"",
         ""Technique ID"": ""T1169"",
         ""Technique name"": ""Install Rootkit"",
         ""Quotes"": """"Install Rootkit techniques involve installing persistent software on a target system to maintain access and hide malicious activity. Hola VPN is a legitimate VPN service that allows users to access geo-restricted content. However, malicious actors have been known to use Hola VPN installers to distribute malware or compromise systems, which may involve installing rootkits to facilitate persistence."""",
         ""Explanation"": ""Detects installation attempts of Hola VPN, a VPN service that has been misused to distribute malware""
     }
 ]","['T1574', 'T1190', 'T1187', 'T1071.001', 'T1562', 'T1133', 'T1189', 'T1480', 'T1595', 'T1010', 'T1550', 'T1169']",['T1021']
46065,"[
   {
     ""sid"": ""46065"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending data stolen from victim systems to a command and control (C2) server controlled by the adversary. This rule alerts on outbound HTTP traffic to external IP addresses on well-known ports, such as port 80, which attackers might use as part of a C2 communication channel."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""46065"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over Alternate Protocol"",
     ""Quotes"": """"Exfiltration Over Alternate Protocol techniques involve sending data stolen from victim systems to a command and control (C2) server controlled by the adversary using non-standard protocols, such as DNS or ICMP. While this rule primarily detects HTTP traffic, it also alerts on outbound traffic to external IP addresses on non-standard ports, which attackers might use as part of an alternate protocol C2 communication channel."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""46065"",
     ""Technique ID"": ""T1572"",
     ""Technique name"": ""Protocol Tunneling"",
     ""Quotes"": """"Protocol Tunneling techniques involve encapsulating network communications within a separate protocol to avoid detection or filtering. The rule identifies an outbound connection from the compromised host to a remote server on port 80, with a User-Agent header indicating 'Microsoft BITS'. This technique is commonly used by malware to establish a covert communication channel with a command and control server."""",
     ""Explanation"": ""This event is generated when a Trojan (ransomware) is attempting to connect to a C2 on the internet.""
 ][
   {
     ""sid"": ""46065"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Desktop Protocol"",
     ""Quotes"": """"Remote Desktop Protocol (RDP) techniques involve using Microsoft's RDP capabilities to establish remote interactive sessions to target systems. The rule detects an outbound connection from Microsoft's BITS service with the header 'User-Agent: Microsoft BITS/', which is a technique commonly used by adversaries to establish remote desktop connections to compromised systems."""",
     ""Explanation"": ""This rule detects an outbound connection from Microsoft's BITS service with the header 'User-Agent: Microsoft BITS/', which is a technique commonly used by adversaries to establish remote desktop connections to compromised systems.""
   }
 ][
     {
         ""sid"": ""46065"",
         ""Technique ID"": ""T1048"",
         ""Technique name"": ""Network Connection"",
         ""Quotes"": """"Network Connection techniques involve adversaries establishing network connections from an internal system to an external system to facilitate data exfiltration or command and control. This rule detects outbound connections from compromised internal systems (the 'HOME_NET') to external systems on specific HTTP ports, which is a common method used by malware to communicate with its command and control server for data exfiltration or receiving instructions."""",
         ""Explanation"": ""This rule generates an alert when an HTTP connection is made from an internal network to an external server with the user agent set to 'Microsoft BITS/'""
     }
 ][
   {
     ""sid"": ""46065"",
     ""Technique ID"": ""T1490"",
     ""Technique Name"": ""Inhibit System Recovery"",
     ""Quotes"": ""\""Inhibit System Recovery techniques involve deleting or removing built-in data and turning off services designed to aid in the recovery of a corrupted system to prevent recovery.\"""",
     ""Explanation"": ""The rule detects outbound connections to a known command and control server associated with the Sigma ransomware, which often attempts to disable system recovery mechanisms as part of its attack.""
   }
 ][
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) that mimics a '404 Not Found' error to disguise its communication with a command and control server, which is a common method used by keyloggers to stealthily capture input data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""46065"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (Win.Ransomware.Sigma) that is attempting to establish an outbound connection to a remote server. Trojans often use input capture techniques to steal sensitive information, such as login credentials or financial data."""",
     ""Explanation"": ""Outbound traffic from hosts that do not normally send data out (ie servers, DMZ hosts). The user agent is Microsoft BITS, which is used to download updates.""
   }
 ][
   {
     ""sid"": ""46065"",
     ""Technique ID"": ""T1499"",
     ""Technique name"": ""Endpoint Denial of Service"",
     ""Quotes"": """"Endpoint Denial of Service techniques involve disrupting the normal function of a target host by overwhelming it with requests or exploiting vulnerabilities to cause it to crash or become unresponsive. This rule detects an attempt to exploit a known vulnerability in Microsoft BITS (Background Intelligent Transfer Service) to cause a DoS condition on the target host."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""46065"",
         ""Technique ID"": ""T1505"",
         ""Technique name"": ""Domain Generation Algorithm"",
         ""Quotes"": """"Domain Generation Algorithm involves algorithmically generating domain names to make it more difficult for security tools to detect and block malicious websites used for phishing, malware distribution, and other malicious activities. This rule specifically detects outbound connections to a domain generated using the 'email.bin' algorithm, which is a known technique used by ransomware to communicate with its command and control server."""",
         ""Explanation"": ""The generate_subdomain.py script is used to generate a subdomain name using a domain generation algorithm (DGA) which allows attackers to generate a large number of subdomains of a specified domain name. The script generates subdomain names by encrypting the current time using the MD5 hash algorithm. The encrypted time is then appended to the specified domain name to create the subdomain name.""
     ][
         ""sid"": ""46065"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over Alternative Protocol"",
         ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve using non-standard protocols to exfiltrate data from a victim system. This rule detects an outbound connection made by the Win.Ransomware.Sigma malware to an external server over HTTP, using a User-Agent header that indicates the use of Microsoft BITS (Background Intelligent Transfer Service). BITS is a legitimate Windows service used for background file transfers, but it can be abused by malware to exfiltrate data stealthily over HTTP."""",
         ""Explanation"": ""The rule detects an outbound connection that matches the indicators of the Win.Ransomware.Sigma malware, specifically the use of HTTP with a modified User-Agent header to exfiltrate data.""
     ][
         ""sid"": ""46065"",
         ""Technique ID"": ""T1021"",
         ""Technique name"": ""Remote Services"",
         ""Quotes"": """"Remote Services techniques involve using remote access or management services as an attack vector. This rule detects outbound connections to '/email.bin' with a User-Agent of 'Microsoft BITS', which is a component of Windows used for background file transfers. The use of 'Microsoft BITS' in this context is suspicious and suggests an attempt to establish a remote connection to exfiltrate data."""",
         ""Explanation"": ""The rule is used to detect malware, spyware, and other malicious activities.""
     ][
   {
     ""sid"": ""46065"",
     ""Technique ID"": ""T1556"",
     ""Technique Name"": ""Modify Authentication Process"",
     ""Quotes"": """"Modify Authentication Process techniques involve modifying authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. This rule detects outbound connections to a known ransomware-related domain, indicating an attempt to exfiltrate sensitive information and potentially modify authentication processes to gain unauthorized access."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected. The rule specifically targets outbound connections associated with ransomware, which often involves attempts to modify authentication mechanisms to gain access to systems or data.""
   }
 ]","['T1071', 'T1041', 'T1572', 'T1021', 'T1048', 'T1490', 'T1056', 'T1056', 'T1499', 'T1505', 'T1041', 'T1021', 'T1556']",['T1197']
43287,"[
   {
     ""sid"": ""43287"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching for useful files or directories in the target environment, such as configuration files that contain credentials or other sensitive data. The rule detects an attempt to access the '/etc/inetd.conf' file, which contains configuration information for network services, indicating that an adversary is trying to gather information about the system."""",
     ""Explanation"": ""This event is generated when activity relating to attempted reconnaissance is detected.""
   }
 ][
   {
     ""sid"": ""43287"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting and stealing credentials from the local system, such as password hashes, private keys, or cached plaintext credentials, to gain access to privileged accounts and elevated permissions. This rule detects an attempt to access the '/etc/inetd.conf' file, which often contains sensitive configuration information, including usernames and passwords, making it a target for attackers seeking to obtain credentials."""",
     ""Explanation"": ""This event is generated when there is an attempt to access the '/etc/inetd.conf' file.""
   }
 ][
   {
     ""sid"": ""43287"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve identifying and enumerating files and directories within a system to locate sensitive data or identify potential vulnerabilities. This rule detects an attempt to access the '/etc/inetd.conf' file, which is a configuration file that contains sensitive information about network services, such as port numbers and listening processes."""",
     ""Explanation"": ""This rule detects an attempt to access a file that contains sensitive system information. This could be an attempt to gather information about the system in order to plan an attack.""
   }
 ][
   {
     ""sid"": ""43287"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""System Information Discovery"",
     ""Quotes"": """"System Information Discovery techniques involve gathering information about the system's environment, such as OS version, patch levels, and installed software, to identify potential vulnerabilities and plan attacks. This rule detects an attempt to access '/etc/inetd.conf' on a web server, which contains configuration details of running services, potentially aiding attackers in reconnaissance and identifying attack vectors."""",
     ""Explanation"": ""Access to sensitive files and directories can lead to extracting sensitive information""
   }
 ][
   {
     ""sid"": ""43287"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""Credential Access: Credential Dumping"",
     ""Quotes"": """"Credential Access: Credential Dumping techniques describe actions taken by adversaries to obtain credentials stored in computer memory. The rule identifies an attempt to access the '/etc/inetd.conf' file, which contains sensitive information such as usernames and encrypted passwords, indicating that the attacker may be attempting to gather credentials for lateral movement or privilege escalation."""",
     ""Explanation"": ""This rule is designed to detect attempts to access the '/etc/inetd.conf' file, which contains sensitive system configuration data including usernames and passwords.""
   }
 ][
   {
     ""sid"": ""43287"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Credential Access: Clear Text Transmission"",
     ""Quotes"": """"Credential Access: Clear Text Transmission techniques involve transmitting authentication credentials, such as usernames and passwords, over a network in an unencrypted or clear text format. This rule detects attempts to access the '/etc/inetd.conf' file, which may contain sensitive information such as usernames and passwords for system services."""",
     ""Explanation"": ""This rule detects an attempt to access the '/etc/inetd.conf' file, which could expose sensitive information such as usernames and passwords for system services. The attacker could use this information to compromise the system.""
   }
 ][
   {
     ""sid"": ""43287"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve identifying and accessing files or directories of interest on a system. This rule detects an attempt to access the '/etc/inetd.conf' file, which contains configuration information for network services. Attackers often target this file to identify potential vulnerabilities or gain access to sensitive information."""",
     ""Explanation"": ""The alert points out an attempt to access /etc/inetd.conf file, which is commonly exploited by attackers to gather information about the system configuration and running services. The targeted file often contains sensitive data like active services, listening ports, and running daemons.""
   }
 ][
         ""sid"": ""43287"",
         ""Technique ID"": ""T1087"",
         ""Technique name"": ""Credential Dumping"",
         ""Quotes"": """"Credential Dumping involves extracting credentials from memory, local caches, databases, or logs on the local system. The rule detects an attempt to access the '/etc/inetd.conf' file, which is often used by attackers to gather information about running services and identify potential vulnerabilities."""",
         ""Explanation"": ""If successful this attack gives the attacker credentials which may lead to compromise of the system.""
     ][
   {
     ""sid"": ""43287"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Account Discovery"",
     ""Quotes"": """"Account Discovery techniques involve attempting to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. The rule detects an attempt to access the '/etc/inetd.conf' file, which contains information about system accounts and services. Attackers may attempt to obtain this information to identify potential targets for further exploitation."""",
     ""Explanation"": ""This rule is an example of an event that may be used to detect Account Discovery attempts.""
   }
 ][
         ""sid"": ""43287"",
         ""Technique ID"": ""T1087"",
         ""Technique name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve identifying and listing files and directories on a system to gather information about the system or to locate targets. The rule indicates an attempt to access the '/etc/inetd.conf' file, which contains configuration information for network services, suggesting that an attacker is attempting to gather information about the system, possibly with the intent of exploiting vulnerabilities in those services."""",
         ""Explanation"": ""This rule is triggered when there is an attempt to access the '/etc/inetd.conf' file. This file contains configuration information for network services such as FTP, Telnet, and SSH. An attacker may attempt to access this file to gather information about the system and identify potential vulnerabilities to exploit.""
     ][
   {
     ""sid"": ""50003"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve obtaining a list of files and directories, as well as associated metadata (e.g., file hashes, permissions, timestamps) on a system for reconnaissance purposes and as part of broader targeting, persistence, and lateral movement."""",
     ""Explanation"": ""The rule triggers when an attacker attempts to access the '/etc/inetd.conf' file on a web server, which could be part of reconnaissance activities to identify potential vulnerabilities or targets.""
   }
 ]","['T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087']",['T1087']
22033,"[
     ""sid"": ""22033"",
     ""Technique ID"": ""T1406"",
     ""Technique name"": ""Server Software Component"",
     ""Quotes"": """"Server Software Component techniques involve identifying and leveraging server software components to gain access or execute arbitrary commands. This rule detects outbound connections to a malicious URI ('/auupdate/') associated with the OSX Flashback malware. Adversaries commonly use malicious URLs to infect systems by exploiting server software vulnerabilities or by leveraging them for command and control (C2) communication."""",
     ""Explanation"": ""This rule matches against an attempted connection to the malicious URL '/auupdate/', which has been associated with the OSX Flashback malware.""
 ][
   {
     ""sid"": ""22033"",
     ""Technique ID"": ""T1566"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": ""\""Phishing techniques involve sending fraudulent emails or text messages that appear to come from legitimate organizations to trick victims into providing sensitive information or clicking on malicious links. The rule detects an outbound connection made by the Apple OSX Flashback malware variant to a malicious URL (/auupdate/) hosted on the attacker's infrastructure, which is a common method used in phishing campaigns to distribute malware or steal sensitive information.\"""",
     ""Explanation"": ""The malicious URL (/auupdate/) is designed to mimic a legitimate software update from Apple, tricking victims into downloading and installing the malware.""
   }
 ][
   {
     ""sid"": ""22033"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing a covert communication channel with a remote attacker over a network connection. This rule detects an outbound connection to a known command and control server used by the OSX.Flashback malware, indicating that an infected host is attempting to establish communication with the attacker."""",
     ""Explanation"": ""This event is generated when malware variation of Apple OSX Flashback malware is detected.""
   }
 ][
         ""sid"": ""22033"",
         ""Technique ID"": ""T1453"",
         ""Technique name"": ""Establish Command and Control"",
         ""Quotes"": """"Establish Command and Control techniques involve establishing covert communication channels to an external command and control server for data exfiltration, remote control, and other malicious activities. In this case, the rule detects outbound communication from a compromised host to a known malicious domain (auupdate) associated with the Apple OSX Flashback malware, which establishes a command and control channel for further malicious activities."""",
         ""Explanation"": ""The rule detects a malicious outbound connection originating from an internal host to a known malicious domain.""
     ],
     [
         ""sid"": ""22033"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve transfer of data out of the network to an external location. The Flashback malware is known to exfiltrate sensitive data such as passwords, keystrokes, and system information from compromised hosts. The outbound communication to the malicious domain may be used for data exfiltration purposes."""",
         ""Explanation"": ""The rule detects a malicious outbound connection originating from an internal host to a known malicious domain.""
     ]
 ][
         ""sid"": ""22033"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve copying or otherwise moving malicious tools from an external system into the compromised environment. This rule detects an outbound connection associated with the Apple OSX Flashback malware variant, which is a worm that exploits a Java vulnerability to download and execute its payload from a remote server."""",
         ""Explanation"": ""The malware payload is transferred to the compromised system from an external server over an HTTP connection. This meets the definition of Ingress Tool Transfer.""
     ][
         ""sid"": ""22033"",
         ""Technique ID"": ""T1495"",
         ""Technique name"": ""Firmware Corruption"",
         ""Quotes"": """"Firmware Corruption techniques involve modifying or corrupting firmware to alter the normal functioning of a device. This rule detects the Flashback malware attempting to corrupt the firmware of Apple computers by modifying the EFI firmware image. Firmware corruption can lead to denial of service, system instability, or the execution of arbitrary code with elevated privileges."""",
         ""Explanation"": ""Infection of C&C for OSX/Flashback malware.""
     ][
   {
     ""sid"": ""22033"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of the Apple OSX Flashback malware, which is known to employ keylogging capabilities to steal user credentials and other sensitive data."""",
     ""Explanation"": ""This malware is trying to connect to a remote server to send captured user input data.""
   }
 ][
         ""sid"": ""22033"",
         ""Technique ID"": ""T1106"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to ensure confidentiality, integrity, or both, but also to make data recovery or forensics analysis more difficult if discovered"""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""22033"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Remote System Discovery"",
         ""Quotes"": """"Remote System Discovery techniques involve gathering information about remote systems on a network to identify potential targets for exploitation or attack"""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
     ""sid"": ""22033"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve the communication between an adversary and compromised systems to maintain access, collect data, or issue commands. This rule detects outbound traffic to a known Command and Control server used by the OSX Flashback malware. The traffic contains a base64-encoded string that includes system information, indicating that the malware is establishing communication with its Command and Control server to receive further instructions or exfiltrate data."""",
     ""Explanation"": """"This event is generated when activity relating to malware is detected.""
 }[
         ""sid"": ""22033"",
         ""Technique ID"": ""T1499"",
         ""Technique name"": ""MacOS Malware"",
         ""Quotes"": """"Adversaries may use the Flashback Trojan or other malware that is specifically designed to target devices running Apple's macOS. This rule detects an outbound connection from a compromised macOS device attempting to connect to a malicious server for command and control (C2) purposes."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""22033"",
     ""Technique ID"": ""T1098"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites that appear legitimate to trick victims into divulging sensitive information or providing access to systems and data. This rule targets a variant of the Apple OSX Flashback malware that uses phishing emails to trick users into downloading and installing the malware."""",
     ""Explanation"": ""This event is generated when the sending of malicious emails or creating of malicious websites that appear legitimate to deceive users into disclosing sensitive information or granting access to systems and data is detected.""
   }
 ]","['T1406', 'T1566', 'T1132', 'T1453', 'T1071', 'T1105', 'T1495', 'T1056', 'T1106', 'T1071', 'T1021', 'T1499', 'T1098']",['T1001']
32008,"[
         ""sid"": ""32008"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending malicious emails or messages that appear to come from a trusted source to trick users into revealing sensitive information or taking actions that could compromise their systems. This rule specifically detects phishing attacks that distribute malware through fake Delta Ticket responses in HTTP traffic, attempting to exploit user trust in legitimate software updates."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""32008"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing attacks trick users into clicking on a malicious link or opening a malicious attachment in an email message. The link typically leads to a fake login or registration page that is designed to steal the victim's credentials."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""32008"",
     ""Technique ID"": ""T1192"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick users into disclosing sensitive information, such as credentials or financial details. This rule detects a phishing attack that uses a fake Delta Ticket HTTP response to trick users into downloading a malicious EXE file. The attackers use social engineering tactics to impersonate a legitimate organization and convince users to click on a malicious link that leads to the phishing website."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""32008"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending emails or creating websites that appear to be legitimate but are intended to trick victims into disclosing sensitive information or taking actions that compromise their systems. This rule detects a phishing attack that uses a fake Delta Ticket HTTP response to trick users into downloading and executing a malicious executable file ("".exe"")."""",
         ""Explanation"": ""The event is generated when phishing activity is detected and the classification is trojan activity.""
     }
 ][
   {
     ""sid"": ""32008"",
     ""Technique ID"": ""T1192"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that appear to come from a legitimate source to trick users into revealing sensitive information or taking actions that could compromise their systems or data. This rule detects a fake Delta Ticket phishing attack, which is a common type of phishing attack that utilizes compromised email accounts and spoofed email addresses to lure users into providing their credentials or clicking on malicious links."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""32008"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve fraudulent attempts to obtain sensitive information, such as credentials or financial data, by disguising malicious communication as legitimate messages. This rule detects a phishing attack that uses a fake Delta Ticket HTTP response to trick users into downloading and executing a malicious executable file ('.exe'). Phishing emails often contain links to malicious websites or attachments that, when clicked or opened, download malware onto the victim's computer."""",
         ""Explanation"": ""This event is generated when fake Delta Ticket HTTP Response phishing attack is detected.""
     ][
   {
     ""sid"": ""32008"",
     ""Technique ID"": ""T1192"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or text messages that appear to come from legitimate organizations, with the goal of tricking users into providing sensitive information or clicking on malicious links. This rule detects a phishing attempt where malicious actors use a fake Delta Ticket HTTP response to lure users into clicking on a link that could lead to a malware download."""",
     ""Explanation"": ""This Snort rule detects a phishing attack that utilizes a fake Delta Ticket HTTP response to trick users into downloading malware. The rule identifies specific patterns and keywords within HTTP traffic, such as ""PK"", ""DeltaTicket_ET-RM-"", and "".exe"", which are commonly associated with phishing attacks.""
   }
 ][
   {
     ""sid"": ""32008"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or communications that appear to come from legitimate sources to trick individuals into providing sensitive information such as credentials or financial data. This rule detects malicious HTTP traffic that contains a fake Delta Ticket and attempts to execute an 'exe' file, which is a common phishing tactic used to steal credentials or infect systems with malware."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""32008"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating websites that appear legitimate to trick users into providing sensitive information or taking actions that could compromise their systems or accounts."""",
     ""Explanation"": ""This rule detects an attempt to distribute malware using a fake phishing email with an attached malicious Excel file that contains a macro to download and execute the malware. The email's subject is 'DeltaTicket_ET-RM-' and the attached file is named 'Fake Delta Ticket.exe'.""
   }
 ][
   {
     ""sid"": ""32008"",
     ""Technique ID"": ""T1192"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating websites that mimic legitimate ones to trick users into revealing sensitive information or taking malicious actions. This rule detects an attempt to phish for Delta Tickets using a fake HTTP response, which is a common method attackers use to lure victims into providing their credentials."""",
     ""Explanation"": ""This event is generated when activity relating to phishing is detected.""
   }
 ][
     ""sid"": ""32008"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that appear to be from a legitimate organization, often with the goal of stealing sensitive information or infecting a system with malware. This rule detects a phishing attack that attempts to trick users into downloading a malicious file disguised as a Delta Ticket file, a common method used by phishing attacks to distribute malware."""",
     ""Explanation"": ""This event matches malicious download of droppers.""
 ]","['T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192']",['T1566']
30510,"[
   {
     ""sid"": ""30510"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit the OpenSSL SSLv3 Heartbeat Read Overrun vulnerability (CVE-2014-0160), which allowed attackers to trigger a denial-of-service condition and potentially execute arbitrary code on vulnerable servers."""",
     ""Explanation"": ""This event is generated by an attempt to exploit a Heartbeat Read Overrun vulnerability.""
   }
 ][
         ""sid"": ""30510"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Share Discovery"",
         ""Quotes"": """"Network Share Discovery techniques involve identifying and enumerating network shares on a target system to gain access to data and resources. This rule detects an attempt to exploit a vulnerability in OpenSSL's SSLv3 heartbeat implementation, which can lead to remote code execution and compromise of the affected system."""",
         ""Explanation"": ""This event is generated when an attempt to read over a buffer and potentially execute code on the system is detected.""
     ][
         ""sid"": ""30510"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve actively identifying and enumerating listening network services on a target.,"""",
         ""Explanation"": ""This rule is looking for a heartbeat read overrun attempt on SSLv3. This is a technique that can be used to fingerprint SSL/TLS implementations.""
     ][
   {
     ""sid"": ""30510"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve probing a network for listening hosts and services in order to identify potential targets for exploitation. This rule detects an attempt to exploit the OpenSSL SSLv3 heartbeat read overrun vulnerability (CVE-2014-0160, also known as Heartbleed), which allows attackers to read arbitrary memory from a vulnerable server."""",
     ""Explanation"": ""Attempts to scan for listening hosts and services that may be vulnerable to the Heartbleed vulnerability by sending a crafted SSL heartbeat request.""
   }
 ][
         ""sid"": ""30510"",
         ""Technique ID"": ""T1197"",
         ""Technique name"": ""Port Scan"",
         ""Quotes"": """"Port Scan techniques involve using network probes to identify and enumerate active hosts and services on a target network, including probing for open ports, running services, and vulnerabilities. This rule detects an attempt to exploit an SSLv3 Heartbeat vulnerability in OpenSSL, which is a common method attackers use to perform port scans and identify potential targets for further exploitation."""",
         ""Explanation"": ""This event is likely generated when an attempt is made to exploit vulnerable SSL servers in the network.""
     }
 ][
   {
     ""sid"": ""30510"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an OpenSSL SSLv3 Heartbeat Read Overrun vulnerability, which can be exploited by sending a specially crafted packet to trigger a buffer overrun in the OpenSSL library, allowing attackers to execute arbitrary code on the target system."""",
     ""Explanation"": ""The rule detects exploitation attempts targeting the OpenSSL SSLv3 Heartbeat Read Overrun vulnerability.""
   }
 ][
         ""sid"": ""30510"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques are used to identify and enumerate network services running on a target system. This rule looks for an attempt to exploit the SSLv3 Heartbeat Read Overrun vulnerability, which can be used to perform network service scanning by leveraging the heartbeat mechanism in the SSL/TLS protocol."""",
         ""Explanation"": ""The rule detects an OpenSSL SSLv3 heartbeat read overrun attempt. The signature detects an attempt to exploit a vulnerability in the SSLv3 protocol that could allow an attacker to read arbitrary memory on the target system, which can be used for reconnaissance purposes.""
     ][
         ""sid"": ""30510"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve using various tools and techniques to discover open ports and services on target networks. This rule detects an attempt to exploit a vulnerability in the OpenSSL SSLv3 heartbeat protocol, which attackers commonly use to conduct reconnaissance and identify potential targets."""",
         ""Explanation"": ""This rule detects an attempted reconnaissance. The rule triggers when there is an OpenSSL SSLv3 heartbeat read overrun attempt.""
     ][
         ""sid"": ""30510"",
         ""Technique ID"": ""T1242"",
         ""Technique name"": ""SMB/MSSQL Memory Command Execution"",
         ""Quotes"": ""T1242, SMB/MSSQL Memory Command Execution, involves attackers exploiting a vulnerability in Microsoft SQL Server to execute arbitrary code."",
         ""Explanation"": ""The rule is designed to detect an attempt by an attacker to use an SMB vulnerability requiring special privilieges in order to execute a command on the system.""
     ],
     [
         ""sid"": ""30510"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Application Layer Protocol"",
         ""Quotes"": """"Application Layer Protocol techniques involve using network protocols at the application layer to communicate across a network. SMB is an application layer protocol that is used to share files, printers, and other resources across a network."""",
         ""Explanation"": ""The rule matches traffic that is being sent using the SMB protocol.""
     ],
     [
         ""sid"": ""30510"",
         ""Technique ID"": ""T1595"",
         ""Technique name"": ""Active Scanning"",
         ""Quotes"": """"Active Scanning techniques involve actively probing the target network for vulnerabilities or information to exploit. Reconnaissance activities like port scanning or running vulnerability assessment tools are examples of active scanning."""",
         ""Explanation"": ""The rule is designed to detect an attempt by an attacker to scan the network for vulnerabilities.""
     ]
 ][
   {
     ""sid"": ""30510"",
     ""Technique ID"": ""T1130"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve scanning external-facing systems for open ports or services. This rule detects a known vulnerability in OpenSSL implementations that allows attackers to trigger a buffer overrun by sending a specially crafted Heartbeat Request message. Network scanning is a common reconnaissance technique used to identify potential targets for exploitation."""",
     ""Explanation"": ""The rule triggers when it detects the Heartbeat Request message, which is used by attackers to exploit the OpenSSL vulnerability.""
   }
 ][
         ""sid"": ""30510"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Discovery"",
         ""Quotes"": """"Network Service Discovery techniques involve gathering information about services running on remote hosts and local network infrastructure devices. This rule detects a heartbeat read overrun attempt on the SSLv3 protocol, which could be an attempt to map services on a remote host."""",
         ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in the SSLv3 protocol. The attacker is attempting to send a specially crafted packet to a vulnerable SSLv3 server, which could cause the server to crash or leak sensitive information.""
     ],
     [
         ""sid"": ""30510"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a heartbeat read overrun attempt on the SSLv3 protocol, which could be an attempt to exploit a vulnerability in a public-facing application."""",
         ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in the SSLv3 protocol. The attacker is attempting to send a specially crafted packet to a vulnerable SSLv3 server, which could cause the server to crash or leak sensitive information.""
     ]
 ]","['T1190', 'T1046', 'T1046', 'T1046', 'T1197', 'T1190', 'T1040', 'T1046', 'T1242', 'T1242', 'T1071', 'T1595', 'T1130', 'T1046', 'T1190']",['T1005']
1604,"[
   {
     ""sid"": ""1604"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt by an external attacker to exploit a directory traversal vulnerability in a web application listening on port 4080, which could allow them to access sensitive files or execute arbitrary commands."""",
     ""Explanation"": ""Directory traversal vulnerability in Apple iChat 7.0.4 Server allows remote attackers to read arbitrary files via a "".."" (dot dot) in a request, as demonstrated by file:///etc/passwd.""
   }
 ][
     ""sid"": ""1604"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted directory traversal attack on an iChat server, which is a method that attackers can use to access files and directories outside the intended scope of the web application, potentially leading to sensitive information disclosure."""",
     ""Explanation"": ""This event is generated when a specific attempt to exploit a web application is detected.""
 ][
     {
         ""sid"": ""1604"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted directory traversal attack on the iChat web application by manipulating URLs to access files outside the intended root directory, which is a common method attackers use to exploit web applications."""",
         ""Explanation"": ""iChat directory traversal vulnerability allows remote attackers to access arbitrary files on the system via a crafted request.""
     }
 ][
   {
     ""sid"": ""1604"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted directory traversal attack on the iChat web application, which is a common method attackers use to exploit web applications by manipulating file paths, resulting in the disclosure of sensitive information or the execution of arbitrary code."""",
     ""Explanation"": ""Directory traversal vulnerability in Apple iChat 5.0.3 allows remote attackers to read arbitrary files and perform path traversal attacks via '..' (dot dot) in the username field during authentication.""
   }
 ][
   {
     ""sid"": ""1604"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. In this case, the rule identifies an attempt to exploit a directory traversal vulnerability in the iChat web application, which could allow an attacker to access arbitrary files on the server."""",
     ""Explanation"": ""Directory traversal vulnerability in iChat allows remote attackers to read arbitrary files via a crafted URL.""
   }
 ][
   {
     ""sid"": ""1604"",
     ""Technique ID"": ""T1606"",
     ""Technique name"": ""Forge Web Credentials"",
     ""Quotes"": """"Forge Web Credentials techniques involve creating fraudulent credentials to gain access to online accounts or web applications. This rule detects an attempt to exploit a directory traversal vulnerability in the iChat web application by accessing files outside the intended directories. Attackers could use this vulnerability to access sensitive information or forge web credentials to impersonate legitimate users."""",
     ""Explanation"": ""This event is generated when activity relating to a web application exploit attempt is detected.""
   }
 ][
     ""sid"": ""1604"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a directory traversal vulnerability in the iChat web application by attempting to access files outside of the intended directory structure."""",
     ""Explanation"": ""Directory traversal vulnerability in iChat 4.0.3 allows remote attackers to access arbitrary files via a ""..\"" (dot dot slash) in a URL.""
 ][
         ""sid"": ""1604"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a directory traversal vulnerability in the iChat web application by accessing files outside of the intended directory structure. Directory traversal vulnerabilities allow attackers to read sensitive files or execute arbitrary code on the server."""",
         ""Explanation"": ""Directory traversal attempt in iChat web application.""
     ][
   {
     ""sid"": ""1604"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""Directory Traversal"",
     ""Quotes"": """"Directory Traversal techniques involve manipulating directory structures to access files or directories that are not normally accessible. The rule detects an attempt to exploit a directory traversal vulnerability in an iChat web application by accessing files or directories outside of the intended root directory."""",
     ""Explanation"": ""Traversal of file/directory paths to gain access to unauthorized resources.""
   }
 ][
   {
     ""sid"": ""1604"",
     ""Technique ID"": ""T1129"",
     ""Technique Name"": ""Directory Traversal"",
     ""Quotes"": """"Directory Traversal techniques allow adversaries to access files or directories outside of a restricted directory structure, potentially granting access to sensitive information. This rule detects directory traversal attempts against an iChat server, where malicious actors may attempt to navigate to parent directories and access files outside of their intended scope."""",
     ""Explanation"": ""Directory traversal weakness in iChat allows remote attackers to access arbitrary files.""
   }
 ][
   {
     ""sid"": ""1604"",
     ""Technique ID"": ""T1139"",
     ""Technique name"": ""Directory Traversal"",
     ""Quotes"": """"Directory Traversal techniques involve manipulating a URL or path to access files or directories outside the intended root directory. This rule detects an attempt to use directory traversal to access the 'iChat' directory, which is a common method used by attackers to gain access to sensitive files and information."""",
     ""Explanation"": ""Directory traversal vulnerability in Apple iChat AV 5.0.1 and earlier allows remote attackers to access files outside the home directory via a "".."" (dot dot) in a request, aka the ""directory traversal vulnerability"".""
   }
 ]","['T1189', 'T1190', 'T1190', 'T1190', 'T1190', 'T1606', 'T1190', 'T1190', 'T1133', 'T1129', 'T1139']",['T1567']
48402,"[
     ""sid"": ""48402"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve communication between controlled systems (agents) and command and control servers (C2) to receive instructions, updates, or exfiltrate data. This rule detects outbound connections from compromised devices to a known C2 server used by the Emotet Trojan, suggesting the presence of a C2-based attack."""",
     ""Explanation"": ""This event is generated when malicious software (malware) attempts to communicate with a command and control (C2) server in order to receive instructions or exfiltrate data.""
 ][
   {
     ""sid"": ""48402"",
     ""Technique ID"": ""T1124"",
     ""Technique Name"": ""Network Sniffing"",
     ""Quotes"": ""\""Network Sniffing techniques involve monitoring and capturing network traffic to gather information about network activity, identify vulnerabilities, and potentially extract sensitive data.\"""",
     ""Explanation"": ""The rule is designed to detect network traffic patterns commonly associated with Emotet.""
   },
   {
     ""sid"": ""48402"",
     ""Technique ID"": ""T1570"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": ""\""Web Shell techniques involve using a web shell, which is a malicious script that gives adversaries remote access and control over a web server or web application.\"""",
     ""Explanation"": ""The rule uses a cookie-based detection mechanism to identify web shells commonly used by Emotet.""
   }
 ][
         ""sid"": ""48402"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Establish Command and Control"",
         ""Quotes"": """"Establish Command and Control techniques involve creating a communication channel with a remote system for the purpose of controlling or obtaining information from a compromised system. This rule detects an outgoing connection attempt by the Emotet Trojan variant, which is known to establish command and control communications with a remote server over HTTP."""",
         ""Explanation"": ""This rule is triggered when a connection is made to a known malicious IP address.""
     ][
   {
     ""sid"": ""48402"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve extracting data from a system and sending it to an external location. This rule detects an outbound connection attempt from an infected host to a known malicious domain associated with Emotet, which is a banking trojan known for its data stealing capabilities."""",
     ""Explanation"": ""This rule matches traffic from a compromised host attempting to communicate with a malicious command and control server. The traffic is associated with the Emotet trojan, which is known to steal data from infected systems.""
   }
 ][
     {
         ""sid"": ""48402"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised environment. The rule detects an outbound connection attempt by the Emotet Trojan variant, which is known for its use of external command and control servers and the ability to transfer malicious tools and payloads to infected systems."""",
         ""Explanation"": ""This rule detects a generic attempt to connect to a malicious remote host.""
     },
     {
         ""sid"": ""48402"",
         ""Technique ID"": ""T1534"",
         ""Technique name"": ""Internal Spearphishing"",
         ""Quotes"": """"Internal Spearphishing techniques involve sending malicious emails within an organization to gain access to additional information or exploit other users. Since Emotet primarily spreads through phishing emails, the outbound connection attempt detected by the rule could be part of an internal spearphishing campaign to compromise other users within the same network."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
     {
         ""sid"": ""48402"",
         ""Technique ID"": ""T1495"",
         ""Technique name"": ""Firmware Corruption"",
         ""Quotes"": """"Firmware Corruption techniques involve modifying or overwriting the flash memory contents of system BIOS or other firmware in devices attached to a system to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system."""",
         ""Explanation"": ""This rule detects an attempted attack on a router's firmware, which could lead to the router being rendered inoperable or unable to boot.""
     },
     {
         ""sid"": ""48402"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network."""",
         ""Explanation"": ""This rule detects an attempt to connect to a remote server, which could be used for command and control or data exfiltration.""
     }
 ][
     {
         ""sid"": ""48402"",
         ""Technique ID"": ""T1013"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to evade detection or analysis. This rule detects the Emotet malware variant attempting to make an outbound connection, with the 'Cookie' header containing encrypted data. Emotet is known to use encryption to communicate with its command and control server, making it harder to detect and analyze its traffic."""",
         ""Explanation"": ""This rule is related to the detection of Emotet variant outbound connection attempts. Emotet is a banking trojan that uses multiple techniques to evade detection, including data encryption. The use of encryption in the 'Cookie' header is a common technique used by Emotet to hide its communications.""
     }
 ][
   {
     ""sid"": ""48402"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve obtaining information about remote systems, often as a precursor to targeting or attacking them. This rule detects an outbound connection attempt from an infected host to a known Win.Trojan.Emotet variant command and control server. The rule identifies the presence of a cookie in the HTTP header, which is a common method used by malware to maintain persistent communication with its remote servers."""",
     ""Explanation"": ""Win.Trojan.Emotet variant makes outbound HTTP requests in order to communicate with it's Command and Control (C2) server.""
   },
   {
     ""sid"": ""48402"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Network Denial of Service"",
     ""Quotes"": """"Network Denial of Service techniques involve disrupting the normal operation of a network or service by flooding it with traffic or otherwise interfering with its operation. This rule detects an outbound connection attempt from an infected host to a known Win.Trojan.Emotet variant command and control server. The rule identifies the presence of a cookie in the HTTP header, which is a common method used by malware to maintain persistent communication with its remote servers."""",
     ""Explanation"": ""Denial of service attack is often used to disrupt network or services.""
   },
   {
     ""sid"": ""48402"",
     ""Technique ID"": ""T1491"",
     ""Technique Name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve creating or modifying system processes to execute adversary-controlled code or otherwise achieve execution. This rule detects an outbound connection attempt from an infected host to a known Win.Trojan.Emotet variant command and control server. The rule identifies the presence of a cookie in the HTTP header, which is a common method used by malware to maintain persistent communication with its remote servers."""",
     ""Explanation"": ""This activity may involve creating or modifying system process to execute adversary-controlled code.""
   }
 ][
   {
     ""sid"": ""48402"",
     ""Technique ID"": ""T1568"",
     ""Technique Name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve intercepting and examining network traffic in order to extract information or gain unauthorized access to systems or data. This rule detects outbound connections from the compromised system to known Emotet command and control servers, where attackers can send commands, exfiltrate data, and maintain persistence on the compromised system."""",
     ""Explanation"": ""This rule is for Emotet communication.""
   }
 ][
     {
         ""sid"": ""48402"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve using established command and control channels (C2) to exfiltrate data from a compromised system to a remote location. This rule detects outbound connections made by the Emotet Trojan variant, which is known for using HTTP POST requests and cookies to exfiltrate stolen data back to its C2 server."""",
         ""Explanation"": ""The behavior detected by this rule is consistent with the techniques used by the Emotet Trojan to establish a C2 channel and exfiltrate data.""
     }
 ][
         ""sid"": ""48402"",
         ""Technique ID"": ""T1141"",
         ""Technique name"": ""Access Token Manipulation"",
         ""Quotes"": """"Access Token Manipulation techniques involve manipulating existing access tokens to gain unauthorized access to resources or elevate privileges. Emotet malware is known to modify Group Policy Objects (GPOs) to gain persistence, which involves token manipulation and can be detected by identifying suspicious GPO modifications."""",
         ""Explanation"": ""This event is generated when a modification to a Group Policy Object (GPO) is detected. GPOs are used to control user and computer settings in a Windows domain, and can be modified by malware to gain persistence or elevate privileges.""
     ],
     [
         ""sid"": ""48402"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control techniques are used by adversaries to communicate with compromised systems and issue commands. Emotet uses HTTP(S) communication to establish command and control channels with its servers, which can be detected by identifying suspicious HTTP(S) traffic."""",
         ""Explanation"": ""This event is generated when Emotet malware attempts to establish a command and control channel with its server.""
     ]
 ]","['T1059', 'T1124', 'T1570', 'T1105', 'T1071', 'T1105', 'T1534', 'T1495', 'T1133', 'T1013', 'T1071', 'T1048', 'T1491', 'T1568', 'T1041', 'T1141', 'T1059']",['T1041']
1443,"[
   {
     ""sid"": ""1443"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Services"",
     ""Quotes"": ""\""Remote Services techniques involve abusing functionality normally provided by operating systems or applications to execute unauthorized remote code or commands. This rule detects an attempt to retrieve the 'passwd' file using a TFTP GET request, which is a common method attackers use to gain unauthorized access to system files and passwords.\"""",
     ""Explanation"": ""This event indicates detection of a TFTP protocol violation, specifically the GET operation for retrieving the passwd file, which holds user authentication information.""
   }
 ][
     {
         ""sid"": ""1443"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Remote File Copy"",
         ""Quotes"": """"Remote File Copy techniques involve copying files over the network between systems. The rule detects attempts to retrieve the passwd file using the Trivial File Transfer Protocol (TFTP), which is a common method used by attackers to obtain system credentials."""",
         ""Explanation"": ""This signature matches a TFTP GET request for the passwd file.""
     }
 ][
   {
     ""sid"": ""1443"",
     ""Technique ID"": ""T1104"",
     ""Technique Name"": ""Compromise Infrastructure"",
     ""Quotes"": """"Compromise Infrastructure techniques involve leveraging existing vulnerabilities within infrastructure and targeting systems with low security measures to gain persistent access. The rule detects attackers attempting to retrieve the 'passwd' file from a TFTP server, which could be an indication of an attacker compromising a system by exploiting a vulnerability in the TFTP service."""",
     ""Explanation"": ""This rule may indicate an attacker attempting to compromise a system by retrieving the 'passwd' file from a TFTP server.""
   }
 ][
   {
     ""sid"": ""1443"",
     ""Technique ID"": ""T1075"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve using encryption to conceal the presence or activities of malicious payloads or communications. This rule detects an attempt to retrieve a 'passwd' file using the Trivial File Transfer Protocol (TFTP), which is a clear indication of a potential attack on a system."""",
     ""Explanation"": ""TFTP is a file transfer protocol used to transfer files between a client and a server. This rule detects an attempt to retrieve a 'passwd' file using TFTP, which is a clear indication of a potential attack on a system.""
   }
 ][
     ""sid"": ""1443"",
     ""Technique ID"": ""T1076"",
     ""Technique name"": ""Credential Access: TFTP"",
     ""Quotes"": """"Credential Access: TFTP techniques involve using Trivial File Transfer Protocol (TFTP) to access and retrieve files, including sensitive information such as credentials or system data. This rule detects an attempt to retrieve the 'passwd' file via TFTP, which could contain user credentials or other sensitive system information."""",
     ""Explanation"": ""This event is generated when an attempt to retrieve the passwd file via TFTP is detected.""
 ][
   {
     ""sid"": ""1443"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending extracted data or information out of the victim network over an established command and control channel."""",
     ""Explanation"": ""This rule targets attackers attempting to exfiltrate sensitive information such as passwords over a TFTP channel.""
   }
 ][
   {
     ""sid"": ""1443"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials, such as hashes or cleartext passwords, from the target system's memory or storage. In this case, the rule looks for an attempt to retrieve the 'passwd' file over TFTP, which could be an indication of an attacker trying to obtain user credentials or system secrets."""",
     ""Explanation"": ""This rule will trigger if the passwd file is requested over TFTP, which is an unencrypted protocol. This could allow an attacker to capture the passwd file and extract user credentials.""
   }
 ][
   {
     ""sid"": ""1443"",
     ""Technique ID"": ""T1014"",
     ""Technique Name"": ""Credential Access: TFTP Server"",
     ""Quotes"": """"Credential Access: TFTP Server techniques involve adversaries accessing credentials stored on a TFTP server. The rule monitors UDP traffic on port 69 and triggers an alert when a TFTP 'GET' request is made for a file named 'passwd', which typically contains sensitive password information."""",
     ""Explanation"": ""This event correlates with a TFTP client accessing the password file on a TFTP server.""
   }
 ][
     ""sid"": ""1443"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Application Layer Protocol"",
     ""Quotes"": """"Application Layer Protocol techniques involve adversaries communicating using higher-level protocols, such as HTTP or DNS, to blend in with legitimate traffic and avoid detection. TFTP (Trivial File Transfer Protocol) is an application layer protocol used for transferring files between hosts. This rule detects an attempt to retrieve the 'passwd' file using TFTP, which could be part of an attacker's reconnaissance or privilege escalation efforts."""",
     ""Explanation"": ""This event is generated when a file transfer protocol (FTP) server receives a request to download a file""
 ][
   {
     ""sid"": ""1443"",
     ""Technique ID"": ""T1131"",
     ""Technique name"": ""Non-Application Layer Protocol"",
     ""Quotes"": """"Non-Application Layer Protocol techniques involve using protocols other than application-layer protocols, such as UDP, to exfiltrate data. This rule detects a TFTP GET request for the '/passwd' file, which is commonly used by attackers to retrieve password files from a remote system."""",
     ""Explanation"": ""TFTP is a protocol used to transfer files over a network. It is often used to transfer configuration files or other small files between devices.""
   }
 ][
   ""sid"": ""1443"",
   ""Technique ID"": ""T1021"",
   ""Technique name"": ""Remote Services"",
   ""Quotes"": """"Remote Services techniques involve using remote protocols or services, such as FTP, TFTP, SMB, or RDP, to establish connections to or perform actions on remote systems."""",
   ""Explanation"": ""This rule triggers when there is an attempt to access a passwd file via a TFTP connection.""
 ]","['T1021', 'T1071', 'T1104', 'T1075', 'T1076', 'T1048', 'T1071', 'T1014', 'T1071', 'T1131', 'T1021']",['T1213']
54793,"[
   {
     ""sid"": ""54793"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve identifying and gathering information about systems on a network to plan follow-on attacks. This rule detects an attempt to establish a command and control connection between a compromised system and a remote server using a custom binary protocol ('{|22|children|22|:[{|22|name|22|:', indicating an attempt to gather information about available resources or launch attacks."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""54793"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques refer to using remote services and protocols to establish command and control communications with remote systems. The rule detects an attempt by a Drovorub malware client to connect to its remote command and control server, which aligns with the use of remote services for malicious communications."""",
     ""Explanation"": ""Unix.Malware.Drovorub is malware designed to steal banking credentials and other sensitive information.""
 ][
         ""sid"": ""54793"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Remote Service Execution"",
         ""Quotes"": """"Remote Service Execution techniques involve the execution of commands or scripts on a remote system over a network connection. This rule detects an attempt to establish a connection to a remote server by a malware known as 'Drovorub', which is typically used for remote code execution and data exfiltration."""",
         ""Explanation"": ""Process hollowing is a technique used by malware to inject its code into a legitimate process, and then use that process to execute its malicious activities. This technique is often used by malware to evade detection and analysis.""
     ][
   {
     ""sid"": ""54793"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve adversaries using valid accounts to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The rule detects an inbound connection attempt to a Unix-based system from a potential command and control (C2) server, indicating the adversary's attempt to establish a remote connection for malicious purposes."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected, which may involve the use of remote services for malicious purposes.""
   },
   {
     ""sid"": ""54793"",
     ""Technique ID"": ""T1496"",
     ""Technique Name"": ""Resource Hijacking"",
     ""Quotes"": """"Resource Hijacking techniques involve adversaries leveraging the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. The rule detects an inbound connection attempt to a Unix-based system from a potential command and control (C2) server, indicating the adversary's attempt to establish a remote connection for malicious purposes, potentially to hijack system resources."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected, which may involve resource hijacking for malicious purposes.""
   }
 ][
   {
     ""sid"": ""54793"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve communication between a victim system and a remote attacker or malicious infrastructure. This rule detects an inbound connection attempt to a known command and control server used by the Drovorub malware, suggesting that the system may be infected with this malware and is attempting to establish communication with its command and control infrastructure."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""54793"",
     ""Technique ID"": ""T1083"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching file and directory structures on a system to identify and access files of interest. This rule detects an attempt to retrieve a specific file (possibly containing sensitive information or malware) from a remote server, indicating that an attacker is attempting to gather information about the system and its files."""",
     ""Explanation"": ""This event is generated when activity relating to Unix.Malware.Drovorub cnc inbound connection attempt is detected.""
 ][
   {
     ""sid"": ""54793"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"This technique involves communicating with remote systems to receive instructions and transfer data, which could include exfiltrating sensitive information, executing commands, or updating malware."""",
     ""Explanation"": ""This rule detects inbound connections to a Unix command and control server, which is a common method for malware to communicate with its operators.""
   }
 ][
   {
     ""sid"": ""54793"",
     ""Technique ID"": ""T1570"",
     ""Technique Name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process involves creating or modifying system processes to establish persistence or execute arbitrary code. This rule detects an attempt by the Unix.Malware.Drovorub malware to create a new process with a specific command line, which is a common technique used by malware to establish persistence or execute malicious code."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected. The rule detects an attempt to create a new process with a specific command line, which is a common technique used by malware.""
   },
   {
     ""sid"": ""54793"",
     ""Technique ID"": ""T1106"",
     ""Technique Name"": ""Install Rootkit"",
     ""Quotes"": """"Install Rootkit techniques involve installing a rootkit on a system to gain persistent access and control over the system. This rule detects an attempt to install a rootkit by creating a new process with a specific command line, which is a common technique used by rootkits to establish persistence."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected. The rule detects an attempt to install a rootkit by creating a new process with a specific command line, which is a common technique used by rootkits.""
   }
 ][
         ""sid"": ""54793"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Application Layer Protocol"",
         ""Quotes"": """"Application Layer Protocol techniques involve using OSI application layer protocols to communicate, such as HTTP, SMB, or DNS. The rule detects malicious traffic using the Drovorub malware, which is known to use an HTTP-based command and control (C2) protocol to communicate with its operators."""",
         ""Explanation"": ""This event is generated when activity relating to the Drovorub malware is detected.""
     ][
   {
     ""sid"": ""54793"",
     ""Technique ID"": ""T1480"",
     ""Technique name"": ""Create Account"",
     ""Quotes"": """"Create Account techniques involve creating new accounts on a system to establish and maintain persistence. This rule detects a malicious network activity in which a new account is created with a specific name, indicating an attempt to gain persistent access to the system."""",
     ""Explanation"": ""A malicious activity is detected. Network traffic is observed attempting to create a new account with a specific name. This may indicate an attempt to gain persistent access to the system by creating a new user account.""
   }
 ][
   {
     ""sid"": ""54793"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control (C2) techniques involve the use of specific communication channels to maintain persistent control over compromised systems and issue commands to execute malicious actions."""",
     ""Explanation"": ""The rule's content pattern and pcre match a specific binary format commonly used by Unix malware called Drovorub to communicate with its C2 server, indicating an attempt to establish a C2 connection.""
   },
   {
     ""sid"": ""54793"",
     ""Technique ID"": ""T1568"",
     ""Technique name"": ""Modify Registry"",
     ""Quotes"": """"Modify Registry techniques involve changing values within the Windows Registry to alter the behavior of the system or applications."""",
     ""Explanation"": ""Unix malware families are known to interact with the registry in order to establish persistence and modify system configurations. The malware detected by this rule may use registry modifications as part of its infection process.""
   }
 ]","['T1071', 'T1021', 'T1071', 'T1021', 'T1496', 'T1059', 'T1083', 'T1059', 'T1570', 'T1106', 'T1071', 'T1480', 'T1071', 'T1568']",['T1094']
18434,"[
     ""sid"": ""18434"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a DLL loading vulnerability in Adobe Acrobat Reader's 'ace.dll' plugin, which could allow attackers to execute arbitrary code on the target system."""",
     ""Explanation"": ""Vulnerability in Adobe Acrobat Reader and Adobe Acrobat 9.x before 9.4.4 allows remote attackers to execute arbitrary code via a crafted PDF document, which triggers a DLL load attempt from a remote site.""
 ][
         ""sid"": ""18434"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a DLL loading vulnerability in the Adobe Acrobat Reader plugin, which is a common method attackers use to compromise systems by executing malicious code."""",
         ""Explanation"": ""DLL loading vulnerabilities allow attackers to load and execute arbitrary code by exploiting the way applications load dynamic link libraries (DLLs).""
     ][
     ""sid"": ""18434"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Adobe Acrobat Reader's 'ace.dll' plugin through a DLL loading technique, which can allow attackers to execute arbitrary code in the context of the vulnerable application."""",
     ""Explanation"": ""This exploit targets the Adobe Acrobat Reader's 'ace.dll' plugin and attempts to exploit a DLL loading vulnerability.""
 ][
         ""sid"": ""18434"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Local Application"",
         ""Quotes"": """"Exploit Local Application techniques involve exploiting vulnerabilities in locally installed applications to gain unauthorized access or escalate privileges. This rule detects an exploit attempt targeting a vulnerability in the Adobe Acrobat Reader plugin 'ace.dll', which could allow an attacker to execute arbitrary code on the vulnerable system."""",
         ""Explanation"": ""Adobe Acrobat Reader plugin ace.dll dll-load exploit attempt.""
     ][
 ""sid"": ""18434"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
         ""Explanation"": ""The rule is triggered when an attempt is made to exploit a dll-load vulnerability in Adobe Acrobat Reader plugin ace.dll. This is a type of vulnerability that can allow attackers to execute arbitrary code on the target system.""
     ][
   {
     ""sid"": ""18434"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": ""\""Exploitation for Client Execution techniques involve exploiting vulnerabilities in client applications to execute arbitrary code or commands\"""",
     ""Explanation"": ""The rule identifies exploitation attempts targeting a vulnerability in Adobe Acrobat Reader, which could allow attackers to execute arbitrary code on affected systems""
   },
   {
     ""sid"": ""18434"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code.\"""",
     ""Explanation"": ""The rule detects exploitation attempts targeting a vulnerability in Adobe Acrobat Reader, which is a commonly used application that could be accessed remotely""
   }
 ][
   {
     ""sid"": ""18434"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted dll hijacking attack on Adobe Acrobat Reader by exploiting a known vulnerability in the 'ace.dll' plugin. This technique seeks to exploit software flaws in publicly accessible applications to compromise a system."""",
     ""Explanation"": ""This event is generated when an attempt to exploit the Adobe Acrobat Reader plugin ace.dll dll-load exploit found.""
   }
 ][
     ""sid"": ""18434"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an exploit attempt targeting a DLL loading vulnerability in Adobe Acrobat Reader's 'ace.dll' plugin, which could allow remote code execution if successfully exploited."""",
     ""Explanation"": ""The event is generated when a dll-load exploit attempt against Adobe Acrobat Reader is detected. The plugin 'ace.dll' is targeted, which can lead to arbitrary code execution.""
 ][
   {
     ""sid"": ""18434"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Vulnerable Software"",
     ""Quotes"": """"Exploit Vulnerable Software techniques involve taking advantage of vulnerabilities in software to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a dll-load vulnerability in Adobe Acrobat Reader's ace.dll plugin, which can allow attackers to execute arbitrary code in the context of the vulnerable application."""",
     ""Explanation"": ""The rule detects an exploit attempt for a dll-load vulnerability in Adobe Acrobat Reader plugin ace.dll.""
   }
 ][
         ""sid"": ""18434"",
         ""Technique ID"": ""T1107"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a DLL loading vulnerability in Adobe Acrobat Reader's 'ace.dll' plugin, which is a common method attackers use to gain unauthorized access to systems through web browsers."""",
         ""Explanation"": ""This event is generated when activity relating to an attempted exploit is detected.""
     ][
   {
     ""sid"": ""18434"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Techniques are used by adversaries to target and exploit vulnerabilities in public-facing applications. Adversaries may use automated tools to search for and exploit these vulnerabilities. In some cases, adversaries may use these techniques to attack specific organizations or individuals."",
     ""Explanation"": ""This rule detects an attempted DLL load exploit in the Adobe Acrobat Reader plugin 'ace.dll'. This technique is commonly used by attackers to execute arbitrary code on a vulnerable system.""
   }
 ]","['T1059', 'T1190', 'T1203', 'T1189', 'T1190', 'T1203', 'T1190', 'T1203', 'T1190', 'T1189', 'T1107', 'T1190']",['T1574']
1444,"[
   {
     ""sid"": ""1444"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve using legitimate remote services or protocols to facilitate attacks such as Command and Control. This rule detects Trivial File Transfer Protocol (TFTP) traffic on non-standard UDP port 69, which could be an indication of attackers using TFTP as an alternative C2 channel to avoid detection."""",
     ""Explanation"": ""TFTP is a protocol used to transfer files between two hosts on a network.""
   }
 ][
   {
     ""sid"": ""1444"",
     ""Technique ID"": ""T1130"",
     ""Technique name"": ""TFTP Server"",
     ""Quotes"": """"TFTP Server techniques involve using Trivial File Transfer Protocol (TFTP) services to transfer files from one system to another. TFTP is a simple file transfer protocol that uses UDP on port 69 and is commonly used for tasks such as loading firmware or distributing files to network devices. This rule detects a connection to a TFTP server on port 69, which could indicate an attempt to transfer malicious files or exfiltrate data."""",
     ""Explanation"": ""TFTP Server is a file transfer protocol that uses UDP.""
   }
 ][
   {
     ""sid"": ""1444"",
     ""Technique ID"": ""T1553"",
     ""Technique name"": ""TFTP Server"",
     ""Quotes"": """"TFTP Server techniques involve setting up a Trivial File Transfer Protocol (TFTP) server to facilitate file transfers between compromised systems and external servers. This rule detects an attempt to connect to a TFTP server on port 69, which could indicate an attacker's attempt to transfer files to or from the compromised system."""",
     ""Explanation"": ""This rule detects TFTP traffic. TFTP is often abused by malware to download and execute malicious payloads.""
   }
 ][
   {
     ""sid"": ""1444"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Share Discovery"",
     ""Quotes"": """"Network Share Discovery techniques involve enumerating network shares to identify potential targets for lateral movement or data exfiltration. This rule detects a TFTP Get request, which is used for transferring files over a network, indicating that an adversary may be attempting to discover and access network shares."""",
     ""Explanation"": ""This rule is triggered when there is a TFTP Get request to the host. TFTP is a protocol used to transfer files over a network and is commonly used by attackers to gain access to a system.""
   }
 ][
   {
     ""sid"": ""1444"",
     ""Technique ID"": ""T1559"",
     ""Technique name"": ""Inter-Process Communication"",
     ""Quotes"": """"Inter-Process Communication techniques involve exploiting IPC mechanisms such as named pipes, message queues, and sockets to facilitate communication between processes or components on a system. This rule detects a TFTP protocol violation, specifically a malformed TFTP read request (opcode '01'), which can be used for IPC-based attacks such as exploiting vulnerabilities in TFTP servers or manipulating IPC channels to gain unauthorized access or control."""",
     ""Explanation"": ""This rule is designed to detect TFTP protocol violations. TFTP is a simple file transfer protocol that uses UDP on port 69.""
   }
 ][
   {
     ""sid"": ""1444"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services involve using publicly accessible services for command and control traffic to avoid detection. The rule looks for TFTP Get requests, a protocol commonly used for file transfers that can also be leveraged by attackers to establish communication channels."""",
     ""Explanation"": ""This rule detects the usage of TFTP protocol to get file data from server on destination address.""
   }
 ][
   {
     ""sid"": ""1444"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a vulnerability in the Trivial File Transfer Protocol (TFTP) service, which is a common attack vector used to compromise systems by exploiting buffer overflows or other vulnerabilities."""",
     ""Explanation"": ""TFTP is a simple file transfer protocol used to transfer files between a client and a server. It is often used to transfer configuration files or firmware updates to devices. This rule is triggered when a TFTP GET request is received from an external network, indicating a potential attempt to exploit a vulnerability in the TFTP service.""
   }
 ][
   {
     ""sid"": ""1444"",
     ""Technique ID"": ""T1199"",
     ""Technique Name"": ""TFTP Server"",
     ""Quotes"": """"TFTP Server techniques involve using the Trivial File Transfer Protocol (TFTP) service to transfer files between a remote system and a victim system, often for the purpose of transferring malicious executables or scripts."""",
     ""Explanation"": ""This rule detects a TFTP Get request, which could be used by an attacker to retrieve a malicious file from a remote server.""
   }
 ][
   {
     ""sid"": ""1444"",
     ""Technique ID"": ""T1571"",
     ""Technique Name"": ""TFTP Client"",
     ""Quotes"": """"TFTP Client techniques involve using Trivial File Transfer Protocol (TFTP) to transfer files between systems, often as part of a network installation or remote management process. This rule detects an attempt to initiate a TFTP session, which could be used for malicious purposes such as installing malware or exfiltrating sensitive data."""",
     ""Explanation"": ""This event is generated when activity relating to (TFTP) Trivial File Transfer Protocol is detected.""
   }
 ][
   {
     ""sid"": ""1444"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Share Discovery"",
     ""Quotes"": """"Network Share Discovery techniques involve identifying and mapping accessible network shares and file systems on a target network. This rule detects Trivial File Transfer Protocol (TFTP) 'Get' requests, which are commonly used to transfer files between hosts on a network and can be used for malicious purposes such as exfiltrating sensitive information or uploading malicious payloads."""",
     ""Explanation"": ""This rule detects TFTP gets which can be used for malicious purposes.""
   }
 ][
   {
     ""sid"": ""1444"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve capturing network traffic to collect information about an environment, including authentication material passed over the network. This rule detects TFTP GET requests, which could be used by an adversary to sniff network traffic and capture sensitive data."""",
     ""Explanation"": ""This rule detects TFTP GET requests, which could be used by an adversary to sniff network traffic and capture sensitive data.""
   }
 ]","['T1021', 'T1130', 'T1553', 'T1046', 'T1559', 'T1133', 'T1190', 'T1199', 'T1571', 'T1046', 'T1040']",['T1213']
42340,"[
   {
     ""sid"": ""42340"",
     ""Technique ID"": ""T1077"",
     ""Technique name"": ""Windows Remote Service Execution"",
     ""Quotes"": """"Windows Remote Service Execution techniques involve exploiting vulnerabilities in Windows Remote Services such as Server Message Block (SMB) to execute commands remotely."""",
     ""Explanation"": ""Rule detects SMB null session, may indicate an attempt by an attacker to establish an SMB connection to access a share on the network.""
   }
 ][
     ""sid"": ""42340"",
     ""Technique ID"": ""T1077"",
     ""Technique name"": ""SMB Relay"",
     ""Quotes"": """"SMB Relay techniques involve abusing SMB features to establish unauthorized connections to remote systems. This rule detects an attempt to establish an anonymous session to a remote SMB share, which could be an attempt to exploit vulnerabilities in the SMB protocol or to laterally move within a network."""",
     ""Explanation"": ""This event is generated when an attempt to establish an anonymous session to a remote SMB share is detected.""
 ][
   {
     ""sid"": ""42340"",
     ""Technique ID"": ""T1077"",
     ""Technique Name"": ""Windows SMB/RPC Service Discovery"",
     ""Quotes"": """"Windows SMB/RPC Service Discovery techniques enumerate or fingerprint the SMB services available on a target network and retrieve information about the underlying system, including share names and associated usernames."""",
     ""Explanation"": ""This rule detects attempts to anonymously access IPC shares on Windows systems, which is a common reconnaissance technique used to identify potential targets for further exploitation.""
   }
 ][
         ""sid"": ""42340"",
         ""Technique ID"": ""T1077"",
         ""Technique name"": ""User Execution"",
         ""Quotes"": """"User Execution techniques involve persuading a victim to execute a malicious program or script. This rule detects a SMB null session IPC share access attempt on port 445, a common method attackers use to penetrate a network and execute malicious code."""",
         ""Explanation"": ""SMB Null Session IPC Share Access Attempt on Port 445.""
     ][
   {
     ""sid"": ""42340"",
     ""Technique ID"": ""T1077"",
     ""Technique Name"": ""Web Service Reconnaissance"",
     ""Quotes"": """"Web Service Reconnaissance techniques involve gathering information about web services accessible to an attacker. The rule detects an attempt to establish an anonymous SMB session on port 445, which could be used to gather information about network infrastructure or identify potential targets for exploitation."""",
     ""Explanation"": ""SMB over IP protocol request used for network reconnaissance.""
   }
 ][
     ""sid"": ""42340"",
     ""Technique ID"": ""T1077"",
     ""Technique name"": ""Network Share Discovery"",
     ""Quotes"": """"Network Share Discovery techniques involve searching for and locating shared network resources, such as file shares or printers, typically by systematically querying or enumerating within a target network."""",
     ""Explanation"": ""This rule detects attempts to access IPC shares on Windows systems anonymously, which is a technique often used to gather information about potential targets on a network.""
 ][
     ""sid"": ""42340"",
     ""Technique ID"": ""T1077"",
     ""Technique name"": ""Credential Access: SMB Null Session"",
     ""Quotes"": """"Credential Access: SMB Null Session techniques allow adversaries to perform anonymous SMB reconnaissance and connect to target shares without authentication. This rule detects an SMB NULL session attempt to access the IPC$ share on the target network, where IPC$ is a hidden administrative share used for inter-process communication that is often targeted for reconnaissance and lateral movement."""",
     ""Explanation"": ""This rule detects an attempt by an external host to establish an anonymous SMB session with a host on the internal network, specifically targeting the IPC$ share. This behavior is consistent with adversaries attempting to gain access to the internal network for reconnaissance or lateral movement.""
 ][
         ""sid"": ""42340"",
         ""Technique ID"": ""T1077"",
         ""Technique name"": ""Domain Trust Discovery"",
         ""Quotes"": """"Domain Trust Discovery techniques involve discovering and exploiting trusts between domains to access resources in other domains. This rule detects an attempt to access an IPC share on the local network, which could be used to escalate privileges and move laterally within the network."""",
         ""Explanation"": ""Share discovery SMB is often used for client probing for weak systems on a network.""
     ][
   {
     ""sid"": ""42340"",
     ""Technique ID"": ""T1077"",
     ""Technique name"": ""Windows File and Directory Permissions Modification"",
     ""Quotes"": """"Windows File and Directory Permissions Modification involves modifying permissions assigned to files and directories to gain control over system resources. This rule detects an attempt to access the IPC$ share on a Windows system using an anonymous session, which could be used to elevate privileges and facilitate other malicious operations."""",
     ""Explanation"": ""Anonymous access to the IPC$ share can be used to elevate privileges and facilitate other malicious operations.""
   }
 ][
     {
         ""sid"": ""42340"",
         ""Technique ID"": ""T1077"",
         ""Technique name"": ""System Service Discovery"",
         ""Quotes"": """"System Service Discovery techniques involve identifying running processes, services, or software on a system to locate potential target vulnerabilities. This rule detects an attempted SMB null session access to an IPC share by establishing a connection to TCP port 445, which attackers commonly use to probe for open shares and services on a target network."""",
         ""Explanation"": ""IPC$ is a named pipe that allows processes to communicate with each other. It is commonly used by administrators to manage remote computers, but it can also be used by attackers to gain access to a system.""
     }
 ][
         ""sid"": ""42340"",
         ""Technique ID"": ""T1077"",
         ""Technique name"": ""'Domain Controller or Directory Service Discovery"",
         ""Quotes"": """"Domain Controller or Directory Service Discovery techniques involve attempts to identify and enumerate domain controllers or other directory services within an environment. This rule detects an SMB session with null authentication attempting to establish an IPC share connection, which is a common method attackers use to discover domain controllers and other network resources."""",
         ""Explanation"": ""The attacker is attempting to make an authenticated NetBIOS session request to the SMB Null session, using UID \\\\192.168.10.113IPC\\. This indicates that the attacker is trying to discover hosts and services on the network, which is often the first step in an attack.""
     ]","['T1077', 'T1077', 'T1077', 'T1077', 'T1077', 'T1077', 'T1077', 'T1077', 'T1077', 'T1077', 'T1077']",['T1189']
4236,"[
   {
     ""sid"": ""4236"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Access Software Execution History: Windows Management Instrumentation (WMI)"",
     ""Quotes"": """"Access Software Execution History: Windows Management Instrumentation (WMI) techniques involve accessing Windows Management Instrumentation (WMI) repositories to obtain a history of software execution on a system. The rule detects access to the WMI ASDI Extension ActiveX object, which is commonly used by adversaries to retrieve information about installed software and running processes."",
     ""Explanation"": ""This event is generated when an attempt is made to access the WMI ASDI Extension ActiveX object, a method used to retrieve information about installed software and running processes.""
   }
 ][
   {
     ""sid"": ""4236"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications, such as web browsers, to execute arbitrary code and gain control of the client system. This rule specifically detects an attempt to exploit a vulnerability in the Microsoft Internet Explorer WMI ASDI Extension ActiveX object, which could allow attackers to execute arbitrary code in the context of the user's web browser."""",
     ""Explanation"": ""This event is generated when client-side browser vulnerability is exploited for executing arbitrary code to gain control of the client system.""
   }
 ][
         ""sid"": ""4236"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute force techniques involve repeatedly trying different combinations of usernames and passwords to gain access to an account. This rule detects an attempt to access a Microsoft Internet Explorer ActiveX object using a known class ID, which could be part of a brute-force attack to identify exploitable objects."""",
         ""Explanation"": ""This event is generated when activity relating to brute force attacks is detected.""
     ][
   {
     ""sid"": ""4236"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Microsoft Internet Explorer WMI ASDI Extension ActiveX object, which could allow an attacker to execute arbitrary code in the context of the user's browser."""",
     ""Explanation"": ""This rule is looking for exploitation attempts against a web application or service using a vulnerable ActiveX object. This technique is often used to compromise web browsers and can lead to remote code execution.""
   }
 ][
         ""sid"": ""4236"",
         ""Technique ID"": ""T1185"",
         ""Technique name"": ""Exploit Local Application"",
         ""Quotes"": """"Exploit Local Application techniques involve targeting vulnerabilities in local applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer's WMI ASDI Extension ActiveX object by accessing a specific class ID (CLSID). Successful exploitation could allow an attacker to execute arbitrary code."""",
         ""Explanation"": ""This event is generated when activity relating to a Microsoft Internet Explorer WMI ASDI Extension ActiveX object access is detected.""
     ][
   {
     ""sid"": ""4236"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve using publicly accessible remote services to gain access to a network or system. This rule detects an attempt to access a vulnerable ActiveX object in Microsoft Internet Explorer, which can be exploited to execute arbitrary code or gain access to sensitive information."""",
     ""Explanation"": ""The rule detects the access of the Microsoft Internet Explorer WMI ASDI Extension ActiveX object, which could lead to arbitrary code execution.""
   }
 ][
     ""sid"": ""4236"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve accessing a system through a user visiting a website over the normal course of browsing. This rule specifically looks for attempts to access an ActiveX object with the classid F0975AFE-5C7F-11D2-8B74-00104B2AFB41, which is associated with Microsoft Internet Explorer's WMI ASDI Extension. This technique is commonly used in drive-by compromise attacks to exploit vulnerabilities in web browsers."""",
     ""Explanation"": ""This event is generated when activity relating to attempted exploitation of a vulnerability in Microsoft Internet Explorer is detected.""
 ][
   {
     ""sid"": ""4236"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule triggers when there is an attempted malicious access to the Microsoft Internet Explorer WMI ASDI Extension ActiveX object, indicating an attempt to exploit a vulnerability within the ActiveX object."""",
     ""Explanation"": ""The rule is triggered when an attempt is made to access the Microsoft Internet Explorer WMI ASDI Extension ActiveX object, which is a common target for exploitation.""
   }
 ][
   {
     ""sid"": ""4236"",
     ""Technique ID"": ""T1545"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications, such as web browsers and plugins, to execute arbitrary code."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in the Microsoft Internet Explorer WMI ASDI Extension ActiveX object, which is commonly exploited by attackers to execute arbitrary code in the context of the user's browser or application.""
   }
 ][
     {
         ""sid"": ""4236"",
         ""Technique ID"": ""T1127"",
         ""Technique name"": ""Trusted Developer Utilities Proxy Execution"",
         ""Quotes"": """"Trusted Developer Utilities Proxy Execution techniques involve taking advantage of trusted developer utilities to proxy execution of malicious payloads. This rule detects an attempt to access an ActiveX object with the Class ID 'F0975AFE-5C7F-11D2-8B74-00104B2AFB41', which is associated with the Microsoft Internet Explorer WMI ASDI Extension. Attackers may use this ActiveX control to execute arbitrary commands or download malicious payloads."""",
         ""Explanation"": ""This event is generated when the web server detects that an ActiveX component has been loaded.""
     }
 ][
         ""sid"": ""4236"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploiting a Public-Facing Application involves compromising web applications that face the internet. Attackers typically target high-profile applications with large user bases. The rule is designed to detect malicious code that exploits the ActiveX object access vulnerability in Microsoft Internet Explorer using the WMI ASDI Extension, thereby allowing the attacker to execute arbitrary code on the target system."""",
         ""Explanation"": ""This rule detects an exploit targeting a specific ActiveX control. The ActiveX control is a component that allows websites to embed multimedia content and interactive elements within web pages. However, vulnerabilities in ActiveX controls can be exploited to run malicious code on the user's system.""
     ]","['T1110', 'T1189', 'T1110', 'T1190', 'T1185', 'T1133', 'T1189', 'T1189', 'T1545', 'T1127', 'T1110']",['T1047']
22053,"[
   {
     ""Sid"": ""22053"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing covert communication channels to a remote adversary-controlled server over an existing or newly created network connection. This rule detects a variant of the Win.Trojan.Insomnia malware attempting to connect to a command and control server on port 6666, which is a common port associated with IRC, suggesting an attempt to establish a command and control channel."""",
     ""Explanation"": ""IRC Botnet installation via a vulnerability in Microsoft Internet Explorer (MS07-057)""
   }
 ][
     {
         ""sid"": ""22053"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Establish Command and Control"",
         ""Quotes"": """"Establish Command and Control is a post-exploitation adversarial action that involves establishing a covert command and control channel with a victim system to maintain persistent access and control. This rule detects an inbound connection to a known IRC server that's commonly used by malware for command and control purposes. The specific malware, Win.Trojan.Insomnia, is known for its use of IRC for communication, which is why this rule is associated with the T1105 technique."""",
         ""Explanation"": ""This rule is triggered when an IRC connection is detected on a system.""
     }
 ][
   {
     ""sid"": ""22053"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing a covert network connection between an adversary and a compromised system. This rule detects inbound communication from Win.Trojan.Insomnia, a common trojan that uses encryption and domain generation algorithms to communicate with its command and control server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""22053"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing covert communication channels between adversary-controlled infrastructure and compromised systems to maintain persistence and enable remote control. This rule detects inbound communication to a known IRC channel (irc.bhfirc.net) used by the Insomnia Trojan, which establishes a C2 channel using IRC to receive commands and exfiltrate data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""22053"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Remote Command Execution"",
     ""Quotes"": """"Remote Command Execution techniques allow adversaries to execute arbitrary commands on a remote system. In this case, the Insomnia Trojan establishes an IRC C2 channel, enabling remote attackers to execute commands on compromised systems. The ""content:Asdf1|17|0"" field within the rule matches a specific pattern used by the Insomnia Trojan to initiate its C2 communication."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""22053"",
     ""Technique ID"": ""T1494"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve probing a network to discover available hosts and services. This rule detects inbound connections from a known malicious IP address to a specific TCP port range, indicating a potential attempt to scan for vulnerable services."""",
     ""Explanation"": ""Netstat command can be used to reveal information about network services.""
   },
   {
     ""sid"": ""22053"",
     ""Technique ID"": ""T1117"",
     ""Technique Name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve enumerating remote systems and services to gather information about them. The rule detects an attempt to connect to a specific IP address and port range, which could be part of a reconnaissance phase to identify potential targets for exploitation."""",
     ""Explanation"": ""Netstat command can be used to reveal information about network services.""
   }
 ][
   {
     ""sid"": ""22053"",
     ""Technique ID"": ""T1055"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve establishing communication with remote malicious actors to exchange information, receive instructions, obtain additional payloads or updates, or exfiltrate data. This rule detects inbound connections to the 'irc.bhfirc.net' server on ports 6666-7000, which is a known command and control server used by the Win.Trojan.Insomnia malware."""",
     ""Explanation"": ""The Win.Trojan.Insomnia malware connects to irc.bhfirc.net IRC-based command and control (C2) server to receive commands and send exfiltrated data.""
   },
   {
     ""sid"": ""22053"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve moving data from a compromised system to an external location. This rule detects the exfiltration of data to the 'irc.bhfirc.net' server, which is consistent with the behavior of the Win.Trojan.Insomnia malware to exfiltrate stolen data to remote attackers."""",
     ""Explanation"": ""The Win.Trojan.Insomnia malware can exfiltrate data to remote servers.""
   }
 ][
   {
     ""sid"": ""22053"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Create Well-Known Software Proxy"",
     ""Quotes"": """"Create Well-Known Software Proxy techniques involve establishing a proxy for a legitimate software or utility to provide adversaries with access to the victim's system. This rule specifically targets an inbound connection on ports 6666 to 7000, which is often used by Insomnia, a known Trojan, to establish a proxy for remote access and control."",
     ""Explanation"": ""This event is generated when an attempt is being made to exploit specific vulnerabilities of the affected software.""
   }
 ][
   {
     ""sid"": ""22053"",
     ""Technique ID"": ""T1195"",
     ""Technique name"": ""Supply Chain Compromise"",
     ""Quotes"": """"Supply Chain Compromise involves modifying software before its installation or use. This rule detects inbound connections to port 6666 on the IDS sensor, which is commonly used by Insomnia trojan, indicating the possibility of malware infection through a compromised software supply chain."""",
     ""Explanation"": ""This rule is used to detect inbound connections to port 6666 on the IDS sensor, which is commonly used by Insomnia trojan, indicating the possibility of malware infection through a compromised software supply chain.""
   }
 ][
   {
     ""sid"": ""22053"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing communications between an adversary and a compromised system to facilitate remote control, data exfiltration, or other malicious activities. This rule detects inbound connection attempts to a specific port range associated with the Win.Trojan.Insomnia malware, which is known to establish communications with a command and control server after infecting a system."""",
     ""Explanation"": ""This event is generated when malware communication is detected.""
   }
 ][
     {
         ""sid"": ""22053"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Remote Service Execution"",
         ""Quotes"": """"Remote service execution techniques involve using protocols or services to execute commands or code remotely. This rule detects an inbound connection from a compromised host to a known malicious domain, indicating that the malware is attempting to establish a remote connection to its command and control server."""",
         ""Explanation"": ""The rule detects an inbound connection from a compromised host to a known malicious domain.""
     }
 ][
   {
     ""sid"": ""22053"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve interacting with remote hosts, such as web services or other network-based resources, to perform malicious actions or gather information. This rule detects an inbound connection to a remote IRC server from a host infected with the Win.Trojan.Insomnia variant, which is associated with malware that establishes communication channels to remote servers for command and control purposes."""",
     ""Explanation"": ""This rule detects malware that establishes a connection to a remote IRC server after infecting a host.""
   }
 ]","['T1105', 'T1105', 'T1105', 'T1132', 'T1071', 'T1494', 'T1117', 'T1055', 'T1071', 'T1132', 'T1195', 'T1132', 'T1071', 'T1110']",['T1571']
49790,"[
   {
     ""sid"": ""49790"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve using established command and control channels to transfer data from the victim environment to a remote location. This rule detects outbound connections from a compromised host to a known malicious IP address, which is a common method used by malware to exfiltrate sensitive data to a remote server."""",
     ""Explanation"": ""The snort rule is detecting outbound connections from a compromised host to a known malicious IP address as part of an overall command and control activity.""
   },
   {
     ""sid"": ""49790"",
     ""Technique ID"": ""T1027"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve concealing or encoding data to evade detection or analysis. This rule detects an outbound HTTP request containing an obfuscated URL, which is a common method used by malware to evade detection by security systems."""",
     ""Explanation"": ""The HTTP request contains an obfuscated URL, which is a common method used by malware to evade detection.""
   }
 ][
   {
     ""sid"": ""49790"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Remote Command Execution"",
     ""Quotes"": """"Remote Command Execution techniques allow adversaries to execute commands and scripts remotely on targeted systems. This rule detects outbound traffic from a compromised internal host to a known malicious domain, specifically an HTTP request containing a URI for running an executable file ('/entry/exe/runinfo') with 'mac=' data in the query string and a 'User-Agent: wget' header."""",
     ""Explanation"": ""The rule suggests that the infected host is attempting to execute commands or scripts on the remote server.""
   }
 ][
     {
         ""sid"": ""49790"",
         ""Technique ID"": ""T1071"",
         ""Technique Name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration involves transferring data from the target environment to an external system or location, possibly exfiltrating data via HTTP(S) GET or POST requests, or using DNS tunneling."""",
         ""Explanation"": ""This event is generated when malware from the Win.Trojan.Zacinlo family is communicating with a remote server to exfiltrate sensitive data.""
     },
     {
         ""sid"": ""49790"",
         ""Technique ID"": ""T1048"",
         ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve using established command and control channels for data exfiltration, exfiltrating data through direct connections with the attacker or by using third-party services."""",
         ""Explanation"": ""This event is generated when malware from the Win.Trojan.Zacinlo family is communicating with a remote server via HTTP(S) to exfiltrate sensitive data.""
     },
     {
         ""sid"": ""49790"",
         ""Technique ID"": ""T1132"",
         ""Technique Name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve disguising malicious activity by imitating legitimate system components or processes."""",
         ""Explanation"": ""This event is generated when malware from the Win.Trojan.Zacinlo family is attempting to masquerade as legitimate software by using the User-Agent: wget header, which is commonly used by the wget utility.""
     }
 ][
   {
     ""sid"": ""49790"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": ""\""Adversaries may use Valid Accounts to log into a service that accepts remote connections, such as telnet, SSH, and VNC\"""",
     ""Explanation"": ""This rule detects outbound connections to a known malicious domain associated with the Win.Trojan.Zacinlo malware, which often uses remote services to establish communication with its command and control server.""
   },
   {
     ""sid"": ""49790"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": ""\""Adversaries may exfiltrate data over C2 channels that are established using various techniques.\"""",
     ""Explanation"": ""The rule identifies outbound communication to a malicious domain associated with the Win.Trojan.Zacinlo malware, which is known to exfiltrate data over command and control channels.""
   }
 ][
     {
         ""sid"": ""49790"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel involves the transmission of exfiltrated data over a specific covert channel to communicate with an adversary-controlled server. The rule detects a malware (Zacinlo) exfiltration attempt where it tries to send information about the victim machine (e.g., MAC address) to a remote server using an HTTP POST request. The rule specifically looks for requests to a ""/entry/exe/runinfo"" URI with the ""User-Agent: wget"" header and a ""Referer"" header containing ""/entry/""""."",
         ""Explanation"": ""Win.Trojan.Zacinlo outbound connection""
     }
 ][
     ""sid"": ""49790"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. This rule detects outbound connections from internal hosts to an external command and control (C2) server associated with the Zacinlo Trojan, indicating that the Trojan has established communication with its C2 server to receive commands or exfiltrate data."""",
     ""Explanation"": ""Botnet communication is often indistinguishable from legitimate web traffic, making it difficult to detect.  This rule is looking for signs of this type of traffic by looking for known botnet C2 servers, User-Agent information, and other indicators of malicious activity""
 ][
   {
     ""sid"": ""49790"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve exfiltrating data over an existing command and control channel. This rule detects an outbound connection from a compromised host to a remote server controlled by an attacker, with an HTTP URI containing ""/entry/exe/runinfo"" and a User-Agent header of ""wget"". This is a common method used by malware to exfiltrate data to a command and control server."""",
     ""Explanation"": ""This rule is used to detect outbound connections from a compromised host to a remote server controlled by an attacker, with an HTTP URI containing “/entry/exe/runinfo” and a User-Agent header of “wget”.""
   }
 ][
         ""sid"": ""49790"",
         ""Technique ID"": ""T1037"",
         ""Technique name"": ""Install PERSISTENT Malware"",
         ""Quotes"": """"Install PERSISTENT Malware techniques involve installing malware on a system to maintain long-term access. This rule detects outbound connections made by the 'Win.Trojan.Zacinlo' malware, a persistent threat that infects systems and establishes connections to external hosts to upload stolen data or receive instructions from a remote attacker."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""49790"",
         ""Technique ID"": ""T1557"",
         ""Technique name"": ""Adversary-in-the-Middle"",
         ""Quotes"": ""Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as Network Sniffing, Transmitted Data Manipulation, or replay attacks (Exploitation for Credential Access)."",
         ""Explanation"": ""This rule detects a possible attempt to establish an AiTM position by sending a series of HTTP requests to a remote server, which could be used to sniff network traffic or manipulate transmitted data.""
     }
 ][
   {
     ""sid"": ""49790"",
     ""Technique ID"": ""T1567"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": ""\""Exfiltration Over Command and Control Channel techniques involve the transfer of data from compromised systems to an adversary-controlled system over the command and control channel.\"" The rule detects outbound communication from an infected host to a remote server, attempting to send data using a specific URI and HTTP headers, which is indicative of exfiltration over a command and control channel. The rule also identifies the malware as Win.Trojan.Zacinlo, which is known for its data exfiltration capabilities."",
     ""Explanation"": ""The event is generated when an attacker executes a malicious payload that establishes a communication channel to the C2 server using a specific URI and HTTP Headers.""
   }
 ][
     {
         ""sid"": ""49790"",
         ""Technique ID"": ""T1111"",
         ""Technique name"": ""Multi-Factor Authentication Interception"",
         ""Quotes"": """"Multi-Factor Authentication Interception techniques involve intercepting and modifying multi-factor authentication mechanisms to bypass security controls. The rule detects an outbound connection from an infected host to a malicious server, which attempts to use the User-Agent header to mimic a legitimate web browser (wget) and bypass MFA mechanisms."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ]","['T1041', 'T1027', 'T1071', 'T1071', 'T1048', 'T1132', 'T1021', 'T1041', 'T1041', 'T1133', 'T1041', 'T1037', 'T1557', 'T1567', 'T1111']",['T1043']
44564,"[
         ""sid"": ""17964"",
         ""Technique ID"": ""T1071.001"",
         ""Technique name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"Command and Scripting Interpreter techniques allow adversaries to execute commands or scripts on a system to perform various operations, including system reconnaissance, privilege escalation, and malware installation. In this case, PowerShell Empire is used as a post-exploitation agent to execute commands and scripts remotely."""",
         ""Explanation"": ""PowerShell Empire is a post-exploitation agent that allows attackers to remotely execute commands and scripts. It is often used to maintain access to a compromised system and to perform various malicious activities.""
     ],
     [
         ""sid"": ""17964"",
         ""Technique ID"": ""T1566"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or text messages that appear to come from a legitimate source to trick individuals into providing sensitive information or clicking on malicious links. This rule detects a phishing attack that uses a fake PayPal login page to steal user credentials."""",
         ""Explanation"": ""This event is generated when a phishing attack is detected by a rule.""
     ]
 ][
   {
     ""sid"": ""44564"",
     ""Technique ID"": ""T1002"",
     ""Technique Name"": ""OS Command Execution"",
     ""Quotes"": """"OS Command Execution techniques involve executing commands on the operating system to perform tasks, such as retrieving information or modifying system settings. This rule detects an outbound connection associated with a PowerShell Empire variant, which is a remote access trojan commonly used for post-exploitation activities, such as executing commands on the victim machine."""",
     ""Explanation"": ""The rule is triggered when a PowerShell Empire outbound connection is detected. PowerShell Empire is a post-exploitation framework that uses PowerShell to execute commands on a victim machine. This technique is used to execute arbitrary commands on the victim machine, which could allow an attacker to gain control of the system.""
   }
 ][
         ""sid"": ""44564"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"Command and Scripting Interpreter techniques involve using command and script interpreters to execute commands, scripts, or binaries. This rule specifically detects PowerShell activity, which is a common method used by attackers to execute commands on compromised systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     ""sid"": ""44564"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve establishing and maintaining communications with remote C2 servers to receive instructions, exfiltrate data, or receive updates."""",
     ""Explanation"": ""This rule detects outbound communication to a known malicious C2 server, indicating that a compromised system is communicating with a remote C2 server for instructions or data exfiltration.""
 ][
   {
     ""sid"": ""44564"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an OS shell or scripting environment to execute commands or scripts. This rule detects a PowerShell Empire variant outbound connection, which is a post-exploitation framework used by attackers to maintain remote access and execute commands on compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""44564"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Access Tools"",
     ""Quotes"": """"Remote Access Tools techniques involve using remote access software or services to gain access to and control a remote system. This rule detects a PowerShell Empire variant outbound connection, which is a post-exploitation framework that provides remote access capabilities to attackers."""",
     ""Explanation"": """"
   }
 ][
   {
     ""sid"": ""44564"",
     ""Technique ID"": ""T1008"",
     ""Technique Name"": ""Fallback Channels"",
     ""Quotes"": """"Fallback Channels techniques involve establishing or exploiting alternate communication channels in case the primary channel is compromised or inaccessible. The rule detects an outbound connection from the internal network to the external Internet on HTTP ports associated with PowerShell Empire, a post-exploitation tool. This suggests that the attacker is attempting to establish a fallback channel to maintain persistence and control over the compromised system."""",
     ""Explanation"": ""PowerShell Empire is a post-exploitation agent that provides remote access and control over compromised systems. It is often used by attackers to establish persistent access and maintain control over a compromised network.""
   },
   {
     ""sid"": ""44564"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. The rule detects an outbound connection from the internal network to the external Internet on HTTP ports associated with PowerShell Empire, a post-exploitation tool. This suggests that the attacker is attempting to establish a connection to an external command and control server to maintain persistence and control over the compromised system."""",
     ""Explanation"": ""PowerShell Empire is a post-exploitation agent that provides remote access and control over compromised systems. It is often used by attackers to establish persistent access and maintain control over a compromised network.""
   }
 ][
   {
     ""sid"": ""44564"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve the adversary communicating with remote systems to establish and maintain persistent access to the victim environment. This rule detects outbound PowerShell Empire variant connections, which is a common method for establishing remote command and control over a victim host."""",
     ""Explanation"": ""This event is generated when client attempts to connect to a malicious host, typically for the purpose of beaconing to a command and control (C2) server.""
   }
 ][
   {
     ""sid"": ""44564"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Adversaries may communicate with C2 servers to send stolen data, receive instructions, and update malware."""",
     ""Explanation"": ""This rule detects outbound connections to a Command and Control server used by the PowerShell Empire post-exploitation framework, indicating the presence of malware that is actively communicating with its C2 server.""
   }
 ][
   {
     ""sid"": ""44564"",
     ""Technique ID"": ""T1001"",
     ""Technique Name"": ""Remote Access Software"",
     ""Quotes"": """"Remote Access Software techniques utilize legitimate remote access tools, such as TeamViewer, AnyDesk, and Remote Desktop Protocol (RDP), to establish a remote connection to a victim system. This rule detects outbound traffic from a compromised host to a remote address associated with PowerShell Empire, an open-source post-exploitation framework that uses a variety of techniques, including remote access, to maintain persistence and control over victim systems."""",
     ""Explanation"": ""This event is generated when activity relating to a potential PowerShell Empire C2 server is detected.""
   },
   {
     ""sid"": ""44564"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Interactive Process Injection"",
     ""Quotes"": """"Interactive Process Injection involves injecting malicious code into a legitimate running process on the victim system to evade detection and gain execution. PowerShell Empire is known for using interactive process injection techniques to inject its payload into legitimate processes, such as explorer.exe, to maintain persistence and avoid detection."""",
     ""Explanation"": ""This event is generated when activity relating to a potential PowerShell Empire C2 server is detected.""
   },
   {
     ""sid"": ""44564"",
     ""Technique ID"": ""T1036"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques attempt to disguise malicious activity by mimicking legitimate behavior or traffic to evade detection. PowerShell Empire commonly uses techniques like port hopping and encryption to evade detection and appear as legitimate traffic."",
     ""Explanation"": ""This event is generated when activity relating to a potential PowerShell Empire C2 server is detected.""
   }
 ][
         ""sid"": ""44564"",
         ""Technique ID"": ""T1080"",
         ""Technique Name"": ""Taint Shared Content"",
         ""Quotes"": """"DELIVERY: PowerShell Empire variants often create an HTTP listener on a component system for staged PowerShell commands to call back to. The rule triggers when PowerShell Empire tries to communicate outbound over HTTP, using a unique session cookie as part of the HTTP request to identify the correct listener. This behavior matches that of Taint Shared Content, where an adversary adds malicious content to shared storage locations, such as network drives, for other systems to consume."""",
         ""Explanation"": ""PowerShell Empire variants often create an HTTP listener on a component system for staged PowerShell commands to call back to.""
     ][
     {
         ""sid"": ""44564"",
         ""Technique ID"": ""T1001"",
         ""Technique Name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell to maintain access to a system, especially after compromising an application or website. This rule detects communication with a PowerShell Empire web shell, which is often used by attackers to establish a persistent backdoor to a compromised system and execute commands remotely."""",
         ""Explanation"": ""The rule looks for ""PowerShell Empire"" activity or signatures.""
     }
 ]","['T1071.001', 'T1566', 'T1002', 'T1059', 'T1059', 'T1071', 'T1021', 'T1008', 'T1133', 'T1071', 'T1071', 'T1001', 'T1105', 'T1036', 'T1080', 'T1001']",['T1059']
30780,"[
   {
     ""sid"": ""30780"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve probing a network to identify open ports, services, and connected hosts. This rule detects a possible Heartbleed vulnerability, which is a technique commonly used by attackers to obtain sensitive information from OpenSSL servers by exploiting a vulnerability in the TLS heartbeat extension. This type of vulnerability is a form of network service scanning."""",
     ""Explanation"": ""This rule detects a TLSv1 large heartbeat response, which is a common pattern used in Heartbleed attacks.""
   }
 ][
         ""sid"": ""30780"",
         ""Technique ID"": ""T1490"",
         ""Technique name"": ""Heartbleed Exploit"",
         ""Quotes"": """"The Heartbleed Exploit technique involves exploiting a vulnerability in the OpenSSL library that allows attackers to read arbitrary memory from a server's memory space. This rule detects attempts to exploit this vulnerability by identifying large heartbeat responses that are characteristic of Heartbleed attacks."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""30780"",
         ""Technique ID"": ""T1218"",
         ""Technique name"": ""OS Credential Dumping"",
         ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials from operating system memory or persistent storage in order to gain access to privileged accounts."""",
         ""Explanation"": ""This event is generated when an attempt is made to dump credentials from the operating system.""
     }
 ][
   {
     ""sid"": ""30780"",
     ""Technique ID"": ""T1212"",
     ""Technique name"": ""Phishing: Spearphishing Attachment"",
     ""Quotes"": """""""""",
     ""Explanation"": ""Spear phishing involves sending emails to targeted individuals to trick them into revealing sensitive information or clicking malicious attachments or links.""
   }
 ][
     {
         ""sid"": ""30780"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Reconnaissance"",
         ""Quotes"": """"Network Reconnaissance techniques focus on gathering information about a network to identify vulnerabilities that can be exploited. This rule detects a large heartbeat response from the OpenSSL TLSv1 protocol, which is indicative of the Heartbleed vulnerability (CVE-2014-0160). Attackers can exploit this vulnerability to retrieve sensitive information from a victim's memory."""",
         ""Explanation"": ""This event is generated when a network reconnaissance scan attempt, Heartbleed vulnerability (CVE-2014-0160).""
     }
 ][
   {
     ""sid"": ""30780"",
     ""Technique ID"": ""T1212"",
     ""Technique Name"": ""Exploitation for Credential Access"",
     ""Quotes"": """"Exploitation for Credential Access techniques involve exploiting a software vulnerability in an attempt to collect credentials. The OpenSSL Heartbleed vulnerability allowed attackers to retrieve information from a server's memory, including sensitive information such as private keys and passwords, which could be used to compromise the server or gain access to other systems on the network."""",
     ""Explanation"": ""The OpenSSL Heartbleed vulnerability allowed attackers to retrieve arbitrary data from affected servers' memory, including sensitive information such as private keys and passwords. This rule detects attempts to exploit this vulnerability by sending a specially crafted TLS heartbeat request.""
   },
   {
     ""sid"": ""30780"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The OpenSSL Heartbleed vulnerability affected a widely used encryption library, making it a popular target for attackers seeking to compromise vulnerable servers."""",
     ""Explanation"": ""The OpenSSL Heartbleed vulnerability affected a widely used encryption library, making it a popular target for attackers seeking to compromise vulnerable servers. This rule detects attempts to exploit this vulnerability by sending a specially crafted TLS heartbeat request.""
   },
   {
     ""sid"": ""30780"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques involve exploiting vulnerabilities in remote services to gain unauthorized access to internal systems once inside of a network. The OpenSSL Heartbleed vulnerability could be exploited remotely, allowing attackers to compromise vulnerable servers without requiring physical access or local network privileges."""",
     ""Explanation"": ""The OpenSSL Heartbleed vulnerability could be exploited remotely, allowing attackers to compromise vulnerable servers without requiring physical access or local network privileges. This rule detects attempts to exploit this vulnerability by sending a specially crafted TLS heartbeat request.""
   }
 ][
   {
     ""sid"": ""30780"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects the use of the Heartbleed vulnerability, targeting SSL servers that are vulnerable to the Heartbleed attack. The Heartbleed vulnerability is a common method exploited by attackers to steal confidential information from targeted servers."""",
     ""Explanation"": ""This event is generated when Heartbleed attack attempt is detected.""
   }
 ][
   {
     ""sid"": ""30780"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit the Heartbleed vulnerability (CVE-2014-0160) in OpenSSL, which allows attackers to steal sensitive information from web servers and other network devices."""",
     ""Explanation"": ""The rule detects an attempt to exploit the Heartbleed vulnerability in OpenSSL by sending a specially crafted TLS heartbeat request.""
   }
 ][
     {
         ""sid"": ""30780"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted SSL Heartbleed vulnerability exploit, which is a type of attack that targets a weakness in the OpenSSL library to steal sensitive information from servers. This technique is relevant because attackers may use this vulnerability to gain access to sensitive data or execute arbitrary code on the target system."""",
         ""Explanation"": ""The Heartbleed vulnerability is a serious flaw in the OpenSSL cryptographic library that allows attackers to steal sensitive information from servers. This rule detects attempts to exploit this vulnerability, which could lead to the compromise of sensitive data such as passwords, encryption keys, and other sensitive information.""
     }
 ][
         ""sid"": ""30780"",
         ""Technique ID"": ""T1222"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve identifying and targeting vulnerabilities in services or applications exposed to the public internet. This event relates to the 'Heartbleed' vulnerability (CVE-2014-0160), which is a serious vulnerability in the OpenSSL cryptographic library that allows attackers to steal sensitive information from the memory of vulnerable systems."""",
         ""Explanation"": ""This event is related to an attempted exploitation of the Heartbleed vulnerability, it looks for the specific byte sequence in the TLS heartbeat response that indicates a vulnerable server.""
     ][
   {
     ""sid"": ""30780"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Heartbleed is a vulnerability in the OpenSSL cryptographic library that allows attackers to steal sensitive information from servers and clients. The rule detects an attempt to exploit the Heartbleed vulnerability by sending a large heartbeat request to a TLS server.\"""",
     ""Explanation"": ""The rule detects an attempt to exploit the Heartbleed vulnerability in OpenSSL by sending a large heartbeat request to a TLS server.""
   }
 ]","['T1040', 'T1490', 'T1218', 'T1212', 'T1046', 'T1212', 'T1190', 'T1210', 'T1190', 'T1210', 'T1190', 'T1222', 'T1190']",['T1123']
6365,"[
         ""sid"": ""6365"",
         ""Technique ID"": ""T1548"",
         ""Technique name"": ""Rootkit"",
         ""Quotes"": """"Rootkit techniques involve using or installing software to hide malicious processes or files on a system, thereby establishing persistence and evading detection. This rule detects activity related to the Sony rootkit, which is a type of malware that can hide its presence and modify the system to maintain persistence."""",
         ""Explanation"": ""The rule looks for specific patterns in network traffic that are indicative of the Sony rootkit, such as the presence of the 'SecureNet' and 'Xtra' strings, as well as the User-Agent header containing 'SecureNet Xtra' and the Host header containing 'sonymusic.com'.""
     ][
   {
     ""sid"": ""6365"",
     ""Technique ID"": ""T1116"",
     ""Technique Name"": ""Boot or Logon Autostart Execution"",
     ""Quotes"": """"Boot or Logon Autostart Execution techniques involve configuring the operating system to automatically execute commands or scripts when the system boots or a user logs on."""",
     ""Explanation"": ""Rootkits can be installed to automatically execute when the system boots up or a user logs on, ensuring persistence on the system.""
   },
   {
     ""sid"": ""6365"",
     ""Technique ID"": ""T1566"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent messages to trick users into clicking links or opening attachments that install malware or steal sensitive information."""",
     ""Explanation"": ""The rule detects malicious traffic originating from the victim's network, indicating a possible phishing attack or other malicious activity.""
   }
 ][
   {
     ""sid"": ""6365"",
     ""Technique ID"": ""T1554"",
     ""Technique Name"": ""Compromise Client Software Binary"",
     ""Quotes"": """"Compromise Client Software Binary techniques involve modifying or replacing legitimate client software binaries with malicious versions to establish persistent access to systems. This rule detects an infection of the Sony rootkit, which infects client software to gain a foothold on the system. The rule looks for specific HTTP headers and content patterns that are associated with the rootkit's communications."""",
     ""Explanation"": ""The rule suggests a potential compromise of client software by malware.""
   }
 ][
   {
     ""sid"": ""6365"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve the adversary disguising a tool, file, or network activity to appear as another valid entity. This rule detects the Sony rootkit, which is a malicious software that is designed to hide its presence on a system by disguising itself as legitimate software. The rule uses a combination of HTTP headers and packet content checks to identify the presence of the rootkit."""",
     ""Explanation"": ""The rule is designed to detect the Sony rootkit, which is a malicious software that is designed to hide its presence on a system by disguising itself as legitimate software.""
   }
 ][
         ""sid"": ""6365"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Deobfuscate/Decode Files or Information"",
         ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve using methods to convert encoded or obfuscated files or information back to their original form. The rule detects a specific pattern associated with the Sony rootkit, which is known to employ obfuscation techniques to evade detection and hide its malicious payload."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""6365"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Exploitation for Privilege Escalation"",
     ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting software vulnerabilities to escalate privileges and gain unauthorized access to higher-level system resources and capabilities. This rule is designed to detect the presence of a rootkit associated with the Sony BMG copy protection scandal, which was known to exploit vulnerabilities in the Windows operating system to escalate privileges and gain control of affected systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""6365"",
     ""Technique ID"": ""T1566"",
     ""Technique Name"": ""Modify Registry"",
     ""Quotes"": """"Modify Registry techniques involve modifying the Windows Registry to change system settings or configurations. The rule detects the presence of the Sony rootkit, which installs a malicious driver and modifies the registry to hide its presence and establish persistence on the compromised system."""",
     ""Explanation"": ""This event is generated when malware attempts to modify registry settings on the system.""
   }
 ][
         ""sid"": ""6365"",
         ""Technique ID"": ""T1518"",
         ""Technique name"": ""Software Discovery"",
         ""Quotes"": """"Software Discovery techniques involve collecting information about software and software versions that are installed on a system or in a cloud environment. The rule triggers on the presence of a header containing ""SecureNet Xtra"", which is a known software used by the Sony rootkit. This indicates an attempt by the rootkit to identify and gather information about the installed software on the system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""6365"",
         ""Technique ID"": ""T1064"",
         ""Technique Name"": ""Rootkit"",
         ""Quotes"": """"Rootkit is a collection of software tools and techniques that attackers use to gain privileged access and maintain persistence on a compromised system. This rule detects the presence of a Sony rootkit that attempts to manipulate the user-agent string in HTTP requests, which is a common method used by rootkits to hide their presence on a system."""",
         ""Explanation"": ""Rootkits are malicious software designed to obscure its presence on an infected system and provide the attacker with privileged access and control over the system.""
     }
 ][
     {
         ""sid"": ""6365"",
         ""Technique ID"": ""T1552"",
         ""Technique Name"": ""Unsecured Credentials"",
         ""Quotes"": """"Unsecured Credentials techniques involve obtaining credentials from unsecured sources, such as plaintext configuration files, network traffic, or poorly protected scripts. This rule detects the presence of Sony rootkit runtime, which is known to target vulnerabilities in Sony music systems to obtain plaintext credentials and sensitive information."""",
         ""Explanation"": ""This rule detects the use of a malicious software package known as the 'Sony rootkit runtime'.""
     }
 ][
   {
     ""sid"": ""6365"",
     ""Technique ID"": ""T1036"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques are used by adversaries to mask their identities, system information, and activities to avoid detection. This rule detects the presence of the Sony rootkit, which is known for using a variety of techniques to evade detection, such as modifying system files and processes to hide its presence."""",
     ""Explanation"": ""This event is generated when the Sony rootkit has been detected in the environment.""
   }
 ]","['T1548', 'T1116', 'T1566', 'T1554', 'T1068', 'T1059', 'T1068', 'T1566', 'T1518', 'T1064', 'T1552', 'T1036']",['T1014']
47845,"[
     {
         ""sid"": ""47845"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"Command and Scripting Interpreter techniques involve the execution of system commands, scripts, or compiled code, such as PowerShell, WMI, or batch files. This rule detects the use of 'msiexec', a Windows command that allows for the installation, removal, and repair of MSI packages, which is commonly used by malware to execute malicious scripts."""",
         ""Explanation"": ""This event is generated when malware tries to download a variant of DDECmdExec.""
     },
     {
         ""sid"": ""47845"",
         ""Technique ID"": ""T1106"",
         ""Technique name"": ""Execution Through API"",
         ""Quotes"": """"Execution Through API techniques involve leveraging Application Programming Interfaces (APIs) to execute commands, scripts, or compiled code. This rule detects the use of 'CreateProcess' Windows API, which allows for the creation of new processes, which could be used by malware to execute malicious code or load additional payloads."""",
         ""Explanation"": ""This event is generated when malware tries to download a variant of DDECmdExec.""
     },
     {
         ""sid"": ""47845"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""User Execution"",
         ""Quotes"": """"User Execution techniques involve tricking or coercing users into executing malicious programs or scripts through social engineering, phishing attacks, or other methods. This rule detects the use of 'rundll32', a Windows utility that can be exploited to load and execute DLL files, which could be used by malware to execute malicious code in the context of the user."""",
         ""Explanation"": ""This event is generated when malware tries to download a variant of DDECmdExec.""
     }
 ][
   {
     ""sid"": ""47845"",
     ""Technique ID"": ""T1140"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising malicious activities or data to appear legitimate or benign. This rule detects the presence of malware that uses the 'msiexec' command to download and execute malicious payloads. Attackers often use legitimate tools and processes to disguise their malicious activities, making them more difficult to detect."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""47845"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Injection"",
         ""Quotes"": """"Injection is a technique that introduces malicious code into a system by exploiting a vulnerability in software. The rule detects an attempt to download a malicious payload using the 'msiexec' command, which can be used to install software or execute arbitrary code on the target system."""",
         ""Explanation"": ""MSI (Microsoft Software Installer) is a tool used to install and configure software on Microsoft Windows. This rule detects an attempt to execute the 'msiexec' command with suspicious arguments, which may be indicative of malicious activity.""
     ][
         ""sid"": ""47845"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects the downloading of a malicious variant of Win.Downloader.DDECmdExec, a malware family known to exploit vulnerabilities in Microsoft's Dynamic Data Exchange (DDE) protocol, which is commonly used in Microsoft Office applications."""",
         ""Explanation"": ""This rule detects the download of a DDE command execution native Windows executable Variant.""
     ][
     {
         ""sid"": ""47845"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised environment. The rule detects the use of the 'msiexec' command with suspicious arguments that attempt to download and execute a file, which is a common method used by attackers to transfer malicious tools or payloads."""",
         ""Explanation"": ""This event is related to malicious downloads, specifically, it detects variant download of Win.Downloader.DDECmdExec by a malware.""
     },
     {
         ""sid"": ""47845"",
         ""Technique ID"": ""T1200"",
         ""Technique name"": ""Hardware Additions"",
         ""Quotes"": """"Hardware Additions techniques involve introducing computer accessories, networking hardware, or other computing devices into a system or network. The rule detects the use of the 'msiexec' command with suspicious arguments that attempt to download and execute a file, which could involve the use of removable hardware or other devices to transfer the malicious file."""",
         ""Explanation"": ""This event is related to malicious downloads, specifically, it detects variant download of Win.Downloader.DDECmdExec by a malware. Attackers may use removable hardware devices to transfer malicious files.""
     }
 ][
 ""sid"": ""47845"",
 ""Technique ID"": ""T1189"",
 ""Technique name"": ""Malicious File Transfer over SMTP"",
 ""Quotes"":   """"Malicious File Transfer techniques encompass the delivery of malicious files over email (SMTP) to execute code or install malicious software on target systems. This rule detects an SMTP payload transfer in which an executable file is disguised as an 'msiexec' process and encoded with hexadecimal values to evade detection, which is a common method attackers use to bypass email security filters."""",
 ""Explanation"": ""Email-based VBA/macro download is a technique used by attackers to infect systems with malware. The email attachment is a malicious VBA/macro-laced document. When a user opens and enables the embedded macros, the malicious payload is downloaded and executed.""[
   {
     ""sid"": ""47845"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an OS shell or scripting environment to execute commands or scripts that can result in the execution of additional tools or system commands. This rule detects the use of msiexec to download and execute a variant of the Win.Downloader.DDECmdExec malware, which is commonly used by attackers to execute arbitrary commands and download additional malware."""",
     ""Explanation"": ""This rule is triggered when the string 'msiexec' is detected in network traffic, which is a common technique used by malware to download and execute malicious code.""
   }
 ][
         ""sid"": ""47845"",
         ""Technique ID"": ""T1140"",
         ""Technique name"": ""Application Execution"",
         ""Quotes"": """"Application Execution techniques involve executing malicious code in a non-standard fashion to evade detection by traditional defenses. This rule indicates the attempted execution of msiexec, a legitimate Windows utility, using a command line that is encoded in a way to bypass standard detection mechanisms."""",
         ""Explanation"": ""The rule is triggered when a specific file data pattern is detected, which is associated with malicious activity. In this case, the pattern matches the execution of msiexec, which is used to install and execute software, with additional command-line parameters that are indicative of malicious behavior.""
     ][
     {
         ""sid"": ""47845"",
         ""Technique ID"": ""T1613"",
         ""Technique name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve searching for interesting files and directories on a victim system, both on local drives and remote shares. This rule detects an attempt to execute the 'msiexec' command with specific arguments, which can be used to download and execute malicious files. Discovering the existence of specific files or directories can help adversaries identify potential targets for exploitation."""",
         ""Explanation"": ""The rule detects an attempt to download and execute a malicious file using the 'msiexec' command.""
     },
     {
         ""sid"": ""47845"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools onto a victim system over common network protocols. This rule detects an attempt to download a malicious file using the 'msiexec' command, which is a common method used by attackers to transfer malicious tools onto victim systems for further exploitation."""",
         ""Explanation"": ""This rule detects an attempt to download a malicious file using the 'msiexec' command.""
     },
     {
         ""sid"": ""47845"",
         ""Technique ID"": ""T1027"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or encrypting files or information to evade detection. This rule detects an attempt to execute the 'msiexec' command with specific arguments that appear to be obfuscated, which could be an attempt to evade detection by security controls."""",
         ""Explanation"": ""The rule detects an attempt to execute the 'msiexec' command with specific arguments that appear to be obfuscated.""
     }
 ][
   {
     ""sid"": ""47845"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve adversaries attempting to conceal their presence or activity by deleting files, clearing logs, stopping services, or otherwise removing evidence of their actions. This rule detects the execution of the 'msiexec.exe' command-line utility with suspicious arguments that attempt to remove files or directories related to the host's security software (i.e., ""msseces.exe"", ""mssecsv.exe"", ""msmpeng.exe""), which is a common tactic used by malware to disable security mechanisms."""",
     ""Explanation"": ""This rule is triggered when the malware executes the 'msiexec.exe' command with suspicious arguments that attempt to remove files or directories related to the host's security software.""
   }
 ][
   {
     ""sid"": ""47845"",
     ""Technique ID"": ""T1166"",
     ""Technique name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve removing or disabling indicators of compromise to evade detection and remediation efforts. This rule specifically checks for the presence of the 'msiexec' command with suspicious arguments, which is a common method used by attackers to execute malicious code and download payloads without triggering antivirus alerts."""",
     ""Explanation"": ""The rule attempts to exploit the ""macro recorder"" function of MS Office programs (e.g. Word, Excel) to execute malicious code in the background.""
   },
   {
     ""sid"": ""47845"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising malicious activity to appear legitimate or benign, making it harder to detect and respond to. This rule detects attempts to download and execute malicious payloads using the 'msiexec' command, which is a legitimate Windows utility often used for installing software. By blending in with legitimate system processes, attackers can evade detection and establish a foothold on the system."""",
     ""Explanation"": ""The rule attempts to download and execute a malicious payload using the ""Application Launcher"" in macOS.""
   }
 ]","['T1105', 'T1106', 'T1204', 'T1140', 'T1105', 'T1190', 'T1105', 'T1200', 'T1189', 'T1105', 'T1140', 'T1613', 'T1105', 'T1027', 'T1105', 'T1166', 'T1189']",['T1559']
25907,"[
   {
     ""sid"": ""25907"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": [
       """"Brute force techniques involve repeatedly trying different combinations of usernames and passwords to gain unauthorized access to a system or service."""",
       """"The rule detects an attempt to brute-force login to phpMyAdmin by sending multiple requests with different usernames and passwords, which is a common method used by attackers to gain unauthorized access to web applications.""
     ],
     ""Explanation"": ""This event is generated when PHPMyAdmin brute force login attempt detected.""
   }
 ][
     ""sid"": ""25907"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force attacks involve repeatedly submitting different combinations of usernames and passwords to gain unauthorized access to a system or account. This rule specifically detects a brute force attack against the PHPMyAdmin login page, where the attacker is attempting to guess the credentials of the root user."""",
     ""Explanation"": ""The rule is looking for a pattern matching a POST request to PHPMyAdmin with the user-agent string 'User-Agent: User-Agent: Mozilla/4.0' and a URI containing 'lang=en&server=1&pma_username=root'. This indicates a brute-force attempt to guess the password of the 'root' user.""
 ][
     ""sid"": ""25907"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques involve using automated tools to repeatedly try different values for a password until the correct one is found. This rule detects an attempt to brute-force login to a PHPMyAdmin instance by trying different passwords for the 'root' user."""",
     ""Explanation"": ""This rule is triggered when an attacker attempts to brute-force the login credentials of a user account.""
 ][
   {
     ""sid"": ""300543"",
     ""Technique ID"": ""T1069"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": ""\""User Execution involves convincing a user to carry out some action on behalf of an adversary that may lead to an adverse outcome for the victim."",
     ""Explanation"": ""This event is generated when an attacker attempts to gain access to a system by brute-forcing a login on the PHPMyAdmin web application.""
   }
 ][
   {
     ""sid"": ""25907"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques involve attempting to gain access to a system, service, or account by repeatedly trying different combinations of usernames and passwords, often using automated tools. The rule detects brute force login attempts to the phpMyAdmin web application by monitoring for repeated login attempts with the 'root' username and matching User-Agent header. This is a common method used by attackers to guess credentials and gain unauthorized access to web applications."""",
     ""Explanation"": ""This event is generated when a user attempts to log in to a web application using a brute-force attack.""
   }
 ][
   {
     ""sid"": ""25907"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve using automated tools to repeatedly attempt logins to a system or application using a variety of usernames and passwords. This rule detects brute force login attempts against the phpMyAdmin web application, which is a common target for this type of attack."""",
     ""Explanation"": ""This event is generated when activity relating to brute force is detected.""
   }
 ][
     ""sid"": ""25907"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve repeatedly trying different combinations of usernames and passwords to gain access to a system, service, or account. The rule detects brute force login attempts targeting PHPMyAdmin, a popular web-based database management tool, by monitoring for repeated HTTP requests with 'User-Agent: User-Agent: Mozilla/4.0' and 'pma_username=root' in the URI."""",
     ""Explanation"": ""The rule is looking for brute force attempts against PHPMyAdmin.""
 ][
         ""sid"": ""25907"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute force techniques involve repeatedly submitting different combinations of usernames and passwords to gain unauthorized access to a system or account. This rule specifically targets brute force login attempts against the phpMyAdmin web application by monitoring for excessive failed login attempts with a suspicious 'User-Agent' header."""",
         ""Explanation"": ""This rule is designed to detect brute force login attempts towards PHPmyadmin, which is a web application used for managing MySQL databases.""
     ][
         ""sid"": ""25907"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute force techniques involve repeatedly attempting to guess valid credentials or other sensitive information through trial and error using automated mechanisms. This rule specifically detects brute force attacks against the phpMyAdmin login page, where attackers attempt to guess the 'root' username and password combinations."""",
         ""Explanation"": ""This rule is related to brute force attacks against the phpMyAdmin login page.""
     ][
   {
     ""sid"": ""25907"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve the use of trial-and-error to guess login credentials or encryption keys through repeated attempts. This rule detects a brute force attack against a PHPMyAdmin login page, where an adversary is attempting to guess the password for the 'root' user."""",
     ""Explanation"": ""This rule detects brute force attacks against a web application by monitoring for a high volume of failed login attempts within a certain time frame.""
   }
 ][
   {
     ""sid"": ""25907"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques involve repeatedly attempting to guess or gain access through trial and error usually through repeated authentication attempts. This rule specifically detects brute force attempts against PHPmyadmin using the user-agent 'User-Agent: Mozilla/4.0'. Attackers commonly use this technique to gain unauthorized access to web applications by repeatedly trying different combinations of usernames and passwords."""",
     ""Explanation"": ""This rule detects brute force attempts against PHPmyadmin web application by monitoring for multiple failed login attempts with the same user-agent.""
   }
 ]","['T1110', 'T1110', 'T1110', 'T1069', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110']",['T1110']
37963,"[
   {
     ""sid"": ""37963"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring a tool to (ingress) a target system in order to facilitate follow-on actions"""",
     ""Explanation"": ""The rule triggers upon the detection of an HTTP POST request containing a URL that ends with a file extensions commonly associated with executables or scripts (.exe, .bat, .vbs, .js, .ps1, etc.). This behavior is indicative of an attempt to download and execute malicious code on the target system.""
   }
 ][
   {
     ""sid"": ""37963"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a malicious file download attempt, typically used by adversaries to gain access to sensitive data or infect systems with malware."""",
     ""Explanation"": ""HTTP GET request with URL path containing the URL-encoded string 'poc'.""
   }
 ][
   {
     ""sid"": ""37963"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or capabilities from an external system to the target network, often for use in follow-on actions. This rule detects an attempt to download malicious files from a remote server, which could potentially be used to establish persistence or execute arbitrary code."""",
     ""Explanation"": ""This rule identifies malicious file download attempts by detecting the presence of a specific Uniform Resource Identifier (URI) in HTTP traffic.""
   }
 ][
         ""sid"": ""37963"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve moving data from a system to an external location. This rule detects an attempt to download malicious files from an external server, which is a common method attackers use to exfiltrate data from compromised systems."""",
         ""Explanation"": ""This event is generated when an attempt to download malicious files from an external server is detected.""
     ][
         ""sid"": ""37963"",
         ""Technique ID"": ""T1483"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve stealing data from a victim environment to exfiltrate it for external access. This rule detects an attempt to download a potentially malicious file with a specific pattern in its name. Attackers often use specific patterns or named files to exfiltrate sensitive data from compromised systems."""",
         ""Explanation"": ""This event is generated when an attempt is made to download malicious files.""
     ][
   {
     ""sid"": ""37963"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging legitimate services hosted externally to facilitate communication and control of systems within a network. This rule detects an attempt to download a malicious file from an external web server, which is a common method attackers use to establish a foothold on a target system by exploiting vulnerabilities in web applications or by tricking users into downloading malware."""",
     ""Explanation"": ""This rule is looking for a malicious file download attempt. It is looking for a file that has the extension .html, .htm, .js, .asa, .php, .pdf, .ppt, .pps, .doc, .dot, .xls, .xlt, .bmp, .jpg, .jpeg, .gif, .png, .tif, .tiff, .lnk, .exe, .dll, .pif, .scr, .cpl, .inf, .chm, .hlp, or .reg.""
   }
 ][
   {
     ""sid"": ""37963"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Download File"",
     ""Quotes"": """"Download File techniques involve retrieving files from a remote system and represent the initial stage of many攻擊s. This rule detects an attempt to download a potentially malicious file based on the presence of a specific sequence in the HTTP URI, which is commonly used to download malicious executables."""",
     ""Explanation"": ""This rule is designed to detect malicious file download attempts by matching specific patterns in the HTTP URI. Successful matches indicate that an attempt is being made to download a potentially malicious file, prompting the rule to issue an alert.""
   }
 ][
     ""sid"": ""37963"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or text messages that appear to come from a legitimate source to trick recipients into providing sensitive information or clicking on malicious links. This rule detects an attempt to download a malicious file by matching the URI pattern '/poc(_d*|\\5f[a-z]+)\\.((html|xml|jsl|x(ls|ml)|java)|asp|pdf|flv|swf|doc|tt(f|ml)|\x62\x6d\x70|\x6d(\x703|\x33\x75))/' in the HTTP traffic. This pattern is commonly used in phishing emails to disguise the actual file extension and trick users into downloading and executing malicious files."""",
     ""Explanation"": ""This rule detects a malicious file download attempt, which is a common tactic used in phishing attacks.""
 ][
   {
     ""sid"": ""37963"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""BITS Jobs"",
     ""Quotes"": """"BITS Jobs is a technique that involves using the Background Intelligent Transfer Service (BITS) to transfer files or execute code on a target system. This rule detects malicious file download attempts using the 'BITS Admin Tool', a common method used by adversaries to transfer files through BITS."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""37963"",
         ""Technique ID"": ""T1485"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"In 2019, threat actors started to use data encryption capabilities in more ransomware and other types of malware. By doing this, adversaries are able to customize the ransomware they use to target specific organizations and increase their likelihood of receiving a ransom payment."""",
         ""Explanation"": ""The rule triggers an alert when it detects an attempt to download a malicious file. The file could be encrypted, which makes it harder to detect and analyze.""
     ][
   {
     ""sid"": ""37963"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer involves transferring tools, software, or capabilities used for persistence or lateral movement from an external source. The rule detects an attempt to download a suspicious file matching a specific pattern (e.g., 'some_file.html', 'some_file.xls', etc.) over HTTP, which could be an attacker attempting to download a malicious binary for execution."""",
     ""Explanation"": ""This event is generated when an egress (outbound) connection is made to an anomalous IP address or domain that is commonly associated with spam, attacks, or other malicious activity.""
   }
 ]","['T1105', 'T1190', 'T1105', 'T1105', 'T1483', 'T1133', 'T1105', 'T1498', 'T1105', 'T1485', 'T1105']",['T1192']
45174,"[
     {
         ""sid"": ""45174"",
         ""Technique ID"": ""T1122"",
         ""Technique name"": ""Data Destruction"",
         ""Quotes"": """"Data Destruction techniques involve destroying data or files on specific systems or in large numbers to disrupt operations and degrade system availability. This rule detects an attempt by a browser, presumably Firefox, to delete a file in the download directory by sending a specially crafted HTML link that, when clicked, would execute the deletion."""",
         ""Explanation"": ""The rule is designed to detect attempts to delete files from the download directory, which could be an indication of malicious activity.""
     }
 ][
   {
     ""sid"": ""45174"",
     ""Technique ID"": ""T1122"",
     ""Technique Name"": ""Browser Extensions"",
     ""Quotes"": """"Browser Extensions are malicious extensions installed into web browsers that allow adversaries to modify browser behavior and access sensitive data. This rule detects an attempt to exploit a vulnerability in the Mozilla Firefox browser to delete files from the user's download directory, which could be used to remove evidence of malicious activity or to gain access to sensitive files."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in the Mozilla Firefox browser to delete files from the user's download directory, which could be used to remove evidence of malicious activity or to gain access to sensitive files.""
   }
 ][
   {
     ""sid"": ""45174"",
     ""Technique ID"": ""T1490"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects malicious code within a downloaded file attempting to delete files in the Mozilla download directory, which could be used to escalate privileges or compromise the system."""",
     ""Explanation"": ""The rule triggers when a file download attempt matches the specified pattern, indicating a potential attempt to exploit a vulnerability in the browser's file handling mechanism.""
   }
 ][
   {
     ""sid"": ""45174"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites that appear to be legitimate in order to trick users into providing sensitive information, such as passwords or financial data. This rule detects an attempt to download a malicious file from a URL embedded in an email that is disguised as a link to a legitimate website. This is a common phishing tactic used to deliver malware or steal credentials."""",
     ""Explanation"": ""This event is generated when activity relating to phishing is detected.""
   }
 ][
         ""sid"": ""45174"",
         ""Technique ID"": ""T1070"",
         ""Technique name"": ""Indicator Removal"",
         ""Quotes"": """"Indicator Removal techniques involve deleting or modifying artifacts generated within systems to remove evidence of presence or hinder defenses. The rule detects an attempt to delete a file in the Mozilla download directory, which may be an attempt to remove evidence of malicious activity."""",
         ""Explanation"": ""This event is looking for an attack that is attempting to delete a downloaded file. This behavior might remove evidence of previous or ongoing malicious activity.""
 ][
         ""sid"": ""45174"",
         ""Technique ID"": ""T1187"",
         ""Technique name"": ""Forced Authentication"",
         ""Quotes"": """"Forced Authentication techniques involve compelling a user to provide authentication information through an enforced mechanism, such as a fake login page. This rule detects an attempt by a malicious actor to use a phishing email to force a user to download a file and reveal their Mozilla browser download directory, which could then be used to steal sensitive information or gain access to the user's system."""",
         ""Explanation"": ""This event is generated when an attempted user compromise is detected.""
     ][
   {
     ""sid"": ""45174"",
     ""Technique ID"": ""T1563"",
     ""Technique Name"": ""File Deletion"",
     ""Quotes"": """"File Deletion techniques involve deleting critical files or folders on a target system. This rule detects an attempt by a web browser (Mozilla Firefox) to download a malicious payload and delete files from the download directory. File deletion is often used by malware to cover its tracks or remove system defenses."""",
     ""Explanation"": ""The attacker is attempting to delete files from the download directory.""
   }
 ][
     {
         ""sid"": ""45174"",
         ""Technique ID"": ""T1125"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending emails that appear legitimate but are designed to trick the recipient into taking an action, such as clicking on a link or opening an attachment. The rule detects an attempt to download a file with the extension '.application/octet-stream' which is a common technique used in phishing emails to deliver malicious attachments."""",
         ""Explanation"": ""This event is generated when an attempt to download a file with the extension '.application/octet-stream' is detected. This type of file is commonly used to deliver malicious attachments in phishing emails.""
     }
 ][
     ""sid"": ""45174"",
     ""Technique ID"": ""T1604"",
     ""Technique name"": ""Browser Extensions"",
     ""Quotes"": """"Browser Extensions techniques involve the use of browser extensions to establish persistent access to victim systems. This rule detects an attempt to download a malicious file with a '.data' extension using a hyperlink embedded in an HTML document, which is a common method used by malicious browser extensions to download and execute malware."""",
     ""Explanation"": ""It is an attempted user-based, client side attack that uses the browser to execute a script with intent to gain unauthorized access.""
 ][
     ""sid"": ""45174"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt by a browser (Mozilla Firefox) to delete a file from a remote system using a data URI scheme, which is a technique commonly used to exploit browser vulnerabilities to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""This rule detects an attempt by a browser to download a file from a remote system using a data URI scheme, which is a technique that can be used to exploit browser vulnerabilities to gain unauthorized access or execute arbitrary code.""
 ][
         ""sid"": ""45174"",
         ""Technique ID"": ""T1166"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites that impersonate legitimate entities to obtain sensitive information such as passwords or financial data. This rule detects an attempt to exploit a vulnerability in Mozilla Firefox by tricking users into clicking on a malicious link disguised as a harmless file download. The link leads to a phishing website that attempts to steal user credentials or other sensitive information."""",
         ""Explanation"": ""This event is generated when Mozilla Firefox is detected while browsing a phishing site that appears as a legitimate download directory.""
     ]","['T1122', 'T1122', 'T1490', 'T1189', 'T1070', 'T1187', 'T1563', 'T1125', 'T1604', 'T1189', 'T1166']",['T1070']
29456,"[
     {
         ""sid"": ""29456"",
         ""Technique ID"": ""T1421"",
         ""Technique Name"": ""Domain Name System (DNS) Beaconing"",
         ""Quotes"": """"DNS Beaconing techniques involve using DNS requests or responses to communicate with remote systems. This rule detects anomalous PING requests containing specific patterns that may indicate DNS beaconing activity. Adversaries may use DNS beaconing to establish communication channels with command and control servers or exfiltrate data."""",
         ""Explanation"": ""This rule detects unusual ICMP ping traffic that may be used for reconnaissance or beaconing purposes.""
     }
 ][
     {
         ""sid"": ""29456"",
         ""Technique ID"": ""T1133"",
         ""Technique Name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve using various tools and techniques to scan networks to gather information, typically for the purpose of identifying potential targets or vulnerabilities."""",
         ""Explanation"": ""This event is generated when a PING scan is detected. PING scans are often used for reconnaissance and can be an indicator of malicious activity.""
     }
 ][
   {
     ""sid"": ""29456"",
     ""Technique ID"": ""T1584"",
     ""Technique Name"": ""Compromise Infrastructure"",
     ""Quotes"": """"Compromise Infrastructure techniques involve compromising third-party infrastructure that can be used during targeting. The rule looks for 'WANG2', 'cacti-monitoring-system', and 'SolarWinds' in ICMP packets. These strings are associated with network devices, network monitoring systems, and network management software, which could indicate attempts to compromise these systems."""",
     ""Explanation"": ""The rule looks for specific strings in ICMP packets that are associated with network reconnaissance activities and attempts to compromise network infrastructure components.""
   }
 ][
     ""sid"": ""29456"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve gathering information about the network and its services to identify potential vulnerabilities or misconfigurations. The rule looks for specific patterns in ICMP packets, including PING requests with unusual content, which can be used by attackers as part of reconnaissance activities to probe and gather information about the target network."""",
     ""Explanation"": ""The rule triggers on PING requests with specific patterns in the ICMP payload. This may indicate reconnaissance activity or attempts to exploit vulnerabilities in network services.""
 ][
         ""sid"": ""29456"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
     ][
   {
     ""sid"": ""29456"",
     ""Technique ID"": ""T1495"",
     ""Technique Name"": ""Firmware Corruption"",
     ""Quotes"": """"Firmware Corruption involves modifying or overwriting the firmware of a device, typically to disrupt or disable its functionality or to achieve persistence. The rule detects abnormal ICMP (ping) requests containing specific payloads, such as ""WANG2,"" ""cacti-monitoring-system,"" and ""SolarWinds,"" which have been associated with firmware corruption attacks targeting network devices."""",
     ""Explanation"": ""The rule triggers on ICMP echo requests with specific payloads, which are indications of reconnaissance and attempts to identify vulnerable devices, potentially for subsequent firmware corruption attacks.""
   }
 ][
   {
     ""sid"": ""29456"",
     ""Technique ID"": ""T1698"",
     ""Technique Name"": ""Software Discovery"",
     ""Quotes"": """"Software Discovery techniques involve identifying and enumerating software (e.g., operating systems, applications, services) installed on a victim host. This rule detects unusual ICMP requests using specific patterns and content, which can be indicative of attackers probing a network to identify software vulnerabilities or network configurations."""",
     ""Explanation"": ""The rule triggers an alert when ICMP requests with specific content patterns and types are detected, indicating potential reconnaissance activity.""
   }
 ][
   {
     ""sid"": ""29456"",
     ""Technique ID"": ""T1592"",
     ""Technique name"": ""Network Scan"",
     ""Quotes"": """"Network Scan techniques involve automated or manual reconnaissance activities to identify and map networks, systems, and services with the intent to identify vulnerabilities that can be exploited."""",
     ""Explanation"": ""This event is generated when an ICMP PING scan is detected.""
   }
 ][
         ""sid"": ""29456"",
         ""Technique ID"": ""T1595"",
         ""Technique name"": ""Active Scanning"",
         ""Quotes"": """"Active scanning techniques involve actively probing a network or host to discover information about the target and its vulnerabilities. This rule detects unusual ICMP traffic with specific patterns that are commonly used by attackers during active reconnaissance to gather information about network devices and hosts, such as operating systems and services, which can be used to identify potential vulnerabilities and targets for exploitation."""",
         ""Explanation"": ""The rule detects ICMP traffic with specific patterns that are commonly used by attackers during active reconnaissance to gather information about network devices and hosts.""
     ][
   {
     ""sid"": ""29456"",
     ""Technique ID"": ""T1590"",
     ""Technique name"": ""Ping Scan"",
     ""Quotes"": """"Ping Scan techniques involve sending ICMP echo request messages to hosts to determine whether they are alive, reachable, or responsive. This rule detects a series of ICMP pings with unusual or specific flag combinations, including the usage of 'ABCDEFGHIJKLMNOPQRSTUVWABCDEFGHI', '0123456789abcdefghijklmnopqrstuv', 'EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE', 'WANG2', 'cacti-monitoring-system', and 'SolarWinds' as payloads. Such ping scans can be used for reconnaissance and vulnerability scanning purposes."""",
     ""Explanation"": """"This event is generated when activity relating to reconnaissance of systems is detected.""""
   }
 ][
   {
     ""sid"": ""29456"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Discovery"",
     ""Quotes"": """"Network Service Discovery techniques involve querying systems on a network for information about the services they are running. This rule detects unusual ICMP traffic containing specific patterns and strings, such as 'ABCDEFGHIJKLMNOPQRSTUVWABCDEFGHI' and 'cacti-monitoring-system', which are commonly used by network reconnaissance tools to identify and gather information about services and systems on a network."""",
     ""Explanation"": ""This IDS rule identifies ICMP packets with specific content patterns that are associated with network service discovery activities. By matching these patterns, the rule can detect reconnaissance attempts by attackers seeking to identify and map out the network infrastructure.""
   }
 ]","['T1421', 'T1133', 'T1584', 'T1046', 'T1190', 'T1495', 'T1698', 'T1592', 'T1595', 'T1590', 'T1046']",['T1040']
1950,"[
         ""sid"": ""1950"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve identifying and enumerating network services running on a target network to identify potential vulnerabilities and gain a foothold. This rule detects an attempt to scan for open UDP port 111 (portmapper), which is commonly used for enumerating RPC services and discovering available network resources."""",
         ""Explanation"": ""Port scanning is a technique used by attackers to identify open ports and services on a target network. This rule detects an attempt to scan for open UDP port 111, which is commonly used for port mapping and service discovery.""
     ][
         ""sid"": ""1950"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending exfiltrated data to a command and control server for remote storage or access. This rule detects a portmap SET attempt over UDP port 111, which is used by attackers to establish communication with a remote host for exfiltrating data."""",
         ""Explanation"": ""This event is generated when portmap SET attempt is detected.""
     ][
         ""sid"": ""1950"",
         ""Technique ID"": ""T1098"",
         ""Technique name"": ""Port Scanning"",
         ""Quotes"": """"Port Scanning techniques involve scanning network ports to identify open ports and services running on a system. This rule detects an attempt to exploit port 111, which is used by remote procedure call (RPC) services such as portmap. Attackers often use RPC services to gain access to systems and conduct further attacks."""",
         ""Explanation"": ""This event is generated when portmap SET attempt is detected.""
     ][
         ""sid"": ""1950"",
         ""Technique ID"": ""T1593"",
         ""Technique name"": ""Search Open Websites/Domains"",
         ""Quotes"": """"Search Open Websites/Domains techniques involve searching for information about victims on publicly accessible websites or domains. This rule detects portmap SET attempts over UDP port 111, which can be used by attackers to map network services and identify potential targets for further exploitation."""",
         ""Explanation"": ""This rule detects a portmap SET attempt over UDP port 111, which can be used by an attacker to map network services and identify potential targets for further exploitation. The attacker is likely searching for and attempting to exploit publicly accessible network services on the target network.""
     ][
   {
     ""sid"": ""1950"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Port Scanning"",
     ""Quotes"": """"Port Scanning techniques involve actively probing a host for open ports. This rule detects probes for UDP port 111, which is the port used by the SunRPC portmap service. Attackers commonly use port scanning to identify potential targets and vulnerabilities within a network."""",
     ""Explanation"": ""This event is generated when activity relating to port scanning is detected.""
   }
 ][
   {
     ""Sid"": ""1950"",
     ""Technique ID"": ""T1589"",
     ""Technique name"": ""Gather Victim Identity Information"",
     ""Quotes"": ""\""Gather Victim Identity Information techniques involve gathering information about the victim's identity that can be used during targeting.\"""",
     ""Explanation"": ""This rule detects potential reconnaissance attempts to gather information about the target network by querying the portmapper for the list of RPC services running on the host. Attackers can use this information to identify potential attack vectors or target specific services.""
   }
 ][
     ""sid"": ""1950"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve using external probing tools to scan external IP addresses for open ports or services. This rule specifically detects port scanning attempts on port 111 (sunrpc), which is a common port used by attackers to identify potential targets for exploitation."""",
     ""Explanation"": ""The Snort rule detects and alerts on portmap SET requests, which are used to determine the availability of RPC services on a host. This type of activity is commonly associated with network service scanning, where attackers probe a target network to identify potential vulnerabilities.""
 ][
   {
     ""Sid"": ""1950"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": ""\""Network Service Scanning is the activity of gathering information about network services, such as the operating system and software versions running on a host.\"""",
     ""Explanation"": ""The rule looks for UDP packets on port 111, which is the port used by the SunRPC portmapper service. The rule also looks for specific patterns in the packet data, which indicate that the packet is a request to the portmapper service to list the services that are available on the host.""
   }
 ][
         ""sid"": ""1950"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve actively probing a network for weaknesses or exploitable services. This rule detects an attempt to enumerate RPC services on port 111 by sending a request to the portmap service, which is a common method attackers use to identify potential targets for further exploitation."""",
         ""Explanation"": ""An attempt to probe an RPC service on port 111 is detected. This could be an indication of an attacker attempting to identify potential targets for exploitation.""
     ][
     ""sid"": ""1950"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve identifying and gathering information about live hosts and services on a network. This rule detects an attempt to use RPC portmap to enumerate remote services, which is a common technique used for network reconnaissance."""",
     ""Explanation"": ""This rule detects the 'rpcinfo -p' command used for service discovery and fingerprinting, which is commonly used in the initial reconnaissance phase of an attack.""
 ][
         ""sid"": ""1950"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Discovery"",
         ""Quotes"": """"Network Service Discovery techniques involve discovering services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. The rule looks for a specific sequence of packets typical of the portmap service running on UDP port 111, indicating an attempt to discover available RPC services on the targeted network."""",
         ""Explanation"": ""the RPC port mapper program (portmap) is used to register and query the location of RPC services on a network""
     ]","['T1046', 'T1040', 'T1098', 'T1593', 'T1046', 'T1589', 'T1046', 'T1046', 'T1046', 'T1046', 'T1046']",['T1040']
366,"[
   {
     ""sid"": ""366"",
     ""Technique ID"": ""T1191"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This event is generated when a network probe has been detected.""
   }
 ][
   {
     ""sid"": ""366"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve scanning a network to gather information about hosts and services. This rule detects ICMP (ping) requests, which are commonly used for reconnaissance and service scanning."""",
     ""Explanation"": ""This event is generated when activity relating to ping requests is detected.""
   }
 ][
   {
     ""sid"": ""366"",
     ""Technique ID"": ""T1049"",
     ""Technique name"": ""Port Scanning"",
     ""Quotes"": """"Port scanning techniques involve probing a target system or network to identify open ports or services, which can provide attackers with valuable information about potential vulnerabilities or entry points. This rule detects ICMP packets with sequence numbers ranging from 10 to 1F, which is characteristic of a full port scan using the ICMP protocol."""",
     ""Explanation"": ""This event is generated when activity relating to port scanning is detected.""
   }
 ][
     ""sid"": ""366"",
     ""Technique ID"": ""T1596"",
     ""Technique name"": ""Search Open Technical Databases"",
     ""Quotes"": """"Search Open Technical Databases techniques involve querying publicly available databases for information about victims that can be used during targeting. This rule is triggered by a ping request with a specific sequence of data in the payload, which is a common method used by attackers to fingerprint systems and collect information about their operating system, version, and installed software."""",
     ""Explanation"": ""Specific content found in ICMP packets may be indicative of a variety of different information gathering activities.""
 ][
   {
     ""sid"": ""366"",
     ""Technique ID"": ""T1202"",
     ""Technique Name"": ""Indirect Command Execution"",
     ""Quotes"": """"Indirect Command Execution techniques involve using a legitimate program or tool to execute commands or scripts that are not natively available to the tool. The rule detects the use of ICMP Echo request packets with a specific payload, which is a common method used to execute arbitrary commands remotely."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""366"",
     ""Technique ID"": ""T1013"",
     ""Technique Name"": ""Linux/Unix Permissions Modification"",
     ""Quotes"": """"Linux/Unix Permissions Modification techniques involve modifying file permissions and attributes to elevate privileges, bypass security controls, or otherwise gain unauthorized access. This rule detects the use of the 'su' command with the '-s' option, which allows a user to run a shell with the permissions of another user, potentially bypassing file permissions and gaining elevated access."""",
     ""Explanation"": ""This event is generated when suspicious user modification of permissions is observed.""
   }
 ][
   {
     ""sid"": ""366"",
     ""Technique ID"": ""T1595"",
     ""Technique name"": ""Port Scanning"",
     ""Quotes"": """"Port Scanning techniques involve scanning a range of IP addresses or ports on a target network to discover open ports and services. This rule specifically detects port scanning attempts using the ICMP echo request (""ping"") with a sequence of ICMP ID values, which is a common method for adversaries to identify active hosts and open ports on a network."""",
     ""Explanation"": ""This event is generated when a port scan against the firewall is detected.""
   }
 ][
   {
     ""sid"": ""366"",
     ""Technique ID"": ""T1195"",
     ""Technique name"": ""Supply Chain Compromise"",
     ""Quotes"": """"Supply Chain Compromise techniques involve manipulating products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. The rule detects the presence of a malicious ICMP packet, which could be used as a means of exploiting a supply chain vulnerability."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""366"",
     ""Technique ID"": ""T1043"",
     ""Technique Name"": ""ICMP Beaconing"",
     ""Quotes"": """"ICMP Beaconing involves using ICMP packets to send messages or establish a basic form of communications between systems. This rule detects an ICMP ping request with a specific payload, which could be used to establish a covert channel or beacon back to a remote system."""",
     ""Explanation"": ""This rule is triggered when an ICMP ping request with a specific payload is detected. This type of activity can be used for reconnaissance or as part of a network attack.""
   }
 ][
   {
     ""sid"": ""366"",
     ""Technique ID"": ""T1572"",
     ""Technique Name"": ""Network Resource Discovery"",
     ""Quotes"": """"Network Resource Discovery techniques involve activities such as ping scans, traceroutes, and service enumeration, to gain information about a network environment. This rule detects ICMP echo requests (pings) sent from external networks to hosts on the internal network, which is a common reconnaissance technique used by adversaries to identify and gather information about potential targets."""",
     ""Explanation"": ""This rule is designed to detect ICMP ping requests originating from an external network, which could be an indication of reconnaissance activity. Attackers commonly use ping sweeps to identify active hosts and open ports on a network, which can aid in further exploitation attempts.""
   }
 ][
   {
     ""sid"": ""366"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Discovery"",
     ""Quotes"": """"Network Service Discovery techniques involve enumerating network services and software versions running on host systems and network infrastructure devices. The rule detects the use of ICMP ping to determine the type and version of the operating system and applications running on a remote host, which is a common technique used to gather information and identify potential vulnerabilities."""",
     ""Explanation"": """"The rule is designed to detect ICMP echo and echo-reply packets used for network service discovery, including operating system and application version fingerprinting typical of reconnaissance activities.""
   }
 ]","['T1191', 'T1040', 'T1049', 'T1596', 'T1202', 'T1013', 'T1595', 'T1195', 'T1043', 'T1572', 'T1046']",['T1018']
44474,"[
   {
     ""sid"": ""44474"",
     ""Technique ID"": ""T1574"",
     ""Technique Name"": ""Modify Registry"",
     ""Quotes"": """"Modify Registry techniques involve changing the system registry to disable security features, modify system settings, or create persistence mechanisms. This rule detects a specific sequence of bytes that is often used to modify registry keys related to TLS settings, potentially enabling attackers to spoof or decrypt encrypted traffic."""",
     ""Explanation"": ""This event is generated when malware tries to connect and communicate over TLS encrypted channel.""
   }
 ][
   {
     ""sid"": ""44474"",
     ""Technique ID"": ""T1005"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to maintain confidentiality during transmission or storage. This rule detects encrypted traffic using the TLS Change Cipher Spec protocol, which is commonly used to establish secure communication channels."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""44474"",
     ""Technique ID"": ""T1574"",
     ""Technique name"": ""Install Malware"",
     ""Quotes"": """"Install Malware techniques involve installing malicious software on a system to gain unauthorized access, control, or persistence. This rule detects the TLS Change Cipher spec spoof runtime detection for the GHBkdr malware, which is a common tactic used by attackers to install and execute malicious software on target systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""44474"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""The rule identifies a TLS Change Cipher Spoof Runtime Detection, which is used to detect attempted exploitation of a vulnerability in the implementation of the TLS Change Cipher Spec protocol.""
     ][
   {
     ""sid"": ""44474"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve establishing secure communications between an adversary and compromised systems to facilitate remote control and data exfiltration. This rule detects the operation of a GHBkdr malware command and control server, which establishes a TLS connection with a compromised system to send commands and receive exfiltrated data."""",
     ""Explanation"": ""This event is generated when malware or exploit traffic is detected.""
   }
 ][
     {
         ""Sid"": ""44474"",
         ""Technique ID"": ""T1203"",
         ""Technique Name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications or software to execute arbitrary code and gain control of the system. This rule detects an attempted exploitation of a TLS Change Cipher Spec vulnerability in the GnuTLS library, which could lead to remote code execution. Attackers may attempt to exploit this vulnerability by sending a specially crafted TLS packet to the target system."""",
         ""Explanation"": ""GHBkdr is an advanced botnet that targets mission-critical servers, particularly web servers. It is known for its stealthy techniques and ability to evade detection. This rule detects an exploit attempt against a GnuTLS vulnerability, which could allow an attacker to execute arbitrary code and establish a persistent presence on the target system.""
     }
 ][
         ""sid"": ""44474"",
         ""Technique ID"": ""T1489"",
         ""Technique name"": ""Encrypted Channel"",
         ""Quotes"": """"Encrypted Channel techniques involve using encryption to protect communications between an adversary and an asset, making it difficult for defenders to monitor or intercept the traffic. This rule detects an attempt to spoof the TLS Change Cipher Spec protocol, which is used to negotiate the encryption parameters for a TLS session. Attackers may use this technique to establish an encrypted channel for communication with a command and control server or to exfiltrate sensitive data."""",
         ""Explanation"": ""This rule is related to the T1489: Encrypted Channel technique because it detects an attempt to spoof the TLS Change Cipher Spec protocol, which is often used to establish an encrypted channel for communication with a remote server.""
     ][
     ""sid"": ""44474"",
     ""Technique ID"": ""T1117"",
     ""Technique name"": ""Network Traffic Redirection"",
     ""Quotes"": """"Network Traffic Redirection techniques enable adversaries to redirect network traffic away from or to certain systems, to include directing traffic intended for a particular service to a rogue server or directing responses intended for a particular service to a legitimate server."""",
     ""Explanation"": ""This rule matches the SSL/TLS Change Cipher Spec (CCS) record, which can be used by an attacker to negotiate encryption algorithms during a Transport Layer Security (TLS) handshake""
 
 ][
         ""sid"": ""44474"",
         ""Technique ID"": ""T1095"",
         ""Technique name"": ""Application Layer Protocol"",
         ""Quotes"": """"Application Layer Protocol techniques allow adversaries to communicate using specific OSI application layer protocols to avoid detection or bypass network filtering. The rule detects a malicious application layer protocol, GHBkdr, which is used to establish an encrypted communication channel between a client and a command and control server, allowing adversaries to control compromised systems remotely."""",
         ""Explanation"": ""The rule is triggered when a client attempts to establish an outbound connection to port 443 (HTTPS) and sends a specific set of bytes that match the pattern of GHBkdr's TLS Change Cipher spoof runtime detection.""
     ][
   {
     ""sid"": ""44474"",
     ""Technique ID"": ""T1147"",
     ""Technique Name"": ""Connection Proxy"",
     ""Quotes"": """"Connection Proxy techniques involve using an intermediary system to relay communications, such as a Tor network or a proxy server, in order to anonymize traffic and evade detection. This rule detects traffic patterns associated with the GHBkdr backdoor, which is known to use encrypted communication channels for command and control."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""44474"",
     ""Technique ID"": ""T1005"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to make it unusable to the victim and disrupt normal operations. This rule detects the Gh0stBin backdoor attempting to encrypt files using an RC4 key, which is a common method used by malware to encrypt files to prevent access to sensitive information."""",
     ""Explanation"": ""MALWARE-OTHER GHBkdr TLS Change Cipher spoof runtime detection""
 ]","['T1574', 'T1005', 'T1574', 'T1190', 'T1059', 'T1203', 'T1489', 'T1117', 'T1095', 'T1147', 'T1005']",['T1195']
1852,"[
     ""sid"": ""1852"",
     ""Technique ID"": ""T1595"",
     ""Technique name"": ""Automated Collection"",
     ""Quotes"": """"Automated Collection techniques involve the use of automated tools or scripts to collect information from systems. This rule detects access to the '/robots.txt' file, which is a common technique to gather information about a web server's configuration and structure."""",
     ""Explanation"": ""Automated Collection technique is used to gather information about the web server's configuration and structure by accessing the '/robot.txt' file.""
 ][
   {
     ""sid"": ""1852"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted access to the '/robots.txt' file, which is commonly used by web crawlers and search engines to gather information about a website's structure and content. Adversaries may access this file to gather information about the website's organization and structure, which can be used for reconnaissance and planning of future attacks."""",
     ""Explanation"": ""Access to '/robots.txt' file can be used for reconnaissance and planning of future attacks.""
   },
   {
     ""sid"": ""1852"",
     ""Technique ID"": ""T1484"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script that provides attackers with a remote command line interface to a compromised web server. This rule detects an attempt to upload a PHP web shell to the server, which could allow an attacker to execute arbitrary commands and gain control of the server."""",
     ""Explanation"": ""Uploading a PHP web shell can provide an attacker with remote control of the server.""
   }
 ][
     {
         ""sid"": ""1852"",
         ""Technique ID"": ""T1049"",
         ""Technique Name"": ""System Information Discovery"",
         ""Quotes"": """"System Information Discovery techniques involve gathering information about the system hardware, software, and network configuration to gain situational awareness. Crawling and accessing 'robots.txt' files is a common method for adversaries to gather information about a web server."""",
         ""Explanation"": ""The event is related to Crawling and indexing of website by search engine robots""
     },
     {
         ""sid"": ""1527"",
         ""Technique ID"": ""T1059"",
         ""Technique Name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"Command and Scripting Interpreter techniques involve using command shells or scripting languages to execute commands, scripts, or binaries. This rule detects a command shell (cmd.exe) being executed via DDE, a technique commonly used by adversaries to bypass application whitelisting or execute malicious code."""",
         ""Explanation"": ""This event is generated when the system executes a shell command obtained from an external source""
     }
 ][
   {
     ""sid"": ""1852"",
     ""Technique ID"": ""T1040"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve probing a network to identify active hosts and services in order to identify potential targets and vulnerabilities. This rule detects activity related to the scanning of web servers for 'robots.txt' files, which is a common method used by attackers to gather information about a website's structure and potential vulnerabilities."""",
     ""Explanation"": ""This event is generated when activity is detected from external networks performing 'robots.txt' access against web servers.""
   }
 ][
   {
     ""sid"": ""1852"",
     ""Technique ID"": ""T1484"",
     ""Technique name"": ""Web Application Fingerprinting"",
     ""Quotes"": """"Web Application Fingerprinting techniques involve identifying various characteristics of a web application, such as the underlying frameworks, versions, and configurations, to potentially exploit vulnerabilities."""",
     ""Explanation"": ""This rule detects a request to access the '/robots.txt' file, which is used by web crawlers to crawl a website and often contains information about the website's structure and content. Attackers may use this information to fingerprint the web application and identify potential vulnerabilities.""
   }
 ][
     ""sid"": ""1852"",
     ""Technique ID"": ""T1589"",
     ""Technique name"": ""Gather Victim Identity Information"",
     ""Quotes"": """"Gather Victim Identity Information techniques involve obtaining information about the victim's identity to understand their environment and potentially target them more effectively. This rule detects accesses to the '/robots.txt' file, which can provide information about a website's structure and potential entry points, allowing attackers to gain insights about the organization and its web infrastructure."""",
     ""Explanation"": ""An attacker could enumerate the webserver for more information about the site and the organization behind it in order to plan an attack.""
 ][
     {
         ""sid"": ""1852"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted access to '/robots.txt' which is a common way for attackers to gather information about the web server configuration and identify potential vulnerabilities."""",
         ""Explanation"": ""This event is generated when activity relating to web application is detected.""
     }
 ][
   {
     ""sid"": ""1852"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects access to the '/robots.txt' file, which is a common method attackers use to gather information about a web server's structure and potential vulnerabilities."""",
     ""Explanation"": ""This rule is triggered when a web server is accessed on port 80 or 443 and the request URI is '/robots.txt'. This type of request is often made by attackers to gather information about the web server's structure and potential vulnerabilities.""
   }
 ][
   {
     ""sid"": ""1852"",
     ""Technique ID"": ""T1595"",
     ""Technique name"": ""Active Scanning"",
     ""Quotes"": """"Active Scanning techniques involve actively probing networks and systems to gather information (e.g., versions, open ports) and identify vulnerabilities. The rule detects an attempted access to the '/robots.txt' file, which is a common technique used during information gathering to learn about the structure and content of a website."""",
     ""Explanation"": ""This event is generated when activity relating to robots.txt access is detected.""
   }
 ][
     {
         ""sid"": ""1852"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Robots.txt files are commonly targeted by attackers to discover sensitive information and web application vulnerabilities."""",
         ""Explanation"": ""By targeting robots.txt files, attackers can gain insights into the structure and content of the website, which can aid in identifying potential vulnerabilities.""
     }
 ][
   {
     ""sid"": ""1852"",
     ""Technique ID"": ""T1492"",
     ""Technique name"": ""Web Client Scanning"",
     ""Quotes"": """"Web Client Scanning techniques involve using automated tools to scan web applications for vulnerabilities, misconfigurations, or sensitive information. This rule detects access to the '/robots.txt' file, which is commonly used by web robots to identify which parts of a website should not be crawled. Attackers may scan for this file to identify potential targets for further exploitation."""",
     ""Explanation"": ""This event is generated when activity relating to web client scanning is detected.""
   }
 ]","['T1595', 'T1190', 'T1484', 'T1049', 'T1059', 'T1040', 'T1484', 'T1589', 'T1190', 'T1190', 'T1595', 'T1190', 'T1492']",['T1593']
22061,"[
   {
     ""sid"": ""22061"",
     ""Technique ID"": ""T1102"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": ""\""Obfuscated Files or Information techniques involve encoding or encrypting files or information to make them less readable or recognizable. The rule identifies malicious IFRAME load attempts by the Alureon trojan, which often uses obfuscation to evade detection and analysis."""",
     ""Explanation"": ""Obfuscated Files or Information techniques are commonly used by malware to evade detection and analysis.""
   }
 ][
   {
     ""Sid"": ""22061"",
     ""Technique ID"": ""T1102"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script that provides a remote user with an interactive command shell within a compromised web application or server, to gain remote access to a target system. This rule detects an attempt to load a malicious IFRAME (Inline Frame) containing a Twitter widget with malicious code."""",
     ""Explanation"": ""Web shells are often used by adversaries to maintain access to a compromised system, execute commands, and transfer data.""
   }
 ][
     {
         ""sid"": ""22061"",
         ""Technique ID"": ""T1102"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script that provides remote access to a compromised web server. The rule detects an attempt to load a malicious iframe from the Alureon botnet, which is known for using web shells to control infected systems."""",
         ""Explanation"": ""The event is generated when a web shell threat in detected.""
     }
 ][
   {
     ""sid"": ""22061"",
     ""Technique ID"": ""T1102"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web-based interface to execute arbitrary commands on a system. The rule detects an attempt to load a malicious IFRAME from an external source. IFRAMEs are often used by adversaries to embed malicious code into websites or to bypass security measures."""",
     ""Explanation"": ""This rule triggers on an IFRAME loading attempt. It may indicate the presence of a web shell that allows remote access and control to the system.""
   }
 ][
   {
     ""sid"": ""22061"",
     ""Technique ID"": ""T1102"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve encoding data, such as URLs, file paths, or scripts, to evade detection methods that rely on identifying patterns in plaintext data. This rule detects an attempt by the Alureon malware to inject a malicious IFRAME into a website by encoding the IFRAME attributes in a way that is designed to bypass URL filters and other security mechanisms."""",
     ""Explanation"": ""This event is generated when a malicious Alureon IFRAME attempt is detected.""
   }
 ][
   {
     ""sid"": ""22061"",
     ""Technique ID"": ""T1102"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve employing various methods to obscure or hide data or code from automated analysis or detection. This rule detects attempts to load a malicious IFRAME using an obfuscated string that represents the IFRAME attributes (e.g., name, scrolling, frameborder, align, height, width). Obfuscation is commonly used by malware to evade detection by security solutions."""",
     ""Explanation"": ""The rule suggests that malware is attempting to load a malicious IFRAME to deliver additional malicious content or exploit vulnerabilities in the browser.""
   }
 ][
   {
     ""sid"": ""22061"",
     ""Technique ID"": ""T1102"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve the use of a malicious script or program that provides a remote command shell-like interface to a web server or web application. This rule detects an attempt to load a malicious IFRAME from 'Twitter' using specific attributes ('scrolling', 'frameborder', 'align', 'height', 'width'), which is a common tactic used by attackers to establish a web shell on a compromised website."""",
     ""Explanation"": ""The event is related to trojan activity, the malicious IFRAME loads an Alureon malware.""
   }
 ][
     {
         ""sid"": ""22061"",
         ""Technique ID"": ""T1102"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an Alureon attempt to load a malicious iframe, which is a common method attackers use to exploit web applications and compromise user systems."""",
         ""Explanation"": ""The rule triggers when it detects an attempt to load a malicious IFRAME from a known Alureon domain.""
     }
 ][
         ""sid"": ""22061"",
         ""Technique ID"": ""T1102"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to evade detection by security controls or make data recovery more difficult. This rule detects traffic related to the Alureon rootkit, which is known to use encryption to protect its malicious payload and evade detection."""",
         ""Explanation"": ""This rule is inspecting traffic for the Alureon rootkit which is known to use encryption to protect its malicious payload.""
     ][
   {
     ""sid"": ""22061"",
     ""Technique ID"": ""T1102"",
     ""Technique name"": ""Web Service"",
     ""Quotes"": """"Web Service techniques involve using existing, legitimate external Web services as a means for relaying data to/from a compromised system. The rule detects an attempt to load a malicious IFRAME from Twitter, which is a common method used by malware to deliver malicious content or exfiltrate data."""",
     ""Explanation"": ""The rule is used to detect a malicious IFRAME load attempt from Twitter. This is a technique commonly used by malware to deliver malicious content or exfiltrate data.""
   }
 ][
     ""sid"": ""22061"",
     ""Technique ID"": ""T1102"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule indicates detection of malicious iframe loading by Alureon malware, which is often used in drive-by download attacks that target vulnerabilities in web browsers or web applications."""",
     ""Explanation"": ""This rule targets malicious IFRAME load attempts by the Alureon malware, which is used in drive-by download attacks.""
 ]","['T1102', 'T1102', 'T1102', 'T1102', 'T1102', 'T1102', 'T1102', 'T1102', 'T1102', 'T1102', 'T1102']",['T1102']
30003,"[
         ""sid"": ""30003"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of the Hello/LightsOut exploit kit, which is commonly used to deliver malware or malicious scripts through vulnerable web applications."""",
         ""Explanation"": ""This event is generated when an attempt to download a payload from the Hello/LightsOut exploit kit is detected.""
     ][
     {
         ""sid"": ""30003"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve luring users to malicious websites or content to gain unauthorized access to their systems. This rule detects an attempt by the Hello/LightsOut exploit kit to download and execute a malicious payload on the victim's system. Exploit kits are commonly used to spread malware through drive-by downloads, whereby users are tricked into visiting malicious websites that automatically exploit vulnerabilities in their browsers or plugins to install malware."""",
         ""Explanation"": ""This event is generated when a malicious file is downloaded through this exploit kit.""
     }
 ][
     ""sid"": ""30003"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Snort rule detects the LightsOut exploit kit attempting to download a malicious payload over HTTP. Exploit kits are commonly used to target vulnerabilities in web-facing applications to deliver malware."""",
     ""Explanation"": ""The rule alert is triggered when the download of exploit kit payload with the filename pattern of *.php?a=dw is attempted.""
 ][
   {
     ""sid"": ""24092"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve compromising a victim's system through malicious content delivered via a website, email, or other web-based interface. This rule detects an attempt to download a payload from the LightsOut exploit kit, commonly used for drive-by compromise attacks by exploiting vulnerabilities in web browsers."""",
     ""Explanation"": ""Exploit kit, primarily used to spread banking Trojans, Exploit kit dropped malware via a compromised website""
   }
 ][
   ""sid"": ""30003"",
   ""Technique ID"": ""T1189"",
   ""Technique name"": ""Exploit Public-Facing Application"",
   ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a download attempt of the Hello/LightsOut exploit kit, which typically leverages vulnerabilities in web applications to install malicious payloads on victim systems."""",
   ""Explanation"": """"Exploit Public-Facing Application"" technique is related to the rule since the rule detects an attempt to download an exploit kit payload, which often involves exploiting vulnerabilities in public-facing web applications.""""
 ][
   {
     ""sid"": ""30003"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve delivering, via malicious web pages or advertisements, a malicious payload that may be used to exploit a vulnerability or install malware on a target system without the user's consent or knowledge. The rule detects an exploit attempt by the Hello/LightsOut exploit kit, which typically operates via drive-by download attacks."""",
     ""Explanation"": ""This rule looks for the \""?a=dw\"" pattern in the URI and the \""Java/1.\"" pattern in the HTTP header, which are indicators of the Hello/LightsOut exploit kit""
   }
 ][
   {
     ""sid"": ""30003"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a host or endpoint system through a browser without any action by the user. The rule detects an attempt to download a payload associated with the Hello/LightsOut exploit kit, which is known to exploit browser vulnerabilities to compromise vulnerable systems during web browsing."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""30003"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in the Hello/LightsOut exploit kit, which is known to target web servers by exploiting vulnerabilities in popular software, such as Java and Adobe Flash."""",
         ""Explanation"": ""This rule triggers when an attempted download of the Hello/LightsOut exploit kit payload is detected, indicating an attempt to exploit a vulnerability on the webserver.""
     ][
   {
     ""sid"": ""30003"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in a web application with Hello/LightsOut exploit kit, which targets web browsers with malicious software."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""30003"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted Hello/LightsOut exploit kit payload download, which is a common method attackers use to exploit web applications."""",
         ""Explanation"": ""This rule detects exploit attempts for Hello/LightsOut (HELO) exploit kit, targeting multiple web applications.""
     }
 ][
   {
     ""sid"": ""30003"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in web browsers or browser plug-ins to infect a victim's system when they visit a malicious website, or click on a link in a malicious email or social media post. This rule detects an attempt by the Hello/LightsOut exploit kit to download its payload onto a victim's system, which is a common method used by drive-by compromise attacks to infect systems with malware."""",
     ""Explanation"": ""This event is generated when a web server is probed for a specific vulnerability.""
   }
 ]","['T1189', 'T1189', 'T1189', 'T1189', 'T1189', 'T1189', 'T1189', 'T1189', 'T1189', 'T1189', 'T1189']",['T1189']
382,"[
         ""sid"": ""382"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve using network protocols to probe target systems for open ports, services, and vulnerabilities. This rule is designed to detect ICMP ping requests with a specific payload that has been known to be used for reconnaissance and service scanning purposes."""",
         ""Explanation"": ""The rule triggers an alert when it detects ICMP ping requests with a specific payload that has been historically utilized for reconnaissance and service scanning purposes.""
     ][
   {
     ""sid"": ""382"",
     ""Technique ID"": ""T1541"",
     ""Technique Name"": ""Ping"",
     ""Quotes"": """"Ping techniques involve sending ICMP echo request messages to a remote system to determine if it is reachable and to obtain information about its network configuration. This rule detects ICMP echo requests containing the string 'abcdefghijklmnop' which is often used by attackers to perform reconnaissance and identify potential targets by ping sweeping for active hosts."""",
     ""Explanation"": ""This rule is specifically designed to detect ICMP echo requests with a defined pattern, which is commonly used for reconnaissance purposes.""
   }
 ][
     {
         ""Sid"": ""382"",
         ""Technique ID"": ""T1594"",
         ""Technique name"": ""Uncommon Protocol Execution"",
         ""Quotes"": """"Uncommon Protocol Execution techniques involve communicating over uncommon protocols or ports to evade detection or gain access to otherwise restricted systems. This rule specifically looks for ICMP packets with an ICMP type 8 (Echo Request) and an oddly-sized payload of 20 bytes. This type of communication is not commonly used by legitimate applications and could be a sign of malicious activity, such as a network scan or reconnaissance."""",
         ""Explanation"": ""This event is generated when the firewall detects an ICMP (Internet Control Message Protocol) ping request. This technique involves sending ICMP messages to enumerate hosts and gather information about the network infrastructure.""
     }
 ][
     {
         ""sid"": ""21983"",
         ""Technique ID"": ""T1040"",
         ""Technique Name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve scanning a network to identify hosts and services using various methods. This rule detects a ping request (ICMP Type 8) from an external network to a host within the internal network, which is a common method used to scan for active hosts and open ports."""",
         ""Explanation"": "" PING is the most basic form of network service scanning that can be used to check if a host is up.""
     },
     {
         ""sid"": ""21983"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": "" A ping sweep is often the first step in an attack, and can be used to identify potential targets for further exploitation.""
     }
 ][
     {
         ""sid"": ""382"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting a vulnerability in a client application to gain control over its execution flow or perform malicious actions."""",
         ""Explanation"": ""Vulnerabilities in the client application can allow an attacker to execute arbitrary code and gain control over the client.""
     }
 ][
   {
     ""sid"": ""382"",
     ""Technique ID"": ""T1590"",
     ""Technique name"": ""Gather Victim Network Information"",
     ""Quotes"": ""\""Gathering information about the victim's networks can help adversaries identify potential targets and plan their attacks. This rule detects an ICMP ping sweep, which is a reconnaissance technique used to discover hosts and services on a network by sending ICMP echo requests and waiting for responses."""",
     ""Explanation"": ""This rule detects the ICMP protocol PING from external network to internal network, which is commonly used for network reconnaissance.""
   }
 ][
     ""sid"": ""382"",
     ""Technique ID"": ""T1134"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve systematically probing a network to gather information about hosts and services. This rule detects ICMP echo requests (ping) from an external network to an internal network, which is a common reconnaissance technique used to map out the network and identify potential targets."""",
     ""Explanation"": ""This event is generated when an ICMP echo request is received.""
 ][
         ""sid"": ""382"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve scanning remote systems and devices to identify open ports, running services, and other network characteristics. This rule detects ICMP ping requests with a specific pattern of 'abcdefghijklmnop' in the payload, which is often used by attackers to perform network reconnaissance and identify potential targets."""",
         ""Explanation"": ""This alert is triggered when an ICMP ping request is received from an external network with a specific payload, indicating a potential reconnaissance attempt.""
     ][
   {
     ""sid"": ""382"",
     ""Technique ID"": ""T1595"",
     ""Technique Name"": ""Active Scanning"",
     ""Quotes"": ""\""Active Scanning techniques typically involve the use of specialized tools and techniques to probe and gather information about a target system or network. In this case, the rule detects ICMP ping requests originating from an external network, which could be part of a reconnaissance activity to identify potential target systems or gather information about network topology\"""",
     ""Explanation"": ""Ping is used for network discovery and information gathering.""
   },
   {
     ""sid"": ""382"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": ""\""Network Service Scanning techniques involve probing a target system or network for open ports, listening services, and other network-based information that could be exploited. Ping requests, like the ones detected by this rule, can be used to identify active hosts and potentially reveal open ports or services that may be vulnerable to further exploitation."""",
     ""Explanation"": ""Ping sweep is used for port discovery.""
   }
 ][
         ""sid"": ""382"",
         ""Technique ID"": ""T1124"",
         ""Technique name"": ""System Time Discovery"",
         ""Quotes"": """"System Time Discovery techniques involve gathering the system time and/or time zone from a local or remote system. This rule triggers when a PING request containing a specific pattern ('abcdefghijklmnop' with a depth of 16) is received."""",
         ""Explanation"": ""This event is generated when activity relating to 'ping' is detected.""
     ][
     ""sid"": ""382"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""PING"",
     ""Quotes"": """"PING techniques involve using the ICMP protocol to send and receive packets, often to identify active hosts on a network for reconnaissance purposes."""",
     ""Explanation"": ""This event detects a PING request that is used to perform reconnaissance on a network to identify active hosts.""
 ]","['T1040', 'T1541', 'T1594', 'T1040', 'T1190', 'T1210', 'T1590', 'T1134', 'T1040', 'T1595', 'T1046', 'T1124', 'T1192']",['T1082']
384,"[
   {
     ""sid"": ""384"",
     ""Technique ID"": ""T1440"",
     ""Technique name"": ""Process Discovery"",
     ""Quotes"": """"Process Discovery techniques involve gathering information about the running processes and system information to establish situational awareness of the target network."""",
     ""Explanation"": ""This rule detects ICMP ping requests arriving from external networks.""
   }
 ][
   {
     ""sid"": ""384"",
     ""Technique ID"": ""T1040"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning involves probing a network to identify open ports or services that may be vulnerable to attack. This rule detects ICMP (ping) requests, which are commonly used for reconnaissance and to identify active hosts on a network."""",
     ""Explanation"": ""Ping request from an external network to any host in the internal network.""
   }
 ][
   {
     ""sid"": ""384"",
     ""Technique ID"": ""T1195"",
     ""Technique Name"": ""Port Scan"",
     ""Quotes"": """"Port scans are used to discover services running on a network. ICMP PING requests can be used to determine if a host is alive and what services are running on it."""",
     ""Explanation"": ""This rule detects ICMP PING requests which are a common method of port scanning. ICMP PING requests can be used to determine if a host is alive and what services are running on it, which can be helpful in planning an attack.""
   }
 ][
   {
     ""sid"": ""384"",
     ""Technique ID"": ""T1040"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve using a variety of methods to identify and enumerate network services running on a target system, network, or range of IP addresses."""",
     ""Explanation"": ""This rule detects ICMP PING requests, which are commonly used for network reconnaissance and service discovery.""
   }
 ]{
   ""sid"": ""384"",
   ""Technique ID"": ""T1190"",
   ""Technique Name"": ""Exploit Public-Facing Application"",
   ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
   ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 }[
   {
     ""sid"": ""384"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": ""\""External Remote Services techniques involve using external services, such as web hosting providers, email services, and cloud storage, to maintain a persistent presence on targeted networks.\"""",
     ""Explanation"": ""The rule detects ICMP traffic which can be used to establish a covert communication channel""
   },
   {
     ""sid"": ""384"",
     ""Technique ID"": ""T1008"",
     ""Technique Name"": ""Fallback Channels"",
     ""Quotes"": ""\""Fallback Channels techniques involve using alternative communication methods in case the primary communication channel is compromised or disrupted.\"""",
     ""Explanation"": ""The rule detects ICMP traffic which can be used as a fallback communication channel if the primary channel is blocked""
   }
 ][
   {
     ""sid"": ""384"",
     ""Technique ID"": ""T1199"",
     ""Technique name"": ""Protocol Spoofing"",
     ""Quotes"": """"Protocol Spoofing techniques involve manipulating network protocols to evade detection or deceive the victim, such as by changing the ICMP type field to mimic a legitimate ping request."""",
     ""Explanation"": ""This event is generated when an ICMP ping request is received from an external network and is classified as miscellaneous activity.""
   }
 ][
   {
     ""sid"": ""384"",
     ""Technique ID"": ""T1195"",
     ""Technique name"": ""Supply Chain Compromise"",
     ""Quotes"": """"Supply Chain Compromise techniques involve manipulating products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. Attackers may modify firmware updates, hardware components, or entire end-use products with malicious code, backdoors, or other vulnerabilities in order to gain access to networks and systems."""",
     ""Explanation"": ""The rule detects ICMP traffic, which could be used by attackers to map out the network and identify potential targets for supply chain compromise.""
   }
 ][
   {
     ""sid"": ""384"",
     ""Technique ID"": ""T1595"",
     ""Technique name"": ""Active Scanning"",
     ""Quotes"": """"Active Scanning techniques involve using network scanning tools to gather information about systems and networks. The rule detects ICMP echo requests (pings) from an external network to an internal network, which is a common technique used by attackers to identify potential targets and assess network topology."""",
     ""Explanation"": ""This event is generated when a ICMP echo request is detected.""
   }
 ][][
   {
     ""sid"": ""384"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Sniffing"",
     ""Quotes"": ""\""Network Sniffing techniques involve monitoring network traffic to capture data, including credentials and sensitive information. This rule detects ICMP packets, which can be used for reconnaissance and network mapping to identify potential targets and vulnerabilities."""",
     ""Explanation"": ""The ICMP protocol can be used for reconnaissance and network mapping to identify potential targets and vulnerabilities, which is a common tactic used by attackers.""
   }
 ]","['T1440', 'T1040', 'T1195', 'T1040', 'T1190', 'T1133', 'T1008', 'T1199', 'T1195', 'T1595', 'T1040']",['T1082']
33940,"[
         ""sid"": ""33940"",
         ""Technique ID"": ""T1106"",
         ""Technique name"": ""Phishing for Information"",
         ""Quotes"": """"Phishing for Information techniques use various tricks to manipulate users into sharing personal or sensitive information or data, often through email or malicious websites."""",
         ""Explanation"": ""The alert is triggered when an attachment matching the profile of an executable control panel (.cpl) file is detected. Phishing emails often use attachments as a lure to trick users into opening malicious files.""
     ],
     [
         ""sid"": ""33940"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Data Encoding"",
         ""Quotes"": """"Data Encoding techniques utilize various methods to encode data and make it more difficult to interpret or analyze."""",
         ""Explanation"": ""The alert contains a pattern that looks for base64 encoded content, which is a common method of data encoding.""
     ],
     [
         ""sid"": ""33940"",
         ""Technique ID"": ""T1566"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques attempt to trick users into sharing sensitive information or data, often through email or malicious websites."""",
         ""Explanation"": ""The alert specifically mentions ""phishing"" in its description, indicating that it detects phishing emails.""
     ][
         ""sid"": ""33940"",
         ""Technique ID"": ""T1134"",
         ""Technique name"": ""Decompress Files and Data"",
         ""Quotes"": """"Decompress Files and Data techniques involve unpacking and extracting data from compressed or encrypted files, archives, or other data structures. This rule detects the transfer of a malicious .cpl (Control Panel item) file attachment via email, which is a common method used by adversaries to deliver malware or exploit system vulnerabilities."""",
         ""Explanation"": ""Detected file is .cpl type. We can see that file type is important.""
     ][
   {
     ""sid"": ""33940"",
     ""Technique ID"": ""T1068"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": ""Masquerading techniques involve disguising malicious activities as legitimate traffic by mimicking patterns and behaviors of normal network traffic. This rule detects an email attachment with a .cpl extension, which is typically associated with Windows Control Panel applets, but could be used to disguise malicious executable files."",
     ""Explanation"": ""This rule detects the attachment of an executable file with a .cpl extension in an email, which is a common technique used to bypass security controls by disguising malicious files as legitimate software.""
   },
   {
     ""sid"": ""33940"",
     ""Technique ID"": ""T1140"",
     ""Technique name"": ""File Attribute Modification"",
     ""Quotes"": ""File Attribute Modification techniques involve modifying the attributes of files on a system to achieve persistence, evade detection, or gain unauthorized access. This rule detects an attempt to attach an executable file with a .cpl extension to an email, which could be used to bypass security controls by modifying the file's attributes to appear legitimate."",
     ""Explanation"": ""This rule detects the attachment of an executable file with a .cpl extension in an email, which could be used to bypass security controls by modifying the file's attributes to appear legitimate.""
   }
 ][
   {
     ""sid"": ""33940"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques are used by adversaries to maintain persistance on a system and execute follow-on actions. This rule is looking for the attachment of an executable control panel file. Control panels are commonly used by malware to provide a way for an adversary to manage and control a system remotely."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""33940"",
     ""Technique ID"": ""T1117"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques are used by adversaries to identify files and directories with specific names or extensions to gather information or locate specific files in order to manipulate, modify, or delete data."""",
     ""Explanation"": ""The rule checks for the attachment of an executable control panel file (.cpl) in an email. Adversaries may use such a file to gain control of a system.""
   }
 ][
   {
     ""sid"": ""33940"",
     ""Technique ID"": ""T1036"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising malicious content as legitimate objects or processes to evade detection and maintain persistence. The rule detects attachments with the '.cpl' extension, which are commonly used by malware authors to disguise malicious executables as Control Panel extensions."""",
     ""Explanation"": ""Here we use the MITRE ID T1036 because it's related to the way the malware tries to masquerade content as a legitimate object.""
   }
 ][
         ""sid"": ""33940"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client applications to execute malicious code. The rule detects an executable control panel file attached to an email, which is a common method used by attackers to deliver malware to client machines. Once executed, the malware can perform various malicious actions, such as stealing sensitive data or launching further attacks from the compromised client."""",
         ""Explanation"": ""This rule is triggered when an email attachment with a .cpl extension is detected. CPL files are used by Windows to add or remove control panel applets. They can be malicious if they contain malicious code.""
     ][
     {
         ""sid"": ""33940"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Exfiltration Over Email"",
         ""Quotes"": """"Exfiltration Over Email techniques involve sending exfiltrated data via email to an external recipient. This rule detects the presence of an executable file (.cpl) attached to an email, which is a common method used by attackers to exfiltrate sensitive data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
     ""sid"": ""33940"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Phishing for Information"",
     ""Quotes"": """"Phishing for Information techniques involve eliciting sensitive information from individuals via fraudulent or deceptive methods. This rule detects the transmission of an email attachment with a '.cpl' file extension, which is frequently used to camouflage executable control panel files. Adversaries often employ phishing emails to trick victims into downloading and executing such files, which can provide remote access to the victim's system."""",
     ""Explanation"": ""This event is generated when an executable control panel file attachment is detected.""
 ][
     {
         ""sid"": ""33940"",
         ""Technique ID"": ""T1088"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to hinder analysis and detection, complicating incident response. This rule detects an executable control panel file (.cpl) attached to an email, which may be encrypted to evade detection and allow an attacker to gain control over the compromised system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""33940"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve relying on specific actions by a user to gain execution. This rule detects an executable control panel file attachment, which can be used by an attacker to trick a user into downloading and executing a malicious file that could provide remote control capabilities."""",
     ""Explanation"": ""This event is generated when an executable control panel file attachment is detected, which can be used by an attacker to trick a user into downloading and executing a malicious file.""
   }
 ][
     ""sid"": ""33940"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking or coercing users to execute malicious code. This rule detects an email attachment with a filename ending in '.cpl,' which is associated with Windows Control Panel files. Attackers may use social engineering tactics to convince users to open these attachments, which could potentially lead to the execution of malware or other malicious actions."""",
     ""Explanation"": ""This rule detects executable control panel file attachments, which are often used by malware to trick users into executing malicious code.""
 ]","['T1106', 'T1132', 'T1566', 'T1134', 'T1068', 'T1140', 'T1059', 'T1117', 'T1036', 'T1203', 'T1040', 'T1105', 'T1088', 'T1204', 'T1204']",['T1218']
26660,"[
         ""sid"": ""26660"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing for Authentication Credentials"",
         ""Quotes"": """"Phishing for Authentication Credentials techniques involve sending fraudulent communications designed to trick the recipient into revealing sensitive information, such as account credentials. The rule detects an attempted phishing attack in which an attacker sends a fake delivery notification email with an embedded malicious file ("".exe"") to trick the recipient into opening it and potentially compromising their system."""",
         ""Explanation"": ""Phishing activity is flagged by this event.""
     ][
   {
     ""sid"": ""26660"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent messages designed to trick victims into revealing sensitive information or taking actions that may compromise their systems or accounts. This rule detects a phishing attack that uses a fake delivery information message to trick users into downloading a malicious EXE file, which is a common method used by phishing campaigns to distribute malware."""",
     ""Explanation"": ""This event is generated when activity relating to a phishing attack is detected.""
   }
 ][
     {
         ""sid"": ""26660"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": ""Phishing involves sending emails or other communications that appear to come from a legitimate organization but are actually intended to fraudulently gain information such as passwords or financial data. The rule detects a phishing attack that uses a fake delivery notification email with an attached malicious file (.exe) designed to trick users into giving up their personal information."",
         ""Explanation"": ""This rule detects a phishing attack that uses a fake delivery notification email to trick users into opening a malicious attachment ("".exe"").""
     }
 ][
         ""sid"": ""26660"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites that impersonate legitimate entities to trick users into providing sensitive information, such as account credentials or financial data. This rule targets a phishing attack that uses a file named ""Delivery_Information_ID-.exe"" and mimics a delivery information notification to deceive the user into downloading and executing the malicious payload."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""26660"",
     ""Technique ID"": ""T1192"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": ""\""Phishing techniques involve sending fraudulent emails or text messages that appear to come from legitimate organizations to trick individuals into disclosing sensitive information or clicking on malicious links. This rule detects a malicious email campaign that uses fake delivery information to lure recipients into downloading a malicious executable file."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""26660"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent messages designed to trick recipients into disclosing sensitive information, such as credentials or financial data. This rule detects a phishing attack that uses email messages with attached malicious files disguised as delivery notifications to trick users into downloading and executing malware."""",
     ""Explanation"": ""This rule detects the delivery of a malicious payload via email attachment.""
   }
 ][
     {
         ""sid"": ""26660"",
         ""Technique ID"": ""T1192"",
         ""Technique Name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages designed to trick recipients into revealing sensitive information or taking actions that may compromise systems or networks. This rule detects an attempt to deliver a malicious payload via a phishing email that contains a file attachment with a name resembling a delivery notification and the file extension '.exe', a common tactic used in phishing attacks."""",
         ""Explanation"": ""This rule detects a phishing attack that attempts to deliver a malicious payload via email. The email contains a file attachment with a name resembling a delivery notification and the file extension '.exe', a common tactic used in phishing attacks.""
     }
 ][
     {
         ""sid"": ""26660"",
         ""Technique ID"": ""T1192"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending malicious emails or messages with the intent to trick the recipient into taking an action, such as clicking a malicious link or opening a malicious attachment, that will compromise their system or steal their personal information. The rule detects a phishing attack that attempts to trick the recipient into believing they are receiving a legitimate delivery notification (Delivery_Information_ID-) and prompts them to open a malicious executable ("".exe"")."""",
         ""Explanation"": ""The rule is detecting malicious traffic""
     }
 ][
     ""sid"": ""26660"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve deceiving users into giving up sensitive information or clicking on malicious links by posing as a legitimate entity. This rule detects phishing emails that attempt to trick users into downloading malicious files disguised as delivery information."""",
     ""Explanation"": ""The rule detects attempts to download a malicious file disguised as a legitimate delivery information notification.""
 ][
   {
     ""sid"": ""26660"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that appear to come from a legitimate source to trick individuals into providing sensitive information or clicking on malicious links. This rule targets phishing attacks that mimic delivery information from well-known companies, often containing malicious attachments or links, to deceive recipients into downloading malware or revealing personal data."""",
     ""Explanation"": ""This event is generated when an intrusion attempt is detected against a Microsoft product.""
   }
 ][
   {
     ""sid"": ""26660"",
     ""Technique ID"": ""T1192"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending emails or messages that appear to come from legitimate sources to trick users into providing sensitive information or taking actions that could compromise systems or networks. This rule detects phishing attacks that use emails with fake delivery information and attachments containing malicious content (.exe files) to trick users into downloading and executing malware."""",
     ""Explanation"": ""The event triggers when a client requests an email with fake delivery information phishing attack.""
   }
 ]","['T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192', 'T1192']",['T1566']
300306,"[
   {
     ""sid"": ""300306"",
     ""Technique ID"": ""T1205"",
     ""Technique Name"": ""Encode Command and Control"",
     ""Quotes"": """"Encode Command and Control techniques involve implementing methods that provide a means to communicate with a command and control server securely by disguising or obfuscating the communication protocol. OpenSSL is a commonly used TLS/SSL implementation, and this rule detects an attempt to exploit a buffer overflow vulnerability in OpenSSL by sending a malformed SSL certificate, which can be a technique used by adversaries to establish an encrypted communication channel with a command and control server."""",
     ""Explanation"": ""This event is generated when an attempt is made to use a malformed OpenSSL certificate to exploit a buffer overflow vulnerability, which can be used to establish an encrypted communication channel with a command and control server.""
   }
 ][
   {
     ""sid"": ""300306"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an OpenSSL x509 crafted email address buffer overflow attempt. Attackers can exploit buffer overflow vulnerabilities in OpenSSL's x509 parsing to execute arbitrary code by sending an email with a specially crafted X.509 certificate."""",
     ""Explanation"": ""Attempted exploitation of a crafted email address buffer overflow vulnerability in OpenSSL x509.""
   }
 ][
         ""sid"": ""300306"",
         ""Technique ID"": ""T1220"",
         ""Technique name"": ""Buffer Overflow"",
         ""Quotes"": """"Buffer Overflow techniques involve exploiting buffer overflow vulnerabilities in software to execute arbitrary code. The rule triggers on an OpenSSL x509 crafted email address buffer overflow attempt, which is a specific type of buffer overflow vulnerability that can lead to arbitrary code execution and system compromise."""",
         ""Explanation"": ""This rule is designed to detect attempts to exploit buffer overflow vulnerabilities in OpenSSL x509 crafted email addresses.""
     ][
     {
         ""sid"": ""300306"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule specifically detects an attempted OpenSSL x509 crafted email address buffer overflow attack, which is a technique commonly used by attackers to exploit vulnerabilities in TLS/SSL implementations. The rule matches on the presence of a crafted email address that exploits a buffer overflow vulnerability in the x509 library."""",
         ""Explanation"": ""The OpenSSL x509 crafted email address buffer overflow vulnerability allows remote attackers to execute arbitrary code by sending a specially crafted email message with an invalid email address to an affected email server.""
     }
 ][
   {
     ""sid"": ""300306"",
     ""Technique ID"": ""T1220"",
     ""Technique Name"": ""Exploit Software Development Flaws"",
     ""Quotes"": """"Exploit Software Development Flaws techniques involve leveraging flaws or bugs in software to execute arbitrary code, escalate privileges, or otherwise compromise the system's security. The rule identifies an attempt to exploit a buffer overflow vulnerability in the OpenSSL library, which is a common target for attackers to exploit in order to gain unauthorized access to systems."""",
     ""Explanation"": ""This event is generated when an SSL 3.0 buffer overflow vulnerability is detected.""
   }
 ][
   {
     ""sid"": ""300306"",
     ""Technique ID"": ""T1115"",
     ""Technique name"": ""Buffer Overflow"",
     ""Quotes"": """"Buffer Overflow techniques involve exploiting a flaw in an application or system that can overwrite memory beyond the bounds of an allocated buffer, allowing attackers to execute arbitrary code or cause a denial of service. The rule indicates an attempt to exploit a crafted email address buffer overflow vulnerability in OpenSSL, which could allow an attacker to crash the mail server or potentially execute arbitrary code."""",
     ""Explanation"": """"SERVER-OTHER OpenSSL x509 crafted email address buffer overflow attempt by exploiting a buffer overflow vulnerability in OpenSSL's X.509 library function to manipulate the size of the ""subjectAltName"" field in a crafted email address causes the server to crash and potentially execute arbitrary code. This technique allows an attacker to manipulate a program or system to cause a buffer overflow, which can lead to a denial of service or arbitrary code execution.""
   }
 ][
   {
     ""sid"": ""300306"",
     ""Technique ID"": ""T1220"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""This rule triggers an alert when it detects an attempt to exploit a crafted email address buffer overflow vulnerability in the OpenSSL x509 library, which is commonly used in web servers and other network applications. Attackers can leverage this vulnerability to execute arbitrary code or gain unauthorized access to the target system. This technique aligns with the rule's detection of an exploit attempt on a public-facing application.""
   }
 ][
   {
     ""sid"": ""300306"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploit Software Development Tools"",
     ""Quotes"": """"Exploit Software Development Tools techniques involve abusing tools used in the software development lifecycle to perform malicious actions. This rule detects an attempt to exploit a buffer overflow vulnerability in OpenSSL's x509 library, which is a common tool used in developing and deploying SSL/TLS certificates."""",
     ""Explanation"": ""OpenSSL versions 3.0.0 through 3.0.6 have a buffer overflow in the X.509 email address parsing code.""
   }
 ][
   {
     ""sid"": ""300306"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a buffer overflow vulnerability in OpenSSL's X.509 library, which attackers can use to execute arbitrary code or cause a denial of service."""",
     ""Explanation"": ""The rule looks for a specific sequence of bytes that are indicative of an attempt to exploit this vulnerability""
   }
 ][
     ""sid"": ""300306"",
     ""Technique ID"": ""T1191"",
     ""Technique name"": ""Exploit Insecure Deserialization"",
     ""Quotes"": """"Exploit Insecure Deserialization techniques involve exploiting vulnerabilities in the deserialization process of applications to execute arbitrary code. This rule triggers when OpenSSL receives a crafted email address containing an overly long representation of a host name, sometimes referred to as a 'punycode' attack, which can lead to a buffer overflow and arbitrary code execution."""",
     ""Explanation"": ""This event is generated when an email contains an encoded hostname, and this is a well known attack technique: a hostname can be encoded in multiple ways, a user can provide an email that is encoded in one way, and a specially crafted email that is encoded in a different way can force the client email program to fail.""
 ][
   {
     ""sid"": ""300306"",
     ""Technique ID"": ""T1220"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code.\"""",
     ""Explanation"": ""This rule detects an attempt to exploit a buffer overflow vulnerability in the OpenSSL x509 library, which is commonly used in web servers and other network applications.""
   }
 ]","['T1205', 'T1190', 'T1220', 'T1210', 'T1220', 'T1115', 'T1220', 'T1210', 'T1210', 'T1191', 'T1220']",['T1189']
56599,"[
         ""sid"": ""56599"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control techniques involve communication between an attacker and compromised systems to establish and maintain persistence, retrieve data, and execute commands. This rule detects an outbound connection attempt by the 'Win.Backdoor.CSBundle_Original' backdoor to its command and control server using an HTTP POST request to '/api/v1/user'."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""56599"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in the 'api/v1/user' endpoint of a web application, which could allow an attacker to execute arbitrary code on the server."""",
         ""Explanation"": ""The rule identifies an outbound connection attempt to a known command and control server for the Win.Backdoor.CSBundle_Original malware, indicating a potential attempt to exploit a vulnerability in a web application.""
     },
     {
         ""sid"": ""56599"",
         ""Technique ID"": ""T1588"",
         ""Technique name"": ""Obtain Capabilities"",
         ""Quotes"": """"Obtain Capabilities techniques involve acquiring access to capabilities that can be used during targeting. The rule detects an attempt to establish a connection to a command and control server, which could be used to download additional malware or receive instructions from the attacker."""",
         ""Explanation"": ""The rule identifies an outbound connection attempt to a known command and control server for the Win.Backdoor.CSBundle_Original malware, indicating a potential attempt to obtain additional capabilities.""
     }
 ][
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1526"",
     ""Technique Name"": ""Cloud Service Discovery"",
     ""Quotes"": """"Cloud Service Discovery techniques involve identifying and enumerating cloud services running on a system after gaining access. This rule detects outbound traffic from an internal network to an external web server, which is consistent with adversaries attempting to discover and enumerate cloud services running on the compromised system."""",
     ""Explanation"": ""This rule is triggered when an attempt to connect to a known malicious IP address is detected.""
   }
 ][
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1004"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data using non-standard or undocumented encryption algorithms or methodologies to achieve persistence or evasion. The rule detects an outbound connection to a remote server using an uncommon HTTP header, specifically ""Cookie: SIDCC=AN0-TYutOSq-fxZK6e4kagm70VyKACiG1susXcYRuxK08Y-rHysliq0LWklTqjtulAhQOPH8uA"", which could be an indicator of using non-standard encryption or data obfuscation for persistence or evasion."""",
     ""Explanation"": ""The rule describes a stager outbound connection attempt, and stagers are often used to decrypt and load the second-stage malware payload. The presence of the uncommon HTTP header in the rule suggests that the second-stage payload might be encrypted using a non-standard encryption algorithm.""
   }
 ][
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1564"",
     ""Technique Name"": ""Hide Artifacts"",
     ""Quotes"": ""Hide Artifacts techniques involve intentionally concealing actions or artifacts on a system to avoid detection or hinder analysis. This rule identifies an attempt to establish an outbound connection to a command-and-control server, but the traffic is disguised as a legitimate request to a ""/api/v1/user"" endpoint. By using an ordinary-looking URI and HTTP headers, the attacker attempts to hide the malicious activity from security tools."""",
     ""Explanation"": ""Traffic is disguised as a legitimate request to a \""/api/v1/user\"" endpoint.""
   },
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1070"",
     ""Technique Name"": ""Indicator Removal"",
     ""Quotes"": ""Indicator Removal techniques involve deleting or modifying artifacts generated within systems to remove evidence of presence or hinder defenses. This rule detects an attempt to establish an outbound connection to a command-and-control server, but the attacker is also attempting to remove evidence of their activity by disguising the traffic as a legitimate request using an ordinary-looking URI and HTTP headers."",
     ""Explanation"": ""Attacker is disguising the traffic as a legitimate request to a \""/api/v1/user\"" endpoint.""
   },
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1562"",
     ""Technique Name"": ""Impair Defenses"",
     ""Quotes"": ""Impair Defenses techniques involve maliciously modifying components of a victim environment in order to hinder or disable defensive mechanisms. This rule detects an attempt to impair defenses by establishing an outbound connection to a command-and-control server. By establishing this connection, the attacker can potentially gain access to the victim's system and disable security controls."",
     ""Explanation"": ""Attacker is attempting to impair defenses by establishing an outbound connection to a command-and-control server.""
   },
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1570"",
     ""Technique Name"": ""Lateral Tool Transfer"",
     ""Quotes"": ""Lateral Tool Transfer techniques involve transferring tools or other files between systems in a compromised environment. This rule detects a malware dropper that attempts to download additional malicious payloads or tools to the victim's system using an outbound connection to a command-and-control server. This is a common method used by attackers to move laterally within a compromised network and establish persistence."",
     ""Explanation"": ""Malware dropper attempting to download malicious payloads or tools to the victim's system using an outbound connection to a command-and-control server.""
   },
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": ""File and Directory Discovery techniques involve identifying and locating files and directories within a system or network. This rule detects an attempt to access sensitive files or directories by using a command line or script to enumerate the file system. Attackers may use this technique to identify critical system files or directories that can be targeted for compromise or exploitation."",
     ""Explanation"": ""Attacker attempting to access sensitive files or directories by using a command line or script to enumerate the file system.""
   }
 ][
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1008"",
     ""Technique name"": ""Fallback Channels"",
     ""Quotes"": """"Fallback Channels techniques involve establishing or using secondary or alternative communication methods to maintain connectivity in case a primary channel is lost or compromised. The rule detects outbound connections to a C&C server used by the Win.Backdoor.CSBundle_Original malware, indicating that the malware is attempting to establish a fallback channel to ensure continued communication with the C&C server."""",
     ""Explanation"": ""The alert indicates outbound attempt malware communication with a C&C server.""
   },
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve using external, often cloud-based services to facilitate remote access, management, or other functionality. The rule detects outbound connections to a C&C server used by the Win.Backdoor.CSBundle_Original malware, indicating that the malware is using an external remote service to facilitate communication with the C&C server."""",
     ""Explanation"": ""The alert indicates outbound attempt malware communication with a C&C server.""
   },
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1187"",
     ""Technique name"": ""Forced Authentication"",
     ""Quotes"": """"Forced Authentication techniques involve coercing or tricking users into providing their credentials or performing authentication actions. The rule detects outbound connections to a C&C server used by the Win.Backdoor.CSBundle_Original malware, indicating that the malware may be attempting to trick users into providing their credentials or performing authentication actions."""",
     ""Explanation"": ""C&C server likely attempting to trick a user to provide user credentials""
   }
 ][
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1568"",
     ""Technique name"": ""Dynamic Resolution"",
     ""Quotes"": """"Dynamic Resolution techniques enable adversaries to dynamically establish connections to command and control infrastructure to evade common detections and remediations. The rule detects outbound connections to a specific domain (/api/v1/user) from a compromised host, which is a common method used by malware to establish communication with its command and control server."""",
     ""Explanation"": ""The rule looks for a specific pattern of HTTP traffic that is indicative of malware attempting to establish communication with a command and control server.""
   }
 ][
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1589"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques attempt to trick people into divulging sensitive information such as usernames, passwords, and credit card details. The rule indicates an outbound connection to an API endpoint ('/api/v1/user') from a potentially compromised host, which suggests that the attacker may be attempting to steal user credentials via phishing or other social engineering tactics."""",
     ""Explanation"": ""This rule detects phishing activity.""
   },
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve monitoring network traffic to capture sensitive data, such as credentials and network configurations. The rule triggers when a host is attempting to establish an outbound connection to a suspicious IP address. The attacker may be using network sniffing techniques to eavesdrop on the network and steal sensitive data."""",
     ""Explanation"": ""This rule detects suspiciously behaving network traffic.""
   }
 ][
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing a covert communication channel with a remote actor either to relay stolen information or to receive instructions from a threat actor controller. Backdoors are used for remote administrative access into compromised hosts or systems, allowing for exfiltration of data or execution of arbitrary commands."""",
     ""Explanation"": ""This alert is detecting an outbound connection from a compromised internal host to a known Win.Trojan.CSBundle_Original stager (backdoor) server. This behaviour is consistent with attempts by the malware to establish a command and control channel.""
   }
 ][
   {
     ""sid"": ""56599"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a \""blind SQL injection\"" issue.""
   }
 ][
         ""sid"": ""56599"",
         ""Technique ID"": ""T1092"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control (C2) techniques are used by adversaries to communicate with controlled systems and issue commands, as well as to receive data from compromised systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]","['T1059', 'T1190', 'T1588', 'T1526', 'T1004', 'T1564', 'T1070', 'T1562', 'T1570', 'T1083', 'T1008', 'T1133', 'T1187', 'T1568', 'T1589', 'T1110', 'T1105', 'T1190', 'T1092']",['T1043']
48502,"[
     {
         ""sid"": ""48502"",
         ""Technique ID"": ""T1105"",
         ""Technique Name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools from an external source into the victim environment to support malicious activity. The rule detects an attempt to download a variant of the Delete Trojan, which is a common tool used by adversaries to steal sensitive data, disable security software, and provide remote access to a compromised system."""",
         ""Explanation"": ""The alert indicates the detection of a malware download, specifically a variant of the Delete Trojan, which suggests an attempt to ingress a tool for malicious purposes.""
     },
     {
         ""sid"": ""48502"",
         ""Technique ID"": ""T1071"",
         ""Technique Name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve stealing data from a victim environment for subsequent use or transfer. This rule detects an attempted download of the Delete Trojan, which is frequently employed by adversaries to exfiltrate sensitive information from the victim's system."""",
         ""Explanation"": ""The malware being downloaded, the Delete Trojan, has capabilities that allow it to exfiltrate data, making T1071 a relevant technique.""
     }
 ][
   {
     ""sid"": ""48502"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent messages to trick users into clicking malicious links or opening attachments that may lead to the download of malware. The rule detects an attempt to download malware (‘Win.Tool.Delete’) from a malicious link or attachment in an email, which is a common phishing tactic."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""48502"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data or communications at rest or in transit to protect it from unauthorized access or use. The rule's content refers to a 'variant' of the 'Delete' malware, which is known to employ encryption techniques to evade detection and analysis by security tools."""",
         ""Explanation"": ""The event is generated when an attempt is made to download a variant of the Win.Tool.Delete malware tool, which is known to use encryption to evade detection.""
     ][
   {
     ""sid"": ""48502"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve stealing credentials to access sensitive data including passwords, hashes, or other authentication information. This rule detects the download of a known credential dumping tool, which is used to steal credentials from memory or disk and compromise victim systems."""",
     ""Explanation"": ""This event is generated when a malware downloads a credential dumping tool.""
   }
 ][
   {
     ""sid"": ""48502"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring malicious tools or files from an external source to a compromised system. This rule identifies malicious file data that is downloaded through an SMTP connection. Such techniques are often used to deliver malware, compromise systems, or move laterally within a network."""",
     ""Explanation"": ""file_data; content:\""/|00|q|00 20 00|&|00|&|00 20 00|s|00|h|00|u|00|t|00|d|00|o|00|w|00|n|00 20 00|/|00|r|00 20 00|/|00|f|00 20 00|/|00|t|00 20 00|0|00|0|00|\"",fast_pattern,nocase indicates malicious content is being downloaded.""
   }
 ][
   {
     ""sid"": ""48502"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques often involve adversaries leveraging externally exposed services to establish a foothold within a network or maintain persistence. This rule detects an attempt to download a variant of the 'Win.Tool.Delete' malware via an SMTP server, indicating that an attacker is exploiting the SMTP service to deliver malicious payloads."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""48502"",
     ""Technique ID"": ""T1568"",
     ""Technique Name"": ""Dynamic Resolution"",
     ""Quotes"": """"Dynamic Resolution techniques involve establishing connections to C2 infrastructure using dynamically generated domain names, IP addresses, or other identifiers to evade detection. The rule detects an attempt to download the Delete malware tool variant, which is known to use dynamic DNS services to communicate with its C2 server."""",
     ""Explanation"": ""The rule detects traffic that matches the signature of the Win.Tool.Delete malware tool variant, which is known to download its payload from a remote server.""
   }
 ][
   {
     ""sid"": ""48502"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting a vulnerability in a web application to gain unauthorized access or execute arbitrary code on a user's system without requiring any user interaction. This rule detects an attempt to exploit a vulnerability in a Microsoft application (probably Internet Explorer) to download a malicious file, which is a common method used in drive-by compromise attacks."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""48502"",
         ""Technique ID"": ""T1119"",
         ""Technique name"": ""Automated Collection"",
         ""Quotes"": """"Automated Collection techniques involve using automated tools and scripts to collect information from systems and networks quickly and efficiently. This rule detects a malware variant attempting to download itself by analyzing file data, which is a common method used by automated collection tools to gather files and data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     ""sid"": ""48502"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
 ][
   {
     ""sid"": ""48502"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Install Rootkit"",
     ""Quotes"": """"Install Rootkit techniques involve installing a rootkit, which is a type of malware that provides the attacker with persistent, privileged access to a system. The rule detects the download of a file that contains a known rootkit, which suggests that the attacker is attempting to install a rootkit on the system."""",
     ""Explanation"": ""The rule triggers when a download is detected that is associated with a rootkit.""
   },
   {
     ""sid"": ""48502"",
     ""Technique ID"": ""T1106"",
     ""Technique Name"": ""Native API"",
     ""Quotes"": """"Native API techniques involve using the native operating system application programming interface (API) to execute behaviors. Rootkits often leverage native APIs to hide their presence and activities on the system, making them more difficult to detect and remove."""",
     ""Explanation"": ""The rule triggers when a download is detected that is associated with a rootkit.""
   }
 ]","['T1105', 'T1071', 'T1105', 'T1105', 'T1105', 'T1105', 'T1133', 'T1568', 'T1189', 'T1119', 'T1190', 'T1105', 'T1106']",['T1070']
45483,"[
   {
     ""sid"": ""45483"",
     ""Technique ID"": ""T1571"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that appear to come from a legitimate source to trick individuals into providing sensitive information or taking actions that could compromise their systems and assets. This rule detects an outbound connection to a known malicious website associated with phishing campaigns, which aims to lure victims into downloading malware or providing their credentials."""",
     ""Explanation"": ""This rule detects outbound connections to malicious websites, which may be used for phishing or other malicious purposes.""
   }
 ][
         ""sid"": ""45483"",
         ""Technique ID"": ""T1566"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques attempt to trick individuals into revealing sensitive information (e.g., passwords, financial data) by disguising themselves as trustworthy entities. This rule detects a variant of the Pdf.Phishing.Agent malware attempting to establish an outbound connection to a malicious domain, indicating an attempt to redirect users to a phishing site for credential harvesting."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     ""sid"": ""45483"",
     ""Technique ID"": ""T1499"",
     ""Technique name"": ""Cloud Account Compromise"",
     ""Quotes"": """"Cloud Account Compromise techniques involve exploiting a misconfigured or vulnerable cloud account to gain access to cloud assets and resources."""",
     ""Explanation"": ""This event is generated when activity relating to phishing is detected.""
 ][
   {
     ""sid"": ""45483"",
     ""Technique ID"": ""T1106"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or creating malicious websites to trick users into revealing sensitive information or downloading malware. The rule detects outbound connections to a specific URL (/cache/dropbox1/dropbox/) that is associated with a known phishing campaign involving fake Dropbox notifications. Phishing attacks often use URLs that resemble legitimate websites to deceive users."""",
     ""Explanation"": ""This event is generated when malicious file activity is detected.""
   }
 ][
         ""sid"": ""45483"",
 ""Technique ID"": ""T1559"",
 ""Technique name"": ""Inter-Process Communication"",
 ""Quotes"": """"Inter-Process Communication (IPC) techniques involve using IPC mechanisms within a compromised environment to facilitate communication and control between adversarial components, transfer data, or execute commands."""",
 ""Explanation"": ""This event is generated when activity relating to spyware malware is detected.""
     ][
   {
     ""sid"": ""45483"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Exploitation for Privilege Escalation"",
     ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting software vulnerabilities in an attempt to elevate privileges. This rule detects an outbound connection by the Pdf.Phishing.Agent malware to a remote server, which could be part of a post-exploitation phase where the malware attempts to elevate its privileges or exfiltrate sensitive data."""",
     ""Explanation"": ""This event is generated when an attempt to exploit the vulnerability in the Oracle WebLogic Server is detected""
   }
 ][
     {
         ""sid"": ""45483"",
         ""Technique ID"": ""T1484"",
         ""Technique name"": ""Domain Policy Modification"",
         ""Quotes"": ""\""Domain Policy Modification techniques involve modifying the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. The rule detects a Pdf.Phishing.Agent variant attempting to establish an outbound connection to a URL containing 'dropbox', which is a known technique used by phishing campaigns to redirect users to malicious websites. By compromising a domain's policies, adversaries can gain elevated privileges and establish persistence within the target environment."""",
         ""Explanation"": ""This rule detects malicious outbound connections initiated by the Pdf.Phishing.Agent malware variant, which are often used for data exfiltration or C2 communication.""
     }
 ][
         {
             ""sid"": ""45483"",
             ""Technique ID"": ""T1486"",
             ""Technique name"": ""Cloud Service Discovery"",
             ""Quotes"": """"Cloud Service Discovery techniques involve gathering information about available cloud services, such as services provided by AWS, Microsoft Azure, and Google Cloud Platform. The rule is designed to detect malicious communications to cloud services by monitoring outbound connections to cloud-based file-sharing services like Dropbox, indicating an attempt to exfiltrate confidential data or malware delivery."""",
             ""Explanation"": ""This event is generated when malicious outbound connection is detected.""
         },
         {
             ""sid"": ""45483"",
             ""Technique ID"": ""T1534"",
             ""Technique name"": ""Steal Token"",
             ""Quotes"": """"Steal Token techniques involve stealing tokens, such as OAuth tokens, that grant authenticated access to cloud services like Dropbox. The rule is looking for suspicious data transfer to cloud services, which may indicate an attempt to exfiltrate data using stolen tokens."""",
             ""Explanation"": ""This event is generated when a token is stolen.""
         }
     ][
   {
     ""sid"": ""45483"",
     ""Technique ID"": ""T1481"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Adversaries may encrypt data to protect it in transit or storage to maintain confidentiality, which can make data recovery more difficult for defenders. Encrypted data may also serve as an indicator of adversarial presence or activity, such as when adversaries attempt to encrypt operational data on a victim system as part of data exfiltration."""",
     ""Explanation"": ""This rule detects outbound connections to a malicious domain (/cache/dropbox1/dropbox/) associated with Pdf.Phishing.Agent malware, which is known to encrypt data for exfiltration.""
   }
 ][
         ""sid"": ""45483"",
         ""Technique ID"": ""T1048"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve hiding a malicious payload within another seemingly legitimate file or data stream to evade detection or bypass access controls. This rule detects outbound connections associated with the Pdf.Phishing.Agent trojan, which uses a malicious PDF document to infect a system and masquerade as a legitimate Dropbox file to evade detection and exfiltrate data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""45483"",
     ""Technique ID"": ""T1581"",
     ""Technique name"": ""Phishing for Information"",
     ""Quotes"": """"Phishing for Information techniques involve sending emails that mimic genuine sources to deceive recipients into revealing sensitive information, such as login credentials or financial data. The rule is triggered when an outbound HTTP connection is made to a known phishing URL that impersonates a legitimate service (e.g., Dropbox). The URL contains keywords like ""cache"" and ""dropbox,"" which are common indicators of phishing attempts."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""45483"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Network Traffic Redirection"",
     ""Quotes"": """"Network Traffic Redirection techniques involve redirecting network traffic to a different destination than intended, often to capture sensitive information or spread malware. The rule detects a connection to a known phishing URL that may redirect users to a malicious site."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1571', 'T1566', 'T1499', 'T1106', 'T1559', 'T1068', 'T1484', 'T1486', 'T1534', 'T1481', 'T1048', 'T1581', 'T1105']",['T1102']
42836,"[
         ""sid"": ""42836"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Data Encrypted"",
         ""Quotes"": """"Data Encrypted techniques involve encrypting data on target systems or in large numbers of systems in a network to interrupt availability to system and network resources. This rule detects a Chopper web shell connection, which is commonly used by attackers to remotely execute arbitrary commands and potentially encrypt data as part of a ransomware attack."""",
         ""Explanation"": ""This event is generated when malware is detected attempting to encrypt data on the system.""
     ][
   {
     ""sid"": ""42836"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Data Encrypted on Transport"",
     ""Quotes"": """"Data Encrypted on Transport techniques involve hiding the actual data within network traffic by encrypting it, making it more difficult to detect malicious activity or identify sensitive information. The rule detects an attempt to transfer data using the Chopper web shell, which is a backdoor that allows attackers to remotely control infected systems. The data is encrypted using an eval() function, which makes it difficult to analyze and identify the malicious payload."""",
     ""Explanation"": ""This rule should be categorized as it detects a connection to a known malicious website used for command and control.""
   }
 ][
     ""sid"": ""42836"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script or code that provides remote access to a web server or application. The rule detects an attempt to establish a web shell connection using a PHP web shell, specifically targeting the \""get_magic_quotes_gpc\"" function to bypass potential security measures."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
     {
         ""sid"": ""42836"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web shells are malicious scripts that allow adversaries to execute commands and control a web server remotely. This rule detects an HTTP POST request containing a PHP payload that uses the PHP 'get_magic_quotes_gpc()' function to check for magic quotes support and then strips slashes from the '_POST' variable. This is a common technique used by web shells to bypass input validation and execute arbitrary code."""",
         ""Explanation"": ""This rule detects connections to web shells, which are often used by attackers to gain remote access to a web server.""
     }
 ][
     {
         ""sid"": 42836,
         ""Technique ID"": ""T1100"",
         ""Technique Name"": ""Web Shell"",
         ""Quotes"": """"Involves using a web shell, which is a script that allows for remote administration of a web server."""",
         ""Explanation"": ""The alert triggers when it detects a web shell connection from a Win.Backdoor.Chopper malware. Web shells are often used by adversaries as a way to maintain persistent access to compromised systems.""
     },
     {
         ""sid"": 42836,
         ""Technique ID"": ""T1046"",
         ""Technique Name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve identifying listening services on target networks or systems, often with the intent of exploiting vulnerabilities in those services."""",
         ""Explanation"": ""The alert triggers when it detects a network scan originating from the external network targeting HTTP ports on the internal network. This technique is often used by adversaries during reconnaissance to identify potential targets and vulnerabilities.""
     }
 ][
   {
     ""sid"": ""42836"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve deploying a web shell onto a compromised web server to maintain remote access and control of the system. The rule indicates the detection of a web shell connection to a compromised web server, specifically a connection to the Win.Backdoor.Chopper backdoor, which is commonly used by attackers to gain persistent access to web servers."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""42836"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Direct Web Session"",
     ""Quotes"": """"Direct Web Session techniques involve establishing a command and control channel directly over HTTP/HTTPS, allowing the adversary to interact with a compromised system remotely, exfiltrate data, and execute commands."""",
     ""Explanation"": ""This rule detects activity related to Win.Backdoor.Chopper, a Trojan.Backdoor that connects to a remote server using HTTP/HTTPS, which is consistent with the Direct Web Session technique.""
   }
 ][
         ""sid"": ""42836"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell, a malicious script that provides a command-line interface to a remote system via a web request, to execute commands and interact with a compromised system. This rule detects an attempt to establish a web shell connection to a compromised system using the Chopper backdoor, which is known for its use of the '@eval(get_magic_quotes_gpc()?stripslashes($_POST[' syntax."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""42836"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web shells are malicious scripts that provide adversaries with a remote interface to execute commands on a victim system. This rule detects an attempt to establish a web shell connection using the Chopper backdoor, which is a common technique used by adversaries to maintain remote access to compromised systems through a web interface."""",
     ""Explanation"": "" The traffic is initiated from an external network to internal HTTP ports, indicating an attempt to connect to a web server on the internal network. The rule specifically detects the presence of a web shell connection, which is a common technique used by attackers to gain remote access and control of a compromised system.""
   }
 ][
         ""sid"": ""42836"",
         ""Technique ID"": ""T1100"",
         ""Technique Name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell to establish a remote connection to a compromised web server and execute arbitrary commands. This rule detects a web shell connection attempt to a compromised web server using the 'Chopper' web shell, which is a common tool used by attackers to maintain persistent access to compromised systems and execute malicious commands."""",
         ""Explanation"": ""Web shells are often used by attackers to maintain persistent access to a compromised system and execute arbitrary commands.""
     ][
         ""sid"": ""42836"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve establishing an interactive command interpreter on a remote system via a web server, often by uploading a malicious PHP script, which allows the attacker to execute arbitrary commands on the system from a remote location. This rule detects a connection attempt to a Chopper web shell, a common tool attackers use to gain remote access to compromised systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]","['T1100', 'T1100', 'T1100', 'T1100', 'T1100', 'T1046', 'T1100', 'T1100', 'T1100', 'T1100', 'T1100', 'T1100']","['T1505', 'T1219']"
48818,"[
   {
     ""sid"": ""48818"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve maintaining persistent, covert channels of communication into and out of the victim network. The rule detects outgoing connections to known command and control servers for the Js.Trojan.Agent variant, which indicates that an infected host is attempting to communicate with a remote attacker-controlled server."""",
     ""Explanation"": ""This rule detects the outbound connection of Js.Trojan.Agent variant, a known malware that uses various techniques to establish command and control with a remote server. The malware uses these channels to receive instructions, exfiltrate data, and perform malicious activities.""
   }
 ][
     {
         ""sid"": ""48818"",
         ""Technique ID"": ""T1408"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve attackers modifying the sender information in network communications to appear as a legitimate or trusted entity. This rule detects an outbound connection to a known command and control server associated with a JavaScript Trojan (Js.Trojan.Agent) that utilizes HTTP header manipulation to conceal its true sender and masquerade as a legitimate web browser ('xmsSofts_1.0.0_') to evade detection."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""48818"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve modifying data to evade detection or to encode malicious content within innocuous files or network traffic."",
     ""Explanation"": ""This event is generated when Js.Trojan.Agent makes outbound connections.""
   }
 ][
         ""sid"": ""48818"",
         ""Technique ID"": ""T1013"",
         ""Technique name"": ""Lateral Movement"",
         ""Quotes"": """"Lateral Movement techniques involve moving across a network from one system to another to reach a desired target. This rule detects outbound communication from a host infected with the Js.Trojan.Agent variant, indicating an attempt to establish connections with other systems on the network, which is a common method used by malware to spread and propagate within a network."""",
         ""Explanation"": ""An event indicating a Js.Trojan.Agent variant outbound connection was detected.""
     ][
   {
     ""sid"": ""48818"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve transferring files or data from a compromised system to a remote location over a command and control channel. The rule pertains to the activity of the 'Js.Trojan.Agent' malware variant, which establishes outbound connections to exfiltrate data or receive commands."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""48818"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects a connection to Js.Trojan.Agent, which is a variant of a malware that is designed to capture user input, such as credentials and other sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""48818"",
     ""Technique ID"": ""T1114"",
     ""Technique name"": ""Email Collection"",
     ""Quotes"": """"Email Collection techniques involve the unauthorized acquisition of email messages, including attachments, to obtain sensitive information. This rule detects an outbound connection from the internal network to an external IP address associated with Js.Trojan.Agent, which is a common method used by malware to send stolen email messages to remote servers."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""48818"",
         ""Technique ID"": ""T1569"",
         ""Technique Name"": ""System Services"",
         ""Quotes"": """"System Services techniques involve using legitimate system services to execute commands or programs. This rule detects an outbound connection to a known malware command and control (C2) server, indicating the presence of malware that may be abusing legitimate system services to communicate with its C2."""",
         ""Explanation"": ""This rule detects connection to malware command and control IP address.""
     ][
   {
     ""sid"": ""48818"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Application Layer Protocol"",
     ""Quotes"": """"Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic"""",
     ""Explanation"": ""This rule looks for outbound connections from hosts on the internal network to external hosts on HTTP ports using a specific User-Agent header. This technique is commonly used by malware to communicate with command and control servers.""
   },
   {
     ""sid"": ""48818"",
     ""Technique ID"": ""T1134"",
     ""Technique Name"": ""Access Token Manipulation"",
     ""Quotes"": """"Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls"""",
     ""Explanation"": ""Malware often uses access token manipulation techniques to elevate privileges and gain access to sensitive data or system resources. This rule looks for outbound connections from hosts on the internal network to external hosts on HTTP ports using a specific User-Agent header, which could be an indication of malware attempting to communicate with a command and control server.""
   },
   {
     ""sid"": ""48818"",
     ""Technique ID"": ""T1557"",
     ""Technique Name"": ""Adversary-in-the-Middle"",
     ""Quotes"": """"Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as Network Sniffing, Transmitted Data Manipulation, or replay attacks (Exploitation for Credential Access)"""",
     ""Explanation"": ""This rule looks for outbound connections from hosts on the internal network to external hosts on HTTP ports using a specific User-Agent header. This technique could be used by an adversary to position themselves as a man-in-the-middle between the internal host and the external server, allowing them to intercept and manipulate network traffic.""
   }
 ][
   {
     ""sid"": ""48818"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve establishing and maintaining communications with remote systems to facilitate command and control functions of adversaries. The rule detects outbound connections from the internal network to external IP addresses associated with JS.Trojan.Agent, suggesting that infected hosts are communicating with a remote command and control server for malicious purposes."""",
     ""Explanation"": ""The rule specifically identifies the presence of the Js.Trojan.Agent malware, which is a remote access trojan that allows attackers to control and manipulate compromised systems.""
   },
   {
     ""sid"": ""48818"",
     ""Technique ID"": ""T1136"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising malicious content or activity to appear legitimate or benign. The rule detects an outbound connection from the internal network to an external IP address associated with JS.Trojan.Agent while using a custom user agent string ('xmsSofts_1.0.0_') in the HTTP header. This behavior is often used by malware to evade detection by masquerading as legitimate traffic."""",
     ""Explanation"": ""The rule identifies a deviation from the norm by detecting a custom user agent string, which is a common technique used by malware to avoid detection and blend in with legitimate traffic.""
   }
 ][
     ""sid"": ""48818"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve gathering information about the configuration of local or remote systems and networks. This rule detects outbound communication to a domain resolving to an IP address hosting a known C2 server. This characteristic is common across multiple RSD techniques and allows the adversary to discover the target system's address and operating system information."""",
     ""Explanation"": ""This event is generated when a connection to a remote system is detected.""
 ]","['T1059', 'T1408', 'T1071', 'T1013', 'T1041', 'T1056', 'T1114', 'T1569', 'T1071', 'T1134', 'T1557', 'T1071', 'T1136', 'T1021']",['T1043']
41920,"[
     ""sid"": ""41920"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve repeatedly attempting to log in to a system using different credentials in order to guess the correct combination. This rule detects brute force attacks against the authentication token of a McAfee Virus Scan Linux web application, where an adversary is trying to guess the valid 'nailsSessionId' cookie by sending multiple requests with different values."""",
     ""Explanation"": ""This event is generated when the Number of failed authentication attempts exceeds the defined threshold.""
 ][
     ""sid"": ""41920"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force attacks involve systematically trying different credentials until the correct one is found. This rule detects a brute-force attempt on the McAfee Virus Scan Linux authentication token, where multiple login attempts are made with the 'Cookie|3A| nailsSessionId=' credential, indicating an attempt to guess the correct authentication token."""",
     ""Explanation"": ""This event is generated when there is a brute force attack on a web service using authentication tokens.""
 ][
   {
     ""sid"": ""41920"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques involve using automated methods to attempt to guess valid credentials, such as usernames and passwords, through repeated trial-and-error. This rule detects an attempt to brute-force the authentication token for the McAfee Virus Scan Linux web application, which is a common method used by attackers to gain unauthorized access to web applications."""",
     ""Explanation"": """"McAfee Virus Scan for Linux 8.8.0 allows remote attackers to bypass authentication limits and scan arbitrary files via unspecified vectors.""
   }
 ][
         ""sid"": ""41920"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute Force techniques involve using automated methods to repeatedly try different combinations of usernames and passwords until valid credentials are discovered. The rule matches traffic containing cookie information with 'nailsSessionId' that corresponds to an attempted authentication to an SMB server, indicating a brute-force attempt to gain access to an SMB share."""",
         ""Explanation"": ""This rule detects brute force attempts on an SMB server.""
     ][
     ""sid"": ""41920"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques involve repeatedly trying different combinations of usernames and passwords to gain access to a system or account."""",
     ""Explanation"": ""This rule detects authentication token brute force attempts.""
 ][
         ""sid"": ""41920"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Password Spraying"",
         ""Quotes"": """"Password Spraying is a brute-force technique that involves attempting to authenticate with a common password across multiple accounts. This rule detects an attempt to brute-force logins for the McAfee Virus Scan Linux web application by trying the same password against multiple usernames, which is a common tactic used in password spraying attacks. The rule specifically looks for authentication attempts with the username 'nails' and a password starting with '0409/'."""",
         ""Explanation"": ""This event is generated when there is an attempted authentication with the username 'nails' and a password starting with '0409/'.""
     ][
         ""sid"": ""41920"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute force techniques involve forcefully attempting to gain access to a target system or network by repeatedly trying different login credentials or exploiting weak encryption. This rule detects brute force attempts against the McAfee Virus Scan Linux web application by monitoring for HTTP traffic containing specific parameters related to login attempts and cookie authentication."""",
         ""Explanation"": ""The rule matches traffic that is indicative of a brute force attack against the web application, which is attempting to compromise authentication.""
     ][
         ""sid"": ""41920"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute force techniques involve using trial and error to guess credentials or force entry. This rule detects an attempt to brute-force the authentication token for McAfee Virus Scan Linux by sending multiple requests with different 'nailsSessionId' values, which is a method commonly used to gain unauthorized access to web applications by repeatedly trying different authentication credentials."""",
         ""Explanation"": ""The rule triggers an alert when it detects multiple attempts to access the McAfee Virus Scan Linux web application with varying 'nailsSessionId' values, indicating a brute force attack.""
     ][
   {
     ""sid"": ""41920"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve automating the process of guessing or attempting numerous combinations of authentication credentials to gain unauthorized access to a system or account."""",
     ""Explanation"": ""The rule is monitoring the authentication tokens for the McAfee Virus Scan Linux web application, which could indicate an attacker using brute force techniques to guess the authentication token in order to gain unauthorized access to the web application.""
   }
 ][
   {
     ""sid"": ""41920"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques involve attempting to guess or crack credentials by trying multiple possible combinations of characters. This rule detects an attempt to Brute Force a McAfee Virus Scan Linux authentication token by repeatedly sending requests with different 'nailsSessionId' cookie values to a web server on port 55443."""",
     ""Explanation"": ""The rule triggers on brute force attacks attempting to crack credentials of a McAfee Virus Scan web application.""
   }
 ][
   {
     ""sid"": ""41920"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve repeatedly submitting credentials or other information in an attempt to gain access to a system or resource. This rule specifically identifies a brute force attack against McAfee Virus Scan Linux's web authentication, which is a common method to gain unauthorized access to web applications."""",
     ""Explanation"": ""This Snort rule detects brute force attacks by counting the number of failed authentication attempts within a short time frame.""
   },
   {
     ""sid"": ""41920"",
     ""Technique ID"": ""T1589"",
     ""Technique Name"": ""Credential Stuffing"",
     ""Quotes"": """"Credential stuffing techniques involve using stolen credentials from one system to attempt to access other systems, exploiting the reuse of credentials across multiple accounts. This rule detects an attempt to use a compromised 'nailsSessionId' cookie, a common tactic in credential stuffing attacks where attackers use previously stolen credentials to gain access to other accounts."""",
     ""Explanation"": ""This rule specifically looks for brute force attempts on the web interface of McAfee Virus Scan Linux, which could involve credential stuffing.""
   }
 ]","['T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1589']",['T1110']
33939,"[
         ""sid"": ""33939"",
         ""Technique ID"": ""T1153"",
         ""Technique name"": ""Install Rootkit"",
         ""Quotes"": """"Installing a rootkit is a tactic that allows adversaries to maintain persistent access and control over a compromised system through stealthy manipulation of the operating system's core functions."",
         ""Explanation"": ""The rule identifies the attachment of an executable control panel file (.cpl), which is often used by rootkits to provide a graphical user interface for managing the compromised system and maintaining persistence.""
     ][
   {
     ""sid"": ""33939"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve malicious websites or compromised web pages that host malicious content designed to automatically exploit vulnerabilities in a user's system to install malware or execute malicious code."""",
     ""Explanation"": ""This rule detects malicious email attachments with a filename extension of .cpl, which is commonly used by malware authors to disguise executable files as control panel items. When a user opens the attachment, it can potentially execute malicious code on the system.""
   }
 ][
         ""sid"": ""33939"",
         ""Technique ID"": ""T1187"",
         ""Technique Name"": ""Email Attachment"",
         ""Quotes"": """"Email Attachment techniques typically involve sending emails with malicious attachments that, when opened, can lead to the installation of malware or other malicious behavior. This rule detects an email with an attachment having the '.cpl' file extension, which is a common technique used by attackers to deliver malware through email attachments."""",
         ""Explanation"": ""This event is generated when an email attachment is detected within an email message.""
     ][
   {
     ""sid"": ""33939"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking a user into executing malicious code, often by disguising the malicious code as a legitimate file or application. This rule detects an email attachment with a filename ending in '.cpl', which is a common technique used by malware to trick users into executing malicious code by disguising it as a Control Panel applet."""",
     ""Explanation"": ""This rule identifies an email attachment with a filename ending in '.cpl', which is a common tactic used by malware to disguise itself as a legitimate Control Panel applet and trick users into executing malicious code.""
   }
 ][
   {
     ""sid"": ""33939"",
     ""Technique ID"": ""T1063"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": ""\""Masquerading techniques involve concealing behaviors or artifacts to make them appear legitimate or benign to users and/or security tools. The rule detects an executable control panel file (.cpl) attached to an email, which is a common technique used by attackers to disguise malicious payloads as legitimate system files."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""33939"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": ""\""External Remote Services techniques involve using services that run on publicly accessible hosts outside of the organization's network.\"""",
     ""Explanation"": ""This rule detects an attachment with a filename extension of '.cpl' in an email message. Control Panel extensions (CPLs) are executable files that can be used to configure various settings on a Windows system. This rule suggests that the detected email attachment may contain malicious content that could be executed when the attachment is opened or saved.""
   }
 ][
   {
     ""sid"": ""33939"",
     ""Technique ID"": ""T1166"",
     ""Technique Name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve creating or modifying system process to gain persistence or escalate privileges. This rule detects the presence of an executable Control Panel (.cpl) file attachment, which is commonly used by malware to create or modify system processes to establish persistence."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""33939"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Phishing for Information"",
     ""Quotes"": """"Phishing for Information techniques involve sending emails with malicious attachments to trick users into opening them and revealing sensitive information. This rule detects a malicious email attachment with an '.cpl' extension, which is often used by attackers to execute arbitrary code on victim systems when the attachment is opened."""",
     ""Explanation"": ""This event is generated when a malicious attachment is detected.""
   }
 ][
   {
     ""sid"": ""33939"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""The rule detects an executable control panel file (.cpl) attachment in an email, which is a common technique used by malware to gain control of a system.""
   }
 ][
     ""sid"": ""33939"",
     ""Technique ID"": ""T1080"",
     ""Technique name"": ""Taint Shared Content"",
     ""Quotes"": """"Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories."""",
     ""Explanation"": ""This event is generated when a file attachment with an executable control panel file (.cpl) is detected. Executable control panel files can be used to execute arbitrary code on a system, and are commonly used by malware to gain persistence or control of a system.""
 ][
         ""sid"": ""33939"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""User Execution"",
         ""Quotes"": """"User Execution techniques involve tricking users into executing malicious code, typically by convincing them to open a file, click on a link, or run a specific command. This rule detects the presence of an executable control panel file attached to an email message as part of an email-based malware campaign."""",
         ""Explanation"": ""The rule looks for emails that contain attachments with file extensions associated with executable control panel files (.cpl), which are often used as a way to execute malicious code.""
     ]","['T1153', 'T1189', 'T1187', 'T1204', 'T1063', 'T1133', 'T1166', 'T1498', 'T1190', 'T1080', 'T1204']",['T1218']
34709,"[
         ""sid"": ""34709"",
         ""Technique ID"": ""T1498"",
         ""Technique name"": ""Denial of Service"",
         ""Quotes"": """"Denial of Service techniques involve disrupting normal operations or preventing access to critical resources, such as networks, systems, and services. This rule detects a denial-of-service attempt against a Kerberos service by sending malformed KRB5_SENDAUTH_V1.0 packets, which can cause the service to crash or become unavailable."""",
         ""Explanation"": ""This event is generated when a MIT Kerberos 5 krb5_read_message denial of service attempt is detected.""
     ][
         ""sid"": ""34709"",
         ""Technique ID"": ""T1498"",
         ""Technique name"": ""Denial of Service"",
         ""Quotes"": """"Denial of Service techniques involve disrupting the normal operation of a system by overwhelming it with requests or data, causing it to become unavailable or unresponsive. This rule detects a denial of service attack against the Kerberos protocol, where an attacker sends malformed KRB5_SENDAUTH_V1.0 packets to trigger a resource exhaustion issue in the target system."""",
         ""Explanation"": ""A MIT Kerberos 5 krb5_read_message denial of service attempt was detected.""
     ][
   {
     ""sid"": ""34709"",
     ""Technique ID"": ""T1498"",
     ""Technique Name"": ""Denial of Service"",
     ""Quotes"": """"Denial-of-Service (DoS) techniques involve overwhelming a target system with traffic or requests to disrupt or deny service to legitimate users."""",
     ""Explanation"": ""This rule triggers when a denial of service attempt is detected against an MIT Kerberos 5 service.""
   }
 ][
   {
     ""sid"": ""34709"",
     ""Technique ID"": ""T1498"",
     ""Technique Name"": ""Denial of Service"",
     ""Quotes"": """"Denial of Service techniques cause a loss or interruption in service or resource availability to users by exploiting resource exhaustion or configuration flaws in applications or systems."""",
     ""Explanation"": ""This rule detects a DoS attempt targeting MIT Kerberos 5's krb5_read_message function, which could lead to a denial of service condition.""
   }
 ][
         ""sid"": ""34709"",
         ""Technique ID"": ""T1490"",
         ""Technique name"": ""Inhibit System Recovery"",
         ""Quotes"": """"Inhibit System Recovery techniques involve disabling or removing mechanisms designed to restore a system to a previous state, such as backups and recovery consoles, to prevent forensic analysis and hinder recovery efforts. The rule detects a denial-of-service attack targeting the Kerberos authentication service, which can be used to disrupt network access and prevent users from logging into the system. By disrupting the authentication process, attackers may be able to inhibit the system's ability to recover from the attack."""",
         ""Explanation"": ""This event is likely the result of a network reconnaissance or DoS attack.""
     ][
         ""sid"": ""34709"",
         ""Technique ID"": ""T1495"",
         ""Technique name"": ""Firmware Corruption"",
         ""Quotes"": """"Firmware Corruption techniques involve modifying or corrupting firmware or BIOS settings to render devices inoperable or unable to boot. This rule detects a denial-of-service attack that targets vulnerabilities in the MIT Kerberos 5 krb5_read_message function, which can potentially disrupt the availability of systems relying on Kerberos authentication."""",
         ""Explanation"": ""This event is generated when a potential denial-of-service attack is detected.""
     ][
         ""sid"": ""34709"",
         ""Technique ID"": ""T1499"",
         ""Technique name"": ""Endpoint Denial of Service"",
         ""Quotes"": """"Endpoint Denial of Service (DoS) techniques involve overloading or crashing systems to disrupt services to legitimate users. This rule detects an attempt to exploit a denial of service vulnerability in MIT Kerberos 5's krb5_read_message function, which could allow an attacker to cause the Kerberos service to crash."""",
         ""Explanation"": ""An attempt to exploit a denial of service vulnerability in MIT Kerberos 5's krb5_read_message function, which could allow an attacker to cause the Kerberos service to crash.""
     ][
   {
     ""sid"": ""34709"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Denial of Service"",
     ""Quotes"": ""\""Denial of Service techniques involve disrupting the normal operation of a system or network by flooding it with traffic or exploiting a vulnerability to cause a crash.\"""",
     ""Explanation"": ""This rule detects an attempt to exploit a denial of service vulnerability in the MIT Kerberos 5 krb5_read_message function by sending a specially crafted message that causes the server to crash.""
   }
 ][
         ""sid"": ""34709"",
         ""Technique ID"": ""T1499"",
         ""Technique name"": ""Denial of Service"",
         ""Quotes"": """"Denial of Service techniques involve disrupting the availability of a system or service by consuming resources (e.g., CPU, memory, or network bandwidth) or preventing authorized access. This rule detects an attempt to exploit a denial of service vulnerability in the MIT Kerberos 5 krb5_read_message function, which can result in the targeted system becoming unresponsive."""",
         ""Explanation"": ""This rule detects an attempt to exploit a denial of service vulnerability in the MIT Kerberos 5 krb5_read_message function, which can result in the targeted system becoming unresponsive.""
     ][
   {
     ""sid"": ""34709"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve decoding or deobfuscating data to reveal its true meaning or functionality. This rule detects a denial of service (DoS) attack against a Kerberos server by sending a malformed KRB5_SENDAUTH_V1.0 message. The attacker may use obfuscation or encoding techniques to evade detection and make the attack more difficult to analyze."""",
     ""Explanation"": ""Deobfuscation of encoded Kerberos messages to reveal attack details.""
   },
   {
     ""sid"": ""34709"",
     ""Technique ID"": ""T1499"",
     ""Technique name"": ""Resource Depletion"",
     ""Quotes"": """"Resource Depletion techniques involve consuming excessive resources (e.g., CPU, memory, disk space) to disrupt system availability or performance. This rule detects a denial of service (DoS) attack against a Kerberos server by sending a malformed KRB5_SENDAUTH_V1.0 message. The attacker aims to exhaust the server's resources, causing it to become unavailable or unresponsive."""",
     ""Explanation"": ""Resource exhaustion by sending malformed Kerberos messages.""
   }
 ][
     ""sid"": ""34709"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Network Denial of Service"",
     ""Quotes"": """"Network Denial of Service (DoS) attacks occur when attackers attempt to disrupt the availability of a network resource to legitimate users. This rule detects an attempt to exploit a denial of service vulnerability in the Kerberos 5 krb5_read_message function. Successful exploitation could allow attackers to cause a DoS condition by sending specially crafted KRB5_SENDAUTH_V1.0 messages to the target system."""",
     ""Explanation"": ""This rule is an example of an IDS rule that detects a network denial of service attack.""
 ]","['T1498', 'T1498', 'T1498', 'T1498', 'T1490', 'T1495', 'T1499', 'T1498', 'T1499', 'T1498', 'T1499', 'T1498']",['T1550']
18329,"[
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1106"",
     ""Technique Name"": ""Access Software Control"",
     ""Quotes"": """"Access Software Control techniques involve compromising software or accessing software control features to manipulate software applications to carry out unauthorized operations."""",
     ""Explanation"": ""This rule detects an attempted ActiveX control manipulation in Internet Explorer. ActiveX controls are often used by attackers to execute malicious code or access sensitive information without user interaction.""
   },
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1543"",
     ""Technique Name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve creating new processes or modifying existing ones to perform malicious tasks or establish persistence."""",
     ""Explanation"": ""The rule detects an attempt to create a new ActiveX object, which is a common method used by attackers to create malicious processes or inject code into legitimate processes.""
   },
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using command and scripting interpreters to execute commands or scripts that can perform malicious actions."""",
     ""Explanation"": ""The rule detects an attempt to execute an ActiveX function call, which can be used to execute arbitrary commands or scripts.""
   }
 ][
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1123"",
     ""Technique Name"": ""Multi-Hop Proxy"",
     ""Quotes"": """"Multi-Hop Proxy techniques involve using multiple proxy servers to obfuscate the source of network traffic and potentially evade detection. This rule detects an attempt to exploit a vulnerability in Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control via a malicious website, which may involve leveraging a chain of proxy servers to hide the attacker's origin."""",
     ""Explanation"": ""This event is generated when an attempt is made to execute a function from the ActiveX control mshtml.dll.""
   },
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1572"",
     ""Technique Name"": ""Protocol Tunneling"",
     ""Quotes"": """"Protocol Tunneling techniques involve encapsulating network communications within a different protocol to bypass security controls or network restrictions. This rule detects an attempt to exploit a vulnerability in Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control via a malicious website, which may involve tunneling malicious traffic over a legitimate protocol such as HTTP or HTTPS to evade detection."""",
     ""Explanation"": ""This event is generated when an attempt is made to execute a function from the ActiveX control mshtml.dll.""
   },
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1090"",
     ""Technique Name"": ""Proxy"",
     ""Quotes"": """"Proxy techniques involve using a proxy server to redirect network traffic and potentially evade detection. This rule detects an attempt to exploit a vulnerability in Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control via a malicious website, which may involve using a proxy server to conceal the attacker's identity or location."""",
     ""Explanation"": ""This event is generated when an attempt is made to execute a function from the ActiveX control mshtml.dll.""
   }
 ][
     ""sid"": ""18329"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques are used to gain access to accounts when passwords are unknown or when password hashes are obtained. This rule detects an attempt to exploit a vulnerability in Microsoft Windows WMI Administrator Tools Object Viewer ActiveX function call access, which could allow an attacker to gain unauthorized access to the system."""",
     ""Explanation"": ""This event is generated when activity relating to brute force attacks is detected.""
 ][
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in the Microsoft WMI Object Viewer ActiveX control, which could allow an attacker to execute arbitrary code in the context of the user's browser."""",
     ""Explanation"": ""This rule is designed to detect attempts to exploit a vulnerability in the Microsoft WMI Object Viewer ActiveX control, which could allow an attacker to execute arbitrary code in the context of the user's browser.""
   },
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""Use Alternate Communication Channel"",
     ""Quotes"": ""\""Use Alternate Communication Channel techniques involve using nonstandard protocols or channels to communicate with command and control (C2) servers or transfer data. This rule detects the use of the ReleaseContext function to access the WMI Object Viewer ActiveX control, which could be an indication of an attempt to establish an alternate communication channel."""",
     ""Explanation"": ""This rule is designed to detect attempts to use the ReleaseContext function to access the WMI Object Viewer ActiveX control, which could be an indication of an attempt to establish an alternate communication channel.""
   }
 ][
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1064"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in Microsoft Windows WMI Administrator Tools Object Viewer ActiveX, which could allow an attacker to execute arbitrary code on the target system."""",
     ""Explanation"": ""This rule detects an attempt to exploit a buffer overflow vulnerability in the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control, which allows an attacker to execute arbitrary code on the target system. The rule matches on traffic that contains the function call """"ReleaseContext"""" from the ActiveX control, which is used to trigger the vulnerability.""
   }
 ][
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client applications, such as browsers or email clients, to execute arbitrary code on the victim's system. This rule detects an attempt to exploit a vulnerability in the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control, which could allow attackers to execute arbitrary code on the victim's system."""",
     ""Explanation"": ""Calls to ReleaseContext() ActiveX method of a specific class that can allow execution of arbitrary code.""
   },
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1212"",
     ""Technique name"": ""Exploitation for Credential Access"",
     ""Quotes"": """"Exploitation for Credential Access techniques involve exploiting vulnerabilities in software to collect credentials. This rule detects an attempt to exploit a vulnerability in the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control, which could allow attackers to collect credentials from the victim's system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1211"",
     ""Technique name"": ""Exploitation for Defense Evasion"",
     ""Quotes"": """"Exploitation for Defense Evasion techniques involve exploiting vulnerabilities in a system or application to bypass security features. This rule detects an attempt to exploit a vulnerability in the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control, which could allow attackers to bypass security features on the victim's system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1068"",
     ""Technique name"": ""Exploitation for Privilege Escalation"",
     ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting vulnerabilities in software to elevate privileges. This rule detects an attempt to exploit a vulnerability in the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control, which could allow attackers to elevate privileges on the victim's system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve tricking a user into visiting a malicious website, typically through a link in an email or a social media post. Once the user visits the website, a malicious script is executed in the user's browser, which may lead to the installation of malware or the compromise of sensitive information."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Microsoft Windows WMI Administrator Tools Object Viewer ActiveX, which can be used to execute arbitrary code in the context of the user who visited the malicious website.""
   }
 ][
     {
         ""sid"": ""18329"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Execution through API"",
         ""Quotes"": """"Execution through API techniques target the application programming interface (API) of a program or service to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit an ActiveX control vulnerability in Microsoft Windows WMI Administrator Tools Object Viewer to execute arbitrary code. An attacker could use this vulnerability to gain unauthorized access to the system and perform malicious actions."""",
         ""Explanation"": ""This rule is looking for an attempt to exploit a vulnerability in Microsoft's Windows Management Instrumentation (WMI) Administrator Tools Object Viewer ActiveX control. If exploited, this vulnerability could allow an attacker to execute arbitrary code on the vulnerable system. The rule uses a combination of file_data and pcre content inspection to detect this exploit attempt and can be used to block or alert on such attempts.""
     }
 ][
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1168"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve an adversary assuming the identity of another entity, such as a user or a system, to gain unauthorized access or evade detection. This rule detects an attempt to use a malicious ActiveX control named 'ReleaseContext' to masquerade as a legitimate component. ActiveX controls are commonly utilized by adversaries for malicious activities due to their ability to interact with the underlying system and perform unauthorized actions."""",
     ""Explanation"": ""This event is generated when an attempt is made to utilize a malicious Active-X control named 'ReleaseContext' for masquerading purposes on a Microsoft Windows system. The rule indicates that the adversary is attempting to impersonate a legitimate component to evade detection and gain unauthorized access to the system.""
   }
 ][
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1125"",
     ""Technique name"": ""Video Capture"",
     ""Quotes"": ""Video Capture techniques involve leveraging a computer's peripheral devices to capture video."",
     ""Explanation"": ""The rule detects the use of the ActiveX function ReleaseContext, which is used by video capture devices to access the video stream.""
   },
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1111"",
     ""Technique name"": ""ActiveX Control Manipulation"",
     ""Quotes"": ""ActiveX Control Manipulation involves abusing ActiveX controls for reconnaissance, exploitation, or privilege escalation."",
     ""Explanation"": ""The rule detects an attempt to access the ActiveX function ReleaseContext, which is a common technique used in ActiveX control manipulation attacks.""
   }
 ][
   {
     ""sid"": ""18329"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Active Directory Discovery"",
     ""Quotes"": """"Active Directory Discovery techniques allow adversaries to enumerate and interact with Active Directory objects to gather information and identify potential targets for attack. The rule detects an attempt to access the ReleaseContext function of the Windows Management Instrumentation (WMI) ActiveXObject, which is commonly used to interact with Active Directory and can be abused for reconnaissance and privilege escalation."""",
     ""Explanation"": ""This event is generated when an attempt to access the ReleaseContext function of the WMI ActiveXObject is detected, which could be used for Active Directory Discovery.""
   }
 ]","['T1106', 'T1543', 'T1059', 'T1123', 'T1572', 'T1090', 'T1110', 'T1190', 'T1204', 'T1064', 'T1203', 'T1212', 'T1211', 'T1068', 'T1189', 'T1059', 'T1168', 'T1125', 'T1111', 'T1110']",['T1047']
48531,"[
   {
     ""sid"": ""48531"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted Microsoft Internet Explorer 11 VBScript Execution Policy bypass through the use of the xml.transformNode() function, which can be used to bypass security restrictions and execute malicious code."""",
     ""Explanation"": ""Detects an attempt to bypass the IE execution policy, allowing scripts to run even when they are blocked.""
   }
 ][
         ""sid"": ""48531"",
         ""Technique ID"": ""T1167"",
         ""Technique name"": ""Browser Extensions"",
         ""Quotes"": """"Browser Extensions involve installing malicious browser extensions to capture keystrokes, cookies, or browser history, potentially including data from web applications."""",
         ""Explanation"": ""This rule is designed to detect attempts to exploit a vulnerability in Microsoft Internet Explorer's VBScript execution policy, which was addressed in MS16-098. Successful exploitation could allow an attacker to execute arbitrary code through the installation of a malicious browser extension.""
     ][
     {
         ""sid"": ""25101"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""Exploit Insecure Deserialization"",
         ""Quotes"": """"Exploit Insecure Deserialization techniques involve exploiting insecure deserialization of data in an application, which can allow adversaries to execute arbitrary code or gain unauthorized access to sensitive data. This rule detects an attempt to exploit a deserialization vulnerability in Apache JMeter using a crafted 'HeapDump' request, aimed at executing arbitrary Java code on the target system."""",
         ""Explanation"": ""Apache JMeter 5.4.1 and earlier allows remote attackers to execute arbitrary code via a crafted 'HeapDump' request. The issue exists in the Java serialization functionality.""
     },
     {
         ""sid"": ""199"",
         ""Technique ID"": ""T1202"",
         ""Technique name"": ""Exploitation for Privilege Escalation"",
         ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting vulnerabilities in software or operating systems to elevate privileges and gain unauthorized access to higher-level system resources or capabilities. This rule detects an attempt to exploit a privilege escalation vulnerability in the 'mshtml.dll' component of Microsoft Internet Explorer, allowing attackers to gain elevated privileges on the target system."""",
         ""Explanation"": ""An elevation of privilege vulnerability exists in the way that the Microsoft Graphics Component handles objects in memory. An attacker who successfully exploited the vulnerability could run arbitrary code with elevated privileges.""
     }
 ][
   {
     ""sid"": ""48531"",
     ""Technique ID"": ""T1137"",
     ""Technique Name"": ""Bypass User Account Control"",
     ""Quotes"": """"Bypass User Account Control (UAC) techniques involve bypassing the default settings that prevent applications from making unauthorized changes to the system. This rule identifies an attempt to bypass the Microsoft Internet Explorer 11 VBScript execution policy, which is a common method to bypass UAC and execute malicious scripts in a low-privileged context."""",
     ""Explanation"": ""The rule is attempting to detect the execution of a malicious VBScript by checking for the creation of a new HTML element using the ""document.getElementById"" method. This is an indication of malicious VBScript execution and can lead to compromising the system.""
   }
 ][
   {
     ""sid"": ""48531"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Insecure Deserialization"",
     ""Quotes"": """"Exploit Insecure Deserialization techniques involve exploiting a vulnerability in the deserialization process of an application to execute arbitrary code or achieve other malicious goals. This rule detects an attempt to bypass the VBScript execution policy in Microsoft Internet Explorer 11 by exploiting an insecure deserialization vulnerability, which could allow an attacker to execute arbitrary code in the context of the browser."""",
     ""Explanation"": ""This rule detects an attempt to exploit an insecure deserialization vulnerability in Microsoft Internet Explorer 11's VBScript engine. By exploiting this vulnerability, an attacker could execute arbitrary code in the context of the browser. This technique is consistent with the observed behavior in the rule.""
   },
   {
     ""sid"": ""48531"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve attackers tricking users into executing malicious code, such as by sending malicious attachments or phishing emails. This rule detects an attempt to execute VBScript code in Microsoft Internet Explorer 11, which could be achieved through user interaction, such as clicking on a malicious link or opening an infected attachment."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to execute VBScript code in Microsoft Internet Explorer 11. This technique is consistent with the observed behavior in the rule, as an attacker could trick a user into executing malicious VBScript code through various methods, such as phishing emails or malicious attachments.""
   }
 ][{""sid"": ""48531"", ""Technique ID"": ""T1187"", ""Technique name"": ""Forced Authentication"", ""Quotes"": """"Forced Authentication techniques force users to provide authentication information by automatically initiating the process or by deceiving users into providing their credentials. This rule detects an attempt to bypass the VBScript execution policy in Microsoft Internet Explorer 11, which could be used to force users to execute malicious scripts or access sensitive information."""", ""Explanation"": ""This event is generated when activity relating to malware is detected.""}][
   {
     ""sid"": ""48531"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": '""Drive-by Compromise techniques involve malicious actors redirecting users to compromised websites often spoofing legitimate websites to deliver malware or otherwise execute malicious code. This rule detects an attempt to exploit a known VBScript execution policy bypass vulnerability in Microsoft Internet Explorer (IE) 11 via a malformed XML file. The attacker can then leverage this vulnerability to perform malicious actions on the target system.""',
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in Microsoft Internet Explorer (IE) 11 VBScript execution policy bypass is detected.""
   }
 ][
   {
     ""sid"": ""48531"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Insecure Deserialization"",
     ""Quotes"": """"Exploit Insecure Deserialization refers to leveraging vulnerabilities in object deserialization functionality of applications to gain control or execute arbitrary code in the running application, or elsewhere on the underlying system. This rule seeks to detect malicious VBScript exploitation attempts likely leveraging insecure deserialization to bypass Internet Explorer's execution policy."""",
     ""Explanation"": ""In this event, an attempt was made to exploit a vulnerability in Microsoft Internet Explorer 11 VBScript execution policy""
   }
 ][
   {
     ""sid"": ""48531"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to execute VBScript in Internet Explorer, which is commonly used by attackers to exploit browser vulnerabilities and execute malicious code."""",
     ""Explanation"": ""This rule matches on a file data content that is used by the Microsoft Internet Explorer 11 VBScript execution policy bypass attempt.""
   },
   {
     ""sid"": ""48531"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking or coercing users into executing malicious code or commands. This rule targets users attempting to bypass VBScript execution policies in Internet Explorer, which could allow attackers to execute malicious code or scripts on the user's system."""",
     ""Explanation"": ""This rule matches on a file data content that is used by the Microsoft Internet Explorer 11 VBScript execution policy bypass attempt.""
   }
 ][
   {
     ""sid"": ""48531"",
     ""Technique ID"": ""T1220"",
     ""Technique name"": ""XSL Script Processing"",
     ""Quotes"": """"Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files"""",
     ""Explanation"": ""This rule detects an attempt to bypass the VBScript execution policy in Microsoft Internet Explorer 11 by using XSL Script Processing, which is a technique adversaries use to execute malicious scripts in browsers.""
   }
 ][
         ""sid"": ""48531"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to bypass the VBScript execution policy in Microsoft Internet Explorer 11 by manipulating XML and DOM methods, which is a common technique used by attackers to exploit vulnerabilities in web browsers."""",
         ""Explanation"": ""This rule is intended to detect attempts to bypass the VBScript execution policy in Microsoft Internet Explorer 11.""
     ]","['T1204', 'T1167', 'T1204', 'T1202', 'T1137', 'T1189', 'T1204', 'T1187', 'T1189', 'T1189', 'T1189', 'T1204', 'T1220', 'T1190']",['T1220']
34463,"[
         ""sid"": ""34463"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
         ""Explanation"": ""This rule targets outbound connections to TeamViewer, a legitimate remote administration tool. Adversaries may abuse TeamViewer for remote access and control of compromised systems, potentially leading to lateral movement or data exfiltration.""
     ][
   {
     ""sid"": ""34463"",
     ""Technique ID"": ""T1219"",
     ""Technique name"": ""Remote Access Software"",
     ""Quotes"": """"Remote Access Software techniques enable adversaries to remotely gain access to, or control, target systems by using tools such as Remote Desktop Connection or Virtual Network Computing."",
     ""Explanation"": ""The rule detects the use of the TeamViewer remote access tool, which is commonly used by legitimate users for remote support and administration, but can also be abused by adversaries to gain access to target systems.""
   }
 ][
   {
     ""sid"": ""34463"",
     ""Technique ID"": ""T1010"",
     ""Technique Name"": ""Remote Access"",
     ""Quotes"": """"Remote Access techniques involve establishing a connection to a target system over a network to manage or control the system. TeamViewer is a legitimate remote desktop tool that provides remote access capabilities. This rule detects an outbound connection attempt to TeamViewer, suggesting that an attacker may be using it for reconnaissance or remote control of the compromised system."""",
     ""Explanation"": ""This rule monitors outbound TeamViewer connections, as it can be used by threat actors to facilitate remote access and control of compromised systems.""
   },
   {
     ""sid"": ""34463"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule triggers upon attempts to exploit vulnerabilities in web applications using HTTP-based techniques, including SQL injection, cross-site scripting, and remote code execution."""",
     ""Explanation"": ""This rule detects attempts to exploit vulnerabilities in web applications, such as SQL injection and cross-site scripting, which could provide attackers with a means to remotely access and control the compromised system.""
   }
 ][
   {
     ""sid"": ""34463"",
     ""Technique ID"": ""T1124"",
     ""Technique Name"": ""Remote Desktop Protocol (RDP)"",
     ""Quotes"": """"Remote Desktop Protocol (RDP) techniques involve the use of the Microsoft Remote Desktop Protocol (RDP) to establish remote access to a system. This rule detects outbound connections to TeamViewer, a remote administration tool, indicating potential remote access activities."""",
     ""Explanation"": ""This event is generated when an attempt to use the TeamViewer remote administration tool to connect to an external host is detected.""
   },
   {
     ""sid"": ""34463"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve the use of valid accounts to log into a service that accepts remote connections, such as telnet, SSH, and VNC. This rule detects an outbound connection to TeamViewer, which is a remote administration tool that allows for remote access to systems."""",
     ""Explanation"": ""This event is generated when an attempt to use the TeamViewer remote administration tool to connect to an external host is detected.""
   }
 ][
   {
     ""sid"": ""34463"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Remote Service Exploitation"",
     ""Quotes"": """"Remote Service Exploitation techniques involve exploiting vulnerabilities in remote services to gain access to or execute code on a victim system. This rule detects an outbound connection attempt to port 5938, which is used by TeamViewer, a popular remote administration tool. Attackers often abuse legitimate remote services to gain unauthorized access to target systems."""",
     ""Explanation"": ""The rule is related to a TeamViewer remote administration tool outbound connection attempt.""
   }
 ][
   {
     ""sid"": ""34463"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services involve leveraging externally accessible services or tools to gain access to a system or assist in post-exploitation activities. The rule detects outbound connections to TeamViewer, a legitimate remote desktop tool, which can be used by adversaries for various purposes, including remote access, surveillance, and data exfiltration."""",
     ""Explanation"": ""TeamViewer is a popular remote administration tool that allows users to remotely access and control other computers over the Internet.""
   }
 ][
     ""sid"": ""34463"",
     ""Technique ID"": ""T1000"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve accessing external remote services for the purpose of bypassing local defenses, such as firewalls or intrusion detection systems. TeamViewer is a well-known remote administration tool that allows users to remotely control other computers. The rule detects outbound connections to TeamViewer, indicating potential unauthorized access or remote control attempts."""",
     ""Explanation"": ""This event is generated when external remote service activity has been detected.""
 ][
   {
     ""sid"": ""34463"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve abusing or leveraging remote network services, such as web services or databases, to achieve objectives. This rule detects the use of TeamViewer, a well-known remote administration tool, which could indicate an attempt to gain remote access to internal systems."""",
     ""Explanation"": ""Outbound traffic of TeamViewer remote administration tool detected.""
   }
 ][
   {
     ""sid"": ""34463"",
     ""Technique ID"": ""T1124"",
     ""Technique name"": ""Remote Desktop/Shell Session"",
     ""Quotes"": """"Remote Desktop/Shell Session techniques involve using remote access tools to establish an interactive session with a remote system, providing the adversary with the ability to execute commands and interact with the system remotely. The rule detects an outbound connection attempt to a TeamViewer endpoint, which is a legitimate remote desktop tool, but can be abused by adversaries for remote access and command execution."""",
     ""Explanation"": ""This rule flags outbound connections from the internal network to the internet on HTTP ports that contain the string ""client=DynGate"" in the HTTP URI. This pattern is associated with the TeamViewer remote administration tool.""
   }
 ][
   {
     ""sid"": ""34463"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve accessing remote systems or services that provide functionality not offered by the local system. This rule detects an outbound connection attempt to a TeamViewer remote administration tool, which is often used for remote access and control of systems."""",
     ""Explanation"": ""The rule specifically matches traffic where the client is set to 'DynGate', indicating the use of a dynamic gateway, which is a common method for establishing remote connections.""
   }
 ][
         ""sid"": ""34463"",
         ""Technique ID"": ""T1102"",
         ""Technique name"": ""Remote Desktop Protocol"",
         ""Quotes"": """"Remote Desktop Protocol (RDP) is a proprietary protocol developed by Microsoft for remote access to a computer. This technique involves using RDP to establish a remote session with a victim machine, allowing the adversary to interact with the desktop environment and execute commands."""",
         ""Explanation"": ""This rule detects attempts to establish an outbound TeamViewer remote administration connection, which could indicate that an adversary is attempting to gain remote access to a system for the purpose of executing commands or stealing data.""
     ]","['T1190', 'T1219', 'T1010', 'T1190', 'T1124', 'T1021', 'T1071', 'T1133', 'T1000', 'T1083', 'T1124', 'T1105', 'T1102']",['T1219']
655,"[
     ""sid"": ""655"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a vulnerability in Sendmail 8.6.9, which could allow remote attackers to execute arbitrary code on the mail server."""",
     ""Explanation"": ""Remote exploit against Sendmail 8.6.9""
 ][
   {
     ""sid"": ""655"",
     ""Technique ID"": ""T1211"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a vulnerability in the Sendmail email server, which could allow remote attackers to gain unauthorized access to the system."""",
     ""Explanation"": ""This rule is triggered when an attempt to exploit a vulnerability in the Sendmail email server is detected. The vulnerability allows remote attackers to gain unauthorized access to the system.""
   }
 ][
   {
     ""sid"": ""655"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a remote code execution vulnerability in Sendmail 8.6.9, which can allow unauthenticated attackers to execute arbitrary commands on the mail server."""",
     ""Explanation"": ""This event is generated when the exploit is attempted.""
   }
 ][
   {
     ""sid"": ""655"",
     ""Technique ID"": ""T1484"",
     ""Technique Name"": ""Exploitation for Privilege Escalation"",
     ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting vulnerabilities to gain elevated privileges on a system. This rule detects an attempted exploit of a vulnerability in Sendmail 8.6.9, which could allow attackers to execute arbitrary code with root privileges."",
     ""Explanation"": ""This event is generated when a vulnerability in Sendmail is detected.""
   }
 ][
   {
     ""sid"": ""655"",
     ""Technique ID"": ""T1094"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit the Sendmail 8.6.9 vulnerability, which allowed attackers to execute arbitrary commands on the mail server by sending specially crafted email messages."""",
     ""Explanation"": ""The provided rule detects an attempt to exploit a vulnerability in Sendmail 8.6.9, which is a mail transfer agent (MTA) commonly used to send and receive email messages. The rule identifies a specific exploit technique, which involves sending a specially crafted email message containing the exploit payload. If successful, the exploit would allow the attacker to execute arbitrary commands on the mail server, potentially leading to unauthorized access, data exfiltration, or further compromise of the system.""
   }
 ][
     {
         ""sid"": ""655"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploitation of Remote Services"",
         ""Quotes"": """"Exploitation of Remote Services techniques involve leveraging vulnerabilities in remote services to gain unauthorized access to internal systems. This rule detects an attempted exploitation of the 'Sendmail 8.6.9' vulnerability in mail servers, which allows attackers to gain elevated privileges and execute arbitrary code."""",
         ""Explanation"": ""This rule indicates an attempted administrative function mail server vulnerability is being targeted as exploiting the Sendmail 8.6.9 vulnerability will allow an attacker to gain elevated privileges and possibly execute arbitrary code on the mail server.""
     }
 ][
   {
     ""sid"": ""655"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation for Privilege Escalation"",
     ""Quotes"": """"Exploitation for Privilege Escalation techniques use vulnerabilities in software, firmware, and hardware to gain elevated privileges on a local system. This rule detects an attempt to exploit a vulnerability in Sendmail 8.6.9 allowing attackers to gain remote root access through a malformed SMTP command."""",
     ""Explanation"": ""This vulnerability in Sendmail 8.6.9 allows remote attackers to gain root access via crafted SMTP commands that cause a buffer overflow in the recipient local-part.""
   }
 ][
     {
         ""sid"": ""655"",
         ""Technique ID"": ""T1209"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications or browsers to gain unauthorized access or execute arbitrary code on victim systems. This rule specifically detects an attempted exploit against a vulnerability in the Sendmail 8.6.9 email server, which could allow remote attackers to execute arbitrary code by sending a specially crafted email message."""",
         ""Explanation"": ""This event is generated when a successful attempt at client-side exploitation of the 'Sendmail 8.6.9 exploit' is detected.""
     }
 ][
   {
     ""sid"": ""655"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a vulnerability in the Sendmail MTA software, which could allow an attacker to execute arbitrary commands on the target system."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a Sendmail 8.6.9 vulnerability is detected.""
   }
 ][
   {
     ""sid"": ""655"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a vulnerability in Sendmail 8.6.9, which could allow an attacker to execute arbitrary code on the SMTP server."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to exploit a vulnerability in the Sendmail 8.6.9 SMTP server.""
   }
 ][
         ""sid"": ""655"",
         ""Technique ID"": ""T1212"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule is designed to detect exploitation attempts against the Sendmail 8.6.9 SMTP service using the ""Envelope-Source buffer overflow"" vulnerability (CVE-2005-1785), potentially allowing attackers to gain unauthorized access to the system."""",
         ""Explanation"": ""This vulnerability is due to an error in the handling of the Envelope-Source field in the SMTP service. A specially crafted email can cause a buffer overflow, leading to arbitrary code execution.""
     ]","['T1210', 'T1211', 'T1190', 'T1484', 'T1094', 'T1210', 'T1210', 'T1209', 'T1190', 'T1190', 'T1212']",['T1068']
26640,"[
   {
     ""sid"": ""26640"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Remote Services"",
     ""Quotes"": """"Exploit Remote Services techniques involve targeting vulnerabilities in externally facing services to gain unauthorized access or execute arbitrary code. This rule specifically detects exploitation attempts against Microsoft Internet Explorer's XML digital signature transformation of digest value, which could allow an attacker to execute arbitrary code in the context of the application."""",
     ""Explanation"": ""This rule looks for the specific pattern associated with the exploitation of the XML digital signature transformation of digest value vulnerability, which could lead to remote code execution on the target system.""
   }
 ][
         ""sid"": ""26640"",
         ""Technique ID"": ""T1116"",
         ""Technique name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve identifying and enumerating files and directories on a system to locate sensitive data or identify potential targets for exploitation. This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer by exploiting the XML digital signature transformation of a digest value, which could allow an attacker to execute arbitrary code on the target system."""",
         ""Explanation"": ""This event is generated when activity relating to an anomalous file activity is detected.""
     ][
   {
     ""sid"": ""26640"",
     ""Technique ID"": ""T1185"",
     ""Technique Name"": ""Browser Session Hijacking"",
     ""Quotes"": """"Browser Session Hijacking techniques involve taking advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques."""",
     ""Explanation"": ""This rule identifies attempts to exploit a vulnerability in Microsoft Internet Explorer's XML digital signature transformation to hijack browser sessions. Attackers could leverage this vulnerability to intercept sensitive information or inject malicious code into the browser session.""
   }
 ][
     {
         ""sid"": ""26640"",
         ""Technique ID"": ""T1436"",
         ""Technique Name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to make it unavailable to authorized users or to prevent unauthorized access. The rule detects attempts to exploit an XML digital signature transformation of a digest value vulnerability in Microsoft Internet Explorer, which could allow an attacker to gain unauthorized access by encrypting data and making it unavailable to the browser."""",
         ""Explanation"": ""SVCHOST.EXE (5848) attempting to access the URL 'hxxp://localhost/default.aspx' on port 80 with an invalid request. The user 'NetworkService' is also attempting to access the URL hxxp://msdn.microsoft.com/en-us/library/cc438835.aspx' on port 80 from an internal IP address. This activity has been flagged as suspicious due to the use of an invalid request and the source of the request.""
     }
 ][
   {
     ""sid"": ""26640"",
     ""Technique ID"": ""T1070"",
     ""Technique name"": ""Indicator Removal"",
     ""Quotes"": """"Indicator Removal techniques involve deleting or altering artifacts generated in a system to remove evidence of malicious activity, including any trace of the tools or techniques used to gain access. This rule targets an attack exploiting a vulnerability in Microsoft Internet Explorer's XML digital signature transformation to delete or modify artifacts associated with its execution, potentially hindering detection by security tools."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer's XML digital signature transformation.""
   }
 ][
   {
     ""sid"": ""26640"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in Microsoft Internet Explorer's XML digital signature transformation of digest value, which attackers could leverage to execute arbitrary code in the context of the user running the application."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer's XML digital signature transformation of digest value, which could allow an attacker to execute arbitrary code in the context of the user running the application.""
   }
 ][
   {
     ""sid"": ""26640"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to evade detection, impact analysis, or reverse engineering. This rule detects XML content with embedded base64-encoded binary data, with the signature 'DigestValue', which is a common way to store encrypted data within XML documents."""",
     ""Explanation"": ""An XML digital signature transformation of digest value is a type of data encryption. This event is generated when a network anomaly is detected.""
   }
 ][
     {
         ""sid"": ""26640"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule is designed to detect attempts to exploit a vulnerability in Microsoft Internet Explorer's XML digital signature transformation of digest value. By sending a crafted XML file with malicious content, attackers can potentially execute arbitrary code on the target system."""",
         ""Explanation"": ""This event is generated when activity relating to an exploit against a browser is detected.""
     }
 ][
   {
     ""sid"": ""26640"",
     ""Technique ID"": ""T1112"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": [],
     ""Explanation"": ""The rule triggers when Microsoft Internet Explorer is detected modifying an XML digital signature's digest value. Masquerading techniques are used by adversaries to disguise or impersonate other entities on a network to evade detection and gain access. In this case, the modification of digital signatures could indicate an attempt to spoof or impersonate a legitimate entity for malicious purposes.""
   },
   {
     ""sid"": ""26640"",
     ""Technique ID"": ""T1036"",
     ""Technique Name"": ""Data Obfuscation"",
     ""Quotes"": [],
     ""Explanation"": ""The rule detects the XML digital signature transformation of digest value. Data Obfuscation techniques are used to hide or disguise the true meaning or format of data to evade detection. By altering the digest value of an XML digital signature, adversaries can potentially bypass security measures or deceive systems into accepting modified data as legitimate.""
   }
 ][
   {
     ""sid"": ""26640"",
     ""Technique ID"": ""T1120"",
     ""Technique name"": ""XSL Script Processing"",
     ""Quotes"": """"The rule checks for patterns in XML content that indicate exploitation of a vulnerability in Internet Explorer's processing of XSL scripts, where an attacker could execute arbitrary code in the context of the user's browser."""",
     ""Explanation"": ""The rule detects an attempt to exploit a known vulnerability in Microsoft Internet Explorer by manipulating XML digital signatures using XSL script processing.""
   }
 ][
   {
     ""sid"": ""26640"",
     ""Technique ID"": ""T1089"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve the use of a web shell, which is an interface that runs on the target web server. This rule detects an attempt to modify the signature of a file uploaded to a web server, which could be used to bypass security controls and gain unauthorized access."""",
     ""Explanation"": ""This rule detects a POST request that contains the XML signature of a file uploaded to a web server. The XML signature is modified by replacing the canonicalization method with a less secure one, which could allow attackers to bypass security controls and gain unauthorized access to the web server.""
   }
 ]","['T1189', 'T1116', 'T1185', 'T1436', 'T1070', 'T1190', 'T1110', 'T1190', 'T1112', 'T1036', 'T1120', 'T1089']",['T1220']
27919,"[
     {
         ""sid"": ""27919"",
         ""Technique ID"": ""T1020"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve using techniques to conceal or obscure data to make it difficult to discover or recover. The rule detects exfiltration of encrypted POST data by the Zeus trojan, suggesting the use of some encryption mechanism to obfuscate the exfiltrated data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
         ""sid"": ""27919"",
         ""Technique ID"": ""T1020"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve moving data from a victim system to a location controlled by an adversary. The rule detects encrypted POST data exfiltration by the Zeus trojan, which is known for its data stealing capabilities."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""27919"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve extracting data from a compromised system to another location. This rule detects an attempt by the Zeus Trojan to exfiltrate data through an encrypted POST request. Zeus is a well-known banking Trojan that uses various methods to steal sensitive information such as passwords and financial data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""27919"",
         ""Technique ID"": ""T1020"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve moving data from a compromised host to a remote location. This rule identifies encrypted data exfiltration from a compromised system to an external command and control server associated with Zeus malware, using POST HTTP requests."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""27919"",
         ""Technique ID"": ""T1020"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve unauthorized transfer of data from a victim system to an external location, usually under the control of an adversary. This rule detects exfiltration of data by a Zeus Trojan variant, which is known to steal sensitive information such as banking credentials and financial data."""",
         ""Explanation"": ""This event is generated when detecting Win.Trojan.Zeus encrypted POST data exfiltration.""
     ][
         ""sid"": ""27919"",
         ""Technique ID"": ""T1020"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve using obfuscation techniques to conceal malware or malicious activity from being detected. This rule detects the presence of the Zeus Trojan, which is known for using various obfuscation methods, including encrypted POST data exfiltration, to evade detection."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected. This event is very likely to be caused by a threat.""
     ][
   {
     ""sid"": ""27919"",
     ""Technique ID"": ""T1020"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to evade detection and analysis. In this rule, encrypted POST data is being exfiltrated, indicating that the adversary may be attempting to hide malicious activity by encrypting data before sending it over the network."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""27919"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over C2 Channel"",
         ""Quotes"": """"Exfiltration Over C2 Channel techniques involve adversaries exfiltrating data from a compromised system through command and control (C2) channels. The rule detects encrypted POST data exfiltration by the Zeus Trojan to its C2 server, which is a common method used by malware to steal sensitive information from compromised systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""27919"",
     ""Technique ID"": ""T1020"",
     ""Technique name"": ""Automated Exfiltration"",
     ""Quotes"": """"Automated Exfiltration techniques involve using automated processes to move data from a victim system to an external location. The rule detects the exfiltration of data by Win.Trojan.Zeus using an encrypted POST request, where the POST data contains non-printable characters, which is a common method for attackers to hide malicious data during exfiltration."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""27919"",
         ""Technique ID"": ""T1020"",
         ""Technique Name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve transferring data from a victim system to a remote location. This rule detects an encrypted POST request originating from the internal network to an external IP address on a common HTTP port, which is a common method used by malware to exfiltrate sensitive data by evading detection mechanisms."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
         ""sid"": ""27919"",
         ""Technique ID"": ""T1020"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve hiding or encoding data to prevent detection or analysis. This rule detects encrypted POST data being sent by malware infected with the Zeus Trojan, which is a common method to conceal malicious communications."""",
         ""Explanation"": ""This rule identifies attempts to send potentially malicious encrypted data, which can be a behavior of malware, and the infection is associated with the Zeus Trojan.""
     ]","['T1020', 'T1020', 'T1020', 'T1020', 'T1020', 'T1020', 'T1020', 'T1041', 'T1020', 'T1020', 'T1020']","['T1020', 'T1071']"
28323,"[
     {
         ""sid"": ""28323"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script that allows an adversary to execute arbitrary commands on a compromised web server. This rule detects a connection to a web shell hosted on the compromised web server, which is commonly used by adversaries to maintain access and control over the system."""",
         ""Explanation"": ""This event is generated when malicious activity relating to a web shell is detected.""
     }
 ][
         ""sid"": ""28323"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using malicious code to create an interactive interface for controlling a compromised system via an HTTP session. This rule detects traffic patterns and specific indicators, such as the ""X-Forwarded-For"" header and the presence of Base64-encoded data containing the ""z"" character, which are commonly associated with the Chopper web shell."""",
         ""Explanation"": ""Web shells can receive commands and return results in plain text, allowing attackers to interact directly with the target system's files, applications, and databases.""
     ][
   {
     ""sid"": ""28323"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web-based interface to execute commands, list files, and perform administrative functions on a remote system. The rule detects an attempt to establish a reverse shell connection using a web shell script hidden within an HTTP request to a specific port. This technique is commonly used by adversaries to remotely control compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to a web shell is detected.""
   }
 ][
         ""sid"": ""28323"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script or interface, to facilitate remote access or control of a compromised web application or server. The rule matches traffic related to a Chopper web shell, which is a common technique used by attackers to gain access to and execute arbitrary commands on the target system, allowing them to control the server or web application."""",
         ""Explanation"": ""This event is generated when a web server is compromised and a remote attacker has gained the ability to execute arbitrary server-side commands.""
     ][
         ""sid"": ""28323"",
         ""Technique ID"": ""T1064"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning involves performing reconnaissance activities to identify and map systems, services, and capabilities on a network. The rule detects an attempt by a remote attacker to perform a network scan using the 'zmap' tool, which is commonly used for fast network discovery and service identification."""",
         ""Explanation"": ""This alert is related to the exploitation of a vulnerability in 'ns-v6agentservice'.""
     ][
   {
     ""sid"": ""28323"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web shells are web-based interfaces that give attackers a remote command execution capability on the compromised host. This rule detects an incoming connection to a known web shell (Chopper) that uses a specific base64-encoded string ('z') in its communication, which is a common indication of web shell activity."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""28323"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques allow adversaries to execute arbitrary commands and interact with a system or application through a web-based interface. This rule detects malicious activity related to \""Win.Backdoor.Chopper,\"" which is a web shell that allows remote attackers to execute commands on a compromised system using an HTTP POST request and a 'FromBase64String' parameter, as observed in this rule."""",
         ""Explanation"": ""Web shells are often used by adversaries to maintain persistent access to a system, execute commands, and exfiltrate data.""
     ][
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (Chopper) using a web shell to establish a command and control connection, which is a common technique used by adversaries to capture input data, including credentials, from compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""28323"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using methods to establish a persistent remote control interface over a web server. The rule detects a connection to a known web shell (Chopper) by monitoring for specific HTTP headers and a Base64-encoded payload in the HTTP request body. The presence of these indicators suggests that an attacker is attempting to establish a remote shell and execute commands on the victim system."""",
     ""Explanation"": ""The alert is triggered when a web shell is detected, which is a malicious script that gives an attacker remote access to a compromised web server or web application.""
   }
 ][
   {
     ""sid"": ""28323"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web shells provide a remote interface to a compromised system via the web. This rule detects the presence of the ""z"" function, which is commonly used by Chopper web shells to execute arbitrary commands on a compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""28323"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script or code that allows remote access and control of a compromised web application or web server. This rule detects an attempt to establish a connection to a web shell, indicated by the presence of the 'X-Forwarded-For' header with a specific pattern and the 'FromBase64String' field in the HTTP client body, which are common methods used by attackers to communicate with web shells."""",
     ""Explanation"": ""This rule matches requests to a web shell that uses the 'X-Forwarded-For' header to spoof the client's IP address and the 'FromBase64String' field to decode the payload.""
   }
 ]","['T1100', 'T1100', 'T1100', 'T1100', 'T1064', 'T1100', 'T1100', 'T1056', 'T1100', 'T1100', 'T1100']","['T1505', 'T1219']"
58616,"[
         ""sid"": ""58616"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Microsoft Windows Content-Disposition which allows attackers to execute arbitrary code by sending a specially crafted HTTP request."""",
         ""Explanation"": ""The rule triggers when an attempt is made to exploit a vulnerability in the Content-Disposition header of Microsoft Windows, which can allow an attacker to execute arbitrary code on the affected system.""
     ][
   {
     ""sid"": ""58616"",
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": ""\""Valid Accounts techniques can involve a variety of steps that lead to using legitimate accounts for unauthorized access or persistence on the target network. This rule detects an attempt to exploit a command-line option in the Windows Content Disposition handler ('rundll32.exe') to execute arbitrary code by passing a crafted CLSID value in the HTTP header. This technique is often used by threat actors to gain access to the target system's command shell using legitimate user accounts.\"""",
     ""Explanation"": ""This rule may detect an attempt to use a valid account to access a resource or perform an action that is not authorized.""
   }
 ][
   {
     ""sid"": ""58616"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Microsoft Windows Content-Disposition CLSID to execute arbitrary code, which is a common method attackers use to gain remote access to systems."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Microsoft Windows Content-Disposition CLSID to execute arbitrary code, which is a common method attackers use to gain remote access to systems.""
   }
 ][
   {
     ""sid"": ""58616"",
     ""Technique ID"": ""T1166"",
     ""Technique name"": ""Masquerading"",
     ""Quotes"": """"Masquerading techniques involve disguising malicious activities or objects as legitimate ones to evade detection or deceive users. This rule detects an attempt to exploit a vulnerability in Microsoft Windows where a malicious CLSID parameter is included in an HTTP request, which is a common method attackers use to masquerade malicious scripts or programs as legitimate Windows components."""",
     ""Explanation"": ""When a worm attempts to exploit the vulnerability CVE-2010-2568, it will drop a file, run it, and then delete the evidence of the file on the disk to masquerade its behavior.""
   }
 ][
   {
     ""sid"": ""58616"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Service"",
     ""Quotes"": """"Exploit Public-Facing Service techniques involve targeting vulnerabilities in publicly accessible services, such as web servers, to gain unauthorized access or execute arbitrary code. This rule specifically detects an attempt to exploit a vulnerability in Microsoft Windows Content-Disposition header by manipulating the CLSID value in an HTTP request. Attackers can use this technique to obtain sensitive information or execute arbitrary code on the target system."""",
     ""Explanation"": ""This vulnerability allows remote attackers to execute arbitrary code on Windows Vista and 2008 through content-disposition header and CLSID. ""
   }
 ][
         ""sid"": ""58616"",
         ""Technique ID"": ""T1068"",
         ""Technique name"": ""Exploitation for Privilege Escalation"",
         ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting vulnerabilities in software to elevate privileges and gain access to more sensitive systems or data. The rule detects an attempt to exploit a privilege escalation vulnerability in Microsoft Windows by manipulating the Content-Disposition HTTP header with a malicious CLSID value. This technique is commonly used to elevate privileges and execute arbitrary code on vulnerable systems."""",
         ""Explanation"": ""This rule attempts to detect a HTTP-based attack against a Microsoft Windows system in which an attacker attempts to exploit a web-based vulnerability that allows for the execution of arbitrary commands with elevated privileges.""
     ][
   {
     ""sid"": ""58616"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Application Execution"",
     ""Quotes"": """"Application Execution techniques involve executing an application, usually with the intent of running code of the adversary's choosing. This rule specifically points to an attempt to execute a program on a Windows system using the CLSID of a COM object, which could be used to run malicious code or gain access to sensitive information."""",
     ""Explanation"": ""Application Execution attempt via CLSID registry key modification.""
   }
 ][
   {
     ""sid"": ""58616"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Vulnerable Software"",
     ""Quotes"": """"Exploit Vulnerable Software techniques involve targeting software vulnerabilities to gain unauthorized access to systems. This rule detects an attempt to exploit a vulnerability in Microsoft Windows that allows attackers to executearbitrary commands via the 'Content-Disposition' HTTP header with a specific CLSID, which is a technique commonly used to exploit unpatched software."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in Microsoft Windows Content-Disposition CLSID command is detected.""
   }
 ][
     {
         ""sid"": ""58616"",
         ""Technique ID"": ""T1543"",
         ""Technique name"": ""Hijack Execution Flow"",
         ""Quotes"": """"Hijack Execution Flow techniques involve altering the intended execution path of a program to manipulate its behavior. This rule identifies an attempt to exploit a vulnerability in Microsoft Windows Content-Disposition header to execute arbitrary code, which could allow an attacker to hijack the execution flow of the application and gain control of the system."""",
         ""Explanation"": ""This detection is responsible for detecting attempts to exploit the Microsoft Handler Hijack vulnerability""
     }
 ][
   {
     ""sid"": ""58616"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": [
       """"User Execution techniques attempt to manipulate or influence the execution of a legitimate user to perform an action that benefits the adversary's objectives. This rule specifically targets attempts to execute a command with a CLSID, such as initiating a program or utility using the specified command line.""
     ],
     ""Explanation"": ""The rule trigger is an attempt to execute a command with a Content-Disposition header containing a CLSID, which is a unique identifier for a type of object in the Windows Registry.""
   }
 ][
         ""sid"": ""58616"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a Microsoft Windows Buffer Overflow vulnerability (CVE-2006-4630) by sending a specially crafted HTTP request containing an ActiveX control with a malicious CLSID. This technique is commonly used to exploit vulnerabilities in web applications and gain unauthorized access to systems."""",
         ""Explanation"": ""This event is generated when Microsoft Windows Content-Disposition CLSID command attempt.""
     ]","['T1189', 'T1078', 'T1203', 'T1166', 'T1189', 'T1068', 'T1203', 'T1189', 'T1543', 'T1204', 'T1189']",['T1203']
40493,"[
         {
             ""sid"": ""40493"",
             ""Technique ID"": ""T1190"",
             ""Technique Name"": ""Exploit Public-Facing Application"",
             ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule specifically detects an attempt to inject malicious code into an Ektron 'ServerControlWS.asmx' web service using an XSL transform attack, which is a common method attackers use to exploit web applications."""",
             ""Explanation"": ""This event is generated when an attempt to exploit this vulnerability is detected.""
         },
         {
             ""sid"": ""40493"",
             ""Technique ID"": ""T1110"",
             ""Technique Name"": ""Web Shell"",
             ""Quotes"": """"Web Shell techniques involve leveraging a vulnerable web application to establish a command and control channel over HTTP. This rule detects an attempt to create a web shell on an Ektron 'ServerControlWS.asmx' web service using an XSL transform attack, which is a common method attackers use to establish persistent access to compromised systems."""",
             ""Explanation"": ""This event is generated when an attempt to exploit this vulnerability is detected.""
         }
     ][
   {
     ""sid"": ""40493"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted XSL Transform (XSLT) injection attack on the Ektron ServerControlWS.asmx web service, which is a common method attackers use to exploit web applications by manipulating XML data."""",
     ""Explanation"": ""The rule is designed to detect an attempt to exploit a vulnerability in the Ektron Web Content Management System's ServerControlWS.asmx web service. The attacker is attempting to inject malicious XSLT code into the web service to gain unauthorized access or execute arbitrary code on the server.""
   }
 ][
   {
     ""sid"": ""40493"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a code injection vulnerability in the Ektron ServerControlWS.asmx web service, which could allow an attacker to execute arbitrary code on the server."""",
     ""Explanation"": ""Ektron ServerControlWS.asmx is a web service that allows remote clients to perform various operations on the Ektron CMS. This rule detects an attempt to exploit a code injection vulnerability in the web service by sending an HTTP request with a specially crafted XML payload that contains a malicious XSL stylesheet. If the vulnerability is successfully exploited, the attacker could execute arbitrary code on the server.""
   }
 ][
   {
     ""sid"": ""40493"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted XSL Transform (XSLT) injection attack against the Ektron ServerControlWS.asmx web service, which is a known method attackers use to exploit web applications with XSLT injection vulnerabilities."""",
     ""Explanation"": ""This rule detects suspicious XSL code being passed through an HTTP POST request to the ServerControlWS.asmx web service.""
   }
 ][
   {
     ""sid"": ""40493"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a ServerControlWS.asmx XSL transform code injection vulnerability in Ektron CMS, which is a common method attackers use to exploit web applications by manipulating XSL style sheets."""",
     ""Explanation"": ""This event is raised when an Ektron CMS ServerControlWS.asmx XSL transform code injection attempt is detected.""
   }
 ][
     {
         ""sid"": ""40493"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted XSL transform code injection attack against the Ektron ServerControlWS.asmx page, which is a common method attackers use to exploit web applications by manipulating XSL transformations."""",
         ""Explanation"": ""This event is generated when an attempt is made to exploit a vulnerability that allows for the injection of arbitrary XSL code into a web application, which can lead to the execution of malicious code and unauthorized access to sensitive information.""
     }
 ][
   {
     ""sid"": ""40493"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a specific attack targeting a vulnerability in the Ektron ServerControlWS.asmx web service, which allows attackers to execute arbitrary XSL code by injecting malicious XSL statements into the HTTP request."""",
     ""Explanation"": ""This rule detects an XSL transform code injection attempt in the Ektron ServerControlWS.asmx web service.""
   }
 ][
   {
     ""sid"": ""40493"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted code injection attack on Ektron ServerControlWS.asmx, which is a web service used by Ektron CMS, by injecting malicious XSL code into the HTTP request."""",
     ""Explanation"": ""This rule detects an attempt by an attacker to inject malicious XSL code into the HTTP request, which could allow for remote code execution on the web server.""
   },
   {
     ""sid"": ""40493"",
     ""Technique ID"": ""T1218"",
     ""Technique name"": ""System Binary Proxy Execution"",
     ""Quotes"": """"System Binary Proxy Execution techniques involve abusing trusted system binaries or scripts to execute malicious code or commands. This rule detects an attempt to use XSL transformation, which is a trusted binary on the web server, to execute malicious code by injecting XSL code into an HTTP request."""",
     ""Explanation"": ""This rule detects an attempt by an attacker to abuse the XSL transformation binary to execute malicious code on the web server.""
   }
 ][
         ""sid"": ""40493"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted XSL transform code injection attack in the 'ServerControlWS.asmx' service of Ektron CMS, a popular web content management system. Attackers abuse this vulnerability by embedding malicious XSL code in HTTP requests to execute arbitrary commands and potentially take control of the web application server."""",
         ""Explanation"": ""The rule is used for detecting XSL transform code injection attempt on Ektron ServerControlWS.asmx""
     ][
     ""sid"": ""40493"",
     ""Technique ID"": ""T1220"",
     ""Technique name"": ""XSL Script Processing"",
     ""Quotes"": """"XSL Script Processing techniques involve abusing the ability to process XSL (Extensible Stylesheet Language) scripts to execute arbitrary code or bypass application control. This rule detects an attempt to inject XSL scripts into the '/WorkArea/ServerControlWS.asmx' URL path of an Ektron web application, a technique commonly used by attackers to gain unauthorized access or manipulate the application's behavior."""",
     ""Explanation"": ""Ektron CMS ServerControlWS.asmx XSL transform code injection attempt.""
 ][
   {
     ""sid"": ""40493"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted XSL transform code injection attack on the Ektron ServerControlWS.asmx page, which is a common method attackers use to exploit web applications by manipulating XML transformations."",
     ""Explanation"": ""The Ektron ServerControlWS.asmx page is vulnerable to XSL transform code injection, which could allow attackers to execute arbitrary code on the server.""
   }
 ]","['T1190', 'T1110', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1218', 'T1190', 'T1220', 'T1190']",['T1220']
17444,"[
     {
         ""sid"": ""17444"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a heap overflow attack by exploiting a vulnerability in Mozilla Firefox 3 by sending a specially-crafted XSL payload, which is a common method attackers use to exploit application vulnerabilities."""",
         ""Explanation"": ""This event is generated when activity relating to an exploit of a buffer overflow vulnerability in Mozilla Firefox occurs.""
     }
 ][
     ""sid"": ""17444"",
     ""Technique ID"": ""T1204"",
     ""Technique name"": ""Heap Spraying"",
     ""Quotes"": """"Heap Spraying involves the allocation and controlled manipulation of large amounts of data in memory on the heap in an attempt to overwrite or manipulate memory or other data structures."""",
     ""Explanation"": ""This rule detects an attempted buffer overflow within Mozilla Firefox version 3.x, which involves manipulating heap memory.""
 ][
   {
     ""sid"": ""17444"",
     ""Technique ID"": ""T1454"",
     ""Technique Name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve creating new processes or modifying existing system processes to maintain persistence or control over a system. This rule detects an attempt to exploit a heap overflow vulnerability in Mozilla Firefox 3 using an XSL document. The exploitation of this vulnerability could allow an attacker to execute arbitrary code and potentially create or modify system processes."""",
     ""Explanation"": ""This event is generated when a process attempts to create or modify another process without proper authorization.""
   }
 ][
   {
     ""sid"": ""17444"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule specifically detects an attempt to exploit a heap overflow vulnerability in the XSL parser of Mozilla Firefox 3, which attackers could use to execute arbitrary code."""",
     ""Explanation"": ""This exploit targets a specific heap overflow vulnerability in Mozilla Firefox 3 that can allow arbitrary code execution.""
   }
 ][
   {
     ""sid"": ""17444"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploit Software Application"",
     ""Quotes"": """"Exploit Software Application techniques involve exploiting vulnerabilities in specific software programs to gain unauthorized access or execute arbitrary code. In this case, the rule detects an attempt to exploit a heap overflow vulnerability in Mozilla Firefox 3 by sending a specially crafted XML stylesheet (XSL) file. Exploiting this vulnerability could allow an attacker to execute arbitrary code in the context of the vulnerable application."""",
     ""Explanation"": """"Mozilla Firefox versions prior to 3.0.3, 3.5 prior to 3.5.6, and 3.6 prior to 3.6.4 are vulnerable to a heap overflow that may allow remote attackers to execute arbitrary code via crafted XSL content.""
   }
 ][
   {
     ""sid"": ""17444"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting client-side software vulnerabilities to execute arbitrary code or commands on a victim's system. This rule detects an attempt to exploit a heap overflow vulnerability in the Mozilla Firefox 3 browser, which could allow an attacker to execute arbitrary code with the privileges of the user running the browser."""",
     ""Explanation"": "" this rule is triggered when an attempt is made to exploit a heap overflow vulnerability in the Mozilla Firefox 3 browser.""
   }
 ][
   {
     ""sid"": ""17444"",
     ""Technique ID"": ""T1201"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that appear to come from a legitimate source to trick individuals into revealing sensitive information or clicking on malicious links. This rule detects an attempted exploitation of a heap overflow vulnerability in Mozilla Firefox 3 when parsing XSL files. Attackers may use phishing emails to distribute malicious XSL files that exploit this vulnerability, allowing them to execute arbitrary code on the victim's system."""",
     ""Explanation"": ""Mozilla Firefox 3 xsl parsing heap buffer overflow.""
   }
 ][
     {
         ""sid"": ""17444"",
         ""Technique ID"": ""T1068"",
         ""Technique name"": ""Exploit Software Vulnerability"",
         ""Quotes"": """"Exploit Software Vulnerability techniques involve exploiting known vulnerabilities in software to execute arbitrary code or gain unauthorized access. The rule detects an attempt to exploit a heap overflow vulnerability in Mozilla Firefox 3 by sending specially crafted XSL data. Exploiting software vulnerabilities is a common method attackers use to compromise systems."""",
         ""Explanation"": ""This rule is for an attempted exploit of a heap overflow vulnerability in Mozilla Firefox.""
     }
 ][
     {
         ""sid"": ""17444"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Remote Services"",
         ""Quotes"": """"Exploit Remote Services techniques involve attacking or exploiting vulnerabilities in exposed or accessible network services to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit targeting a heap overflow vulnerability in Mozilla Firefox 3, which could allow remote attackers to execute arbitrary code or cause a denial-of-service condition by leveraging a specially-crafted XSL document."""",
         ""Explanation"": ""This event is generated when an attempt is made to exploit a vulnerability in a remote service.""
     }
 ][
   {
     ""sid"": ""17444"",
     ""Technique ID"": ""T1220"",
     ""Technique name"": ""XSL Script Processing"",
     ""Quotes"": """"Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files."""",
     ""Explanation"": ""This rule detects an attempt to exploit a heap overflow vulnerability in Mozilla Firefox 3 using XSL script processing, which is consistent with the technique of using scripts inside XSL files to bypass application control.""
   }
 ][
   {
     ""sid"": ""17444"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploit Insecure Deserialization"",
     ""Quotes"": """"Exploit Insecure Deserialization techniques involve manipulating or abusing mechanisms that deserialize untrusted data, potentially leading to remote code execution or compromise of sensitive information. The rule detects an attempt to exploit a heap overflow vulnerability in Mozilla Firefox 3 by sending malicious XSL data, which could allow an attacker to execute arbitrary code on the target system."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a heap overflow vulnerability in Mozilla Firefox 3 is detected. The malicious code is sent via an XSL payload.""
   }
 ]","['T1190', 'T1204', 'T1454', 'T1203', 'T1203', 'T1203', 'T1201', 'T1068', 'T1189', 'T1220', 'T1203']",['T1220']
43113,"[
  {
   ""sid"": ""43113"",
   ""Technique ID"": ""T1491"",
   ""Technique name"": ""Defacement"",
   ""Quotes"": """"Defacement techniques involve modifying visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. This rule detects a dashboard deletion attempt in Schneider Electric IGSS, a web application framework used to build HMI/SCADA systems, indicating the potential for unauthorized modification of sensitive operational data."""",
   ""Explanation"": ""This event is generated when activity relating to web application attack is detected.""
  }
 ][
   {
     ""sid"": ""43113"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted deletion of the Schneider Electric IGSS dashboard, which is a common method attackers use to disrupt or disable web applications."""",
     ""Explanation"": """"SERVER-WEBAPP Schneider Electric IGSS dashboard deletion attempt""""
   }
 ][
   {
     ""sid"": ""43113"",
     ""Technique ID"": ""T1580"",
     ""Technique Name"": ""Cloud Infrastructure Discovery"",
     ""Quotes"": """"Cloud Infrastructure Discovery techniques involve discovering and enumerating infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment."""",
     ""Explanation"": ""This event is generated when Schneider Electric IGSS dashboard deletion attempt is detected.""
   },
   {
     ""sid"": ""43113"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques involve using trial-and-error to gain access to accounts when passwords are unknown or when password hashes are obtained"""",
     ""Explanation"": ""This event is an alert for a brute-force attack.""
   }
 ][
   {
     ""sid"": ""43113"",
     ""Technique ID"": ""T1589"",
     ""Technique Name"": ""Credential Stuffing"",
     ""Quotes"": """"Credential Stuffing is the practice of using stolen or guessed credentials, typically in bulk, to gain access to user accounts. This rule indicates the detection of an attempt to delete a dashboard on a Schneider Electric IGSS application by using a combination of content patterns to match a specific payload associated with this type of attack."""",
     ""Explanation"": ""This event is generated when activity relating to credential stuffing is detected.""
   },
   {
     ""sid"": ""43113"",
     ""Technique ID"": ""T1602"",
     ""Technique Name"": ""Web Services"",
     ""Quotes"": """"Web Services techniques involve the use of web services, such as web APIs, to remotely interact with a target system. This event captures the attempt to modify a specific configuration file within the Schneider Electric IGSS application, indicating the use of web services to interact with the target system."""",
     ""Explanation"": ""This event is generated when activity relating to web services is detected.""
   }
 ][
   {
     ""sid"": ""43113"",
     ""Technique ID"": ""T1490"",
     ""Technique name"": ""Inhibit System Recovery"",
     ""Quotes"": """"Inhibit System Recovery techniques involve disabling or removing system recovery mechanisms to ensure persistence or prevent forensic analysis. This rule detects an attempt to delete the IGSS configuration database, which is responsible for storing system configurations and settings. Deleting this database could hinder system recovery and compromise the integrity of system configurations."""",
     ""Explanation"": ""Schneider Electric IGSS dashboard deletion attempt.""
   }
 ][
         ""sid"": ""43113"",
         ""Technique ID"": ""T1495"",
         ""Technique name"": ""Firmware Corruption"",
         ""Quotes"": """"Firmware Corruption techniques involve modifying or overwriting the firmware of a device to render it inoperable or unable to boot. This rule detects an attempt to delete the dashboard of Schneider Electric's IGSS web application by sending a specially crafted packet. Firmware corruption can be used to disable or modify the functionality of devices, potentially leading to a loss of availability or control."""",
         ""Explanation"": ""This rule indicates an attempt to delete the dashboard of the Schneider Electric IGSS web application by sending a specially crafted packet.""
     ][
         ""sid"": ""43113"",
         ""Technique ID"": ""T1001"",
         ""Technique name"": ""Web Application Attack"",
         ""Quotes"": """"Web Application Attack techniques involve exploiting vulnerabilities in web applications to gain unauthorized access or execute arbitrary code. This rule specifically detects an attempt to delete a dashboard in the Schneider Electric IGSS application, exploiting a vulnerability in the application's dashboard deletion functionality."""",
         ""Explanation"": ""This rule detects an attempt to delete a dashboard in the Schneider Electric IGSS application, exploiting a vulnerability in the application's dashboard deletion functionality.""
     ][
   {
     ""sid"": ""43113"",
     ""Technique ID"": ""T1497"",
     ""Technique name"": ""File Deletion"",
     ""Quotes"": """"File Deletion techniques involve deleting a file or directory to destroy evidence, disable functionality, or prevent access to sensitive data. The rule detects an attempt to delete a 'dashboard' file with a specific content pattern in Schneider Electric's IGSS application, indicating a targeted attack on the dashboard functionality."",
     ""Explanation"": ""The rule is triggered when the specific pattern of the content in certain locations of the packet is observed. This pattern signifies an attempt to target and delete the dashboard file in the Schneider Electric IGSS application.""
   }
 ][
         ""sid"": ""43113"",
         ""Technique ID"": ""T1497"",
         ""Technique name"": ""Web Service Attack"",
         ""Quotes"": """"Web Service Attack techniques involve exploiting vulnerabilities in web services, which are typically implemented as software applications that communicate with each other and perform specific functions. The rule detects an attempted attack on the Schneider Electric IGSS dashboard, which may involve exploiting vulnerabilities in the web service to gain unauthorized access or execute arbitrary code."""",
         ""Explanation"": ""Schneider Electric IGSS 6.9 through 7.2 allows remote authenticated attackers to execute arbitrary commands via unspecified vectors.""
     ][
     {
         ""sid"": ""43113"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Schneider Electric IGSS dashboard, which could allow an attacker to delete arbitrary dashboards."""",
         ""Explanation"": ""Schneider Electric IGSS dashboard deletion attempt""
     }
 ][
         ""sid"": ""43113"",
         ""Technique ID"": ""T1499"",
         ""Technique name"": ""Deobfuscate/Decode Files or Information"",
         ""Quotes"": """"Techniques involving the decoding or deobfuscation of files or information relate to transforming encoded or obfuscated data to obtain its original form. The Snort rule is triggered when an attempt to delete a dashboard in the Schneider Electric IGSS application is detected. The rule checks for the presence of specific byte sequences and content within the packet, which is likely used to obfuscate or encode the malicious request."""",
         ""Explanation"": ""Rule triggered when an attempt to delete a dashboard in the Schneider Electric IGSS application is detected.""
     ]","['T1491', 'T1190', 'T1580', 'T1110', 'T1589', 'T1602', 'T1490', 'T1495', 'T1001', 'T1497', 'T1497', 'T1190', 'T1499']",['T1070']
32001,"[
   {
     ""sid"": ""32001"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This event is generated when activity relating to a Trojan (Backdoor.Upatre) is detected.""
   }
 ][
   {
     ""sid"": ""32001"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": """"Use existing, valid accounts rather than creating new ones to move laterally or maintain persistence once they have compromised a system"""",
     ""Explanation"": ""This rule detects inbound traffic on port 443 from an external network to an internal network. The traffic contains a specific byte sequence and a server name that is associated with a known malware backdoor called Upatre. This suggests that an attacker is attempting to establish a command and control channel using a valid SSL certificate to evade detection and maintain persistence within the network.""
   }
 ][
         ""sid"": ""32001"",
         ""Technique ID"": ""T1580"",
         ""Technique name"": ""Cloud Infrastructure Discovery"",
         ""Quotes"": """"Cloud Infrastructure Discovery techniques can involve exploring cloud provider resources, services, and features to learn more about a targeted environment. This rule detects an attempt by a malware binary to retrieve information about the underlying cloud infrastructure, which could be used to identify potential attack vectors."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""32001"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer involves transferring a malicious tool into a system over an established network connection, often through techniques such as uploading a file or embedding it within network traffic. The rule triggers on the presence of an SSL certificate for ""server.itiltrainingcertworkshop.com"" in network traffic, which suggests that a remote actor is attempting to establish a secure connection for the purpose of uploading or transferring malware."""",
     ""Explanation"": ""This rule triggers on SSL certificates with suspicious names.""
   }
 ][
         ""sid"": ""32001"",
         ""Technique ID"": ""T1583"",
         ""Technique name"": ""Create or Modify System Process"",
         ""Quotes"": """"Create or Modify System Process techniques involve creating or modifying system processes to gain access or hinder recovery. This rule detects malicious activity associated with the Win.Backdoor.Upatre malware, which uses code injection to manipulate legitimate system processes, modifying their behavior to establish remote access or steal sensitive information."""",
         ""Explanation"": ""The rule specifically looks for the presence of specific SSL certificates associated with this malware, which is a common technique used to establish secure communication channels for command and control.""
     ][
     {
         ""sid"": ""32001"",
         ""Technique ID"": ""T1495"",
         ""Technique name"": ""Firmware Corruption"",
         ""Quotes"": """"Firmware Corruption techniques involve modifying or corrupting firmware or BIOS in devices attached to a system in order to render them inoperable or unable to boot. This rule detects an attempt to exploit a vulnerability in SSL certificates (specifically, a vulnerability in the itiltrainingcertworkshop.com certificate) to corrupt firmware or BIOS, potentially leading to denial of service or remote code execution."""",
         ""Explanation"": ""This event is generated when activity indicative of the Upatre backdoor from the Win.Backdoor family is detected.""
     }
 ][
   {
     ""sid"": ""32001"",
     ""Technique ID"": ""T1043"",
     ""Technique Name"": ""Internal Remote Services"",
     ""Quotes"": ""\""Internal Remote Services techniques involve establishing covert channels over internal services to facilitate remote access to a target system. This rule detects an inbound SSL certificate request to a domain known to be associated with the Upatras backdoor, which is commonly used to establish a covert communication channel over HTTPS."""",
     ""Explanation"": ""The rule triggers when the server name in an SSL certificate request contains the string \""server.itiltrainingcertworkshop.com\"" within a distance of 36 characters.""
   }
 ][
         ""sid"": ""32001"",
         ""Technique ID"": ""T1195"",
         ""Technique name"": ""Supply Chain Compromise"",
         ""Quotes"": """"Supply Chain Compromise techniques involve manipulating products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. This rule detects the presence of malware that may have been implanted by the attacker during the production or distribution phase of a product or software, or through the compromise of a vendor's supply chain."""",
         ""Explanation"": ""Malware was detected through outbound SSL communication to the domain ""[server.itiltrainingcertworkshop.com](https:\\/\\/server.itiltrainingcertworkshop.com)""""
     ],
     [
         ""sid"": ""32001"",
         ""Technique ID"": ""T1608"",
         ""Technique name"": ""Stage Capabilities"",
         ""Quotes"": """"Stage Capabilities techniques involve uploading, installing, or otherwise setting up capabilities that can be used during targeting. This rule detects the creation of a new outbound connection from the internal network to an external website, which is a common method used by malware to establish a command and control channel for communication with an attacker."""",
         ""Explanation"": ""Malware was detected through outbound SSL communication to the domain ""[server.itiltrainingcertworkshop.com](https:\\/\\/server.itiltrainingcertworkshop.com)""""
     ]
 ][
   {
     ""sid"": ""32001"",
     ""Technique ID"": ""T1580"",
     ""Technique Name"": ""Acquire Infrastructure"",
     ""Quotes"": """"Acquire Infrastructure techniques involve securing the means to execute a cyber attack, such as purchasing or renting infrastructure, including servers, domains, and accounts."""",
     ""Explanation"": ""This event is generated when communication with a Win.Backdoor.Upatre SSL Cert is detected.""
   }
 ][
   {
     ""sid"": ""32001"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an inbound SSL certificate from a known malware (Win.Backdoor.Upatre) in an attempt to connect to a specific domain (""server.itiltrainingcertworkshop.com""). Attackers may exploit vulnerabilities in public-facing applications to gain remote access to systems."""",
     ""Explanation"": ""This event is generated when malware is attempting to connect to a command-and-control server.""
   }
 ][
   {
     ""sid"": ""32001"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer involves bringing an attacker tool or capability into the environment by leveraging various techniques. This rule detects an inbound SSL certificate with the string 'server.itiltrainingcertworkshop.com' as part of its content. An adversary could use an SSL certificate as a means to establish a covert channel for communication, allowing them to transfer tools into the environment."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""32001"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting information to hinder analysis or detection by defenders. This rule detects an SSL certificate, which is a common method used by adversaries to encrypt communications in order to evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1190', 'T1189', 'T1580', 'T1105', 'T1583', 'T1495', 'T1043', 'T1195', 'T1608', 'T1580', 'T1190', 'T1105', 'T1071']",['T1571']
57532,"[
   {
     ""sid"": ""57532"",
     ""Technique ID"": ""T1555"",
     ""Technique name"": ""Credentials from Password Stores"",
     ""Quotes"": """"Credentials from Password Stores techniques involve extracting credentials directly from credential storage repositories like the Windows Credential Manager, OS X Keychain, or password managers."""",
     ""Explanation"": ""This event is generated when Arcserve UDP Management's credentials are exposed.""
   }
 ][
   ""sid"": ""57532"",
   ""Technique ID"": ""T1552"",
   ""Technique Name"": ""Credentials Extraction"",
   ""Quotes"": """"Credentials Extraction techniques involve obtaining stored or cached credentials from a system or application. The rule indicates an attempted credential disclosure attack against the specified URI endpoint, which is often used by adversaries to extract credentials for authentication."""",
   ""Explanation"": ""Credential disclosure attempt.""
 ][
   {
     ""sid"": ""57532"",
     ""Technique ID"": ""T1586"",
     ""Technique Name"": ""Compromise Accounts"",
     ""Quotes"": """"Compromise Accounts techniques are used to gain access to accounts with services that can be used during targeting. The rule indicates the presence of a credential disclosure attempt targeting the 'Arcserve Unified Data Protection Management' service, which often involves compromising existing accounts to access sensitive data."""",
     ""Explanation"": ""Arcserve Unified Data Protection Management allows protection and recovery of critical assets. An attacker can steal credentials to access and compromise such assets.""
   },
   {
     ""sid"": ""57532"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques are used to gain access to accounts when passwords are unknown or when password hashes are obtained. The rule's focus on credential disclosure suggests that brute force attacks may be employed to  obtain valid credentials for the targeted service."""",
     ""Explanation"": ""Credential disclosure involves discovering valid credentials for a system or service. Brute force is a common method for discovering such credentials by attempting multiple combinations of usernames and passwords.""
   }
 ][
   {
     ""sid"": ""57532"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Account Discovery"",
     ""Quotes"": """"Account Discovery techniques involve enumerating and discovering user accounts within an environment. The rule detects an attempt to disclose credentials for the Arcserve Unified Data Protection Management application through an HTTP request to the '/services/EdgeServiceImpl' URI and the 'getBackupPolicies' body content. This request may be used to gather information about valid user accounts and their associated privileges."""",
     ""Explanation"": ""This event is generated when disclosure of user credentials is attempted.""
   }
 ][
   {
     ""sid"": ""57532"",
     ""Technique ID"": ""T1558"",
     ""Technique Name"": ""Exploitation for Credential Access"",
     ""Quotes"": """"Exploitation for Credential Access techniques involve exploiting vulnerabilities in applications or operating systems to gain access to credentials that are embedded in or protected by those systems."""",
     ""Explanation"": ""This rule is looking for an attempt to exploit a vulnerability in Arcserve Unified Data Protection Management in order to obtain credentials.""
   }
 ][
     {
         ""sid"": ""57532"",
         ""Technique ID"": ""T1222"",
         ""Technique name"": ""File and Directory Permissions Modification"",
         ""Quotes"": """"Modifying file or directory permissions/attributes can provide attackers with unauthorized access to sensitive files or allow them to bypass security features. This rule detects an attempt to exploit a vulnerability in Arcserve Unified Data Protection Management to disclose credentials by modifying file permissions, which could lead to unauthorized access to sensitive information."""",
         ""Explanation"": ""This event is generated when activity relating to policy violation is detected.""
     },
     {
         ""sid"": ""57532"",
         ""Technique ID"": ""T1008"",
         ""Technique name"": ""Fallback Channels"",
         ""Quotes"": """"Fallback channels are alternate communication mechanisms used by adversaries to maintain reliable command and control or avoid detection. This rule detects an attempt to exploit a vulnerability in Arcserve Unified Data Protection Management to establish a fallback channel through the 'getBackupPolicies' request, which could allow attackers to maintain persistent access to the system."""",
         ""Explanation"": ""This event is generated when activity relating to policy violation is detected.""
     }
 ][
     {
         ""sid"": ""57532"",
         ""Technique ID"": ""T1552"",
         ""Technique Name"": ""Credentials Dumping"",
         ""Quotes"": """"Credentials Dumping techniques involve extracting credentials from memory or local storage to gain access to restricted resources or to elevate privileges. The rule detects an attempt to obtain credentials for Arcserve Unified Data Protection Management, suggesting that an adversary is attempting to collect credentials to access or modify sensitive data."""",
         ""Explanation"": ""The rule is likely to raise alerts for a threat actor trying to exploit CVE-2020-6470 in order to obtain credentials for Arcserve Unified Data Protection Management.""
     }
 ][
   {
     ""sid"": ""57532"",
     ""Technique ID"": ""T1025"",
     ""Technique Name"": ""Credential Access"",
     ""Quotes"": """"Credential Access techniques involve accessing or attempting to access credentials, such as passwords, passphrases, or cryptographic keys, to gain unauthorized access to accounts, systems, or data."""",
     ""Explanation"": ""This event is related to credential access techniques because it mentions an attempt to disclose credentials in the Arcserve Unified Data Protection Management system, which is a common target for attacks attempting to gain unauthorized access to sensitive data.""
   }
 ][
   {
     ""sid"": ""57532"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Access"",
     ""Quotes"": """"Credential Access techniques involve obtaining credentials to gain access to a system or network or to impersonate a user. This rule detects an attempt to obtain credentials for Arcserve Unified Data Protection Management by exploiting a vulnerability in the 'EdgeServiceImpl' that leaks credentials from the server."""",
     ""Explanation"": ""The rule monitors for HTTP traffic targeting the '/services/EdgeServiceImpl' URI and containing the 'getBackupPolicies' request, which is a known method used to exploit this vulnerability.""
   }
 ][
     ""sid"": ""57532"",
     ""Technique ID"": ""T1482"",
     ""Technique name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials from a compromised system, such as cached credentials, password hashes, or access tokens. This rule detects an attempt to dump credentials from Arcserve Unified Data Protection Management through an HTTP request to '/services/EdgeServiceImpl' containing the 'getBackupPolicies' parameter, which is a common method used by attackers to extract credentials from targeted systems."""",
     ""Explanation"": ""This rule triggers when an attempt to dump credentials from Arcserve Unified Data Protection Management is detected.""
 ][
   {
     ""Sid"": ""57532"",
     ""Technique ID"": ""T1556"",
     ""Technique name"": ""Modify Authentication Process"",
     ""Quotes"": """"Modify Authentication Process techniques involve modifying the authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. This rule triggers when an attempt is made to disclose credentials to access Arcserve Unified Data Protection Management's 'EdgeServiceImpl', indicating an attempt to bypass authentication."""",
     ""Explanation"": ""The rule triggers when an attempt is made to bypass authentication by disclosing credentials, indicating an attempt to modify the authentication process.""
   }
 ]","['T1555', 'T1552', 'T1586', 'T1110', 'T1105', 'T1558', 'T1222', 'T1008', 'T1552', 'T1025', 'T1110', 'T1482', 'T1556']",['T1003']
24087,"[
   {
     ""sid"": ""24087"",
     ""Technique ID"": ""T1091"",
     ""Technique Name"": ""Tunneling Traffic Through Alternative Protocols"",
     ""Quotes"": """"Tunneling Traffic Through Alternative Protocols techniques involve using alternate protocols, such as DNS, for tunneling data. This rule detects a TCP tunnel being established over UDP, which is a common method used by malware to bypass traditional port-based security controls."""",
     ""Explanation"": ""This rule targets a direct communication between the bot and the C&C using a direct TCP connection made through a DNS query. The connections look like DNS queries, but they're really a TCP tunnel encapsulating the DNS packet.""
   }
 ][
     ""sid"": ""24087"",
     ""Technique ID"": ""T1572"",
     ""Technique name"": ""Protocol Tunneling"",
     ""Quotes"": """"Protocol Tunneling techniques involve encapsulating network communications within another network protocol to avoid detection or filtering. This rule detects a Win.Trojan.Bledoor malware variant that uses TCP tunneling within UDP packets to communicate with a command and control server. This technique is commonly used by malware to evade detection by traditional network security controls."""",
     ""Explanation"": ""The malware Win.Trojan.Bledoor uses TCP tunneling within UDP packets to communicate with a command and control server.""
 ][
   {
     ""sid"": ""24087"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Encapsulation"",
     ""Quotes"": """"Data Encapsulation techniques involve hiding or obfuscating data within a non-native format or structure to evade detection or analysis. The rule detects a TCP tunnel encapsulated within UDP traffic, which is a common method used by malware to bypass network defenses by disguising malicious traffic as legitimate network protocols."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""24087"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Encapsulation"",
     ""Quotes"": """"Data Encapsulation techniques involve packaging malicious data or code within a legitimate file, application, or protocol to evade detection. This rule detects a TCP tunnel encapsulated within a UDP packet, which is a common method used by malware to bypass network security controls."""",
     ""Explanation"": ""This rule detects a Windows Trojan (Bledoor) that uses a TCP tunnel encapsulated in UDP to communicate with its command and control server.""
   }
 ][
         ""sid"": ""24087"",
         ""Technique ID"": ""T1591"",
         ""Technique name"": ""Gather Victim Org Information"",
         ""Quotes"": """"Gather Victim Org Information techniques involve collecting information about the target organization's IT infrastructure, personnel, and policies to inform targeting and exploitation activities. This rule detects an attempt by a Trojan (Win.Trojan.Bledoor) to establish a TCP tunnel over UDP, which is a common technique used by attackers to bypass security controls and exfiltrate sensitive data."""",
         ""Explanation"": ""This rule detects malicious activity associated with the Win.Trojan.Bledoor trojan, specifically attempts to establish a TCP tunnel over UDP.""
     ][
   {
     ""sid"": ""24087"",
     ""Technique ID"": ""T1008"",
     ""Technique Name"": ""Fallback Channels"",
     ""Quotes"": """"Fallback Channels techniques involve using alternate communication channels in case the primary channel is compromised or inaccessible. The rule in question detects a Trojan (Bledoor) that establishes a TCP tunnel over UDP, a non-standard channel for TCP communication. This behavior is often used by malware to bypass detection and maintain connectivity in the event that traditional TCP channels are blocked or compromised."""",
     ""Explanation"": ""This event is generated when Win.Trojan.Bledoor TCP tunnel in UDP activity is detected.""
   }
 ][
   {
     ""sid"": ""24087"",
     ""Technique ID"": ""T1090"",
     ""Technique Name"": ""Proxy"",
     ""Quotes"": """"The rule detects a TCP tunnel encapsulated within UDP traffic, which is a common technique used by adversaries to evade network detection and bypass firewall restrictions."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""24087"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Data Encapsulation"",
     ""Quotes"": ""\""Data Encapsulation techniques involve disguising malicious data or code within a legitimate or benign carrier, such as an innocuous file, document, or network packet, to evade detection and analysis."""",
     ""Explanation"": ""This technique involves using a TCP tunnel encapsulated within UDP traffic, which is commonly used by malware to bypass network security controls and communicate with command and control servers.""
   }
 ][
   {
     ""sid"": ""24087"",
     ""Technique ID"": ""T1097"",
     ""Technique Name"": ""RDP Protocol Injection"",
     ""Quotes"": """"RDP Protocol Injection involves abusing the Remote Desktop Protocol (RDP) to gain unauthorized control over a remote system. This rule detects the initiation of an RDP tunnel over UDP, which is a non-standard behavior and can be used by attackers to bypass network restrictions or evade detection."""",
     ""Explanation"": ""Win.Trojan.Bledoor uses TCP tunneling inside UDP for command and control as a way of avoiding detection.""
   }
 ][
   {
     ""sid"": ""24087"",
     ""Technique ID"": ""T1080"",
     ""Technique Name"": ""Taint Shared Content"",
     ""Quotes"": ""\""Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories.\"""",
     ""Explanation"": ""This rule detects an attempt to establish a covert TCP tunnel over UDP using the Bledoor Trojan, which is known to abuse DNS as a communication channel to bypass network security controls.""
   }
 ][
   {
     ""sid"": ""19292"",
     ""Technique ID"": ""T1571"",
     ""Technique Name"": ""Non-Standard Port"",
     ""Quotes"": """"Non-Standard Port techniques involve using non-default or uncommon ports for communication to evade detection and avoid blocking by security controls. The rule targets a Trojan that uses a custom TCP tunnel within UDP traffic on an uncommon port (53), which is typically associated with DNS traffic, to bypass security measures."""",
     ""Explanation"": ""This rule detects a possible attempt to establish a covert communication channel over a non-standard port, which is a technique often used by malware to evade detection and security controls.""
   },
   {
     ""sid"": ""14303"",
     ""Technique ID"": ""T1095"",
     ""Technique Name"": ""Non-Application Layer Protocol"",
     ""Quotes"": """"Non-Application Layer Protocol techniques use protocols other than the typical application layer protocols (e.g., HTTP, FTP, SMTP) for communication, making it more difficult to detect and block malicious traffic. The rule identifies a Trojan that utilizes a TCP tunnel within UDP traffic to communicate with its command and control server, which is an example of using a non-application layer protocol for covert communication."""",
     ""Explanation"": ""This rule detects a possible attempt to establish a covert communication channel using a non-application layer protocol, which is a technique often used by malware to evade detection and security controls.""
   }
 ]","['T1091', 'T1572', 'T1071', 'T1071', 'T1591', 'T1008', 'T1090', 'T1071', 'T1097', 'T1080', 'T1571', 'T1095']",['T1048']
38565,"[
         ""sid"": ""38565"",
         ""Technique ID"": ""T1197"",
         ""Technique name"": ""File from Remote Server"",
         ""Quotes"": """"File from Remote Server techniques involve retrieving files from remote server locations over protocols like HTTP or FTP. This rule detects an initial download attempt by the Win.Trojan.Sweeper variant, which involves downloading a malicious binary file ('.bin') from a remote server via an HTTP 'HEAD' request. Adversaries can use this technique to deliver malware, tools, or other malicious payloads to target systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""38565"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve using valid, pre-existing user accounts to access and manipulate systems. The rule detects a Win.Trojan.Sweeper variant attempt to download an initial payload using a User-Agent header commonly associated with Microsoft BITS and a specific HTTP request pattern."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""38565"",
         ""Technique ID"": ""T1197"",
         ""Technique Name"": ""File Download"",
         ""Quotes"": """"File Download techniques involve transferring a file from a remote system to a local system. This rule detects an attempt by the Win.Trojan.Sweeper variant to download a malicious file from a remote location using the BITS (Background Intelligent Transfer Service). The attacker uses a HEAD request to check the existence of the file before downloading it with a GET request, indicating that they are attempting to download the file in a stealthy manner."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
     ""sid"": ""38565"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""OAuth Abuse"",
     ""Quotes"": """"OAuth Abuse techniques involve leveraging OAuth tokens to gain access to cloud and other OAuth-protected resources. The rule detects the initial download attempt of a Win.Trojan.Sweeper variant dropper, which may involve using OAuth tokens to establish persistence or evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
         ""sid"": ""38565"",
         ""Technique ID"": ""T1197"",
         ""Technique name"": ""File Download"",
         ""Quotes"": """"File Download techniques involve transferring files from a remote system to the local system, often for the purpose of installing and executing malicious software or modifying existing files. This rule detects an initial download attempt by the Win.Trojan.Sweeper variant, which uses the Microsoft Background Intelligent Transfer Service (BITS) to download a malicious executable '.bin' file from a remote server."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""38565"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Malicious File Transfer Over an Overt Channel"",
     ""Quotes"": """"Malicious File Transfer Over an Overt Channel techniques involve transferring malicious files and executables over a non-encrypted or open network channel. This rule detects an attempt by the Win.Trojan.Sweeper malware to download malicious components ('.bin' files) from a remote server over HTTP. Attackers often use this method to deliver payloads and infect target systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""38565"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Malicious File Transfer from Remote Source"",
     ""Quotes"": """"Malicious File Transfer from Remote Source techniques involve retrieving malicious files or executables from a remote server. This rule detects an attempt by the Win.Trojan.Sweeper malware to download malicious components ('.bin' files) from a remote server over HTTP. Attackers often use this method to deliver payloads and infect target systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""38565"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve gaining access to a system through a user visiting a website over the normal course of browsing. This rule detects an attempt to download a malicious file ("".bin"") from a compromised website using the BITS protocol, which is commonly used by attackers to deliver malware or other malicious payloads."",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""38565"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Domain Generation Algorithm"",
     ""Quotes"": """"Domain Generation Algorithms (DGAs) are algorithms used by malware to generate domain names for command and control (C2) communications. This rule detects traffic matching a known DGA pattern used by the 'Win.Trojan.Sweeper' malware, which generates random subdomains to avoid detection and maintain persistence."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""38565"",
         ""Technique ID"": ""T1197"",
         ""Technique name"": ""BITS Jobs"",
         ""Quotes"": """"BITS Jobs techniques involve abusing the Microsoft Background Intelligent Transfer Service (BITS) to persistently execute code and perform various background tasks. The rule detects activity related to the Win.Trojan.Sweeper variant, which uses BITS jobs to download and execute malicious payloads."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected..""
     }
 ][
   {
     ""sid"": ""38565"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a dropper for the Win.Trojan.Sweeper malware variant attempting to download a malicious file from a remote server over HTTP. Adversaries may use this technique to establish initial access to a system and execute arbitrary code."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""38565"",
         ""Technique ID"": ""T1197"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or encrypting files, communications, or other malicious content to prevent detection by security controls. In this rule, the traffic is concealed using a User-Agent header commonly associated with legitimate Microsoft software (BITS), and the malicious payload is hidden within a URL that contains a seemingly random string of characters followed by '.bin'. Attackers may use this technique to bypass detection by security tools and gain access to a system."""",
         ""Explanation"": ""Attempted download of a suspicious file.""
     ]","['T1197', 'T1197', 'T1197', 'T1197', 'T1197', 'T1197', 'T1189', 'T1197', 'T1197', 'T1197', 'T1197', 'T1197']",['T1197']
48573,"[
   {
     ""sid"": ""48573"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file deletion in the WordPress 'wc.status' page, which is a common method attackers use to exploit web applications by manipulating vulnerable functions or input validation mechanisms."""",
     ""Explanation"": ""The rule clearly indicates an attempt to exploit a vulnerability in the WordPress 'wc.status' page, which could lead to arbitrary file deletion.""
   }
 ][
         ""sid"": ""48573"",
         ""Technique ID"": ""T1566"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick victims into providing sensitive information, such as credentials or financial data. This rule detects phishing attempts that target WordPress websites by attempting to delete arbitrary files through the 'wc.status' page. Attackers commonly use phishing campaigns to target specific individuals or organizations to obtain sensitive information or gain unauthorized access to systems."""",
         ""Explanation"": ""This rule is designed to watch for file deletion on web servers running WordPress.""
     ][
   {
     ""sid"": ""48573"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a path traversal vulnerability in WordPress, which allows attackers to delete arbitrary files on the server's filesystem."""",
     ""Explanation"": ""This rule detects an attempt to exploit a path traversal vulnerability in WordPress, which allows attackers to delete arbitrary files on the server's filesystem.""
   }
 ][
     ""sid"": ""48573"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file deletion in a WordPress web application by exploiting a vulnerability in the WooCommerce plugin. Attackers can use this vulnerability to delete arbitrary files on the server, leading to potential data loss or website compromise."""",
     ""Explanation"": ""WordPress arbitrary file deletion attempt via WooCommerce plugin vulnerability.""
 ][
   {
     ""sid"": ""48573"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a potential attempt to exploit a vulnerability in the WordPress CMS that allows an unauthenticated attacker to delete arbitrary files by sending a specially crafted HTTP request containing a query string with the 'handle' parameter and '../' path traversal. This technique is commonly used by attackers to delete important files or gain unauthorized access to sensitive information on web servers."""",
     ""Explanation"": ""This rule detects an attempt to exploit a file-deletion vulnerability in the WordPress CMS. The attacker sends a specially crafted HTTP request that includes the 'handle' parameter and '../' path traversal. If the vulnerability is present, the attacker could delete arbitrary files on the server.""
   }
 ][
         ""sid"": ""48573"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file deletion attack against the WordPress web application, which can lead to unauthorized deletion of sensitive files or data."""",
         ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in the WordPress web application that allows an attacker to arbitrarily delete files on the server through a crafted request.""
     ][
   {
     ""sid"": ""48573"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application involves targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a path traversal vulnerability in WordPress, specifically targeting the 'wc.status' page. Path traversal vulnerabilities allow an attacker to access files and directories outside of the intended root directory of a web application."""",
     ""Explanation"": ""The rule detects an attempt to exploit a path traversal vulnerability in WordPress, specifically targeting the 'wc.status' page. Path traversal vulnerabilities allow an attacker to access files and directories outside of the intended root directory of a web application.""
   }
 ][
     {
         ""sid"": ""48573"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file deletion in the WordPress web application via the 'wc.status' page, which is a common method attackers use to exploit web applications by deleting critical files or directories."""",
         ""Explanation"": ""This rule matches traffic that attempts to delete arbitrary files in the WordPress web application.""
     }
 ][
   {
     ""sid"": ""48573"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted arbitrary file deletion in WordPress by exploiting a vulnerability in the 'wc.status' page, allowing an attacker to delete files from the server."""",
     ""Explanation"": ""This rule is designed to detect attempts to exploit a vulnerability in the WordPress 'wc.status' page, which could allow an attacker to delete files from the server. The rule looks for a specific pattern in the HTTP request that indicates an attempt to exploit this vulnerability.""
   }
 ][
     {
         ""sid"": ""48573"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule targets an arbitrary file deletion attempt in the WordPress web application, which involves exploiting a vulnerability to delete arbitrary files on the server."""",
         ""Explanation"": ""This rule is designed to detect attacks against WordPress websites that attempt to delete arbitrary files.""
     }
 ][
     {
         ""sid"": ""48573"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a file deletion vulnerability in the WordPress web application, which attackers could use to delete arbitrary files from the server's file system."""",
         ""Explanation"": ""The rule matches a request to the WordPress admin panel with specific parameters that indicate an attempt to delete a file outside of the WordPress root directory.""
     },
     {
         ""sid"": ""48573"",
         ""Technique ID"": ""T1498"",
         ""Technique Name"": ""Network Denial of Service"",
         ""Quotes"": """"Network Denial of Service (DoS) techniques involve disrupting or overwhelming a network to prevent legitimate users from accessing a resource or service. This rule detects an attempt to exploit a DoS vulnerability in the WordPress web application that could allow attackers to exhaust server resources and make the website unavailable."""",
         ""Explanation"": ""The rule matches a request to a specific URL in WordPress that is known to be vulnerable to a DoS attack.""
     }
 ]","['T1190', 'T1566', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1498']",['T1070']
1882,"[
   {
     ""sid"": ""1882"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Indicator Removal from Tools"",
     ""Quotes"": """"Indicator Removal from Tools techniques involve removing or suppressing indicators of a compromise to make it more difficult for security tools and analysts to identify and investigate the activity. This rule detects attempts to remove user and group ID information from a system, which could be an attempt to hide malicious activity or evade detection by security tools."""",
     ""Explanation"": ""User or group ID information can be used by security tools and analysts to identify malicious activity and track the movement of attackers within a system. Removing this information can make it more difficult to detect and investigate compromises.""
   }
 ][
   {
     ""sid"": ""1882"",
     ""Technique ID"": ""T1547"",
     ""Technique Name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve removing or otherwise altering forensic artifacts to obscure actions, evade detection, or impede incident response. The rule detects the removal of user and group IDs (UIDs and GIDs), which is a common method attackers use to erase evidence of unauthorized activity on a system."""",
     ""Explanation"": ""Host-based indicators of compromise (IOCs), such as file hashes, could be deleted by an attacker.""
   }
 ][
   {
     ""sid"": ""1882"",
     ""Technique ID"": ""T1589"",
     ""Technique name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve removing artifacts or modifying system settings to evade detection or analysis. This rule detects an attempt to remove a file or directory based on its user (uid) and group (gid) identifiers, which is a common method used by attackers to hide malicious files or directories by removing indicators of compromise (IOCs)."""",
     ""Explanation"": ""This rule detects an attempt to remove a file or directory based on its user (uid) and group (gid) identifiers, which is a common method used by attackers to hide malicious files or directories by removing indicators of compromise (IOCs).""
   }
 ][
   {
     ""sid"": ""1882"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a \""blind SQL injection\"" issue.""
   }
 ][
         ""sid"": ""1882"",
         ""Technique ID"": ""T1574"",
         ""Technique name"": ""Hijack Execution Flow"",
         ""Quotes"": """"Hijack Execution Flow techniques involve manipulating the operating system's execution flow to redirect code execution to arbitrary code. This rule detects a ""setuserid"" rootkit on Linux systems that exploits a kernel race condition to gain root privileges on the system. The rule specifically targets the exploitation of the seteuid/setgid system calls to modify user and group IDs, which is a common method used by attackers to elevate privileges and hijack execution flow."""",
         ""Explanation"": ""This rule is triggered when the 'setuserid' utility is used on a Linux system. This utility is typically used by root to assign special privileges to specific users or groups.""
     ][
         ""sid"": ""1882"",
         ""Technique ID"": ""T1008"",
         ""Technique name"": ""Fallback Channels"",
         ""Quotes"": """"Fallback Channels techniques involve the use of alternative communication channels to bypass security measures or maintain persistence in the event that primary communication channels are disrupted or detected."""",
         ""Explanation"": ""The rule indicates the use of the 'uid' and 'gid' fields in a communication, which might be indicative of an attempt to establish a fallback communication channel.""
     ][
   {
     ""sid"": ""1882"",
     ""Technique ID"": ""T1564"",
     ""Technique Name"": ""Hijack Execution Flow"",
     ""Quotes"": """"Hijack Execution Flow techniques involve altering the normal execution flow of a program or process to gain control of it and disrupt its intended behavior. This rule detects anomalies in file permissions, such as a user ID (uid) and group ID (gid) that are significantly different, which could indicate an attempt to hijack execution flow by modifying file permissions."""",
     ""Explanation"": ""This rule detects a potential attempt to compromise a system by checking for unusual user ID and group ID combinations.""
   }
 ][
     {
         ""sid"": ""1882"",
         ""Technique ID"": ""T1594"",
         ""Technique name"": ""User Account"",
         ""Quotes"": """"User Account techniques involve using, modifying, or creating user accounts to gain access to systems or for persistence. The rule checks for the presence of a 'userid' field in the packet data, indicating that a user account is being created or modified. Attackers may leverage this technique to create new user accounts with elevated privileges or backdoors."""",
         ""Explanation"": ""The rule looks for content matching 'uid=\d\S+\s+gid=\d' in the packet data, which is an indicator of user account creation or modification.""
     }
 ][
   {
     ""sid"": ""1882"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Application Layer Protocol"",
     ""Quotes"": """"Application Layer Protocol techniques involve adversaries using OSI application layer protocols (e.g., HTTP, FTP, SMB) to communicate with a remote system. The rule looks for activity related to the 'uid' and 'gid' parameters in a URI, which could indicate an attempt by an adversary to gather information about user accounts on the system."""",
     ""Explanation"": ""This event is generated when activity relating to reconnaissance is detected.""
   }
 ][
     ""sid"": ""1882"",
     ""Technique ID"": ""T1033"",
     ""Technique name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve modifying system logs or other data sources to hinder forensic investigations and obstruct the attribution of malicious activity."""",
     ""Explanation"": ""This event is generated when a check for a threat indicator returns a user ID. The rule is looking for a specific pattern in the traffic: ""uid=<number gid=<number"". This pattern is often associated with the removal of user and group identifiers from log files, which is a common technique used by attackers to cover their tracks.""
 ][
   {
     ""sid"": ""1882"",
     ""Technique ID"": ""T1106"",
     ""Technique Name"": ""Native API"",
     ""Quotes"": """"Native API techniques involve interacting with the native OS application programming interface (API) to execute behaviors. This rule detects attempts to escalate privileges by exploiting a vulnerability in the 'uid' and 'gid' fields in the 'ls' command (uid gid format string injection), which can be used to execute arbitrary commands with elevated privileges."""",
     ""Explanation"": ""Format string injection vulnerability in procmail before 3.37 allows local users to gain privileges by exploiting a format string vulnerability in the ls command.""
   }
 ]","['T1071', 'T1547', 'T1589', 'T1190', 'T1574', 'T1008', 'T1564', 'T1594', 'T1071', 'T1033', 'T1106']",['T1166']
19171,"[
         ""sid"": ""19171"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploit Insecure Deserialization"",
         ""Quotes"": """"Exploit Insecure Deserialization techniques involve exploiting vulnerabilities in software deserialization mechanisms, such as XML or JSON, to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a DLL hijacking vulnerability in Microsoft Internet Explorer 8 by modifying the configuration settings to load a malicious DLL library, which is a technique commonly used to escalate privileges and execute arbitrary code."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a deserialization vulnerability in Microsoft Internet Explorer 8 ieshims.dll is detected.""
     ][
     {
         ""sid"": ""19171"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Vulnerable Application"",
         ""Quotes"": """"Exploit Vulnerable Application techniques involve targeting vulnerabilities in software applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a DLL hijacking vulnerability in Microsoft Internet Explorer 8's ieshims.dll, a common method attackers use to gain code execution by loading malicious DLLs."""",
         ""Explanation"": ""An attacker could exploit this vulnerability by convincing a user to open a specially crafted document or to visit a malicious website. The exploit could allow the attacker to compromise the user's system and gain access to sensitive information.""
     }
 ][
     ""sid"": ""19171"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a DLL loading vulnerability in Microsoft Internet Explorer 8's 'ieshims.dll', which can lead to arbitrary code execution and compromise of the system."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in Microsoft Internet Explorer 8 is detected.""
 ][
   {
     ""sid"": ""19171"",
     ""Technique ID"": ""T1222"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting software flaws in client-side software such as web browsers to facilitate the execution of arbitrary code."""",
     ""Explanation"": ""This event is generated when an attempt is made to exploit a dll-loading vulnerability in Microsoft Internet Explorer 8 ieshims.dll by abusing the way the browser handles embedded objects or JavaScript to execute arbitrary code on the victim's machine.""
   }
 ][
         ""sid"": ""19171"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. These techniques are commonly used to exploit web applications through vulnerabilities such as SQL injection, cross-site scripting (XSS), and remote code execution (RCE)."""",
         ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer 8 ieshims.dll dll-load to gain unauthorized access to a system.""
     ][
         ""sid"": ""19171"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications, such as web browsers, to execute attacker-controlled code or gain unauthorized access to the system. The rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer's 'ieshims.dll' by loading a malicious DLL, which is a common technique used by attackers to gain remote code execution on vulnerable systems."""",
         ""Explanation"": ""This event is generated when an attempt is made to exploit a vulnerability in Microsoft Internet Explorer 8.""
     ][
   {
     ""sid"": ""19171"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in a user's web browser or browser plugins to gain unauthorized access to the system. This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer 8's \""ieshims.dll\"" DLL, which is a known method used by attackers to compromise systems via drive-by downloads."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""19171"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Browser"",
         ""Quotes"": """"Exploit Browser techniques involve targeting vulnerabilities in web browsers to gain unauthorized access or execute arbitrary code. This rule detects an attempted dll-load exploit targeting Internet Explorer 8 by manipulating the ieshims.dll file. Attackers often exploit browser vulnerabilities to gain remote code execution or bypass security restrictions."""",
         ""Explanation"": ""This rule detects a dll-load exploit attempt in Internet Explorer 8.""
     }
 ][
         ""sid"": ""19171"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Remote Services"",
         ""Quotes"": """"Exploit Remote Services techniques involve exploiting vulnerabilities in public-facing services to gain access to an organization or its systems or data. This rule detects an attempt by a web browser to exploit an arbitrary file upload vulnerability in Microsoft Internet Explorer 8 through the 'ieshims.dll' library, which is a common technique for attackers to gain remote code execution."""",
         ""Explanation"": ""The event is generated when an exploit is possible or actually attempted.""
     ][
     ""sid"": ""19171"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Remote Services"",
     ""Quotes"": """"Exploit Remote Services techniques involve exploiting vulnerabilities in publicly accessible services and applications to gain unauthorized access or execute arbitrary code. The Snort rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer 8, allowing attackers to gain unauthorized access and control of the system."""",
     ""Explanation"": ""This event is a 'web script exploit' attack via the browser.""
 ][
   {
     ""sid"": ""19171"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a DLL hijacking vulnerability in Microsoft Internet Explorer 8's 'ieshims.dll' library, which allows attackers to execute arbitrary code."",
     ""Explanation"": ""This event is generated when activity relating to the exploitation of a dll-load vulnerability in Microsoft is detected.""
   }
 ]","['T1203', 'T1189', 'T1190', 'T1222', 'T1190', 'T1203', 'T1189', 'T1189', 'T1189', 'T1189', 'T1190']",['T1574']
2044,"[
   {
     ""sid"": ""2044"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""Exploiting a flaw in a PPTP implementation may allow an attacker to cause a denial-of-service condition.""
   }
 ][
   {
     ""sid"": ""2044"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve scanning for open ports and services on a network to identify potential targets. This rule detects an attempt to initiate a PPTP (Point-to-Point Tunneling Protocol) connection, which is typically used for remote access to a private network. Attackers may perform network service scanning to identify systems running PPTP and attempt to exploit vulnerabilities in the service."""",
     ""Explanation"": ""This event is generated when an attempt is made to connect to the PPTP port.""
   }
 ][
     {
         ""sid"": ""2044"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule triggers when an attacker sends a specially crafted PPTP packet, which is often used to exploit vulnerabilities in VPN software, such as remote code execution or denial-of-service."""",
         ""Explanation"": ""PPTP Start Control Request attempt - possibly an exploit attempt""
     }
 ][
   {
     ""sid"": ""2044"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve using tools to scan for open ports on a system or network, which can be used to identify potential targets for exploitation or to gain information about the system or network."""",
     ""Explanation"": ""The rule detects an attempt to establish a Point-to-Point Tunneling Protocol (PPTP) connection, which is a common method for establishing a VPN connection. Attackers may use PPTP to gain unauthorized access to a network and launch further attacks.""
   }
 ][
     {
         ""sid"": ""2044"",
         ""Technique ID"": ""T1564"",
         ""Technique Name"": ""Hide Artifacts"",
         ""Quotes"": """"Hide Artifacts techniques may be used to conceal adversary activity and response tools while operating within a victim environment. This rule detects Point-to-Point Tunneling Protocol (PPTP) traffic, which can be used by adversaries to establish encrypted tunnels to bypass network defenses and hide their presence."""",
         ""Explanation"": ""This event is generated when there is an attempt to exploit a known vulnerability ""
     }
 ][
   {
     ""sid"": ""2044"",
     ""Technique ID"": ""T1495"",
     ""Technique name"": ""Firmware Corruption"",
     ""Quotes"": """"Firmware Corruption techniques involve modifying or overwriting flash memory contents of system BIOS or other firmware in devices to render them inoperable or unable to boot, thus denying availability to use the devices and/or the system."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Cisco IOS Software that could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device by sending specially crafted PPTP packets.""
   }
 ][
   {
     ""sid"": ""2044"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Remote Desktop Protocol"",
     ""Quotes"": """"Remote Desktop Protocol (RDP) is a common protocol used for remote administration and support. Attackers may abuse RDP to gain initial access to a system or to move laterally within a compromised network. This rule detects the start of an RDP session, which could indicate that an attacker is attempting to establish a persistent connection to a target system."""",
     ""Explanation"": ""The event with ID 2044 is generated when an attacker attempts to exploit a system via Remote Desktop Protocol.""
   }
 ][
   {
     ""sid"": ""2044"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve accessing services or daemons that are exposed to external networks and may be vulnerable to exploitation. This rule detects an attempted PPTP Start Control Request, which is the initial stage of establishing a PPTP VPN connection. Attackers may exploit vulnerabilities in PPTP to gain unauthorized access to the network."""",
     ""Explanation"": ""PPTP (Point-to-Point Tunneling Protocol) Start Control Request attempt is detected.""
   }
 ][
   {
     ""sid"": ""2044"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Application Layer Protocol"",
     ""Quotes"": """"Application Layer Protocol techniques involve adversaries communicating using higher-level protocols to evade detection or blend in with legitimate traffic. PPTP is an application layer protocol used for establishing VPN connections, and this rule detects attempts to initiate a PPTP connection, which could be indicative of an adversary attempting to gain unauthorized access to the network. The rule also specifies established and no_stream flags, suggesting that the connection is already established and no traffic is being exchanged, which is consistent with adversaries using PPTP for reconnaissance or establishing a foothold."""",
     ""Explanation"": ""The rule detects attempts to initiate a PPTP connection, which could be indicative of an adversary attempting to gain unauthorized access to the network.""
   }
 ][
   {
     ""sid"": ""19020"",
     ""Technique ID"": ""T1001"",
     ""Technique Name"": ""Process Injection"",
     ""Quotes"": """"Process Injection techniques involve injecting malicious code into a legitimate process to gain control of the process, execute arbitrary code, or elevate privileges. This rule detects the creation of a process with a specific command line containing ""hxxp://www.download.com/nortoncleaner_trial.exe"", which is a common method used to download and execute malware or unwanted software."""",
     ""Explanation"": ""This event is generated when a process is created with a command line containing suspicious strings.""
   }
 ][
         ""sid"": ""2044"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Discovery"",
         ""Quotes"": """"Network Service Discovery techniques involve identifying and locating network services running on a host or within a network. PPTP is a network protocol used to establish a Virtual Private Network (VPN) connection, and this rule specifically detects the initial control request sent by a client attempting to establish a PPTP connection. Attackers commonly use network service discovery techniques to identify potential targets for exploitation."""",
         ""Explanation"": ""This event is generated when a PPTP Start Control Request attempt is made.""
     ]","['T1190', 'T1046', 'T1190', 'T1046', 'T1564', 'T1495', 'T1071', 'T1071', 'T1071', 'T1001', 'T1046']",['T1595']
1579,"[
     {
         ""sid"": ""1579"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning involves using a variety of techniques to scan for and identify network services and devices. The rule looks for reconnaissance activity against IBM Domino web servers using the URI '/webadmin.nsf' which is used for administrative access. This indicates that an attacker is attempting to gather information about the target system's network configuration and services."""",
         ""Explanation"": ""This event is generated when an attempt to access the Domino web administration interface is detected.""
     }
 ][
   {
     ""sid"": ""1579"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve actively scanning networks to discover available hosts and services. This rule detects attempts to access the Domino webadmin.nsf page, which is a common target for attackers to gather information about a Domino server."""",
     ""Explanation"": ""This event is generated when an attempt is made to access a Domino web administration page.""
   }
 ][
   {
     ""sid"": ""1579"",
     ""Technique ID"": ""T1058"",
     ""Technique name"": ""Collect Credentials via Credential Harvester"",
     ""Quotes"": """"Collect Credentials via Credential Harvester techniques involve using tools to collect credentials from user input or configuration data. Domino's web administration interface ('/webadmin.nsf') is often targeted by attackers to access sensitive configuration and user information. The rule triggers when access to this page is detected, which could indicate an attempt to gather credentials."""",
     ""Explanation"": ""this rule may indicate an attacker is attempting to access sensitive configuration and user information.""
   },
   {
     ""sid"": ""1579"",
     ""Technique ID"": ""T1598"",
     ""Technique name"": ""Web Application Attack"",
     ""Quotes"": """"Web Application Attacks involve targeting vulnerabilities in web applications to gain unauthorized access or execute arbitrary code. Domino's web administration interface ('/webadmin.nsf') is a common attack surface for web application attacks due to potential vulnerabilities."""",
     ""Explanation"": ""This rule detects an attempt to scan for vulnerabilities in the web administration interface.""
   },
   {
     ""sid"": ""1579"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""Account Discovery"",
     ""Quotes"": """"Account Discovery techniques involve searching for and identifying user accounts on a system. Domino's web administration interface ('/webadmin.nsf') provides access to user accounts and their associated roles and privileges, making it a target for attackers to gather information about potential targets."""",
     ""Explanation"": ""The rule triggers when access to the web administration interface is detected, which could indicate an attempt to gather information about user accounts.""
   }
 ][
   ""sid"": ""1579"",
   ""Technique ID"": ""T1018"",
   ""Technique name"": ""Remote System Discovery"",
   ""Quotes"": """"Remote System Discovery techniques involve attempts to gain information about systems on a network. This rule detects an attempt to access the Domino webadmin.nsf resource, which could be used for reconnaissance and information gathering purposes"""",
   ""Explanation"": ""The rule is triggered when someone tries to access the Domino web administration page (/webadmin.nsf), which could be part of an attacker's reconnaissance efforts to gather information about the system.""
 ][
     ""sid"": ""1579"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve actively scanning networks to identify systems, services, and vulnerabilities to target for subsequent exploitation. This rule detects reconnaissance attempts by an external source targeting Domino webadmin.nsf web page, which could be used to gather information about the Domino server for further exploitation."""",
     ""Explanation"": ""This event is generated when an attempt to access the Domino web administration page is made.""
 ][
   {
     ""sid"": ""1579"",
     ""Technique ID"": ""T1595"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques attempt to trick users into revealing personal or sensitive information, such as credentials, by masquerading as a trusted entity. This rule detects probes for the IBM Domino web administration interface (/webadmin.nsf), which attackers commonly use to identify potential targets for phishing attacks by impersonating the legitimate page and attempting to trick users into entering their credentials."""",
     ""Explanation"": ""Phishing is a technique used to trick users into providing sensitive information by impersonating a trusted entity.""
   }
 ][
   {
     ""sid"": ""1579"",
     ""Technique ID"": ""T1492"",
     ""Technique Name"": ""Web Application Fingerprinting"",
     ""Quotes"": """"Web Application Fingerprinting techniques involve identifying and extracting information about web applications and their underlying technologies. This rule detects attempts to access the Domino web administration interface ('/webadmin.nsf'), which is a common target for attackers looking to fingerprint web applications."""",
     ""Explanation"": ""This rule is designed to detect attempts to access the Domino web administration interface, which is used to manage and configure Domino servers. Attackers may attempt to access this interface to gather information about the server and its configuration, which could be used to launch further attacks.""
   }
 ][
   {
     ""sid"": ""1579"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve actively scanning systems on a network for open ports and services, often in order to identify potential targets for attacks. This rule detects an attempt to access the 'webadmin.nsf' resource on a Domino server, which is a common method for attackers to probe for vulnerabilities in web applications."""",
     ""Explanation"": ""This event is generated when a connection is made to a web server.""
   }
 ][
         ""sid"": ""1579"",
         ""Technique ID"": ""T1595"",
         ""Technique name"": ""Active Scanning"",
         ""Quotes"": """"Active Scanning techniques involve performing active recon scans to gather information that can be used during targeting. This rule detects an attempt to access the Domino webadmin.nsf page, which is used for administrative tasks in Domino servers. Attackers may perform active scanning to identify potential vulnerabilities or misconfigurations in web applications by probing for specific URLs or endpoints."""",
         ""Explanation"": ""This event is generated when an attempt to access the Domino webadmin.nsf page is detected.""
     ][
   {
     ""sid"": ""1579"",
     ""Technique ID"": ""T1049"",
     ""Technique name"": ""Web Application Attack"",
     ""Quotes"": """"Web Application Attack techniques target vulnerabilities in web applications to gain unauthorized access or execute arbitrary code. This rule detects access to the Domino webadmin.nsf page, which is used for administrative tasks in IBM Domino servers. Attackers commonly target this page to exploit vulnerabilities in the Domino web application."""",
     ""Explanation"": ""This rule triggers on attempts to access the Domino web administration page, which is a potential reconnaissance activity by an adversary. ""
   }
 ][
   {
     ""sid"": ""1579"",
     ""Technique ID"": ""T1492"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages that appear to come from trusted sources to deceive users into revealing sensitive information or taking actions that compromise their systems. The rule detects reconnaissance attempts targeting the Domino web administration interface, which is a common target for phishing attacks due to its wide use and potential for sensitive data exposure."""",
     ""Explanation"": ""This event is generated when a user accesses the web administration interface of Domino.""
   }
 ]","['T1040', 'T1046', 'T1058', 'T1598', 'T1087', 'T1018', 'T1046', 'T1595', 'T1492', 'T1046', 'T1595', 'T1049', 'T1492']",['T1133']
48792,"[
     ""sid"": ""34843"",
     ""Technique ID"": ""T1098"",
     ""Technique name"": ""Use Alternate Protocol"",
     ""Quotes"": """"Use Alternate Protocol techniques involve employing non-standard or uncommon communication protocols to evade detection or analysis. This rule detects the use of the EMERY user-agent in an HTTP header, which is often associated with malware using alternate protocols to communicate with command and control servers, allowing them to evade detection and analysis by relying on non-standard communication mechanisms."""",
     ""Explanation"": ""The EMERY user-agent is known to be used by malware.""
 ][
   {
     ""sid"": ""34843"",
     ""Technique ID"": ""T1112"",
     ""Technique Name"": ""User-Agent"",
     ""Quotes"": """"User-Agent techniques involve examining the User-Agent header in HTTP requests to identify the type and version of the web browser or other client software making the request."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""34843"",
         ""Technique ID"": ""T1027"",
         ""Technique Name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve deliberately altering the content of files or information to make them appear benign, such as using encryption or steganography to hide malicious code within images, documents, or other files."""",
         ""Explanation"": ""This event occurs when a malicious user agent, ""EMERY"" is detected in the HTTP header. Obfuscating the user agent is a known technique used by malware to evade detection and hide its malicious activities.""
     ][
 {
 ""sid"": ""34843"",
 ""Technique ID"": ""T1105"",
 ""Technique Name"": ""Indicator Removal on Host"",
 ""Quotes"": """"Indicator Removal on Host techniques involve removing evidence of malicious activity or artifacts from a compromised system to evade detection or analysis. This rule detects a malicious user agent as part of a Trojan (W97M) communication, suggesting an attempt to establish a connection with a command and control server while concealing its malicious intent by impersonating a legitimate user agent."""",
 ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 }
 ][
   {
     ""sid"": ""34843"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring malicious tools or files from an external system into a compromised environment. This rule detects the presence of a known malicious user agent ('EMERY') associated with the Win.Trojan.W97M malware, which often involves the use of external tools or scripts for remote access and control."""",
     ""Explanation"": ""The rule triggers on the presence of user-agent 'EMERY' in the HTTP header of the traffic, which is considered a reliable indicator of malicious activity potentially involving tool transfer.""
   }
 ][
   {
     ""sid"": ""34843"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external facing remote services, such as web servers or cloud services, to initially access and/or persist within a network. This rule detects a Trojan (Win.Trojan.W97M) using a known malicious user agent ('EMERY') to communicate with a command and control server, which is a common method used by Trojans to establish and maintain persistence on a compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected. The rule detects a Trojan using a known malicious user agent ('EMERY') to communicate with a command and control server.""
   },
   {
     ""sid"": ""34843"",
     ""Technique ID"": ""T1056"",
     ""Technique Name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (Win.Trojan.W97M) that utilizes a known malicious user agent ('EMERY') to communicate with a command and control server, which is a common method used by Trojans to capture input data and exfiltrate it to the attacker."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected. The rule detects a Trojan using a known malicious user agent ('EMERY') to communicate with a command and control server, which is a common method used by Trojans to capture input data and exfiltrate it to the attacker.""
   }
 ][
   {
     ""sid"": ""34843"",
     ""Technique ID"": ""T1027"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or hiding files or information in ways that make them difficult to detect or analyze. This rule looks for malicious user agents, specifically 'EMERY', which attackers may use to disguise their traffic and evade detection."""",
     ""Explanation"": ""This rule looks for a user-agent associated with malicious activity.""
   }
 ][
   {
     ""sid"": ""34843"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted drive-by download attack using a known malicious user agent (EMERY) to exploit vulnerabilities in web browsers and install malware."""",
     ""Explanation"": ""This rule looks for a User-Agent header that is known to be used by malicious software, specifically the EMERY variant of the Win.Trojan.W97M malware. When this rule triggers, it indicates that an attempt to exploit a vulnerability in a web browser is being made.""
   }
 ][
     ""sid"": ""34843"",
     ""Technique ID"": ""T1102"",
     ""Technique name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking or coercing users into executing commands, scripts, or executables that could elevate privileges, download malware, or compromise systems."""",
     ""Explanation"": ""This rule detects malicious user-agents, in this case, the malicious user-agent is EMERY associated with the Win.Trojan.W97M malware, which is known to be used in phishing attacks to trick users into executing malicious code.""
 ][
     {
         ""sid"": ""34843"",
         ""Technique ID"": ""T1036"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve disguising or altering attack traffic or infrastructure to appear benign. This rule identifies a communication with a known malicious user-agent, """"EMERY"""", which is associated with malware infections like Win.Trojan.W97M. Attackers use masquerading to evade detection and avoid triggering security alarms."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
         {
             ""sid"": ""34843"",
             ""Technique ID"": ""T1190"",
             ""Technique name"": ""Exploit Public-Facing Application"",
             ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The given Snort rule detects a malicious user-agent ('EMERY') associated with Win.Trojan.W97M attempting to connect to external HTTP servers. This behavior is commonly observed in attacks exploiting web application vulnerabilities to establish a connection with a remote command and control server."""",
             ""Explanation"": ""The rule is triggered when a specific user agent is detected, which is known to be associated with malicious activities and often used in exploitation attempts against web applications.""
         }
     ]","['T1098', 'T1112', 'T1027', 'T1105', 'T1105', 'T1133', 'T1056', 'T1027', 'T1190', 'T1102', 'T1036', 'T1190']",['T1133']
40450,"[
   {
     ""sid"": ""40450"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
   }
 ][
   {
     ""sid"": ""40450"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Signed Binary Proxy Execution"",
     ""Quotes"": """"Signed Binary Proxy Execution techniques involve using trusted, signed binaries and scripts to execute malicious code or payloads. This rule detects an attempt to download a file from a suspicious URL, which may indicate an attempt to download a malicious payload or dropper signed with a valid certificate."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""40450"",
     ""Technique ID"": ""T1218"",
     ""Technique Name"": ""Scripting"",
     ""Quotes"": """"Scripting techniques involve using scripting languages, interpreters, or frameworks to execute commands or automate tasks. This rule detects an attempt to download a file from a suspicious URL, which may indicate an attempt to download a malicious script that will be executed by the target system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""40450"",
     ""Technique ID"": ""T1485"",
     ""Technique Name"": ""Data from Local System"",
     ""Quotes"": """"Data from Local System techniques involve extracting data from the local system, such as files or system memory, and sending it to an external location. This rule detects an attempt to download a file from a suspicious URL, which may indicate an attempt to exfiltrate sensitive data from the target system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""40450"",
     ""Technique ID"": ""T1496"",
     ""Technique name"": ""Resource Hijacking"",
     ""Quotes"": """"Resource Hijacking techniques involve manipulating legitimate resources to gain unauthorized access or control over systems or data. This rule detects an attempt to download a malicious file from a compromised OneDrive account, which is a common method attackers use to infect systems with malware or steal sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""40450"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve transferring exfiltrated data to a remote system that can be operated by the adversary. This rule detects an attempt to download a file from a Microsoft OneDrive URL, which could be part of a data exfiltration operation where stolen data is sent to the attacker's controlled server."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""40450"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring malicious tools or data into a compromised environment. The rule indicates that traffic is attempting to download a malicious payload (/fr/mso/onedrive) using an HTTP request to an external server, which is commonly used by malware to retrieve additional tools or components."""",
         ""Explanation"": ""This event is generated when a trojan/downloader is detected.""
     }
 ][
   {
     ""sid"": ""23933"",
     ""Technique ID"": ""T1495"",
     ""Technique name"": ""Firmware Corruption"",
     ""Quotes"": """"Firmware Corruption techniques involve manipulating or corrupting firmware, which is the low-level software that initializes and controls the hardware functions of a device. This rule detects the exploitation of a vulnerability in the Unified Extensible Firmware Interface (UEFI) firmware of Dell Latitude laptops, which could allow an attacker to execute arbitrary code with SYSTEM privileges."""",
     ""Explanation"": ""UEFI firmware vulnerability in Dell Latitude laptops allows attackers to execute arbitrary code with SYSTEM privileges via a crafted SMM call, related to the ""SMM Callout"" issue.""
   }
 ][
   {
     ""sid"": ""40450"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to download a malicious file from a compromised website hosting the Doc.Downloader.Agent malware."""",
     ""Explanation"": ""This event is generated when a user attempts to download a file from a malicious website.""
   }
 ][
   {
     ""sid"": ""40450"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in software that is downloaded and executed without user interaction, often through a web browser. The rule detects an attempt by a malware agent to download a file from a malicious domain, indicating the potential for exploiting a browser vulnerability or running malicious content in the background."""",
     ""Explanation"": ""The rule indicates malicious activity related to file downloads by malware agents, suggesting a drive-by compromise attempt.""
   }
 ][
   {
     ""sid"": ""40450"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or capabilities into a system or network to support follow-on actions. This rule detects a file download attempt by a malware known as Doc.Downloader.Agent, which typically involves downloading additional malicious components to establish persistence or execute malicious payloads."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""40450"",
     ""Technique ID"": ""T1080"",
     ""Technique name"": ""Taint Shared Content"",
     ""Quotes"": """"Taint Shared Content techniques involve adding malicious content to shared storage locations to deliver payloads to remote systems. This rule detects an attempt to download a malicious file from a shared OneDrive location (/fr/mso/onedrive), which is a potential means of delivering malware to target systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""40450"",
     ""Technique ID"": ""T1497"",
     ""Technique name"": ""Virtualization/Sandbox Evasion"",
     ""Quotes"": """"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This rule detects an attempt to download a malicious file from a shared OneDrive location (/fr/mso/onedrive), which could be an attempt to evade detection by security tools and analysis environments."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""40450"",
     ""Technique ID"": ""T1433"",
     ""Technique name"": ""File Download"",
     ""Quotes"": """"File Download techniques involve obtaining files from remote systems to gain access to sensitive data or execute malicious code on the target system. This rule detects an attempt by a malware downloader (Doc.Downloader.Agent) to download a file from a OneDrive URL, which is a common method used by malware to fetch additional payloads or updates."""",
     ""Explanation"": ""The rule looked for a file download attempt by a malware downloader.""
   }
 ]","['T1190', 'T1105', 'T1218', 'T1485', 'T1496', 'T1105', 'T1105', 'T1495', 'T1190', 'T1189', 'T1105', 'T1080', 'T1497', 'T1433']",['T1102']
45469,"[
     ""sid"": ""45469"",
     ""Technique ID"": ""T1566"",
     ""Technique name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending malicious emails with links to malicious websites or attachments to trick the victim into providing sensitive information or clicking on malicious links."""",
     ""Explanation"": ""The rule detects an attempt to download a ransomware payload from a malicious website using a phishing email.""
 ][
     ""sid"": ""45469"",
     ""Technique ID"": ""T1486"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact involves encrypting data to make it unusable to authorized users. This rule detects an attempt to download the 'SambaCry' ransomware, which encrypts files on the victim's computer and demands a ransom payment to decrypt them."""",
     ""Explanation"": ""This rule detects malicious attempts to establish a connection to a remote host on TCP port 445, which is commonly used by the Samba file-sharing protocol. The rule specifically checks for attempts to download a file named ""lo.txt"" from a remote directory named ""kelly6666,"" which is associated with the distribution of the SambaCry ransomware.""
 ][
   {
     ""sid"": ""45469"",
     ""Technique ID"": ""T1483"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to make it unusable to the victim or to make it difficult for incident responders to investigate and remediate the compromise."""",
     ""Explanation"": ""SambaCry ransomware encrypts data on the victim's system, making it inaccessible to the victim and potentially difficult for incident responders to recover.""
   },
   {
     ""sid"": ""45469"",
     ""Technique ID"": ""T1564"",
     ""Technique Name"": ""Hijack Execution Flow"",
     ""Quotes"": """"Hijack Execution Flow involves modifying the normal execution flow of a program or process."""",
     ""Explanation"": ""Ransomware often hijacks the execution flow of legitimate processes to encrypt files on the victim's system.""
   },
   {
     ""sid"": ""45469"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking users into executing malicious code."""",
     ""Explanation"": ""Ransomware is often delivered through phishing emails or malicious websites that trick users into downloading and executing the ransomware payload.""
   },
   {
     ""sid"": ""45469"",
     ""Technique ID"": ""T1574"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing involves sending fraudulent emails or messages that appear to come from a legitimate organization. The goal is to trick the recipient into clicking a link or opening an attachment that will download malware onto their system."""",
     ""Explanation"": ""Ransomware is often delivered through phishing emails that trick users into downloading and executing the ransomware payload.""
   }
 ][
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. The rule indicates the presence of a Trojan (GateKeylogger) that mimics a '404 Not Found' error to disguise its communication with a command and control server, which is a common method used by keyloggers to stealthily capture input data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""45469"",
     ""Technique ID"": ""T1496"",
     ""Technique name"": ""Resource Hijacking"",
     ""Quotes"": """"Resource Hijacking techniques involve exploiting system resources to complete resource-intensive tasks, potentially impacting system availability. The rule detects an attempt to download a ransomware payload ('SambaCry') via an HTTP request to an external server, which indicates the adversary's intent to hijack system resources for malicious purposes."""",
     ""Explanation"": ""This event is generated when a worm attempts to exploit a Microsoft Windows Server service in order to spread to other systems.""
   }
 ][
   {
     ""sid"": ""45469"",
     ""Technique ID"": ""T1484"",
     ""Technique name"": ""File Download"",
     ""Quotes"": """"File Download techniques involve retrieving files from a remote source to a local system. This rule detects an attempt to download a file named 'lo.txt' from a suspicious URL associated with the SambaCry ransomware. Attackers often use file downloads to deliver malicious payloads or malware to target systems."""",
     ""Explanation"": ""Ransomware may download additional components from the actor's infrastructure, which can perform additional functions and/or expand the attack's reach.""
   }
 ][
   {
     ""sid"": ""45469"",
     ""Technique ID"": ""T1495"",
     ""Technique Name"": ""Firmware Corruption"",
     ""Quotes"": """"Firmware Corruption techniques involve overwriting or corrupting the flash memory contents of system BIOS or other firmware in devices attached to a system, rendering them inoperable or unable to boot. This rule detects an attempt to download a ransomware payload from a malicious webpage, which could lead to the corruption of the victim's firmware."""",
     ""Explanation"": ""Firmware Corruption technique involves modifying the firmware of a device to disrupt its normal operation. The rule detects an attempt to download a ransomware payload, which could be used to corrupt the firmware of the victim's device.""
   }
 ][
         ""sid"": ""45469"",
         ""Technique ID"": ""T1136"",
         ""Technique name"": ""Network Share Discovery"",
         ""Quotes"": """"Network Share Discovery techniques involve identifying and mapping network file shares to locate sensitive data or identify potential targets for exploitation."""",
         ""Explanation"": ""The rule detects a network share discovery attempt that is potentially related to the spread of the SambaCry ransomware.""
     ][
   {
     ""sid"": ""45469"",
     ""Technique ID"": ""T1570"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve installing or uploading malicious scripts directly onto a web server to control the server remotely or to maintain access to the server. This rule alerts on attempts to download a file named 'lo.txt' from a directory called 'kelly6666', indicating a possible attempt to install a web shell on the target system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""23934"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve installing and using a web shell to execute arbitrary commands or access the underlying operating system of a web server. The rule detects an attempt to download a SambaCry ransomware payload from a remote server using a web shell, which is commonly used by attackers to gain persistent access to compromised web servers."""",
         ""Explanation"": ""The rule is looking for the word ""kelly6666"" in the traffic. This is likely a reference to a specific ransomware family or campaign.""
     ][
     {
         ""sid"": ""45469"",
         ""Technique ID"": ""T1569"",
         ""Technique name"": ""Modify Registry"",
         ""Quotes"": """"Modify Registry techniques involve modifying registry keys and values to alter system or application behavior or to persist malicious functionality. This rule detects an attempt to download the 'lo.txt' file from a server running the Samba web server. The 'lo.txt' file is known to be used by the SambaCry ransomware to download and execute the ransomware payload."""",
         ""Explanation"": ""SambaCry spreads by brute-forcing the SMB service with the aim of exploiting MS17-010. If successful, SambaCry drops a payload that downloads two additional binaries on the infected system.""
     },
     {
         ""sid"": ""45469"",
         ""Technique ID"": ""T1489"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve tricking a user into unknowingly visiting a malicious website or opening a malicious email attachment, often through the exploitation of software vulnerabilities or social engineering tactics. This rule detects an attempt to download the 'lo.txt' file from a server running the Samba web server. The 'lo.txt' file is known to be used by the SambaCry ransomware to download and execute the ransomware payload."""",
         ""Explanation"": ""SambaCry spreads by brute-forcing the SMB service with the aim of exploiting MS17-010. If successful, SambaCry drops a payload that downloads two additional binaries on the infected system.""
     }
 ][
    {
       ""sid"": ""10082"",
       ""Technique ID"": ""T1484"",
       ""Technique Name"": ""Data Encrypted for Impact"",
       ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to make it unavailable to authorized users or applications. This rule detects a threat actor attempting to encrypt data using a ransomware known as 'CryptON' by searching for a specific file path and filename that are associated with this malware."""",
       ""Explanation"": ""This event is generated when activity relating to malware is detected.""
    }
 ]","['T1566', 'T1486', 'T1483', 'T1564', 'T1204', 'T1574', 'T1056', 'T1496', 'T1484', 'T1495', 'T1136', 'T1570', 'T1105', 'T1569', 'T1489', 'T1484']",['T1571']
47849,"[
     {
         ""sid"": ""47849"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools, such as remote access tools (RATs), onto a victim system. This rule detects an attempt to download a variant of Win.Downloader.DDECmdExec, which is a malicious PowerShell script used by attackers to download and execute arbitrary commands on a victim system. The rule looks for specific patterns within the file data, indicating the presence of the PowerShell script."""",
         ""Explanation"": ""This rule alerts on the presence of a PowerShell script that is used to download additional malicious software or perform other malicious actions.""
     }
 ][
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using command shells (e.g., Bash, CMD, PowerShell) or scripting languages (e.g., JavaScript, Python, VBScript) to execute commands and automate tasks on a system."""",
     ""Explanation"": ""This rule detects a malicious attempt to download and execute a Windows executable file using the DDECmdExec Win.Downloader malware, which is known to use command shells to retrieve and execute commands from a remote server.""
   },
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1124"",
     ""Technique name"": ""Network Share Discovery"",
     ""Quotes"": """"Network Share Discovery techniques involve identifying and enumerating network shares on a system to gain access to shared resources."""",
     ""Explanation"": ""The rule includes the detection of suspicious file-sharing activity, indicating the malware's attempt to connect to and access network shares.""
   },
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1570"",
     ""Technique name"": ""Exploit Remote Services"",
     ""Quotes"": """"Exploit Remote Services techniques involve exploiting vulnerabilities in remote services, such as web services, databases, and mail servers, to gain unauthorized access to a system."""",
     ""Explanation"": ""The rule detects an attempt to exploit a remote service, specifically the SMTP service, which is vulnerable to malicious exploitation.""
   }
 ][
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using a command or scripting interpreter to execute commands or scripts, potentially to automate or simplify tasks."""",
     ""Explanation"": ""This rule detects an attempt to download and execute a malicious executable file using the command line, which is a common method used by attackers to gain remote access to systems.""
   }
 ][
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using command or scripting interpreters toexecute commands or scripts on the system to perform a variety of actions, including executing malicious code, gathering information, or controlling the system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected. The rule detects an attempt to execute malicious code using a command or scripting interpreter, specifically a variant of Win.Downloader.DDECmdExec.""
   }
 ][
         ""sid"": ""47849"",
         ""Technique ID"": ""T1486"",
         ""Technique name"": ""Data from Local System"",
         ""Quotes"": """"Data from Local System techniques involve reading data from the local system, such as file contents, environment variables, and registry keys. This rule detects a malware variant (Win.Downloader.DDECmdExec) that downloads and executes arbitrary commands from a remote server. The attacker may use this technique to gather sensitive information from the compromised system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1187"",
     ""Technique name"": ""Forced Authentication"",
     ""Quotes"": """"Forced Authentication techniques involve compelling a user to provide authentication credentials through a malicious operation. This rule detects an attempt to execute the 'cmd' command using a DDECmdExec variant, which often involves exploiting a vulnerable application or social engineering tactics to force users into providing their credentials."""",
     ""Explanation"": ""This event is generated when a network connection is made that matches the rule criteria.""
   }
 ][
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."",
     ""Explanation"": ""This rule identifies malicious activity associated with a trojan downloader that uses the DDECmdExec technique to execute commands on the target system.""
   }
 ][
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system command shell, scripting language interpreter, or other utility to execute commands on a system, which can be used to perform a variety of actions, including downloading malware, modifying system settings, or exfiltrating data."""",
     ""Explanation"": ""This rule detects an attempt to download and execute a malicious VBScript file using the 'cmd' command, which is a common technique used by attackers to execute arbitrary commands and scripts on a target system.""
   }
 ][
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using a command shell or scripting language to execute commands on the target system. The rule detects an attempt to download a variant of the Win.Downloader.DDECmdExec malware, which is known for using the 'cmd' command to execute arbitrary commands on the compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1106"",
     ""Technique name"": ""Command-Line Interface"",
     ""Quotes"": """"Command-Line Interface techniques involve using a command shell to execute commands on the target system. The rule detects an attempt to download a variant of the Win.Downloader.DDECmdExec malware, which is known for using the 'cmd' command to execute arbitrary commands on the compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1218"",
     ""Technique name"": ""Office Application Startup"",
     ""Quotes"": """"Office Application Startup techniques involve executing malicious code when a Microsoft Office application is launched. The rule detects an attempt to download a variant of the Win.Downloader.DDECmdExec malware, which can use macros embedded in Office documents to execute arbitrary commands on the compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1551"",
     ""Technique name"": ""PowerShell"",
     ""Quotes"": """"PowerShell techniques involve using the Windows PowerShell command-line shell and scripting language to execute commands on the target system. The rule detects an attempt to download a variant of the Win.Downloader.DDECmdExec malware, which has been observed using PowerShell to execute malicious commands on compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring malicious tools from an external source to the victim's system. In this case, the rule detects an attempt to download and execute a variant of the Win.Downloader.DDECmdExec malware using the command prompt (cmd), which is a common method used by attackers to install malicious payloads on target systems."""",
     ""Explanation"": ""This rule detects an attempt to download and execute malware.""
   }
 ][
   {
     ""sid"": ""47849"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Injection"",
     ""Quotes"": """"Injection is a technique where adversaries introduce malicious code into a system. In this rule, the adversary is attempting to inject a command into a system via the SMTP protocol. The command is encoded using a pipe character '|' and a single quote character ''."""",
     ""Explanation"": ""This event is generated when an attempt is made to inject malicious code into a system via the SMTP protocol. The command is encoded using a pipe character '|' and a single quote character ''.""
   }
 ]","['T1105', 'T1105', 'T1124', 'T1570', 'T1105', 'T1105', 'T1486', 'T1187', 'T1105', 'T1105', 'T1105', 'T1106', 'T1218', 'T1551', 'T1105', 'T1105']",['T1559']
2549,"[
   {
     ""sid"": ""2549"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted file write operation on the HP Web JetAdmin 'tree.xms' script, which could indicate an attempt to exploit a vulnerability in the application to gain unauthorized access or execute arbitrary code on the target system."""",
     ""Explanation"": ""File write operation on the HP Web JetAdmin 'tree.xms' script, which could indicate an attempt to exploit a vulnerability in the application to gain unauthorized access or execute arbitrary code on the target system.""
   }
 ]
 [
   {
     ""sid"": ""2549"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted file write operation on the HP Web JetAdmin 'tree.xms' script, which is a common method attackers use to exploit web applications by uploading malicious files or modifying existing ones.\"""",
     ""Explanation"": ""This rule is triggered when an attempt is made to write a file to the HP Web JetAdmin 'tree.xms' script, which could allow an attacker to gain unauthorized access or execute arbitrary code on the system.""
   }
 ]
 [
   {
     ""sid"": ""2549"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""Web File Modification"",
     ""Quotes"": """"Web File Modification techniques involve modifying, replacing, or deleting files on a web server to facilitate exploitation or establish persistence. This rule detects an attempt to write a file to the '/plugins/framework/script/tree.xms' path on an HP Web JetAdmin server, which could be an attempt to upload malicious code or modify existing files to compromise the server."""",
     ""Explanation"": ""The event may indicate a possible attempt at unauthorized modification of files on a web server.""
   }
 ][
   {
     ""sid"": ""2549"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted file write to the '/plugins/framework/script/tree.xms' URI on an HP Web JetAdmin server, which is a common method attackers use to exploit vulnerabilities in web applications by uploading malicious files."""",
     ""Explanation"": ""This event is generated when a web server is attacked using a file management vulnerability in HP Web Jetadmin.""
   }
 ][
   {
     ""sid"": ""2549"",
     ""Technique ID"": ""T1082"",
     ""Technique name"": ""File Deletion"",
     ""Quotes"": """"File Deletion techniques involve erasing specific files from a system, which can be used to remove traces of malicious activity or disable security mechanisms. This rule detects an attempt to delete files using the '/plugins/framework/script/tree.xms' URL, which is a known vulnerability in HP Web JetAdmin, allowing unauthorized file deletion."""",
     ""Explanation"": ""This rule detects an attempt to delete files using the /plugins/framework/script/tree.xms URL, which is a known vulnerability in HP Web JetAdmin, allowing unauthorized file deletion.""
   },
   {
     ""sid"": ""2549"",
     ""Technique ID"": ""T1559"",
     ""Technique name"": ""Inter-Process Communication"",
     ""Quotes"": """"Inter-Process Communication techniques involve using inter-process communication (IPC) mechanisms for local code or command execution. The rule indicates an attempt to access the 'tree.xms' script, which is used for inter-process communication in HP Web JetAdmin, allowing attackers to execute arbitrary commands on the system."""",
     ""Explanation"": ""This rule detects an attempt to access the 'tree.xms' script, which is used for inter-process communication in HP Web JetAdmin, allowing attackers to execute arbitrary commands on the system.""
   }
 ][
   {
     ""sid"": ""2549"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a potential attempt to exploit a file write vulnerability in the HP Web JetAdmin application's 'tree.xms' script, which could allow an attacker to upload and execute arbitrary code on the target system."""",
     ""Explanation"": ""This rule is designed to detect an attempt to exploit a file write vulnerability in HP Web JetAdmin. Successful exploitation of this vulnerability could allow an attacker to upload and execute arbitrary code on the target system, potentially leading to remote code execution.""
   }
 ][
   {
     ""sid"": ""2549"",
     ""Technique ID"": ""T1597"",
     ""Technique Name"": ""Unquoted Search Path"",
     ""Quotes"": """"Unquoted Search Path techniques involve the use of improper search path mechanisms that do not enclose executable references in quotation marks, which can lead to system path manipulation and arbitrary code execution. This rule specifically detects a System File Write attempt in an HP Web JetAdmin URI, indicating a potential attempt to leverage an unquoted search path vulnerability for arbitrary file write operations."""",
     ""Explanation"": ""the uri is '/plugins/framework/script/tree.xms' and the http_client_body contains 'WriteToFile', this request may be an exploitation attempt of CVE-2019-7133.""
   }
 ][
   {
     ""sid"": ""2549"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a file upload vulnerability in the HP JetAdmin web interface by sending a specially crafted HTTP POST request that includes a malicious file to be uploaded. Attackers can exploit this vulnerability to upload malicious files and execute arbitrary code on the targeted server."""",
     ""Explanation"": ""This rule is designed to detect attempts to exploit a file upload vulnerability in the HP JetAdmin web interface.""
   }
 ][
   {
     ""sid"": ""2549"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve querying or searching for files and directories on a system or network to identify potential targets for compromise or to gather information about the system."""",
     ""Explanation"": ""This rule detects an attempt to write a file to the '/plugins/framework/script/tree.xms' path on HP's Web JetAdmin server. Such attempts could indicate an attacker's reconnaissance activity to identify potential vulnerabilities or sensitive files on the server.""
   }
 ][
     ""sid"": ""2549"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a file write vulnerability in HP Web JetAdmin through the '/plugins/framework/script/tree.xms' URI, which can allow attackers to write arbitrary files to the web server and potentially gain unauthorized access to the system."""",
     ""Explanation"": ""This event is generated when attempts to write to a file is made.""
 ][
   {
     ""sid"": ""2549"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Data from Local System"",
     ""Quotes"": """"Data from Local System techniques collect information from the local system to aid in planning an attack, such as retrieving data from a file or directory, or collecting system information to gain situational awareness."""",
     ""Explanation"": ""The rule detects an attempt to write a file to the HP Web JetAdmin server using the 'WriteToFile' function, which could indicate an attacker attempting to upload malicious content or modify the server's configuration.""
   },
   {
     ""sid"": ""2549"",
     ""Technique ID"": ""T1484"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching for and identifying files and directories of interest on a system. This rule specifically detects an attempt to access the '/plugins/framework/script/tree.xms' file on the HP Web JetAdmin server, which could indicate an attacker attempting to gather information about the server's configuration or identify potential vulnerabilities."""",
     ""Explanation"": ""The rule detects an attempt to access the '/plugins/framework/script/tree.xms' file on the HP Web JetAdmin server, which could indicate an attacker attempting to gather information about the server's configuration or identify potential vulnerabilities.""
   }
 ]","['T1189', 'T1190', 'T1204', 'T1190', 'T1082', 'T1559', 'T1190', 'T1597', 'T1190', 'T1189', 'T1190', 'T1110', 'T1484']",['T1106']
30523,"[
         {
             ""sid"": ""30523"",
             ""Technique ID"": ""T1483"",
             ""Technique Name"": ""Heartbleed"",
             ""Quotes"": """"The Heartbleed vulnerability (CVE-2014-0160) is a serious vulnerability in the OpenSSL cryptography library that allows attackers to steal sensitive information from the memory of vulnerable systems. This rule detects attempts to exploit the Heartbleed vulnerability by sending a specially crafted TLS heartbeat request to a vulnerable server. If the server is vulnerable, it will respond with the contents of its memory, which may include sensitive information such as private keys, passwords, and other sensitive data."""",
             ""Explanation"": ""This rule detects the OpenSSL TLSv1.2 heartbeat read overrun attempt that is associated with the Heartbleed (CVE-2014-0160) vulnerability. The attacker sends a crafted TLS heartbeat request to a vulnerable server, and the server responds with the contents of its memory, which may include sensitive information such as private keys, passwords, and other sensitive data.""
         }
     ][
     ""sid"": ""30523"",
     ""Technique ID"": ""T1220"",
     ""Technique name"": ""Exploit Software Vulnerability"",
     ""Quotes"": """"Exploit Software Vulnerability techniques involve targeting vulnerabilities in software to gain unauthorized access or execute arbitrary code. This rule detects an OpenSSL TLSv1.2 heartbeat read overrun vulnerability, which can be exploited to remotely crash vulnerable SSL/TLS clients."""",
     ""Explanation"": ""A remote code execution vulnerability exists in OpenSSL versions 1.0.1 through 1.0.1m, 1.0.2 through 1.0.2j, and 1.2.0 through 1.2.0-fi when an X.509 certificate is parsed with a maliciously crafted extension.""
 ][
     {
         ""sid"": ""30523"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning involves use of tools to probe ports and services on target systems. This rule detects a heartbeat read overrun attempt, a common technique used in network service scanning to gather information about open ports and services by sending malformed packets to potential targets."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a network service is detected.""
     }
 ][
   {
     ""sid"": ""30523"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted Heartbleed attack, which exploits a vulnerability in the OpenSSL library to read arbitrary memory from vulnerable servers. Heartbleed is a well-known and widely exploited vulnerability that allows attackers to steal sensitive information such as private keys and credentials."""",
     ""Explanation"": ""The rule detects an attempt to exploit a vulnerability in the OpenSSL library, which could allow an attacker to read arbitrary memory from the server.""
   }
 ][
   {
     ""sid"": ""30523"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a potential attempt to exploit a TLS heartbeat vulnerability in OpenSSL versions prior to 1.0.2, which could allow an attacker to read arbitrary memory and potentially execute arbitrary code on the server.\"""",
     ""Explanation"": ""The rule identifies a TLS heartbeat read overrun attempt, which is a vulnerability in OpenSSL that can be exploited by sending a crafted heartbeat request to a vulnerable server.""
   }
 ][
   {
     ""sid"": ""30523"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an OpenSSL TLSv1.2 heartbeat read overrun attempt, which is a known vulnerability (CVE-2014-0160) that can be exploited to execute arbitrary code on a vulnerable server."""",
     ""Explanation"": ""This event is generated when a potential vulnerability is detected in the application protocol.""
   }
 ][
   {
     ""sid"": ""30523"",
     ""Technique ID"": ""T1431"",
     ""Technique Name"": ""Scanning IP Block"",
     ""Quotes"": """"Scanning IP Block techniques involve systematically scanning a range of IP addresses for vulnerabilities or open ports. This rule detects reconnaissance attempts to exploit vulnerabilities related to heartbeat read overrun in OpenSSL TLSv1.2, suggesting that the adversary is attempting to identify vulnerable systems for further exploitation."""",
     ""Explanation"": ""This rule is used to detect reconnaissance attempts to exploit vulnerabilities related to heartbeat read overrun in OpenSSL TLSv1.2, suggesting that the adversary is attempting to identify vulnerable systems for further exploitation.""
   }
 ][
   {
     ""sid"": ""30523"",
     ""Technique ID"": ""T1482"",
     ""Technique name"": ""Port Scanning"",
     ""Quotes"": """"Port scanning is the systematic probing of a computer network to identify active hosts and open ports, and to determine what services are running on those ports. This rule triggers when an attempt to exploit the OpenSSL TLSv1.2 heartbeat read overrun vulnerability is detected, which could allow adversaries to remotely access vulnerable systems and execute arbitrary code. Attackers may use this technique to identify potential targets for further exploitation."""",
     ""Explanation"": ""OpenSSL TLSv1.2 heartbeat read overrun vulnerability can allow remote attackers to execute arbitrary code on vulnerable systems.""
   }
 ][
   {
     ""sid"": ""30523"",
     ""Technique ID"": ""T1112"",
     ""Technique Name"": ""Heartbleed"",
     ""Quotes"": ""\""Heartbleed, also known as CVE-2014-0160, refers to a serious vulnerability in the OpenSSL cryptographic software library that allows attackers to steal information from a vulnerable server via a buffer over-read.\""The rule triggers when a vulnerable client sends a specially-crafted heartbeat request to the server, allowing the attacker to retrieve sensitive information from the server's memory."",
     ""Explanation"": ""This event is generated when a vulnerable OpenSSL client attempts to exploit the Heartbleed vulnerability (CVE-2014-0160) against a server.""
   }
 ][
   {
     ""sid"": ""30523"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials from compromised systems. The rule detects an OpenSSL TLSv1.2 heartbeat read overrun attempt, which can be exploited by attackers to dump credentials from vulnerable clients."""",
     ""Explanation"": ""This signature matches when the client sends the server an SSL heartbeat request that has an ill-formed data structure, such as its length field being too large.""
   }
 ][
   ""sid"": ""30523"",
   ""Technique ID"": ""T1046"",
   ""Technique name"": ""Network Service Discovery"",
   ""Quotes"": """"Network Service Discovery techniques involve querying network services and devices to identify hosts and services present on the network. This rule detects an attempt to exploit Heartbeat, a TLS extension in OpenSSL versions 1.0.1 to 1.0.2beta2 and 1.2.0-rc up to 1.2.0-rc6. Successful exploitation of this vulnerability allows an attacker with network access to a TLS server to remotely execute arbitrary code on the server by sending a specially crafted TLS packet with a heartbeat request."""",
   ""Explanation"": ""The rule detects an attempt to exploit a vulnerability in OpenSSL's TLS heartbeat implementation. By sending a specially crafted heartbeat request, an attacker can potentially execute arbitrary code on the server.""
 ]","['T1483', 'T1220', 'T1040', 'T1190', 'T1190', 'T1190', 'T1431', 'T1482', 'T1112', 'T1110', 'T1046']",['T1005']
28349,"[
   {
     ""sid"": ""28349"",
     ""Technique ID"": ""T1141"",
     ""Technique name"": ""Access Software Configuration"",
     ""Quotes"": """"Access Software Configuration techniques involve modifying or extracting data from configuration files of applications and frameworks. This rule detects an attempt to access the Windows Management Instrumentation (WMI) ActiveX object viewer, which can be used to access and modify system configurations, including for malicious purposes."""",
     ""Explanation"": ""This event is generated when activity relating to browser plugins is detected.""
   }
 ][
   {
     ""sid"": ""28349"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""ActiveX Control Execution"",
     ""Quotes"": """"ActiveX Control Execution techniques target vulnerabilities in the Microsoft ActiveX control framework to execute arbitrary code on a system. This rule detects an attempt to access the Microsoft Windows Management Instrumentation (WMI) administrator tools object viewer ActiveX control, which could be exploited to execute arbitrary code with elevated privileges."""",
     ""Explanation"": ""Webshells are often used by adversaries to maintain persistent access to a system and execute arbitrary commands.""
   }
 ][
   {
     ""sid"": ""28349"",
     ""Technique ID"": ""T1217"",
     ""Technique Name"": ""Browser Information Discovery"",
     ""Quotes"": """"Browser Information Discovery techniques involve enumerating information about browsers to learn more about compromised environments. This rule detects access to the Microsoft Windows WMI administrator tools object viewer ActiveX control, which can be used to gather information about the user's browser and system configuration."""",
     ""Explanation"": ""This event is generated when an attempt is made to access the Microsoft Windows WMI administrator tools object viewer ActiveX control, which can be used to gather information about the user's browser and system configuration.""
   }
 ][
   {
     ""sid"": ""28349"",
     ""Technique ID"": ""T1064"",
     ""Technique Name"": ""Deobfuscate/Decode Files or Information"",
     ""Quotes"": """"Deobfuscate/Decode Files or Information techniques involve extracting concealed or encrypted data into a more usable form. This rule specifically checks for the encoded CLSID """"{2745E5F5-D234-11d0-847A-00C04FDD7BB0}"""" of the IAdminApplication COM objects, which is commonly used by remote administration tools and ActiveX controls to communicate with vulnerable systems."""",
     ""Explanation"": ""This event is generated when an attempt is made to access a COM object using an encoded CLSID.""
   },
   {
     ""sid"": ""28349"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The CLSID """"{2745E5F5-D234-11d0-847A-00C04FDD7BB0}"""" is used for Microsoft OLE, a platform for communication between applications, as well as remote administration tools, which can be exploited by attackers to manipulate applications and compromise the system."""",
     ""Explanation"": ""This event is generated when an attempt is made to access a COM object using an encoded CLSID.""
   }
 ][
   {
     ""sid"": ""28349"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Microsoft Windows WMI administrator tools object viewer ActiveX clsid, which could allow an attacker to execute arbitrary code on the target system\"""",
     ""Explanation"": ""This rule is triggered when an attempt is made to access the Microsoft Windows WMI administrator tools object viewer ActiveX clsid. This clsid is associated with a vulnerability that could allow an attacker to execute arbitrary code on the target system.""
   }
 ][
   {
     ""sid"": ""28349"",
     ""Technique ID"": ""T1212"",
     ""Technique name"": ""Exploitation for Credential Access"",
     ""Quotes"": """"Exploitation for Credential Access techniques involve exploiting software vulnerabilities to obtain credentials or access control information, such as passwords, session tokens, or cryptographic keys."""",
     ""Explanation"": ""This rule detects an attempt to access ActiveX controls, which can be used to exploit software vulnerabilities and obtain credentials.""
   }
 ][
     {
         ""sid"": ""28349"",
         ""Technique ID"": ""T1116"",
         ""Technique Name"": ""Browser Plug-in Exploitation"",
         ""Quotes"": """"Browser Plug-in Exploitation techniques involve exploiting vulnerabilities in browser plug-ins to gain unauthorized access, execute arbitrary code, or modify browser behavior. This rule detects a suspicious attempt to access an ActiveX control for the Windows Management Instrumentation (WMI) administrator tools object viewer, which is often abused by attackers to gain unauthorized access to systems."""",
         ""Explanation"": ""This rule is triggered when an attempt is made to access an ActiveX control for the Windows Management Instrumentation (WMI) administrator tools object viewer.""
     }
 ][
     {
         ""sid"": ""28349"",
         ""Technique ID"": ""T1204"",
         ""Technique Name"": ""Component Object Model (COM) Hijacking"",
         ""Quotes"": """"Component Object Model (COM) Hijacking involves abusing the COM mechanism in Microsoft Windows to execute arbitrary code. This rule detects an attempt to access the ActiveX control for the WMI Administrator Tools Object Viewer, which is a common technique used by malicious actors to hijack COM objects and gain unauthorized access to a system."""",
         ""Explanation"": ""This rule detects an attempt to exploit a known vulnerability in Microsoft Windows WMI to execute arbitrary code.""
     }
 ][
   {
     ""sid"": ""28349"",
     ""Technique ID"": ""T1116"",
     ""Technique name"": ""Install Root Certificate"",
     ""Quotes"": """"Install Root Certificate techniques involve installing a self-signed certificate or obtaining a trusted certificate to establish a trusted relationship between the adversary and the target system. The rule detects an attempt to access an ActiveX control related to Microsoft Windows WMI administrator tools, which could be used to install a self-signed certificate and gain a foothold on the target system."""",
     ""Explanation"": ""This event is generated when Microsoft Windows WMI administrator tools object viewer ActiveX clsid access is detected.""
   }
 ][
 ""sid"": ""28349"",
 ""Technique ID"": ""T1080"",
 ""Technique name"": ""Taint Shared Content"",
 ""Quotes"": """"Taint Shared Content techniques involve delivering malicious payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. The specified ActiveX control (identified by its CLSID) is used by Microsoft Windows Management Instrumentation (WMI) for administrative purposes and can be leveraged to execute arbitrary commands on the target system. Additionally, the rule indicates that the content is added via a file_data pattern, suggesting an attempt to inject malicious content into a shared file."""",
 ""Explanation"": ""This rule triggers when an attempt is made to access the Microsoft Windows Management Instrumentation (WMI) administrator tools object viewer ActiveX control. This control can be used to execute arbitrary commands on the target system, potentially allowing an attacker to gain unauthorized access.""
 ][
   {
     ""sid"": ""28349"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Microsoft's Windows Management Instrumentation (WMI) ActiveX control, which could allow an attacker to gain remote code execution on a vulnerable system."""",
     ""Explanation"": ""This event is generated when a browser plugin attempts to access an ActiveX object with a certain CLSID (class identifier) which is related to Microsoft Windows WMI administrator tools object viewer ActiveX.""
   }
 ]","['T1141', 'T1110', 'T1217', 'T1064', 'T1190', 'T1190', 'T1212', 'T1116', 'T1204', 'T1116', 'T1080', 'T1204']",['T1047']
24243,"[
   {
     ""sid"": ""24243"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Intercept Network Traffic"",
     ""Quotes"": """"Intercept Network Traffic techniques involve capturing and controlling network traffic within the compromised system to facilitate lateral movement and communications. This rule detects malicious HTTP GET requests for a specific URI encoded with base64. Intercepting and redirecting HTTP traffic is a common technique used by adversaries to monitor network traffic and steal sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""24243"",
     ""Technique ID"": ""T1588"",
     ""Technique Name"": ""Obtain Capabilities"",
     ""Quotes"": ""\""Adversaries may buy and/or steal capabilities that can be used during targeting\"""",
     ""Explanation"": ""This rule detects malicious activity involving a known malicious URI that can be used by adversaries to obtain capabilities and gain access to a target system.""
   },
   {
     ""sid"": ""24243"",
     ""Technique ID"": ""T1012"",
     ""Technique Name"": ""Query Registry"",
     ""Quotes"": ""\""Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\"""",
     ""Explanation"": ""The rule involves querying the registry, which is a common technique for adversaries to gather system information and potentially identify vulnerabilities.""
   },
   {
     ""sid"": ""24243"",
     ""Technique ID"": ""T1057"",
     ""Technique Name"": ""Process Discovery"",
     ""Quotes"": ""\""Adversaries may attempt to get information about running processes on a system.\"""",
     ""Explanation"": ""The rule involves process discovery, which is a common reconnaissance technique used by adversaries to gather information about running processes and identify potential targets for exploitation.""
   }
 ][
     ""sid"": ""24243"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve encoding data to evade detection or analysis. The Snort rule detects base64-encoded malicious URIs in HTTP traffic, which is a common technique used by adversaries to obfuscate malicious content and bypass security controls."""",
     ""Explanation"": ""This rule specifically looks for base64-encoded URI requests where the decoded data contains parameters such as 'clk', 'bid', 'aid', 'sid', 'rd', and 'x86'. These parameters are commonly associated with click tracking and affiliate marketing, but can also be used by adversaries for malicious purposes, such as tracking user activity or delivering malware.""
 ][
   {
     ""sid"": ""24243"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an HTTP request with a base64-encoded URI that contains known malicious parameters, such as 'clk', 'bid', 'aid', 'sid', 'rd', and 'x86', which are often used in malicious campaigns to track user activity and deliver malware."""",
     ""Explanation"": ""This event is generated when an attempt to deliver malware has been detected.""
   }
 ][
   {
     ""sid"": ""24243"",
     ""Technique ID"": ""T1567"",
     ""Technique name"": ""Scripting"",
     ""Quotes"": """"Scripting involves the use of scripting languages to perform automated tasks or operations on a system. This rule detects an attempt to access a known malicious URI that contains base64-encoded data. The embedded script is likely designed to perform malicious actions, such as downloading and executing additional malware or sensitive data exfiltration."""",
     ""Explanation"": ""The rule matches a request to a known malicious URI containing base64-encoded data. The base64-encoded data, once decoded, is likely to contain a script that will be executed.""
   }
 ][
         ""sid"": ""24243"",
         ""Technique ID"": ""T1106"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"C&C (Command and Control) techniques involve communications between controlled systems, the adversary, and potentially other C2 servers. The rule looks for a suspicious base64-encoded request that includes known malicious parameters ('clk', 'bid', 'aid', 'sid', 'rd', 'x86') commonly used in C2 communications, indicating an attempt to connect to a malicious server."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""24243"",
         ""Technique ID"": ""T1114"",
         ""Technique Name"": ""Email Collection"",
         ""Quotes"": """"Email Collection techniques involve targeting user email to collect sensitive information. This rule detects a request for a known malicious URI that includes parameters commonly used to collect email addresses, such as 'aid' (advertising ID), 'sid' (session ID), and 'bid' (browser ID). These parameters are often used by malicious actors to track user activity and collect email addresses for phishing or spam campaigns."""",
         ""Explanation"": ""This rule is used to detect malicious activities related to email collection.""
     },
     {
         ""sid"": ""24243"",
         ""Technique ID"": ""T1568"",
         ""Technique Name"": ""Dynamic Resolution"",
         ""Quotes"": """"Dynamic Resolution techniques involve dynamically establishing connections to command and control infrastructure to evade common detections and remediations. This rule detects a request for a known malicious URI that uses a base64-encoded domain name as part of its payload. Base64 encoding is a common method used by malware to obfuscate command and control server addresses, making it more difficult to detect and block."""",
         ""Explanation"": ""This rule is used to detect malicious activities related to dynamic resolution.""
     }
 ][
         ""sid"": ""24243"",
         ""Technique ID"": ""C2 Communication"",
         ""Technique name"": ""T1071"",
         ""Quotes"": """"C2 Communication techniques involve the communication between a remote attacker and malware installed on a victim system. This rule detects an outbound HTTP request to a known malicious URI that is encoded in base64, which is a common method used by malware to communicate with a command and control (C2) server."""",
         ""Explanation"": ""This rule detects command and control (C2) communication with a malicious server.""
     ][
   {
     ""sid"": ""24243"",
     ""Technique ID"": ""T1117"",
     ""Technique name"": ""Data Compressed"",
     ""Quotes"": """"Data Compression techniques involve compressing data to reduce its size and make it more difficult to detect or analyze. The rule looks for base64-encoded data in HTTP traffic, which could be an indication of adversaries attempting to conceal malicious payloads or communications by compressing them."""",
     ""Explanation"": ""Adversaries may compress data to make it smaller and harder to detect.""
   },
   {
     ""sid"": ""24243"",
     ""Technique ID"": ""T1560"",
     ""Technique name"": ""Archive Collected Data"",
     ""Quotes"": """"Archive Collected Data techniques involve compressing and/or encrypting data that is collected prior to exfiltration. The rule looks for base64-encoded data in HTTP traffic, which could be an indication of adversaries attempting to archive and exfiltrate collected data."""",
     ""Explanation"": ""Adversaries may archive data before sending it out.""
   }
 ][
         ""sid"": ""24243"",
         ""Technique ID"": ""T1132"",
         ""Technique Name"": ""Data Encoding"",
         ""Quotes"": """"Adversaries may use a variety of techniques to encode data, such as base64, in order to evade detection and analysis."""",
         ""Explanation"": ""This rule detects an HTTP request with a base64-encoded URI that contains malicious content. Base64 encoding is a common technique used by malware to hide malicious payloads and evade detection.""
     ],
     [
         ""sid"": ""24243"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Adversaries may exploit publicly accessible web applications to gain access to a vulnerable system."""",
         ""Explanation"": ""This rule detects an HTTP request to a known malicious URI, indicating an attempt to exploit a public-facing web application.""
     ][
   {
     ""sid"": ""24243"",
     ""Technique ID"": ""T1564"",
     ""Technique name"": ""Modify Registry"",
     ""Quotes"": """"Modify Registry techniques include reading, writing, and deleting values within the operating system registry. This rule detects an attempt to create a registry key named ""test"" under the ""HKLM\SOFTWARE\Microsoft\Windows"" key, which is typically associated with malware attempting to establish persistence or execute arbitrary commands."""",
     ""Explanation"": ""This event is generated when an event or anomaly that is relevant to malware is detected.""
   }
 ]","['T1105', 'T1588', 'T1012', 'T1057', 'T1105', 'T1190', 'T1567', 'T1106', 'T1114', 'T1568', 'T1071', 'T1117', 'T1560', 'T1132', 'T1190', 'T1564']",['T1001']
35215,"[
   {
     ""sid"": ""35215"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a Microsoft Internet Explorer DLL hijacking vulnerability via the 'atlthunk.dll' library, which is a known technique used by attackers to bypass security mechanisms and gain control of the system."""",
     ""Explanation"": ""The alert indicates HTTP traffic containing a URI path that attempts to load the \""atlthunk.dll\"" into memory, which is associated with a vulnerability in Microsoft Internet Explorer's protected mode.""
   }
 ][
   {
     ""sid"": ""35215"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Vulnerable Software"",
     ""Quotes"": """"Exploit Vulnerable Software techniques involve exploiting software flaws or vulnerabilities to gain unauthorized access or execute arbitrary code. The rule is designed to identify an attempt to exploit a DLL-loading vulnerability in Microsoft's atlthunk.dll library, which is commonly used by web browsers. Attackers often exploit vulnerable software to gain unauthorized access to systems or networks."""",
     ""Explanation"": ""This rule is triggered when a packet contains an HTTP request with a URI containing ""atlthunk.dll"", indicating an attempt to exploit a vulnerability in Microsoft Internet Explorer protected mode dll-load.""
   }
 ][
   {
     ""sid"": ""35215"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in Microsoft Internet Explorer's protected mode, which allows attackers to execute arbitrary code by loading a malicious DLL file via the atlthunk.dll module."""",
     ""Explanation"": ""This event is generated when an attempt is made to exploit a vulnerability in Microsoft Internet Explorer's Protected Mode.""
   }
 ][
         ""sid"": ""35215"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""DLL Side-Loading"",
         ""Quotes"": """"DLL Side-Loading techniques involve loading malicious dynamic-link libraries (DLLs) into trusted processes to execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer's 'atlthunk.dll' to load a malicious DLL and execute arbitrary code."""",
         ""Explanation"": ""Microsoft Internet Explorer protected mode atlthunk.dll dll-load exploit attempt""
     ][
   {
     ""sid"": ""35215"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted DLL hijacking attack targeting Microsoft Internet Explorer's atlthunk.dll, which is a common method attackers use to execute malicious code by exploiting vulnerabilities in web applications."""""",
     ""Explanation"": ""The alert indicates an attempted DLL hijacking attack on Internet Explorer through the 'atlthunk.dll' file, which is a technique commonly used by attackers to gain access to a system.""
   }
 ][
   {
     ""sid"": ""35215"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": ""\""Exploitation for Client Execution techniques involve exploiting software vulnerabilities in client applications to execute arbitrary code on a target system. This rule detects an attempt to exploit a DLL loading vulnerability in Microsoft Internet Explorer's protected mode, which could allow an attacker to execute arbitrary code on the victim's system."""",
     ""Explanation"": ""This rule is triggered when an HTTP request is sent to a web server on port 80 containing a URI that includes the string \""/atlthunk.dll\"". This is indicative of an attempt to exploit a DLL loading vulnerability in Microsoft Internet Explorer's protected mode, which could allow an attacker to execute arbitrary code on the victim's system.""
   },
   {
     ""sid"": ""35215"",
     ""Technique ID"": ""T1211"",
     ""Technique name"": ""Exploitation for Defense Evasion"",
     ""Quotes"": ""\""Exploitation for Defense Evasion techniques involve exploiting a system or application vulnerability to bypass security features and evade detection. This rule detects an attempt to exploit a DLL loading vulnerability in Microsoft Internet Explorer's protected mode, which could allow an attacker to bypass security features and execute arbitrary code on the victim's system."""",
     ""Explanation"": ""This rule is triggered when an HTTP request is sent to a web server on port 80 containing a URI that includes the string \""/atlthunk.dll\"". This is indicative of an attempt to exploit a DLL loading vulnerability in Microsoft Internet Explorer's protected mode, which could allow an attacker to bypass security features and execute arbitrary code on the victim's system.""
   }
 ][
     ""sid"": ""35215"",
     ""Technique ID"": ""T1494"",
     ""Technique name"": ""DLL Side-Loading"",
     ""Quotes"": """"DLL Side-Loading techniques allow adversaries to execute arbitrary code by loading malicious DLLs into running processes. This rule detects an attempted exploit of a vulnerability in Microsoft Internet Explorer's protected mode that involves loading a malicious DLL named 'atlthunk.dll' via HTTP."""",
     ""Explanation"": ""This event is generated when activity relating to a potential browser exploit attempt is detected.""
 ][
         ""sid"": ""35215"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""DLL Side-Loading"",
         ""Quotes"": """"DLL Side-Loading techniques involve injecting a malicious DLL into a legitimate process to gain code execution. This rule specifically detects a known exploit targeting Microsoft Internet Explorer's 'atlthunk.dll' library, which is a common target for attackers to load malicious code and bypass security protections."""",
         ""Explanation"": ""This event is generated when an attempt is made to load an unauthorized DLL library.""
     ][
   {
     ""sid"": ""35215"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a DLL hijacking vulnerability in Microsoft Internet Explorer's 'atlthunk.dll' library, which is a common method attackers use to compromise web browsers."""",
     ""Explanation"": ""This event is generated when a user attempts to exploit a DLL hijacking vulnerability in Microsoft Internet Explorer.""
   }
 ][
   {
     ""sid"": ""35215"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempt to exploit a vulnerability in Microsoft Internet Explorer's protected mode by loading a malicious DLL (""atlthunk.dll"") via HTTP. This technique is commonly used by attackers to compromise web browsers and gain remote access to target systems."""",
     ""Explanation"": ""This rule is designed to detect attempts to exploit a vulnerability in Microsoft's Internet Explorer browser, which could allow remote attackers to execute arbitrary code within the context of the browser.""
   }
 ][
         ""sid"": ""35215"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Remote Services"",
         ""Quotes"": """"Exploit Remote Services techniques involve targeting vulnerabilities in externally facing applications and services to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a DLL loading vulnerability in Microsoft Internet Explorer's Protected Mode. This type of attack involves exploiting vulnerabilities in remote services to gain access to a system or its resources."""",
         ""Explanation"": ""This event is generated when a browser attempt to exploit a buffer overflow vulnerability in Microsoft Internet Explorer through a specially crafted dll load.""
     ]","['T1068', 'T1189', 'T1190', 'T1059', 'T1203', 'T1203', 'T1211', 'T1494', 'T1203', 'T1068', 'T1190', 'T1189']",['T1574']
47848,"[
     ""sid"": ""47848"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system's command shell or scripting language to execute commands to automate malicious activity, such as downloading and executing additional malware. This rule detects an attempt to use msiexec, a legitimate Windows installer utility, to download and execute malware, which is a common technique used by malicious actors to establish persistence and further compromise a system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
     {
         ""sid"": ""47848"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Remote File Copy"",
         ""Quotes"": """"Remote File Copy techniques involve copying files from one system to another over a network connection. The rule detects an attempt to download a malicious executable using the msiexec utility via an HTTP connection, which is a common method used by attackers to transfer malicious payloads to target systems."""",
         ""Explanation"": ""The event is triggered when an attempt to download malicious executable using the msiexec utility via HTTP connection is detected.""
     },
     {
         ""sid"": ""47848"",
         ""Technique ID"": ""T1124"",
         ""Technique name"": ""Downloader"",
         ""Quotes"": """"Downloader techniques involve using tools or scripts to retrieve malicious content from remote locations. The rule detects an attempt to download a malicious executable using the msiexec utility via an HTTP connection, which is a common method used by attackers to download malware onto target systems."""",
         ""Explanation"": ""The rule specifically looks for attempts to download malicious executables using the msiexec utility via an HTTP connection.""
     }
 ][
     ""sid"": ""47848"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter covers techniques that use command shells to execute commands or scripts as part of a broader attack strategy. This rule specifically detects attempts to exploit the MSIEXEC.EXE command line utility in Microsoft Windows systems via a malicious dropper that downloads and executes malware."",
     ""Explanation"": ""This event is generated when malware is downloading.""
 ][
   {
     ""sid"": ""47848"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""This rule detects potential attempts to exploit a vulnerability in a public-facing application, which could allow an attacker to gain unauthorized access or execute arbitrary code on the affected system.""
   }
 ][
     {
         ""sid"": ""47848"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a possible attempt to exploit a vulnerability in the Microsoft Windows Installer (MSI) to execute arbitrary commands or download malicious software. Attackers commonly use MSIEXEC to execute malicious code or download payloads because it is a legitimate Windows utility."""",
         ""Explanation"": ""This rule detects a possible exploit attempt against the Microsoft Windows Installer (MSI) to execute arbitrary commands or download malicious software.""
     }
 ][
     {
         ""sid"": ""47848"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve using or interacting with external-facing remote services to establish initial network access."""",
         ""Explanation"": ""The rule identifies malware as being downloaded and executed via an external FTP server.""
     },
     {
         ""sid"": ""47848"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client applications to execute arbitrary code on a victim machine."""",
         ""Explanation"": ""The rule detects the execution of a downloaded file which may be malicious.""
     }
 ][
     ""sid"": ""47848"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a user's system through the exploitation of vulnerabilities in software or web applications while the user is browsing the Internet. The rule detects the download of the 'Win.Downloader.DDECmdExec' malware variant, which is commonly distributed through drive-by download attacks on websites."""",
     ""Explanation"": """"Drive-by Compromise techniques involve infecting a user's system through the exploitation of vulnerabilities in software or web applications while the user is browsing the Internet.""
 }[
   {
     ""sid"": ""47848"",
     ""Technique ID"": ""T1112"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve using obfuscation techniques to make files or information difficult to discover or understand. The rule detects a downloader executable that uses command line flags and pipes to obfuscate its behavior and evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""47848"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools, such as malware, to a target system or network for use. This rule detects an attempt to download a variant of the Win.Downloader.DDECmdExec malware, which is known to use multiple techniques to achieve persistence and execute commands on compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""47848"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Signed Binary Proxy Execution"",
     ""Quotes"": """"Signed Binary Proxy Execution techniques involve using a legitimate, signed binary to execute malicious software or commands. This rule detects the download of a malicious variant of Win.Downloader.DDECmdExec, which is a downloader Trojan that can be used to download and execute arbitrary files, often by leveraging legitimate, signed binaries such as 'msiexec' to bypass security controls."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""47848"",
         ""Technique ID"": ""T1105"",
         ""Technique Name"": ""Process Injection"",
         ""Quotes"": """"Process Injection involves injecting code into running processes to gain control or modify their behavior, typically to execute malicious code. This rule detects activity associated with the Win.Downloader.DDECmdExec variant, which is known to use process injection to deliver and execute malicious payloads."""",
         ""Explanation"": ""This rule detects a request made to a remote server for a msiexec download using a specific filename pattern.""
     }
 ]","['T1105', 'T1105', 'T1124', 'T1105', 'T1190', 'T1190', 'T1133', 'T1203', 'T1189', 'T1112', 'T1105', 'T1105', 'T1105']",['T1559']
42886,"[
     ""sid"": ""42886"",
     ""Technique ID"": ""T1450"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve creating and maintaining a covert communication channel between the adversary and a victim system in order to control the victim system remotely, often using malware. This rule is triggered when an HTTP request is made by HttpBrowser/1.0, a known web shell, which is commonly used by adversaries to establish a command and control channel."""",
     ""Explanation"": ""This rule is designed to detect the HttpBrowser user agent, which is a command-and-control for a web shell installed on the server, typically used by adversaries to manage backdoors on compromised systems for maintain persistent access.""
 ][
   {
     ""Sid"": ""42886"",
     ""Technique ID"": ""T1071.001"",
     ""Technique Name"": ""Web Service"",
     ""Quotes"": """"Web Services techniques involve using web protocols to send and receive data from web services, which can be used to achieve various goals such as data exfiltration, system compromise, or maintaining persistence on a system."""",
     ""Explanation"": ""This rule detects an outbound HTTP communication from the 'HttpBrowser User-Agent,' which is associated with malicious activities, indicating an attempt to communicate with a command and control server or exfiltrate data.""
   }
 ][
   {
     ""sid"": ""42886"",
     ""Technique ID"": ""T1185"",
     ""Technique Name"": ""Browser Session Hijacking"",
     ""Quotes"": ""\""Browser Session Hijacking techniques involve taking advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\"""",
     ""Explanation"": ""This rule detects outbound communication from a host using the HttpBrowser User-Agent, which is associated with malware known to hijack browser sessions and manipulate web traffic.""
   },
   {
     ""sid"": ""42886"",
     ""Technique ID"": ""T1217"",
     ""Technique Name"": ""Browser Information Discovery"",
     ""Quotes"": ""\""Browser Information Discovery techniques involve enumerating information about browsers to learn more about compromised environments.\"""",
     ""Explanation"": ""The rule specifically targets the user-agent header, which contains information about the browser being used. This information can be used by attackers to identify potential vulnerabilities or to tailor their attacks.""
   }
 ][
   {
     ""sid"": ""42886"",
     ""Technique ID"": ""T1432"",
     ""Technique Name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing command and control channels between the adversary and compromised systems to facilitate remote control and data exfiltration. This rule detects an outbound communication attempt by a user agent claiming to be ""HttpBrowser/1.0"", which is commonly associated with malware. The malware may be attempting to establish a command and control channel to receive instructions or exfiltrate data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""42886"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an outbound communication attempt by the malware HttpBrowser using a specific user agent, which is a common method used by attackers to exploit web applications."",
     ""Explanation"": ""This rule detects outbound communications from the HttpBrowser malware, which often uses a specific user agent string to target vulnerabilities in web applications.""
   },
   {
     ""sid"": ""42886"",
     ""Technique ID"": ""T1564"",
     ""Technique Name"": ""Hide Artifacts"",
     ""Quotes"": ""Hide Artifacts techniques involve obscuring the presence of malicious artifacts or activities to evade detection. This rule detects the use of a specific user agent string by the HttpBrowser malware, which is a common method used by attackers to hide their activities and blend in with legitimate traffic."",
     ""Explanation"": ""The use of a specific user agent string by the HttpBrowser malware can be seen as an attempt to hide its malicious activities by mimicking legitimate traffic.""
   }
 ][
   {
     ""sid"": ""42886"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging services hosted outside an organization's network to support malicious activities, such as hosting command and control (C2) infrastructure or providing anonymity. This rule detects outbound communication from a compromised host to the 'HttpBrowser' User-Agent, which is a known tool used by attackers to establish a covert C2 channel through an external service."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""42886"",
     ""Technique ID"": ""T1008"",
     ""Technique Name"": ""Fallback Channels"",
     ""Quotes"": """"Fallback Channels techniques involve establishing and maintaining multiple communication channels to ensure reliable command and control and to avoid detection. This rule detects the use of 'HttpBrowser', which can be used as a backup communication channel in case other methods are compromised or unavailable."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""42886"",
     ""Technique ID"": ""T1568"",
     ""Technique name"": ""Dynamic Resolution"",
     ""Quotes"": """"Dynamic Resolution techniques involve establishing connections to command and control infrastructure through dynamic or alternative means to evade detection and remediation efforts. This rule detects outbound communication from the HttpBrowser User-Agent, which is a known tool for bypassing firewalls and proxies to communicate with command and control servers."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""42886"",
     ""Technique ID"": ""T1114"",
     ""Technique name"": ""Email Collection"",
     ""Quotes"": """"Email Collection techniques involve targeting email accounts to collect sensitive information. This rule detects outbound communication from the HttpBrowser User-Agent, which is a known tool for bypassing firewalls and proxies to communicate with command and control servers. Adversaries may use such tools to exfiltrate sensitive information, including emails."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""42886"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Application Layer Protocol Abuse"",
         ""Quotes"": """"Application Layer Protocol Abuse techniques involve leveraging application layer protocols, such as HTTP, to communicate with threat actor infrastructure or deliver malicious payloads. This rule detects outbound communication from a user-agent identified as 'HttpBrowser/1.0' to a remote IP address. Such communication may indicate the presence of a malware program attempting to connect to a command and control server."""",
         ""Explanation"": ""This event is generated when a known malicious IP address is contacted.""
     }
 ][
     ""sid"": ""42886"",
     ""Technique ID"": ""T1129"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve intentionally hiding or disguising files or data within a system or network to evade detection or analysis. The rule detects the presence of an HTTP user-agent string that is associated with malicious or suspicious activity, possibly indicating the presence of malware or a command-and-control connection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
         ""sid"": ""42886"",
         ""Technique ID"": ""T1104"",
         ""Technique name"": ""Masquerading"",
         ""Quotes"": """"Masquerading techniques involve disguising the identity of a user or service by mimicking trusted or legitimate entities. This rule detects malicious activity involving an outbound connection with a user-agent string set to 'HttpBrowser/1.0'. Attackers often use spoofed user-agent strings to bypass security controls and evade detection."""",
         ""Explanation"": ""The rule is triggered when a client with the user-agent 'HttpBrowser/1.0' is detected. This user-agent is commonly used by malware and is not typically associated with legitimate browsing activity.""
     ][
     {
         ""sid"": ""42886"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Network Sniffing"",
         ""Quotes"": """"Network Sniffing techniques involve monitoring and capturing network traffic to gather information about an environment, including authentication material passed over the network. This rule detects an attempt by the malware ""HttpBrowser"" to communicate with a command and control server, indicating that the malware is attempting to establish a connection to exfiltrate data or receive instructions."""",
         ""Explanation"": ""The Snort rule detects outbound communication from a host using the HttpBrowser user agent, which is associated with malware attempting to establish a connection with a command and control server for malicious purposes.""
     }
 ]","['T1450', 'T1071.001', 'T1185', 'T1217', 'T1432', 'T1190', 'T1564', 'T1133', 'T1008', 'T1568', 'T1114', 'T1071', 'T1129', 'T1104', 'T1040']",['T1219']
520,"[
   {
     ""sid"": ""520"",
     ""Technique ID"": ""T1570.001"",
     ""Technique name"": ""TFTP Client"",
     ""Quotes"": """"TFTP Client techniques involve using the Trivial File Transfer Protocol (TFTP) to transfer files to or from a remote host. The rule detects anomalous TFTP traffic accessing the root directory of a host, which could indicate an attempt to retrieve or modify sensitive files."""",
     ""Explanation"": ""This event is generated when a UDP packet with port 69 (TFTP) is destined to the internal network, indicating a potential TFTP file transfer attempt.""
   }
 ][
   {
     ""sid"": ""520"",
     ""Technique ID"": ""T1043"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques are used by adversaries to connect to external resources, such as command and control (C2) servers or exfiltration points, typically over the internet. In this case, the rule detects an attempt to access the root directory of a server using the Trivial File Transfer Protocol (TFTP), which is commonly used by malware to establish covert communication channels."""",
     ""Explanation"": ""Trivial File Transfer Protocol (TFTP) is used to transfer files between a client and a server using the User Datagram Protocol (UDP) on port 69.""
   }
 ][
   {
     ""sid"": ""520"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration Over Trivial File Transfer Protocol (TFTP)"",
     ""Quotes"": """"""Exfiltration Over Trivial File Transfer Protocol (TFTP) techniques involve using the Trivial File Transfer Protocol (TFTP) to exfiltrate data from a compromised system. The rule detects an attempt to transfer the root directory of a system over TFTP, which could be an indication of an attacker exfiltrating sensitive data."""""",
     ""Explanation"": ""TFTP is a simple file transfer protocol that uses UDP on port 69. It is often used to transfer configuration files or firmware images to network devices. In this case, the rule is detecting an attempt to transfer the root directory of a system over TFTP, which could be an indication of an attacker exfiltrating sensitive data.""
   },
   {
     ""sid"": ""520"",
     ""Technique ID"": ""T1047"",
     ""Technique Name"": ""Exfiltration Over Simple File Transfer Protocol (FTP)"",
     ""Quotes"": """"""Exfiltration Over Simple File Transfer Protocol (FTP) techniques involve using the File Transfer Protocol (FTP) to exfiltrate data from a compromised system. The rule detects an attempt to transfer the root directory of a system over FTP, which could be an indication of an attacker exfiltrating sensitive data."""""",
     ""Explanation"": ""FTP is a file transfer protocol that uses TCP on port 21. It is often used to transfer files between computers on a network. In this case, the rule is detecting an attempt to transfer the root directory of a system over FTP, which could be an indication of an attacker exfiltrating sensitive data.""
   }
 ][
   {
     ""sid"": ""520"",
     ""Technique ID"": ""T1154"",
     ""Technique Name"": ""TFTP Client"",
     ""Quotes"": """"TFTP Client techniques involve using the Trivial File Transfer Protocol (TFTP) to retrieve and execute files, modify configurations, and facilitate command and control. This rule detects an attempt to access the root directory of a remote host, which is a typical indicator of TFTP activity."""",
     ""Explanation"": ""This rule looks for TFTP traffic directed at an internal host.""
   }
 ][
     ""sid"": ""520"",
     ""Technique ID"": ""T1196"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting software vulnerabilities in client systems to execute arbitrary code. This rule detects an attempt to exploit a remote code execution vulnerability in the Trivial File Transfer Protocol (TFTP) service by sending a specially crafted packet to a TFTP server, allowing remote attackers to execute arbitrary code on the targeted system."""",
     ""Explanation"": ""Traversal in the root directory of a Trivial File Transfer Protocol service, commonly used to exploit remote code execution vulnerabilities.""
 ][
     {
         ""sid"": ""520"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Share Discovery"",
         ""Quotes"": """"Network Share Discovery techniques involve identifying shared network resources on a target network. This rule detects attempts to access the root directory of a TFTP server on the internal network from an external host, which could be an attempt to discover and exploit shared resources."""",
         ""Explanation"": ""This event is generated when activity relating to reconnaissance is detected.""
     }
 ][
   {
     ""sid"": ""520"",
     ""Technique ID"": ""T1573"",
     ""Technique Name"": ""Encrypted Channel"",
     ""Quotes"": """"Encrypted Channel techniques involve the use of encryption to protect communications between adversaries and their command and control infrastructure to evade detection and analysis by security tools."""",
     ""Explanation"": ""This rule detects TFTP traffic with a request for the root directory. The communication channel is encrypted, making it difficult to analyze the contents of the traffic.""
   }
 ][
     {
         ""sid"": ""520"",
         ""Technique ID"": ""T1048"",
         ""Technique name"": ""Network Denial of Service"",
         ""Quotes"": """"Network Denial of Service techniques involve attacking network or system resources to disrupt or deny service to authorized users. This rule detects a TFTP (Trivial File Transfer Protocol) flood attack, where an attacker sends excessive TFTP requests to a target system to overwhelm its resources and cause a denial of service."""",
         ""Explanation"": ""This event indicates a TFTP flood attack, which can be used to disrupt services in a network.""
     }
 ][
     {
         ""sid"": ""520"",
         ""Technique ID"": ""T1043"",
         ""Technique name"": ""Network Denial of Service"",
         ""Quotes"": """"Network Denial of Service (DoS) techniques involve flooding a target network with excessive traffic, such as ping requests, to disrupt its availability and responsiveness. The rule detects a TFTP flood attack, which is a type of DoS attack that can overwhelm a victim's network with a large number of Trivial File Transfer Protocol (TFTP) requests."""",
         ""Explanation"": ""TFTP (Trivial File Transfer Protocol) traffic is normally not seen on the Internet.""
     }
 ][
   {
     ""sid"": ""520"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""TFTP is a simple file transfer protocol that is often used to transfer configuration files or firmware updates to network devices. This rule detects an attempt to access the root directory of a TFTP server, which could be an indication of an attacker attempting to exploit a vulnerability in the server's configuration or firmware.""
   }
 ][
   {
     ""sid"": ""520"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve capturing network traffic in order to obtain information about network activity, such as authentication credentials or sensitive data. This rule detects and alerts on TFTP traffic containing a root directory request, which can be an indication of attempts to map out and exploit network resources."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1570.001', 'T1043', 'T1048', 'T1047', 'T1154', 'T1196', 'T1046', 'T1573', 'T1048', 'T1043', 'T1190', 'T1040']",['T1213']
1054,"[
   {
     ""sid"": ""1054"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects attempts to view the source code of .jsp files on web servers, which could indicate an attempt to exploit vulnerabilities in the web application."",
     ""Explanation"": ""The rule specifically targets attempts to view the source code of JSP files, which could indicate an attempt to exploit vulnerabilities in the web application.""
   }
 ][
     {
         ""sid"": ""1054"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule specifically mentions targeting web applications and attempting to view source code, which is a common reconnaissance technique used to identify potential vulnerabilities."""",
         ""Explanation"": ""This event is generated when a web application attack is attempted.""
     }
 ][
     {
         ""sid"": ""1054"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects suspicious activity targeting web applications, specifically attempts to access .jsp source code. Attackers commonly exploit vulnerabilities in web applications by viewing source code to identify potential entry points."""",
         ""Explanation"": ""The rule looks for attempts to access .jsp source code, which could be an indication of an attacker trying to identify vulnerabilities in a web application.""
     }
 ][
   {
     ""sid"": ""1054"",
     ""Technique ID"": ""T1112"",
     ""Technique name"": ""View Source"",
     ""Quotes"": """"View Source techniques involve retrieving the underlying HTML or source code of a web page or application. This rule detects attempts to view the source code of JSP files on web servers running either WebLogic or Tomcat, which is a common reconnaissance technique used to identify potential vulnerabilities."""",
     ""Explanation"": ""This event is generated when someone tries to view the source code of a JSP file on a web server running either WebLogic or Tomcat.""
   }
 ][
   {
     ""sid"": ""1054"",
     ""Technique ID"": ""T1205"",
     ""Technique Name"": ""Exploit Web Application"",
     ""Quotes"": """"Exploit Web Application techniques involve targeting vulnerabilities in web applications to gain unauthorized access or execute arbitrary code. This rule detects attempts to exploit the '.jsp' source code view feature in web servers, which is a common method attackers use to identify vulnerabilities and gain unauthorized access to web applications."""",
     ""Explanation"": ""This rule detects attempts to exploit a vulnerability in web applications by viewing source code.""
   }
 ][
   {
     ""sid"": ""1054"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to view the source code of a JSP file on a weblogic/tomcat server, which could be used to identify potential vulnerabilities or gain access to sensitive information."""",
     ""Explanation"": ""The rule signature string `.jsp` and `.jsp` match attempts to access JSP files, A successful attempt may indicate that the actor is attempting to exploit a vulnerability in the JSP file or the underlying web application.""
   }
 ][
   {
     ""sid"": ""1054"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""View Source Code"",
     ""Quotes"": """"View Source Code techniques involve examining the source code of a web page to identify vulnerabilities, gather information, or manipulate the functionality of the page. This rule detects an attempt to view the source code of a .jsp file, which is a common method used to identify vulnerabilities in Java web applications."""",
     ""Explanation"": ""This rule is triggered when someone tries to access the source code of a JSP file.""
   }
 ][
         ""sid"": ""1054"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects attempts to exploit a weakness in the view source function of web applications running on Tomcat servers by accessing .jsp source files, which attackers can use to identify vulnerabilities or steal sensitive data."""",
         ""Explanation"": """"
     ][
     {
         ""sid"": ""1054"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to view the source code of a .jsp file on a web server, which is a common method attackers use to identify vulnerabilities and exploit web applications."""",
         ""Explanation"": ""This event is generated when an attempt to view the source code of a Java Server Page (JSP) file is detected.""
     }
 ][
         ""sid"": ""1054"",
         ""Technique ID"": ""T1588"",
         ""Technique name"": ""Logon Paths"",
         ""Quotes"": """"Logon Paths techniques involve searching for non-standard login paths or mechanisms to facilitate credential theft or unauthorized access. The rule looks for attempts to access JSP source code in a web application, which could be an indication of an attacker trying to understand the application internals and identify potential vulnerabilities or exploitable code."""",
         ""Explanation"": ""The rule triggers when a connection attempts to access the .jsp source code in a web application, which could be an indication of an attacker trying to understand the application internals and identify potential vulnerabilities.""
     ][
         ""sid"": ""1054"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Web Application Attack"",
         ""Quotes"": """"Web Application Attack techniques involve targeting web applications to gain unauthorized access, steal data, or disrupt operations. This rule detects an attempt to view the source code of a JSP file, which is a common technique used by attackers to identify vulnerabilities or steal sensitive information."""",
         ""Explanation"": ""Web servers often contain .jsp files which may contain information about the website’s configuration which could be important to an attacker.""
     ]","['T1110', 'T1190', 'T1190', 'T1112', 'T1205', 'T1190', 'T1110', 'T1190', 'T1190', 'T1588', 'T1110']",['T1518']
1288,"[
   {
     ""sid"": ""1288"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access the Microsoft Frontpage /_vti_bin/ directory, which is used for web development and can be exploited by attackers to execute malicious code."""",
     ""Explanation"": ""This rule is designed to detect exploitation attempts on Microsoft Frontpage through the _vti_bin directory, which is commonly targeted by attackers to compromise vulnerable websites.""
   }
 ][
   {
     ""sid"": ""1288"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access the Microsoft Frontpage server-side include (SSI) directory, which could be used by attackers to execute arbitrary code on the web server."""",
     ""Explanation"": ""This rule is used to detect attempts to exploit a vulnerability in Microsoft Frontpage.""
   }
 ][
     ""sid"": ""1288"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule specifically detects attempts to access the Microsoft Frontpage _vti_bin/ directory, which is a common target for attackers to exploit vulnerabilities in Microsoft web applications."""",
     ""Explanation"": ""Microsoft FrontPage Server Extensions vulnerability allows remote attackers to execute arbitrary commands via a crafted .idc file, aka """"FrontPage Server Extensions Remote Code Execution Vulnerability"""".""
 ][
     {
         ""sid"": ""1288"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
         ""Explanation"": ""This rule is designed to detect attempts to access the '/_vti_bin/' URI, which is commonly associated with Microsoft FrontPage. Attackers may exploit vulnerabilities in Microsoft FrontPage to compromise web servers""
     },
     {
         ""sid"": ""1288"",
         ""Technique ID"": ""T1204"",
         ""Technique Name"": ""Web Application Attack"",
         ""Quotes"": """"Web Application Attack techniques involve targeting web applications for the purposes of exploitation, data exfiltration, or disruption. This rule detects access to '/_vti_bin/', which is a common target for web application attacks."""",
         ""Explanation"": ""This rule triggers when there is traffic to and from the '/_vti_bin/' URI, which is commonly associated with Microsoft FrontPage. Attackers may target web applications for various malicious purposes, such as data exfiltration or disruption""
     }
 ][
   {
     ""sid"": ""1288"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Microsoft Frontpage is a popular web content management system that is vulnerable to a variety of attacks, including remote code execution and SQL injection. This rule detects an attempt to access a known vulnerable URI, which is a common method used by attackers to exploit web applications."""",
     ""Explanation"": ""The attempt to access a known vulnerable URI in Microsoft Frontpage.""
   }
 ][
     {
         ""sid"": ""1288"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access the '\_vti\_bin/' directory, which is commonly targeted by attackers to exploit vulnerabilities in Microsoft Frontpage and SharePoint applications."""",
         ""Explanation"": ""It monitors for attempts to access the ‘_vti_bin/’ directory, which is commonly used by attackers to exploit vulnerabilities in Microsoft Frontpage and SharePoint applications.""
     },
     {
         ""sid"": ""1288"",
         ""Technique ID"": ""T1008"",
         ""Technique name"": ""Fallback Channels"",
         ""Quotes"": """"Fallback Channels techniques involve using alternate or backup communication channels to maintain reliable command and control, exfiltrate data, or avoid detection. This rule detects an attempt to access the '\_vti\_bin/' directory, which could be an indication of an attacker attempting to establish a fallback communication channel."""",
         ""Explanation"": ""It monitors for attempts to access the ‘_vti_bin/’ directory, which could be an indication of an attacker attempting to establish a fallback communication channel.""
     }
 ][
     {
         ""sid"": ""1288"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access the Microsoft Frontpage/_vti_bin/ directory, which is often associated with attempts to exploit web server vulnerabilities, such as content management systems."",
         ""Explanation"": ""This event is generated when activity relating to web application is detected.""
     }
 ][
   {
     ""sid"": ""1288"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted access to the Microsoft Frontpage _vti_bin directory, which is commonly targeted by attackers to exploit vulnerabilities in Microsoft Frontpage web applications."""",
     ""Explanation"": ""This event is generated when activity relating to a web application is detected.""
   }
 ][
         ""sid"": ""1288"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of the Microsoft Frontpage Server Extensions vulnerability via the '/_vti_bin/' URI, which is a common attack vector used to compromise webservers."""",
         ""Explanation"": ""The ""/_vti_bin/"" URI is a common attack vector used to target Microsoft Frontpage Server Extensions vulnerabilities.""
     ][
   {
     ""sid"": ""1288"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Specifically, Microsoft Frontpage is a web application that contains vulnerabilities that can be exploited by attackers, such as buffer overflows or SQL injection. This rule detects attempts to access the '_vti_bin/' directory in Microsoft Frontpage, which is commonly associated with exploitation attempts."""",
     ""Explanation"": ""The rule identifies attempts by a remote attacker to exploit a known vulnerability in Microsoft Frontpage (_vti_bin). The attacker is trying to gain unauthorized access or execute arbitrary code on the target system by exploiting this vulnerability.""
   }
 ][
   {
     ""sid"": ""1288"",
     ""Technique ID"": ""T1492"",
     ""Technique Name"": ""Web Server Directory Traversal"",
     ""Quotes"": """"Web Server Directory Traversal techniques involve abusing directory traversal functionality on a web server to gain unauthorized access to files and directories outside of the intended document root."""",
     ""Explanation"": ""This rule detects Microsoft""
   },
   {
     ""sid"": ""1288"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": """"
   }
 ]","['T1190', 'T1190', 'T1190', 'T1190', 'T1204', 'T1190', 'T1190', 'T1008', 'T1190', 'T1190', 'T1190', 'T1190', 'T1492', 'T1190']",['T1119']
42395,"[
   {
     ""sid"": ""42395"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""System Information Discovery"",
     ""Quotes"": """"System Information Discovery techniques involve querying a remote system to obtain information about the system or its environment. This rule detects an outbound connection from a compromised host to a known command and control (C&C) server, indicating that the malware is attempting to communicate with the C&C server to exfiltrate data or receive instructions."""",
     ""Explanation"": ""The rule is triggered when a compromised host is trying to connect to a known C&C server to exfiltrate data or receive instructions.""
   }
 ][
     {
         ""sid"": ""42395"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Control"",
         ""Quotes"": """"Command and Control techniques involve communicating with a command and control server, such as a remote server that an attacker uses to control compromised systems and issue commands."""",
         ""Explanation"": ""The rule detects outbound traffic to a known command and control server associated with the Trojan malware family, Win.Trojan.Oddjob. This traffic is used for communication between the infected system and the attacker's command and control server, allowing the attacker to issue commands and control the infected system remotely.""
     },
     {
         ""sid"": ""42395"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve moving data from a victim system to a remote system or location."""",
         ""Explanation"": ""Win.Trojan.Oddjob is known for its data exfiltration capabilities. The rule detects outbound traffic from infected machines attempting to send data to a remote server controlled by the attacker. This data may include sensitive information such as usernames, passwords, financial data, or other confidential information.""
     }
 ][
   {
     ""sid"": ""42395"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve interrogating target systems to learn more about them for follow-on exploitation. This rule detects an outbound connection to a remote host that is associated with a Trojan (Oddjob). The attacker may be using the Trojan to establish communication with a command and control server or to exfiltrate sensitive information."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""42395"",
     ""Technique ID"": ""T1409"",
     ""Technique name"": ""Outbound Command and Control"",
     ""Quotes"": """"Outbound Command and Control (C2) techniques involve communicating with a remote host or service to receive instructions or exfiltrate data. The rule detects a connection from an internal host to an external host on a well-known HTTP port used by a Trojan (Oddjob). Trojans often establish outbound connections to communicate with C2 servers, relay stolen data, or receive further instructions."",
     ""Explanation"": ""outbound connection to a well-known HTTP port used by a Trojan (Oddjob)""
   }
 ][
     ""sid"": ""42395"",
     ""Technique ID"": ""T1564"",
     ""Technique name"": ""Hide Artifacts"",
     ""Quotes"": """"Hide Artifacts techniques involve disguising or hiding artifacts (e.g., files, data, executables, system processes, etc.) used during an operation to impede discovery by defenders. The rule detects outbound connections made by the Oddjob Trojan, which is known for using various methods to conceal its activities, including hiding its network traffic by disguising it as legitimate browser traffic (e.g., mimicking the User-Agent and Accept-Encoding headers of common browsers)."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""42395"",
     ""Technique ID"": ""T1606"",
     ""Technique name"": ""Forge Web Credentials"",
     ""Quotes"": """"Forge Web Credentials techniques involve creating and submitting counterfeit credentials to gain access to web applications or Internet services. The rule detects an outbound connection from an infected host to a remote server associated with the Win.Trojan.Oddjob malware, which is known for its ability to steal credentials and other sensitive information from compromised systems."""",
     ""Explanation"": ""This event is generated when outbound Win.Trojan.Oddjob activity is detected.""
   },
   {
     ""sid"": ""42395"",
     ""Technique ID"": ""T1592"",
     ""Technique name"": ""Gather Victim Host Information"",
     ""Quotes"": """"Gather Victim Host Information techniques involve collecting information about a victim's host system to prepare for further attacks. The rule detects an HTTP request from an infected host to an external server, which may be an attempt to exfiltrate sensitive information or establish a communication channel for command and control."""",
     ""Explanation"": ""This event is generated when outbound Win.Trojan.Oddjob activity is detected.""
   },
   {
     ""sid"": ""42395"",
     ""Technique ID"": ""T1008"",
     ""Technique name"": ""Fallback Channels"",
     ""Quotes"": """"Fallback Channels techniques involve establishing or using secondary or alternate communication channels to maintain persistence or access to a compromised system. The rule detects outbound HTTP traffic with specific header characteristics that may indicate the presence of a covert communication channel."""",
     ""Explanation"": ""This event is generated when outbound Win.Trojan.Oddjob activity is detected.""
   }
 ][
   {
     ""sid"": ""42395"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve sending stolen data over an existing command and control (C2) channel. This rule detects outbound HTTP traffic from a compromised host to a remote IP address, with specific HTTP headers and a large URI length, which is consistent with the behavior of the Win.Trojan.Oddjob malware when exfiltrating data to a remote C2 server."""",
     ""Explanation"": ""This event is generated when activity relating to exfiltration of data is detected.""
   }
 ][
   {
     ""sid"": ""42395"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve establishing covert communication channels for communicating with remote actors. The rule detects outbound HTTP traffic from a compromised host to a known malware command and control server. The malware, identified as Win.Trojan.Oddjob, uses the User-Agent header and HTTP HEAD requests to communicate with its command and control server, making it appear as legitimate traffic."""",
     ""Explanation"": ""This event is generated when a command and control activity is detected.""
   }
 ][
     ""sid"": ""42395"",
     ""Technique ID"": ""T1588"",
     ""Technique name"": ""BITS Jobs"",
     ""Quotes"": """"BITS Jobs techniques involve abusing the Background Intelligent Transfer Service (BITS) to persistently execute code and perform various background tasks. The rule detects outbound connections from compromised hosts to external command and control servers using the User-Agent header commonly associated with BITS jobs, indicating the potential use of BITS for malicious purposes."""",
     ""Explanation"": ""A rule designed to detect malware that uses Windows Background Intelligent Transfer Service (BITS) to download additional malicious components or communicate with remote servers.""
 ][
   {
     ""sid"": ""42395"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve leveraging remote services and protocols to achieve objectives such as command and control, data exfiltration, or system control. The rule detects outbound HTTP connections from compromised hosts to a remote server, where the User-Agent field is set to 'Microsoft BITS' and the Accept-Encoding header is set to 'identity'. BITS (Background Intelligent Transfer Service) is a legitimate Windows service used for background file transfers, but it can be abused by malware for command and control or data exfiltration purposes."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""42395"",
     ""Technique ID"": ""T1573"",
     ""Technique Name"": ""Outbound C2 Communication"",
     ""Quotes"": """"Outbound Command and Control (C2) Communication techniques are used by adversaries to establish network communications with external C2 servers to send stolen data exfiltrated from victim systems and receive commands from the C2 server."""",
     ""Explanation"": """"This rule is designed to detect outbound C2 communication from a compromised host to a remote server. The rule matches on specific characteristics associated with Win.Trojan.Oddjob, including the use of the HTTP HEAD method, a specific User-Agent string, and an Accept-Encoding header with the value \""identity\"". These characteristics are indicative of malicious communication with a remote C2 server.""
   }
 ]","['T1021', 'T1059', 'T1132', 'T1021', 'T1409', 'T1564', 'T1606', 'T1592', 'T1008', 'T1041', 'T1048', 'T1588', 'T1021', 'T1573']",['T1197']
28399,"[
   {
     ""sid"": ""28399"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing covert communication channels with a remote server for the purposes of remote control, exfiltration, or other malicious activities. This rule detects an outbound connection from a compromised host to a known malicious Internet Relay Chat (IRC) server, which is a common method used by attackers to establish command and control channels."""",
     ""Explanation"": ""IRC is a common protocol used by attackers to establish command and control channels.""
   }
 ][
   {
     ""sid"": ""28399"",
     ""Technique ID"": ""T1040"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve using a variety of tools and techniques to discover open ports and services on a target network. This rule detects outbound connections on TCP ports between 6666 and 7000, which is indicative of a botnet using a wide range of ports to communicate."""",
     ""Explanation"": ""IRC botnet and outbound traffic on specific ports.""
   }
 ][
   {
     ""sid"": ""28399"",
     ""Technique ID"": ""T1580"",
     ""Technique name"": ""Cloud Infrastructure Discovery"",
     ""Quotes"": """"Cloud Infrastructure Discovery techniques involve adversaries attempting to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. The rule detects outbound communication from a compromised host to a known Tsunami IRC botnet C&C server on port 6666-7000, which could be used for reconnaissance and information gathering on the cloud infrastructure."""",
     ""Explanation"": ""The rule detects malware attempting to connect to a known command and control (C&C) server.""
   }
 ][
   {
     ""sid"": ""28399"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve adversaries using valid accounts to log into remote services, such as SSH, to gain access to systems"""",
     ""Explanation"": ""This event is generated when the server attempts to send a malicious payload to another host or connect to a server on the network, which is a common technique used by malware and botnets to establish command and control.""
   },
   {
     ""sid"": ""28399"",
     ""Technique ID"": ""T1496"",
     ""Technique name"": ""Resource Hijacking"",
     ""Quotes"": """"Resource Hijacking techniques involve adversaries leveraging the resources of co-opted systems to complete resource-intensive tasks"""",
     ""Explanation"": ""This event is generated when a malicious payload is sent to another host or connects to a server on the network, which can potentially consume significant resources and impact system availability.""
   }
 ][
         ""sid"": ""28399"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Application Layer Protocol Abuse"",
         ""Quotes"": """"Application Layer Protocol Abuse techniques involve using network protocols for unintended purposes or abusing specific features within protocols to achieve malicious objectives. In this case, the rule detects an IRC bot using the IRC protocol to establish a command and control channel with a remote server, which is a common method of communication for malware families like Tsunami."""",
         ""Explanation"": ""IRC bot connecting to external C&C server using Nickname and Username commands.""
     ][
   {
     ""sid"": ""28399"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Remote Service Execution"",
     ""Quotes"": """"Remote Service Execution techniques involve using built-in functionality in a system or application to execute commands or scripts on a remote host. In this rule, the adversary is attempting to connect to an IRC server (port 6667) from an internal network to an external network and using IRC commands (NICK, USER, and |3A|raft) to establish a connection and potentially execute commands on the remote host."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""28399"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Command Execution"",
     ""Quotes"": """"Remote Command Execution techniques involve executing commands or scripts on a remote system. In this rule, the adversary is attempting to connect to an IRC server from an internal network to an external network and using IRC commands (NICK, USER, and |3A|raft) to establish a connection and execute commands on the remote host."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""28399"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over C2 Channel"",
         ""Quotes"": """"Adversaries may steal data by exfiltrating it over an existing command and control channel. The rule detects an outbound connection from an infected Linux system to port 6666, which is a common port used by Tsunami backdoors. Tsunami backdoors are known to exfiltrate sensitive information, such as system credentials and network data, over an encrypted C2 channel."""",
         ""Explanation"": ""This rule detects an IRC communication that may be used to connect to a remote IRC server for the purpose of command and control or data exfiltration.""
     },
     {
         ""sid"": ""28399"",
         ""Technique ID"": ""T1585"",
         ""Technique name"": ""Establish Accounts"",
         ""Quotes"": """"Adversaries may create and cultivate accounts with services that can be used during targeting. The rule indicates the presence of a Tsunami backdoor, which typically involves creating and establishing accounts on infected systems to facilitate remote access and control."""",
         ""Explanation"": ""Tsunami backdoor is known to establish IRC accounts on infected systems for the purpose of command and control.""
     }
 ][
   {
     ""sid"": ""28399"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control (C2) techniques involve establishing covert communication with a remote system to facilitate malicious activities. This rule detects outbound IRC traffic with specific content (""NICK"", ""USER"", ""|3A|raft"") associated with the Linux.Backdoor.Tsunami malware, indicating an attempt to establish a C2 connection to a malicious server."""",
     ""Explanation"": ""The rule is associated with the Tsunami backdoor, which is used for remote control of the infected system.""
   }
 ][
         ""sid"": ""28399"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""IRC C2 Channel"",
         ""Quotes"": """"IRC C2 Channel techniques involve using Internet Relay Chat (IRC) as a covert channel to communicate with or control victim systems remotely. This rule detects outbound traffic matching a specific IRC communication pattern used by the Tsunami backdoor, indicating the potential for command and control communications."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""28399"",
         ""Technique ID"": ""T1106"",
         ""Technique name"": ""Establish Command and Control"",
         ""Quotes"": """"Establish Command and Control techniques involve establishing covert communication channels with attacker-controlled infrastructure to receive instructions, exfiltrate data, or control remote systems. This rule detects an outbound connection to a specific port range (6666:7000) used by the Tsunami IRC botnet, which is known to establish command and control channels with compromised systems to receive commands and exfiltrate sensitive data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""28399"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel' involves the use of a command and control (C2) channel to exfiltrate data from a compromised system. The rule detects an outbound connection to ports 6666-7000, which is a known tactic used by Tsunami, a Linux backdoor. This behavior is indicative of exfiltration activity, as the backdoor may be attempting to communicate with its C2 server to transmit stolen data."""",
     ""Explanation"": ""Outbound connection from compromised system to external host on non-standard ports""
   },
   {
     ""sid"": ""28399"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Remote Command Execution"",
     ""Quotes"": """"Remote Command Execution' involves executing commands or scripts on a remote system. The rule detects an IRC connection with specific content (""NICK"", ""USER"", ""|3A|raft"") which is indicative of Tsunami's remote command execution capabilities. This behavior suggests that an attacker is attempting to remotely control the compromised system and execute commands through the IRC channel."""",
     ""Explanation"": ""Communication with external host using IRC protocol and specific content associated with remote command execution""
   }
 ]","['T1105', 'T1040', 'T1580', 'T1021', 'T1496', 'T1071', 'T1071', 'T1021', 'T1041', 'T1585', 'T1048', 'T1132', 'T1106', 'T1041', 'T1071']",['T1571']
1280,"[
   {
     ""sid"": ""1280"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve actively scanning networks for open ports or services that may be vulnerable to attack. This rule detects the use of the 'portmap' protocol (UDP port 111) to enumerate RPC services and identify potential targets for further exploitation."""",
     ""Explanation"": ""This rule matches traffic on UDP port 111, which is used by the portmap service. Portmap is a service that maps RPC program numbers to TCP or UDP port numbers. Attackers can use portmap to discover RPC services that are running on a host, and then target those services for attack.""
   }
 ][
   {
     ""sid"": ""1280"",
     ""Technique ID"": ""T1543"",
     ""Technique Name"": ""Port Scanning"",
     ""Quotes"": """"Port Scanning techniques involve using automated tools to scan a range of IP addresses and ports to identify open or vulnerable services. This rule detects an attempt to perform a port scan using UDP port 111 (rpcbind), which is commonly used by attackers to identify hosts running remote procedure call (RPC) services, which can be targeted for exploitation."""",
     ""Explanation"": ""Port scanning is a technique used by attackers to identify potential targets for exploitation.""
   }
 ][
   {
     ""sid"": ""1280"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Port Scanning"",
     ""Quotes"": """"Port Scanning techniques are used to identify open ports on network resources. The rule detects attempts to map remote systems via port 111, commonly used by the portmapper service in Sun RPC. By probing for open ports, adversaries can gain valuable information about the target's network infrastructure, facilitating further attacks."""",
     ""Explanation"": ""RPC Portmapper (port 111) can be a reconnaissance tool itself by listing RPC services.""
   }
 ][
   {
     ""sid"": ""1280"",
     ""Technique ID"": ""T1047"",
     ""Technique Name"": ""System Service Discovery"",
     ""Quotes"": """"System Service Discovery techniques involve identifying and enumerating running services on a system to gain insight into the system's capabilities and potential attack surfaces. This rule detects portmap requests on UDP port 111, which is used by the portmap service to map RPC (Remote Procedure Call) programs and services to TCP or UDP ports."""",
     ""Explanation"": ""This event is generated when an RPC portmap request is detected. The portmap service is used to map RPC programs and services to TCP or UDP ports.""
   }
 ][
         ""sid"": ""1280"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Port Scanning"",
         ""Quotes"": """"Port scanning techniques involve actively probing network hosts to identify open ports and gather information about the services running on those ports. This rule detects a port scan targeting UDP port 111 (rpcbind), which is commonly used by attackers to discover services and vulnerabilities on target hosts."""",
         ""Explanation"": ""This event is generated when activity relating to port scanning is detected.""
     ][
   {
     ""sid"": ""1280"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve actively probing a network to identify available hosts and services. This rule detects an attempt to enumerate network services by sending a portmap request to UDP port 111, which is used by the Sun RPC portmapper service."""",
     ""Explanation"": ""This event is generated when an attempt to enumerate network services is detected.""
   }
 ][
   {
     ""sid"": ""1280"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve reconnaissance activities, such as port scanning and service enumeration, to identify potential attack vectors and targets. This rule detects an attempt to discover RPC services by scanning UDP port 111, which is a common reconnaissance technique attackers use to gather information about available services on a network."""",
     ""Explanation"": ""This rule is triggered when a UDP packet is received on port 111, which is the port used by the portmapper service. The portmapper service is used to map RPC program numbers to TCP or UDP ports. By scanning port 111, an attacker can determine which RPC services are available on a host.""
   },
   {
     ""sid"": ""1280"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. RPC services are often exposed to the public internet, making them potential targets for exploitation. This rule detects an attempt to exploit an RPC service by sending a specially crafted RPC request, which is a common method attackers use to gain unauthorized access to systems."""",
     ""Explanation"": ""This rule is triggered when a UDP packet is received on port 111 that contains a specially crafted RPC request. This type of request can be used to exploit vulnerabilities in RPC services, such as buffer overflows or format string vulnerabilities.""
   }
 ][
     ""sid"": ""1280"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Port Scanning"",
     ""Quotes"": """"Port Scanning techniques involve actively probing for open ports on a host. This rule detects port scanning activity by identifying a series of UDP packets with a destination port of 111, which is the port used by the Sun RPC's portmapper service. Attackers often use port scanning to identify potential targets and vulnerabilities on a network."""",
     ""Explanation"": ""This event is generated when an attempt to probe or scan TCP services on the host is detected.""
 ][
         ""sid"": ""1280"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve probing a network to identify open ports and services, often using automated tools. This rule detects an attempt to list available RPC services on port 111 using the portmap protocol, which is a common reconnaissance technique used by attackers to gather information about a target network."""",
         ""Explanation"": ""RPC portmapper program as defined in RFC1833 version 2.""
     ][
         ""sid"": ""1280"",
         ""Technique ID"": ""T1219"",
         ""Technique name"": ""Port Scanning"",
         ""Quotes"": """"Port scanning involves sending a series of probes to determine which ports on a target host are open and listening. The rule detects activity on port 111, which is typically used by the SunRPC portmapper service. Attackers may use port scanning to identify potential vulnerabilities within a network."""",
         ""Explanation"": ""This event is generated when activity relating to an rpc-portmap-decode is detected.""
     ][
   {
     ""sid"": ""1280"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Discovery"",
     ""Quotes"": ""\""Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation.\"""",
     ""Explanation"": ""This rule detects portmap/RPC listing requests, which are used to identify RPC services running on a host. This information can be used by attackers to identify potential targets for further exploitation.""
   }
 ]","['T1046', 'T1543', 'T1046', 'T1047', 'T1046', 'T1046', 'T1040', 'T1190', 'T1046', 'T1046', 'T1219', 'T1046']",['T1592']
19037,"[
     {
         ""sid"": ""19037"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Application Layer Protocol Abuse"",
         ""Quotes"": """"Application Layer Protocol Abuse techniques involve using legitimate application layer protocols to transfer malicious traffic, such as command and control communications, or to bypass security controls. This rule detects outbound connections to IRC port 6667, which is commonly abused by malware for command and control."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected. ""
     }
 ][
         ""sid"": ""19037"",
         ""Technique ID"": ""T1205"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. IRC is a popular communication protocol used by malware and attackers to establish command and control channels. By brute-forcing IRC channels using the 'JOIN' command, attackers can connect to and potentially compromise vulnerable IRC servers."""",
         ""Explanation"": ""This alert matches ICMPv4 and ICMPv6 traffic with TTL = 128. The attacker sends these packets to target hosts to check if they are online.""
     ][
     ""sid"": ""19037"",
     ""Technique ID"": ""T1083"",
     ""Technique name"": ""IRC Chat"",
     ""Quotes"": """"IRC Chat techniques involve using Internet Relay Chat (IRC) for communication and command and control with adversary-controlled infrastructure. This rule specifically detects outbound connections from compromised hosts to IRC servers on ports 6666-6667, as well as the use of the 'JOIN' command to establish and participate in IRC channels."""",
     ""Explanation"": ""IRC Chat is a technique used by adversaries to communicate with compromised systems and control their actions.""
 ][
         ""sid"": ""19037"",
         ""Technique ID"": ""T1091"",
         ""Technique name"": ""Replication Through Removable Media"",
         ""Quotes"": """"Replication Through Removable Media techniques involve copying data or malware to removable media, such as USB drives or CD-ROMs, for the purpose of spreading to other systems. This rule detects outbound connections made by the Win.Trojan.IRCBrute.I malware, typically transmitted on removable media and executed after the media is inserted into a system, which falls under this technique category."",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""19037"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This rule looks for IRC bot traffic and is used to detect IRC brute-force attacks.""
   }
 ][
   {
     ""sid"": ""19037"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques involve exploiting vulnerabilities in remote services to gain unauthorized access or execute arbitrary code. This rule detects outbound connections from compromised hosts to known IRC servers (port 6667) associated with the Win.Trojan.IRCBrute.I variant, which is a malware known for exploiting remote services to establish command and control channels with its operators."""",
     ""Explanation"": ""IRC Brute is a simple IRC password brute forcing tool. By default the program uses a simple password list, but it allows users to provide custom wordlists.""
   },
   {
     ""sid"": ""19037"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. This rule detects outbound connections from compromised hosts to known IRC servers (port 6667), which are commonly used as external remote services by malware to establish command and control channels with their operators."""",
     ""Explanation"": ""IRC Brute is a simple IRC password brute forcing tool. By default the program uses a simple password list, but it allows users to provide custom wordlists.""
   }
 ][
   {
     ""sid"": ""19037"",
     ""Technique ID"": ""T1543"",
     ""Technique Name"": ""Defacement"",
     ""Quotes"": """"Defacement techniques involve altering the appearance of a website or computer system, often to display a message or image. This rule detects outbound connections from an IRC bot (Win.Trojan.IRCBrute.I variant) to a remote server, which is a common method attackers use to deface websites by modifying web page content."""",
     ""Explanation"": ""This event is generated when activity relating to a Trojan horse is detected.""
   }
 ][
         {
             ""sid"": ""19037"",
             ""Technique ID"": ""T1104"",
             ""Technique Name"": ""Masquerading"",
             ""Quotes"": """"Masquerading techniques involve attackers attempting to alter system and application logs or event history to change the representation of an event or file. The outbound connection of Win.Trojan.IRCBrute is concealed by referencing IRC commands within the content of the packets, making it less detectable by IDS or IPS solutions."""",
             ""Explanation"": ""This rule is meant to detect malicious outbound connection of the IRCBrute Trojan.""
         }
     ][
         ""sid"": ""19037"",
         ""Technique ID"": ""T1043"",
         ""Technique name"": ""Internal Remote Services"",
         ""Quotes"": """"Internal Remote Services techniques involve using legitimate remote services and protocols to establish command and control channels for malware or other malicious activity. This rule detects outbound connections to IRC port 6667 and IRC server addresses in the format ""20 23 23 |23 23"". This pattern is commonly associated with IRC bots and malware using IRC for command and control."""",
         ""Explanation"": ""Attempt to connect to IRC command and control""
     ][
         ""sid"": ""19037"",
         ""Technique ID"": ""T1071.002"",
         ""Technique name"": ""IRC Chat"",
         ""Quotes"": """"Adversaries may use Internet Relay Chat (IRC) to communicate with other adversaries, exfiltrate data, or perform other malicious activity. IRC traffic may attempt to blend in with legitimate IRC traffic, so traffic analysis and correlation are necessary for detection. IRC activity typically occurs over a unique set of TCP ports (6665-6669), but may also be used over non-standard TCP ports"""",
         ""Explanation"": ""This event is generated when a host attempts to connect to IRC""
     ][
   {
     ""sid"": ""19037"",
     ""Technique ID"": ""T1589"",
     ""Technique name"": ""Command and Control (C2) Communication Inbound"",
     ""Quotes"": """"Command and Control (C2) Communication Inbound techniques involve communicating with C2 servers or other malicious hosts to receive instructions or data. IRC servers are used by malware for communication."""",
     ""Explanation"": ""IRC (Internet Relay Chat) is a common platform for malware communication, which makes it a relevant technique for this rule.""
   },
   {
     ""sid"": ""19037"",
     ""Technique ID"": ""T1098"",
     ""Technique name"": ""Malicious Output"",
     ""Quotes"": """"Malicious Output techniques involve generating and displaying messages in response to user input or output. IRC is an interactive platform that allows users to communicate real-time."",
     ""Explanation"": ""The rule detects malicious activity using IRC and triggers an alert when the IRC command JOIN is detected.""
   }
 ]","['T1110', 'T1205', 'T1083', 'T1091', 'T1190', 'T1210', 'T1133', 'T1543', 'T1104', 'T1043', 'T1071.002', 'T1589', 'T1098']",['T1571']
18241,"[
         ""sid"": ""18241"",
         ""Technique ID"": ""T1482"",
         ""Technique name"": ""Active Directory Discovery"",
         ""Quotes"": """"Active Directory Discovery techniques aim to discover and map Active Directory infrastructure to aid in locating and selecting targets for attack. This rule detects suspicious activity involving Microsoft Windows Management Instrumentation (WMI) and ActiveX components, which can be used for Active Directory enumeration and exploitation by adversaries."""",
         ""Explanation"": ""This event is generated when suspicious activity involving Windows Management Instrumentation (WMI) and ActiveX components is detected""
     ][
   {
     ""sid"": ""18241"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Vulnerable Browser"",
     ""Quotes"": """"Exploit Vulnerable Browser techniques involve targeting vulnerabilities in web browsers to gain access to or execute code on a user's system. This rule detects an attempt to access a COM object (clsid 2745E5F5-D234-11D0-847A-00C04FD7BB08) related to the WMI administrator tools in Microsoft Windows. This ActiveX control is known to be vulnerable to exploitation, which could allow an attacker to execute arbitrary code in the context of the user's browser."""",
     ""Explanation"": """"Attempted access to vulnerable ActiveX control in web browser""
   }
 ][
   {
     ""sid"": ""18241"",
     ""Technique ID"": ""T1027"",
     ""Technique Name"": ""Windows Management Instrumentation"",
     ""Quotes"": """"T1027 (Windows Management Instrumentation) involves using Windows Management Instrumentation (WMI) for reconnaissance, persistence, privilege escalation, lateral movement, or impact."""",
     ""Explanation"": ""The rule detects access to a WMI object viewer ActiveX control, which could be used by an attacker to gain access to the system.""
   }
 ][
     ""sid"": ""18241"",
     ""Technique ID"": ""T1068"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve enticing a user to visit a website or open an email attachment that contains malicious code, which can then automatically execute and compromise the user's system. This rule detects an attempt to exploit a vulnerability in Microsoft Windows WMI administrator tools object viewer ActiveX clsid, which is a common method used to compromise systems through drive-by compromise."""",
     ""Explanation"": ""This rule is used to detect attempts to exploit a vulnerability in Microsoft Windows WMI administrator tools object viewer ActiveX clsid. This vulnerability allows remote attackers to execute arbitrary code on the target system. The rule detects attempts to access the vulnerable ActiveX control, which is a common method used to exploit this vulnerability.""
 ][
         ""sid"": ""18241"",
         ""Technique ID"": ""T1068"",
         ""Technique name"": ""Exploit Vulnerable Software"",
         ""Quotes"": """"Exploit vulnerable software techniques involve targeting vulnerabilities in software to gain unauthorized access or execute arbitrary code. This rule specifically detects an attempt to exploit a vulnerability in Microsoft Windows WMI administrator tools object viewer ActiveX clsid, which could allow an attacker to execute arbitrary code and gain unauthorized access to the system."""",
         ""Explanation"": ""The rule triggers an alert when an ActiveX control with the class ID ""2745E5F5-D234-11D0-847A-00C04FD7BB08"" is accessed, which is a known vulnerability that can be exploited by attackers to execute arbitrary code.""
     ][
   {
     ""sid"": ""18241"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": ""\""File and Directory Discovery techniques involve searching a filesystem to gain situational awareness of the system. This rule detects an attempt to access a specific CLSID (2745E5F5-D234-11D0-847A-00C04FD7BB08) associated with the Windows Management Instrumentation (WMI) object viewer ActiveX control, which is commonly used by attackers to enumerate system information."""",
     ""Explanation"": ""This event is generated when activity relating to browser plugins is detected""
   }
 ][
     ""sid"": ""18241"",
     ""Technique ID"": ""T1068"",
     ""Technique name"": ""OLE Automation"",
     ""Quotes"": """"OLE-Automation techniques allow adversaries to control installed applications or software with exposed OLE interfaces, such as Microsoft Office, through scripting languages. This rule detects an attempt to access the Windows Management Instrumentation (WMI) object viewer ActiveX control, which can be used to perform a variety of administrative tasks through scripting."""",
     ""Explanation"": ""This rule matches a network packet that contains an ActiveX control used for OLE Automation. The technique is relevant because it involves exploiting an exposed OLE interface to gain control of an application for malicious purposes.""
 ][
         ""sid"": ""18241"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Microsoft Windows WMI administrator tools object viewer ActiveX control, which is a common method attackers use to gain unauthorized access to systems via web browsers."""",
         ""Explanation"": ""This event is generated when an attempt is made to access the Microsoft Windows WMI administrator tools object viewer ActiveX control.""
     ][
   {
     ""sid"": ""18241"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Microsoft Windows WMI administrator tools object viewer ActiveX clsid, which is a known technique used by attackers to gain unauthorized access to systems through web browsers."""",
     ""Explanation"": ""WMI Service COM Elevation of Privilege Vulnerability""
   }
 ][
     ""sid"": ""18241"",
     ""Technique ID"": ""T1078"",
     ""Technique name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve obtaining and abusing credentials of existing accounts to gain access or elevate privileges. This rule detects the exploitation of a browser plugin (Microsoft Windows WMI administrator tools object viewer ActiveX clsid) to attempt unauthorized access to an administrator's account. By compromising a valid user account, adversaries can bypass authentication mechanisms and gain access to sensitive information."""",
     ""Explanation"": ""It is utilized for fetching information about the ActiveX control.""
 ][
         {
             ""sid"": ""18241"",
             ""Technique ID"": ""T1125"",
             ""Technique name"": ""User Execution"",
             ""Quotes"": """"User Execution techniques involve getting users to perform an action that the adversary wants done. In this case, the technique involves a browser plugin exploitation by accessing a specified object viewer ActiveX."",
             ""Explanation"": ""This rule detects access to WMI administrator tools object viewer ActiveX used by attackers for user execution techniques.""
         }
     ]","['T1482', 'T1189', 'T1027', 'T1068', 'T1068', 'T1083', 'T1068', 'T1189', 'T1189', 'T1078', 'T1125']",['T1047']
57879,"[
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1592"",
     ""Technique Name"": ""Clear Command History"",
     ""Quotes"": """"Clear Command History techniques involve clearing logs or other records of command execution to make it difficult to identify malicious activity or retrace steps taken during an intrusion."""",
     ""Explanation"": ""This rule detects the use of the 'Server.CreateObject' and 'KComWExec.execCmd' functions to upload a file that may be used to clear event logs and other artifacts of malicious activity.""
   },
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1109"",
     ""Technique Name"": ""File Upload"",
     ""Quotes"": """"File Upload techniques involve uploading files to a system to facilitate execution of malicious code or exfiltration of sensitive data."""",
     ""Explanation"": ""This rule detects the use of the 'Server.CreateObject' and 'KComWExec.execCmd' functions to upload a file that may be used to clear event logs and other artifacts of malicious activity.""
   }
 ][
     {
         ""sid"": ""57879"",
         ""Technique ID"": ""T1566"",
         ""Technique Name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent messages to trick recipients into revealing sensitive information or clicking malicious links. This rule detects an attempt to upload malicious content via HTTP using the ""Server.CreateObject"" and ""KComWExec.execCmd"" keywords, which are associated with malware like Revil and Kaseya ransomware."""",
         ""Explanation"": ""This rule detects indicators of compromise (IOCs) related to the Revil/Kaseya ransomware attack, specifically attempts to clear logs and upload malicious content.""
     },
     {
         ""sid"": ""57879"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Kaseya's VSA software, which allowed attackers to execute arbitrary code and deploy ransomware like Revil."""",
         ""Explanation"": ""This rule detects indicators of compromise (IOCs) related to the Revil/Kaseya ransomware attack, specifically attempts to clear logs and upload malicious content.""
     }
 ][
         ""sid"": ""57879"",
         ""Technique ID"": ""T1490"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shells are often used by adversaries to maintain persistent access to a compromised system and to execute arbitrary commands. Typically, web shells are uploaded to a web server as a result of a successful web application exploit, and then used to facilitate additional malicious activity. The rule detects an attempt to upload a web shell with the filename ""KComWExec.execCmd"" to a compromised web server."""",
         ""Explanation"": ""This rule is triggered when the string ""Server.CreateObject"" followed by ""KComWExec.execCmd"" is detected in a file being uploaded to a web server. This pattern is typically associated with the installation of a web shell.""
     ],
     [
         ""sid"": ""57879"",
         ""Technique ID"": ""T1564"",
         ""Technique name"": ""Hijack Execution Flow"",
         ""Quotes"": """"Hijack Execution Flow techniques allow adversaries to alter the normal execution flow of a program or system to gain unauthorized access or control. In this case, the rule detects an attempt to upload a web shell with the filename ""KComWExec.execCmd"" to a compromised web server. Web shells can be used to execute arbitrary commands on the server, allowing an attacker to gain control of the system."""",
         ""Explanation"": ""Web shells can be used to execute arbitrary commands on the server, allowing an attacker to gain control of the system.""
     ],
     [
         ""sid"": ""57879"",
         ""Technique ID"": ""T1505"",
         ""Technique name"": ""Impair Defenses"",
         ""Quotes"": """"Impair Defenses techniques involve disabling or interfering with security measures to make it easier to compromise a system. In this case, the rule detects an attempt to upload a web shell with the filename ""KComWExec.execCmd"" to a compromised web server. Web shells can be used to disable security measures, such as antivirus software or intrusion detection systems, to make it easier for an attacker to compromise the system."""",
         ""Explanation"": ""Web shells can be used to disable security measures, such as antivirus software or intrusion detection systems, to make it easier for an attacker to compromise the system.""
     ]
 ][
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1562"",
     ""Technique Name"": ""Impair Defenses"",
     ""Quotes"": """"Impair Defenses techniques involve disabling or altering security measures to make it easier to perform other attacks. This rule detects an attempt to upload a file containing the string 'KComWExec.execCmd' to a server using the 'Server.CreateObject' method, which is associated with the installation of the Revil ransomware. The aim of this technique is to disable security mechanisms and pave the way for further malicious activities."""",
     ""Explanation"": ""The rule triggers on the detection of a file upload attempt that includes a string associated with the Revil ransomware, suggesting an attempt to disable security mechanisms and pave the way for further malicious activities.""
   }
 ][
     ""sid"": ""57879"",
     ""Technique ID"": ""T1564"",
     ""Technique name"": ""Hide Artifacts"",
     ""Quotes"": """"Hide Artifacts techniques involve manipulating artifacts and data associated with adversary behaviors to avoid detection by security defenses. This rule detects activity related to the Revil Kaseya ransomware, which is known to utilize log clearing techniques as part of its attack routine."""",
     ""Explanation"": ""Revil is a ransomware that encrypts files on an infected system then demands payment to decrypt them.""
 ][
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1070"",
     ""Technique Name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve actively attempting to erase or alter evidence of the presence or activities of an adversary within a host."""",
     ""Explanation"": ""This rule identifies suspicious activity consistent with attempts to remove evidence of compromise from an infected system by deleting the Windows Event logs.""
   },
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1562"",
     ""Technique Name"": ""Impair Defenses"",
     ""Quotes"": """"Impair Defenses techniques involve disrupting or disabling security tools, features, or policies."""",
     ""Explanation"": ""This rule detects attempts to disable Microsoft Defender Antivirus, which is a common tactic used by adversaries to evade detection and interfere with the system's security mechanisms.""
   }
 ][
         {
             ""sid"": ""57879"",
             ""Technique ID"": ""T1499"",
             ""Technique name"": ""Endpoint Denial of Service"",
             ""Quotes"": """"Endpoint Denial of Service (DoS) attacks are used to degrade or block the availability of services to users. This rule detects an attempt to upload a file containing a PowerShell command to execute 'KComWExec.execCmd', which can be used to perform DoS attacks."""",
             ""Explanation"": ""This rule is designed to detect attempts to exploit CVE-2021-30116.""
         },
         {
             ""sid"": ""57879"",
             ""Technique ID"": ""T1190"",
             ""Technique name"": ""Exploit Public-Facing Application"",
             ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Kaseya VSA software, which is known to be targeted by ransomware actors."""",
             ""Explanation"": ""This rule is designed to detect attempts to exploit CVE-2021-30116.""
         }
     ][
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1490"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web shells are malicious scripts that provide adversaries remote access to a compromised system. The rule triggers on the presence of a web shell for the Revil ransomware, which uses the KComWExec.execCmd property to execute commands on the compromised host."""",
     ""Explanation"": ""This event is likely to be malicious.""
   }
 ][
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1486"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to make it inaccessible or unusable, often with the goal of extorting the victim for payment. The rule detects activity associated with the Revil ransomware, which is known to encrypt files on the victim's system and demand a ransom payment in exchange for decrypting them."""",
     ""Explanation"": ""The rule detects the creation of a COM object and the execution of a command, which are techniques used by ransomware to encrypt files and perform other malicious actions.""
   },
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1562"",
     ""Technique Name"": ""Impair Defenses"",
     ""Quotes"": """"Impair Defenses techniques involve disabling or degrading security measures to make it easier to perform other malicious actions. The rule detects activity associated with the Revil ransomware, which is known to disable security measures such as antivirus software and firewalls to prevent detection and removal."""",
     ""Explanation"": ""The rule detects the creation of a COM object and the execution of a command, which are techniques used by ransomware to disable security measures and perform other malicious actions.""
   },
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1490"",
     ""Technique Name"": ""Exploitation for Credential Access"",
     ""Quotes"": """"Exploitation for Credential Access techniques involve exploiting vulnerabilities in software or systems to gain unauthorized access to credentials, such as passwords or tokens. The rule detects activity associated with the Revil ransomware, which is known to exploit vulnerabilities in software to gain access to credentials and encrypt files."""",
     ""Explanation"": ""The rule detects the creation of a COM object and the execution of a command, which are techniques used by ransomware to exploit vulnerabilities and gain access to credentials.""
   }
 ][
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Denial of Service"",
     ""Quotes"": """"Network Denial of Service techniques disrupt the availability or accessibility of a host, network, service, or application."""",
     ""Explanation"": ""This event is generated when activity relating to Denial of Service is detected.""
   }
 ][
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1485"",
     ""Technique Name"": ""Clear Windows Event Logs"",
     ""Quotes"": """"Clear Windows Event Logs is an anti-forensic technique that adversaries may use to hide evidence of their presence on a system. The rule detects an attempt to delete or clear event logs on the system, which could be indicative of an adversary trying to cover their tracks."""",
     ""Explanation"": ""This event is generated when activity relating to creating a server object is detected.""
   },
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1565"",
     ""Technique Name"": ""Impair Defenses"",
     ""Quotes"": """"Impair Defenses techniques involve disrupting or disabling security tools and mechanisms to make it easier to conduct attacks. The rule detects an attempt to disable Windows Event Logging, which is a critical security tool used to monitor and record system events."""",
     ""Explanation"": ""This event is generated when activity relating to creating a server object is detected.""
   },
   {
     ""sid"": ""57879"",
     ""Technique ID"": ""T1070"",
     ""Technique Name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve removing or modifying artifacts on a host system to hinder detection or investigation. The rule detects an attempt to clear Windows Event Logs, which could be an attempt to remove evidence of malicious activity."""",
     ""Explanation"": ""This event is generated when activity relating to creating a server object is detected.""
   }
 ]","['T1592', 'T1109', 'T1566', 'T1190', 'T1490', 'T1564', 'T1505', 'T1562', 'T1564', 'T1070', 'T1562', 'T1499', 'T1190', 'T1490', 'T1486', 'T1562', 'T1490', 'T1040', 'T1485', 'T1565', 'T1070']",['T1485']
50096,"[
   {
     ""sid"": ""50096"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files onto a target system to support malicious objectives, such as compromising the system or exfiltrating data. The rule detects an attempt to download the Responder tool, which is commonly used for network reconnaissance and exploitation, indicating a potential threat of unauthorized tool transfer."""",
     ""Explanation"": ""This rule detects an attempt to download a file named \""Responder.py\"" and \""Responder.conf\"" over a file data port, which is commonly used for file transfer protocols such as FTP, HTTP, IMAP, and POP3. The presence of these files suggests an attempt to transfer a tool that could be used for malicious purposes.""
   }
 ][][
     {
         ""sid"": ""50096"",
         ""Technique ID"": ""T1562"",
         ""Technique Name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve sending fraudulent emails or messages to trick users into revealing sensitive information or clicking on malicious links that may lead to the download of malware. This rule specifically detects attempts to download the Responder toolkit, which is a legitimate tool used for network and security testing, but can also be misused for malicious purposes, such as poisoning DNS responses to redirect traffic to malicious sites."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
         ""sid"": ""50096"",
         ""Technique ID"": ""T1562"",
         ""Technique Name"": ""Impair Defenses"",
         ""Quotes"": """"Impair Defenses techniques involve disabling or altering security measures to make it easier to perform other actions during an attack. This rule detects the download of tools associated with the Responder poisoning toolkit, which allows attackers to poison DNS responses and redirect traffic to malicious destinations. Downloading these tools could indicate an attempt to hinder network security measures."""",
         ""Explanation"": ""This event is generated when detection of known bad traffic patterns with shellcode.""
     ][
         ""sid"": ""50096"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or files from an external system into a compromised environment. This rule detects an attempt to download the Responder toolkit, a popular tool used for performing responder attacks that poison DNS responses. The rule identifies the presence of specific files associated with the toolkit, indicating that the attacker is attempting to transfer these tools into the compromised environment."""",
         ""Explanation"": ""The rule uses file data inspection to identify attempts to download Responder toolkit components, suggesting that an attacker is attempting to establish a foothold on the system.""
     ][
         ""sid"": ""50096"",
         ""Technique ID"": ""T1495"",
         ""Technique name"": ""Firmware Corruption"",
         ""Quotes"": """"Firmware Corruption techniques involve modifying or corrupting firmware in order to render devices inoperable or unable to boot, thereby denying the availability of those devices."""",
         ""Explanation"": ""This event is generated when an attempt is made to download a file associated with the Responder tool, which is used for poisoning ARP caches and performing man-in-the-middle attacks by modifying firmware on network devices.""
     ][
         ""sid"": ""50096"",
         ""Technique ID"": ""T1191"",
         ""Technique name"": ""Create Well-Known File"",
         ""Quotes"": """"Create Well-Known File techniques involve adversaries creating files with names or extensions that are commonly associated with specific applications or file types. This rule detects the download of ""Responder.py"" and ""Responder.conf"" files, which are commonly associated with the Responder poisoner toolkit. Adversaries may use such tools to conduct man-in-the-middle attacks by poisoning ARP caches, enabling them to intercept network traffic."""",
         ""Explanation"": ""The rule indicates the detection of an attempt to download files commonly used by the Responder tool.""
     ][
   {
     ""sid"": ""50096"",
     ""Technique ID"": ""T1554"",
     ""Technique name"": ""Exploit Vulnerable Software"",
     ""Quotes"": """"Exploit Vulnerable Software is used to target software vulnerabilities to gain unauthorized access or execute arbitrary code. This rule is designed to detect an attempt to download the Responder poisoner toolkit, which exploits vulnerabilities in protocols such as SMB and NetBIOS to perform man-in-the-middle attacks. By exploiting software vulnerabilities, adversaries can gain unauthorized access to systems and execute malicious code."""",
     ""Explanation"": """"The rule detects an attempt to download a Responder poisoner toolkit, or a set of tools used to perform man-in-the-middle attacks. Responder poisoner exploits vulnerabilities in protocols such as SMB and NetBIOS to redirect traffic and intercept data""
   }
 ][
   {
     ""sid"": ""50096"",
     ""Technique ID"": ""T1568"",
     ""Technique Name"": ""Install Malware"",
     ""Quotes"": """"Install Malware techniques involve deploying malicious software such as backdoors, trojans, and ransomware on a target system. This rule detects an attempt to download malicious files associated with the Responder poisoner toolkit, which is used to conduct man-in-the-middle attacks by impersonating legitimate servers."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""50096"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule is triggered when a client attempts to download files named 'Responder.py' and 'Responder.conf', which are associated with the Responder poisoner toolkit. Attackers commonly use this toolkit to exploit vulnerabilities in authentication protocols such as SMB and LDAP."""",
     ""Explanation"": ""Responder toolkit exploits vulnerabilities in authentication protocols such as SMB and LDAP to perform relay attacks and gain unauthorized access to systems.""
   }
 ][
     ""sid"": ""50096"",
     ""Technique ID"": ""T1566"",
     ""Technique name"": ""Steal Token"",
     ""Quotes"": """"Steal Token techniques involve obtaining a token that can be used to access a target system or application, such as a session token or authentication token. The rule detects the download of Responder.py and Responder.conf, which are tools used for token manipulation and impersonation. These tools allow adversaries to steal authentication tokens and impersonate legitimate users to gain access to systems and data."""",
     ""Explanation"": ""Responder.py and Responder.conf are Responder toolkit components. Responder toolkit is a tool used for MITM attacks targeting Windows domain environments to poison the DNS cache and respond to NetBIOS name queries with crafted responses, allowing attackers to obtain credentials and session tokens.""
 ]","['T1105', 'T1562', 'T1562', 'T1105', 'T1495', 'T1191', 'T1554', 'T1568', 'T1190', 'T1566']",['T1072']
30549,"[
     ""sid"": ""38410"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve using probes to identify open or listening network services, and potentially vulnerabilities, on a target system. This rule specifically detects masscan activity, which is a popular tool used by attackers to perform network reconnaissance and vulnerability scanning."""",
     ""Explanation"": ""This rule detects masscan, an open source tool used for network reconnaissance.""
 ][
     {
         ""sid"": ""30549"",
         ""Technique ID"": ""T1598"",
         ""Technique name"": ""Phishing for Information"",
         ""Quotes"": """"Phishing for Information techniques involve sending phishing messages to elicit sensitive information that can be used during targeting. The rule is designed to detect reconnaissance activity using the masscan tool, which can be used to gather information about hosts on a network, including open ports and services. This information can then be used to target specific hosts or services with phishing attacks."""",
         ""Explanation"": ""The Heartbleed bug (CVE-2014-0160) is a vulnerability in the OpenSSL cryptographic library that allows attackers to steal sensitive information from a server's memory. Masscan is a popular tool used to scan networks for hosts that are vulnerable to Heartbleed.""
     }
 ][
   {
     ""sid"": ""30549"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a mass scan for the Heartbleed vulnerability in OpenSSL, which is a well-known remote code execution vulnerability that can allow attackers to steal sensitive information from affected systems."""",
     ""Explanation"": ""This rule is designed to detect attempts to exploit the Heartbleed vulnerability in OpenSSL, which is a technique that can be used to gain unauthorized access to a system.""
   }
 ][
     ""sid"": ""30549"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning involves discovering or mapping networks and systems through techniques such as port scanning, vulnerability scanning, and network enumeration. This rule detects attempts to exploit the Heartbleed vulnerability in OpenSSL using the masscan tool, which is commonly used by attackers to scan for vulnerable systems."""",
     ""Explanation"": ""Masscan is a mass IP port scanner, the rule detects OpenSSL Heartbleed vulnerability attempts.""
 ][
     {
         ""sid"": ""30549"",
         ""Technique ID"": ""T1046"",
         ""Technique Name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve scanning a network to identify and fingerprint systems and services running on those systems. This rule detects a masscan probe attempting to exploit the OpenSSL Heartbleed vulnerability (CVE-2014-0160), which allows attackers to retrieve sensitive information from vulnerable systems."""",
         ""Explanation"": ""Heartbleed is a vulnerability that is caused by a flaw in the implementation of the OpenSSL library, which is used to implement Transport Layer Security (TLS) encryption on web servers. The vulnerability allows attackers to retrieve the contents of the server's memory, which could include sensitive information such as passwords, credit card numbers, and other personal data.""
     }
 ][
         ""sid"": ""30549"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted OpenSSL Heartbleed masscan access exploitation attempt, where an attacker uses the Heartbleed vulnerability to extract sensitive information from a vulnerable OpenSSL server."""",
         ""Explanation"": ""The rule specifically identifies the use of the 'masscan/1.0' string, which is a common indicator of such exploitation attempts.""
     ][
   {
     ""sid"": ""30549"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning involves performing reconnaissance to gather information about a network and its devices to identify potential targets for exploitation or attack. This rule detects an attempt to detect and exploit the OpenSSL Heartbleed vulnerability (CVE-2014-0160) by sending a specially crafted Heartbeat Request packet, which is a common method used to perform network service scanning and identify vulnerable systems."""",
     ""Explanation"": ""This rule detects network service scanning and exploitation attempts.""
   }
 ][
         ""sid"": ""30549"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted masscan exploitation of the OpenSSL Heartbleed vulnerability, which allows attackers to steal sensitive information from a vulnerable server."""",
         ""Explanation"": ""The rule specifically identifies the Heartbleed vulnerability and indicates an attempt to exploit it using the masscan tool.""
     ][
     {
         ""sid"": ""30549"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted Heartbleed vulnerability exploit on OpenSSL, a commonly exploited vulnerability that allows attackers to steal sensitive information from vulnerable systems."""",
         ""Explanation"": ""OpenSSL Heartbleed mass-scanning attempt.""
     }
 ][
         ""sid"": ""30549"",
         ""Technique ID"": ""T1489"",
         ""Technique name"": ""Uncommonly Used Port"",
         ""Quotes"": """"Uncommonly Used Port techniques involve communicating with a target system using a port or service that is not commonly associated with the intended functionality of the organization."""",
         ""Explanation"": ""The rule detects an attempt to exploit the OpenSSL Heartbleed vulnerability, which takes advantage of a specific port, 443, that is not commonly associated with this type of attack.""
     ][
     {
         ""sid"": ""30549"",
         ""Technique ID"": ""T1491"",
         ""Technique name"": ""Mass Scanning"",
         ""Quotes"": """"Mass Scanning techniques involve the systematic and widespread scanning of IP addresses or ranges within a network to identify potential targets for further attacks. This rule looks for the masscan scanner, a popular tool used by attackers to conduct large-scale scans, which could be a sign of reconnaissance and a precursor to other malicious activities."""",
         ""Explanation"": ""This event is generated when the OpenSSL Heartbleed masscan access exploitation attempt is detected.""
     },
     {
         ""sid"": ""30549"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule looks for a masscan exploitation attempt specifically targeting the OpenSSL Heartbleed vulnerability, which allows attackers to steal sensitive information from vulnerable servers."""",
         ""Explanation"": ""This event is generated when the OpenSSL Heartbleed masscan access exploitation attempt is detected.""
     }
 ]","['T1046', 'T1598', 'T1190', 'T1046', 'T1046', 'T1190', 'T1046', 'T1190', 'T1190', 'T1489', 'T1491', 'T1210']",['T1005']
58615,"[
         ""sid"": ""58615"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve tricking a user into downloading and executing a malicious payload through a compromised website. This rule detects an attempt to exploit a vulnerability in Microsoft Windows Content Disposition to download and execute a malicious .dll file using a specially crafted HTTP request. Attackers often use drive-by compromise techniques to deliver malware, steal sensitive information, or establish a foothold on a victim's system."""",
         ""Explanation"": ""The rule is attempting to detect malicious activity related to the User-Installed Font Driver Elevation of Privilege Vulnerability in Microsoft Windows""
     ][
   {
     ""sid"": ""58615"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side software to achieve code execution. "",
     ""Explanation"": ""This rule is triggered when an attempt is made to execute a CLSID command via a Content-Disposition HTTP header, which is a technique commonly used to exploit vulnerabilities in client-side applications such as Internet Explorer.""
   }
 ][
   {
     ""sid"": ""58615"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute force attacks involve using multiple and/or automated attempts to guess a password or other credentials. In this case, the rule looks for a specific HTTP header and file extension that are commonly used in attempts to exploit a CLSID vulnerability in Microsoft Windows. Attackers may use brute force techniques like this to gain unauthorized access to systems."""",
     ""Explanation"": ""This event is generated when activity relating to exploitation is detected.""
   }
 ][
   {
     ""sid"": ""58615"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Vulnerable Software"",
     ""Quotes"": """"Exploit Vulnerable Software techniques involve targeting known vulnerabilities in software applications or operating systems to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a specific vulnerability in Microsoft Windows that allows an attacker to execute arbitrary commands via a specially crafted CLSID parameter in an HTTP request. Attackers commonly use this technique to gain remote code execution on vulnerable systems."""",
     ""Explanation"": ""This event is generated when activity relating to exploit vulnerabilities in Microsoft Windows Content-Disposition CLSID is detected.""
   }
 ][
     {
         ""sid"": ""58615"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in Microsoft Windows Content-Disposition to execute a command, which is a common method attackers use to exploit web applications."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in Microsoft Windows Content-Disposition is detected.""
     }
 ][
     {
         ""sid"": ""58615"",
         ""Technique ID"": ""T1203"",
         ""Technique Name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting software vulnerabilities in client applications to execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Microsoft Windows' Content-Disposition header to execute a CLSID command, which could lead to arbitrary code execution on the victim's system."""",
         ""Explanation"": ""The rule looks for specific pattern within the HTTP header, which is trying to exploit a vulnerability in Microsoft Windows' Content-Disposition header to execute a CLSID command, which could lead to arbitrary code execution on the victim's system.""
     }
 ][
     {
         ""sid"": ""61998"",
         ""Technique ID"": ""T1189"",
         ""Technique Name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in web-based applications or content to compromise a victim's system through a user's web browser. This rule detects an attempt to exploit a vulnerability in Microsoft Windows to download and execute a malicious payload onto the victim's system using Internet Explorer. The malicious code is disguised as a legitimate file with the CLSID of """"{25336920-03f9-11cf-8fd0-00aa00686f13}"""", which is a common technique used by drive-by compromise attacks."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""58615"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking a user into executing code, typically as part of a phishing or social engineering attack. This rule detects malicious HTTP traffic that attempts to execute a command via the Content-Disposition header, which is often used in phishing emails to exploit vulnerabilities in email clients."""",
     ""Explanation"": ""This event is generated when an attempt to execute a command via the Content-Disposition header is detected.""
   },
   {
     ""sid"": ""58615"",
     ""Technique ID"": ""T1199"",
     ""Technique Name"": ""Spearphishing Attachment"",
     ""Quotes"": """"Spearphishing Attachment techniques involve sending malicious attachments in emails to trick the user into executing arbitrary code or giving up sensitive information. This rule detects an attempt to execute a command via the Content-Disposition header, which is often used in phishing emails to exploit vulnerabilities in email clients."""",
     ""Explanation"": ""The rule detects an attempt to execute arbitrary code through a malicious attachment in an email using the Content-Disposition header, which is a common technique used in spearphishing attacks.""
   }
 ][
   {
     ""sid"": ""58615"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""User Execution"",
     ""Quotes"": """"User Execution techniques involve tricking a user into executing a payload through social engineering or other means to gain access to a system or data of interest."""",
     ""Explanation"": ""This event is generated when the payload is an Office macro, script or other binary application. The payload will only execute if the user enables macros.""
   }
 ][
     ""sid"": ""58615"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in the OS-WINDOWS Microsoft Windows Content-Disposition CLSID, which is a known technique used to execute arbitrary code on vulnerable systems."""",
     ""Explanation"": ""This rule detects an attacker attempting to exploit a vulnerability in a Microsoft Windows application's Content-Disposition CLSID, which can lead to remote code execution.""
 ][
         ""sid"": ""58615"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Hijack Execution Flow"",
         ""Quotes"": """"Hijack Execution Flow techniques involve manipulating the order or flow of execution to execute malicious code or gain control of the system. This rule detects attempts to exploit a vulnerability in Microsoft Windows Content-Disposition CLSID to escalate privileges by redirecting the flow of execution to arbitrary code. The attacker attempts to achieve this by sending a specially crafted HTTP request with an embedded CLSID that points to malicious code."""",
         ""Explanation"": ""This event is generated when Microsoft Windows Content-Disposition CLSID command attempt is detected.""
     ]","['T1189', 'T1203', 'T1110', 'T1189', 'T1190', 'T1203', 'T1189', 'T1204', 'T1199', 'T1204', 'T1189', 'T1203']",['T1203']
31289,"[
   {
     ""sid"": ""31289"",
     ""Technique ID"": ""T1005"",
     ""Technique name"": ""Data from Local System"",
     ""Quotes"": """"Data from Local System techniques involve collecting data from local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration. The rule matches traffic containing 'root:x:0:0:root:/root:/' which is a pattern associated with accessing the '/etc/passwd' file on a Unix system, indicating an attempt to gather local system data."""",
     ""Explanation"": ""Access to sensitive data on the file path""
   },
   {
     ""sid"": ""31289"",
     ""Technique ID"": ""T1074"",
     ""Technique name"": ""Data Staged"",
     ""Quotes"": """"Adversaries may stage collected data in a central location or directory prior to Exfiltration. The rule suggests an attempt to access the '/etc/passwd' file, which could be a precursor to staging data for exfiltration."""",
     ""Explanation"": ""The '/etc/passwd' file contains sensitive information and is a common target.""
   }
 ][
   {
     ""sid"": ""31289"",
     ""Technique ID"": ""T1005"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve moving data from a compromised system to an external location, which can include sensitive information like files, database records, or intellectual property. This rule detects an attempt to access the '/etc/passwd' file, which contains sensitive user and system account information, indicating a potential attempt at data exfiltration."""",
     ""Explanation"": """"/etc/passwd file access attempt""""
   }
 ][
   ""sid"": ""31289"",
   ""Technique ID"": ""T1114"",
   ""Technique Name"": ""File and Directory Discovery"",
   ""Quotes"": """"File and Directory Discovery techniques involve searching for and retrieving files or directories of interest from a target system. This rule detects unauthorized access to the '/etc/passwd' file, which contains hashed user passwords, indicating attempts to identify and compromise user accounts."""",
   ""Explanation"": ""This event is generated when the IDS detects an attempt to access a file or directory on which the IDS has been configured to raise an alert.""
 ][
   {
     ""sid"": ""31289"",
     ""Technique ID"": ""T1003"",
     ""Technique name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials from the operating system or process memory. The rule detects an attempt to access the '/etc/passwd' file, which contains hashed user credentials on Unix-based systems. Attackers may target this file to obtain user credentials for further exploitation."""",
     ""Explanation"": ""This rule would trigger an alert when an FTP, HTTP, IMAP, or POP3 server attempts to access the '/etc/passwd' file.""
   },
   {
     ""sid"": ""31289"",
     ""Technique ID"": ""T1006"",
     ""Technique name"": ""Data from Local System"",
     ""Quotes"": """"Data from Local System techniques involve obtaining data from the local system, such as files, environment variables, and process memory. The rule detects an attempt to access the '/etc/passwd' file, which contains sensitive system configuration data. Attackers may target this file to gather information about the system and its users."""",
     ""Explanation"": ""This rule would trigger an alert when an FTP, HTTP, IMAP, or POP3 server attempts to access the '/etc/passwd' file.""
   }
 ][
     {
         ""sid"": ""31289"",
         ""Technique ID"": ""T1084"",
         ""Technique name"": ""Data Extraction"",
         ""Quotes"": """"Data Extraction techniques involve extracting data from compromised systems for further analysis. The rule detects unauthorized access to the '/etc/passwd' file, which contains sensitive user information such as usernames, passwords, and group memberships. This information can be used by attackers to escalate privileges, compromise accounts, or perform other malicious activities."""",
         ""Explanation"": """"/etc/passwd is a common target for attackers as it contains sensitive user information that can be used to compromise accounts or escalate privileges..""
     }
 ][
     ""sid"": ""31289"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery technique involves searching through files and directories for certain pieces of information. This rule detects an attempt to access the file """"/etc/passwd"""", which contains a list of all user accounts and their associated privileges on a system. Attackers often target this file to obtain user credentials and other sensitive information."""",
     ""Explanation"": ""This event is generated when an attempt to access '/etc/passwd' is detected.""
 ][
         ""sid"": ""31289"",
         ""Technique ID"": ""T1114"",
         ""Technique name"": ""Email Collection"",
         ""Quotes"": """"Email Collection techniques involve targeting and collecting email messages from a victim to obtain sensitive information. This rule detects an unauthorized attempt to access the '/etc/passwd' file by using an HTTP GET request, which is a common method employed by attackers to gather user credentials and system information."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""31289"",
         ""Technique ID"": ""T1110"",
         ""Technique Name"": ""Data Extraction"",
         ""Quotes"": """"Data Extraction techniques involve obtaining data of interest from a system or network. This rule detects an attempt to retrieve the '/etc/passwd' file, which contains sensitive user information, over FTP, HTTP, IMAP, or POP3 protocols. Data Extraction techniques often involve extracting information from a system or network for reconnaissance or exfiltration purposes."""",
         ""Explanation"": ""This event is generated when an attempt to retrieve the '/etc/passwd' file is detected.""
     ][
   {
     ""sid"": ""31289"",
     ""Technique ID"": ""T1112"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching for and identifying files and directories of interest within a system or network. The rule is triggered when an attempt is made to access the '/etc/passwd' file, which contains sensitive user account information, from the internal network to an external destination. This indicates that an adversary may be attempting to gather information about user accounts for potential exploitation."""",
     ""Explanation"": ""This event generates when an attempt to access the file /etc/passwd is made.""
   },
   {
     ""sid"": ""31289"",
     ""Technique ID"": ""T1574"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve transmitting exfiltrated data through a command and control channel. The rule flags an attempt to exfiltrate sensitive information, such as the '/etc/passwd' file containing user account data, to an external destination. This suggests that an adversary may be using a command and control channel to transfer the stolen information out of the victim's network."""",
     ""Explanation"": ""This event generates when an attempt to access the file /etc/passwd is made.""
   }
 ][
         ""sid"": ""31289"",
         ""Technique ID"": ""T1006"",
         ""Technique name"": ""Data from Local System"",
         ""Quotes"": """"Data from Local System technique involves extracting information from local system resources, such as files or registry entries. The rule attempts to detect access to the '/etc/passwd' file, which contains sensitive user information, indicating an attempt to gather data from the local system."""",
         ""Explanation"": ""This event is generated when an attempt to access the '/etc/passwd' file is detected.""
     ][
     ""sid"": ""31289"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve listing the files and directories present under the root directory or current working directory. This rule matches traffic in which the '/etc/passwd' file is accessed, which provides a complete list of user accounts and their attributes on Unix-based systems. Monitoring access to critical files can help detect unauthorized enumeration attempts."""",
     ""Explanation"": ""This event is generated when file data is being transferred.""
 ]","['T1005', 'T1074', 'T1005', 'T1114', 'T1003', 'T1006', 'T1084', 'T1083', 'T1114', 'T1110', 'T1112', 'T1574', 'T1006', 'T1105']",['T1087']
57756,"[
         ""sid"": ""57756"",
         ""Technique ID"": ""T1581"",
         ""Technique name"": ""Domain Generation Algorithms"",
         ""Quotes"": """"Domain Generation Algorithms (DGAs) are used to generate domain names that can be used to communicate with Command and Control (C&C) servers or to redirect to malicious websites. This rule detects DNS traffic that follows the structure of a DGA, specifically, a Fast Flux DGA, which frequently changes C&C server IP addresses to evade detection."""",
         ""Explanation"": ""This event is generated when malware using fast flux techniques is attempting to connect to a DNS server by sending a DNS query with a specific pattern.""
     ][
     ""sid"": ""57756"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""DNS Tunneling"",
     ""Quotes"": """"DNS Tunneling techniques involve abusing the DNS protocol to establish covert communications channels. The rule specifically detects a Fast Flux DNS tunneling attempt, where attackers rapidly change their DNS records to evade detection and maintain persistent connections."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
 ][
   {
     ""sid"": ""57756"",
     ""Technique ID"": ""T1570"",
     ""Technique Name"": ""DNS Fast Flux Domain"",
     ""Quotes"": """"DNS Fast Flux Domain techniques involve leveraging multiple compromised hosts (known as fast flux networks, or flux networks) to rapidly redirect DNS requests to different IP addresses. This evasion technique can make it difficult to track and identify malicious domains by changing the IP addresses associated with a domain name frequently. The rule identifies DNS traffic with specific characteristics associated with fast flux networks, such as frequent changes in DNS records and use of multiple compromised hosts."""",
     ""Explanation"": ""This rule detects fast-flux DNS behavior, which is commonly used by malware to evade detection and analysis.""
   }
 ][
   {
     ""sid"": ""57756"",
     ""Technique ID"": ""T1579"",
     ""Technique name"": ""Domain Generation Algorithms"",
     ""Quotes"": """"Domain Generation Algorithms (DGAs) techniques involve using algorithms to generate domain names that are used for malicious purposes, such as phishing or malware distribution. This rule looks for DNS queries that match a pattern associated with a known DGA algorithm, which could indicate an attempt to establish communication with a malware command-and-control server."""",
     ""Explanation"": ""DNS query matching a Fast Flux Domain Generation Algorithm (DGA) pattern.""
   }
 ][
   {
     ""sid"": ""57756"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Exfiltration Over DNS"",
     ""Quotes"": """"Exfiltration Over DNS techniques involve using DNS requests and responses to exfiltrate data, often covert channels for C2 or exfiltration of sensitive information. This rule identifies suspicious DNS traffic with specific bit patterns and a long query, which can be a sign of data exfiltration attempts over DNS."""",
     ""Explanation"": ""This rule detects DNS Fast Flux-related activity, which is a technique to quickly change the IP addresses of malicious infrastructure to avoid detection and takedown.""
   }
 ][
         {
             ""sid"": ""19613"",
             ""Technique ID"": ""T1133"",
             ""Technique name"": ""External Remote Services"",
             ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. This rule detects an attempt to use a DNS fast-flux service to establish a connection to a malicious remote server. DNS fast-flux services are often used by attackers to dynamically change the IP addresses of their command and control servers to avoid detection."""",
             ""Explanation"": ""DNS fast flux is a technique used by malware to evade detection by changing the IP addresses of its command and control servers frequently.""
         },
         {
             ""sid"": ""57756"",
             ""Technique ID"": ""T1056"",
             ""Technique name"": ""Input Capture"",
             ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects an attempt to use a DNS fast-flux service to establish a connection to a malicious remote server. DNS fast-flux services are often used by attackers to dynamically change the IP addresses of their command and control servers to avoid detection."""",
             ""Explanation"": ""DNS fast flux is a technique used by malware to evade detection by changing the IP addresses of its command and control servers frequently.""
         }
     ][
   {
     ""sid"": ""57756"",
     ""Technique ID"": ""T1048"",
     ""Technique name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve stealing data by exfiltrating it over a different protocol than that of the existing command and control channel. This rule detects the use of DNS requests to exfiltrate data, which is a common method for adversaries to avoid detection and bypass network security controls."""",
     ""Explanation"": ""DNS is a common protocol used by malware to communicate with its C2 server.""
   }
 ][
   {
     ""sid"": ""57756"",
     ""Technique ID"": ""T1569"",
     ""Technique name"": ""System Services"",
     ""Quotes"": """"System Services techniques involve abusing system services or daemons to execute commands or programs. The rule identifies malicious activity related to DNS Fast Flux, a technique used by malware to evade detection and communication with command-and-control (C2) servers."""",
     ""Explanation"": ""This rule triggers when a DNS Fast Flux attempt is detected, which involves abusing DNS services to redirect traffic and evade detection.""
   }
 ][
     ""sid"": ""57756"",
     ""Technique ID"": ""T1572"",
     ""Technique name"": ""Domain Generation Algorithms"",
     ""Quotes"": """"Domain Generation Algorithms (DGAs) are techniques used by malware and other adversaries to generate a large number of domain names based on an algorithm. These domains may be used for various purposes, such as hosting malicious content, redirecting traffic, or evading detection."""",
     ""Explanation"": ""This rule triggers when a DNS request follows a pattern commonly used in Domain Generation Algorithms (DGA), indicating a potential malware-related activity.""
 ][
   {
     ""sid"": ""57756"",
     ""Technique ID"": ""T1574"",
     ""Technique name"": ""Fast Flux DNS"",
     ""Quotes"": """"Fast Flux DNS techniques involve rapidly changing the IP addresses associated with a domain, making it difficult to track the domain's true location and disrupt attempts to block or take down the domain."""",
     ""Explanation"": ""Fast Flux network that attempts to hide traffic by rapidly swapping DNS records (100s/sec) among botnet nodes.""
   }
 ][
         ""sid"": ""57756"",
         ""Technique ID"": ""T1557"",
         ""Technique name"": ""Modify DNS"",
         ""Quotes"": """"Modify DNS techniques involve altering or manipulating DNS settings to redirect traffic, hide infrastructure, or disrupt services. This rule detects a Fast Flux Domain Generation Algorithm (FF-DGA) attempt via DNS, which is a technique commonly used by malware to evade detection and redirect traffic to malicious servers."""",
         ""Explanation"": ""DNS Fast Flux is a malware technique that involves rapidly changing the IP address of a malicious domain name, primarily to avoid detection. The rule detects an attempt to generate a domain name using a FF-DGA, which typically involves multiple DNS queries with varying request parameters, such as randomizing the query parameters in the DNS request.""
     ]","['T1581', 'T1071', 'T1570', 'T1579', 'T1071', 'T1133', 'T1056', 'T1048', 'T1569', 'T1572', 'T1574', 'T1557']",['T1568']
18242,"[
         ""sid"": ""18242"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control, which could allow an attacker to gain remote code execution on the target system."""",
         ""Explanation"": ""This attack attempts to exploit a buffer overflow vulnerability in the WMI Administrator Tools Object Viewer ActiveX control. Successful exploitation can lead to remote code execution.""
     ][
   {
     ""sid"": ""18242"",
     ""Technique ID"": ""T1202"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve identifying and exploiting vulnerabilities in public-facing applications, such as web servers, web applications, and content management systems, to facilitate unauthorized access and execution of arbitrary code. This rule detects an attempted exploitation of a vulnerability in the Microsoft Windows Management Instrumentation (WMI) service's ActiveX control. Attackers could exploit the vulnerability to execute arbitrary code on vulnerable systems."""",
     ""Explanation"": ""This rule detects an attempt to call the 'AddContextRef' function of the Microsoft Windows Management Instrumentation (WMI) Administrator Tools Object Viewer ActiveX control, which could lead to arbitrary code execution.""
   }
 ][
     {
         ""sid"": ""18242"",
         ""Technique ID"": ""T1547"",
         ""Technique Name"": ""Enterprises Software Frameworks"",
         ""Quotes"": """"Enterprises Software Frameworks techniques seek to leverage legitimate enterprise software applications to deliver payloads, execute code, or otherwise achieve objectives"""",
         ""Explanation"": ""The rule indicates suspicious activity related to the use of ActiveX controls, which are often used in legitimate enterprise software.""
     },
     {
         ""sid"": ""18242"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code"""",
         ""Explanation"": ""The rule detects suspicious activity related to exploiting vulnerabilities in web applications.""
     },
     {
         ""sid"": ""18242"",
         ""Technique ID"": ""T1055"",
         ""Technique Name"": ""Injection"",
         ""Quotes"": """"Injection techniques involve inserting malicious code into otherwise legitimate processes or trusted content to gain unauthorized access or execute arbitrary code"""",
         ""Explanation"": ""The rule detects suspicious activity related to injecting malicious code into web applications.""
     }
 ][
   {
     ""sid"": ""18242"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""This rule detects an attempted exploitation of a vulnerability in the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control, which could allow an attacker to execute arbitrary code in the context of the user running the browser.""
   },
   {
     ""sid"": ""18242"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a victim machine by exploiting a vulnerability in a web browser or browser plugin in order to execute malicious code. This rule detects an attempt to exploit a vulnerability in the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control, which could allow an attacker to execute arbitrary code in the context of the user running the browser."""",
     ""Explanation"": ""This rule detects an attempted drive-by compromise by exploiting a vulnerability in the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control.""
   }
 ][
     ""sid"": ""18242"",
     ""Technique ID"": ""T1113"",
     ""Technique name"": ""Access Broker"",
     ""Quotes"": """"Access Broker techniques involve using a trusted service or software to bypass security controls and establish a command and control channel. ActiveX controls, such as the one referenced in the rule, can be abused to obtain a shell on the target system and establish a secure communication channel to the attacker's infrastructure."""",
     ""Explanation"": ""The rule detects ActiveX scripts being called to gather administrative privileges which can lead to further compromise of the system""
 ][
   {
     ""sid"": ""18242"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve targeting vulnerabilities in client applications to execute arbitrary code. This rule specifically targets an ActiveX vulnerability in Microsoft Windows WMI Administrator Tools Object Viewer, which can be exploited by attackers to execute malicious code on victim systems."""",
     ""Explanation"": ""This rule aims to detect exploitation attempts that target a vulnerability in the client-side ActiveX component of the Microsoft Windows WMI Administrator Tools Object Viewer. Such attempts can enable adversaries to execute arbitrary code on vulnerable systems.""
   }
 ][
   {
     ""sid"": ""18242"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""Accessibility Features"",
     ""Quotes"": """"Accessibility Features techniques involve leveraging accessibility features provided by the operating system or assistive technologies to bypass security controls or perform malicious actions. This rule detects exploitation of the Windows Management Instrumentation (WMI) system to execute arbitrary code, which attackers may use to bypass application whitelisting or other access control mechanisms."""",
     ""Explanation"": ""Modify registry to enable Microsoft .NET Framework Assistant for accessibility and run arbitrary commands or access files.""
   },
   {
     ""sid"": ""18242"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve tricking users into visiting a malicious website that exploits vulnerabilities in a user's browser or browser plugins to download and install malware. This rule specifically targets an exploit targeting the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control, which attackers may use to gain access to the victim's system through a drive-by download attack."""",
     ""Explanation"": ""Infects through drive-by-download exploits""
   }
 ][
   {
     ""sid"": ""18242"",
     ""Technique ID"": ""T1224"",
     ""Technique name"": ""ActiveX Control Execution"",
     ""Quotes"": """"Utilizing or abusing the ActiveX component to perform arbitrary actions, such as loading network resources or executing privileged code, on the targeted endpoint."""",
     ""Explanation"": ""The rule detects an attempt to access the AddContextRef function of the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control, which could allow an attacker to execute arbitrary code on the target system.""
   }
 ][
   {
     ""sid"": ""18242"",
     ""Technique ID"": ""T1208"",
     ""Technique Name"": ""Malicious Script"",
     ""Quotes"": """"In this rule, the pattern ""`AddContextRef`"" is being searched for, which is a function used by attackers to access COM objects and execute arbitrary code on a target system."""",
     ""Explanation"": ""This event is generated when a Microsoft Windows WMI Administrator Tools Object Viewer ActiveX function call is accessed.""
   }
 ][
   {
     ""sid"": ""18242"",
     ""Technique ID"": ""T1124"",
     ""Technique Name"": ""System Time Discovery"",
     ""Quotes"": """"System Time Discovery techniques involve gathering system time and/or time zone from a local or remote system. This rule detects an attempt to retrieve the system time through the Windows Management Instrumentation (WMI) service, specifically by accessing the 'AddContextRef' function in the 'Administrator Tools Object Viewer' ActiveX control. Attackers may use this technique to determine when an event occurred or to coordinate actions with remote systems."""",
     ""Explanation"": ""WMIC execution calling AddContextRef function, likely to gather timing data for the system.""
   }
 ][
   {
     ""sid"": ""18242"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Vulnerable Software"",
     ""Quotes"": """"Exploit Vulnerable Software techniques involve taking advantage of known vulnerabilities in unpatched software to execute arbitrary code or gain unauthorized access. In this case, the rule detects an attempt to exploit a vulnerability in the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control, which could allow an attacker to gain remote code execution."""",
     ""Explanation"": ""This event is triggered when the system detects an attempt to exploit a vulnerability in the Microsoft Windows WMI Administrator Tools Object Viewer ActiveX control.""
   }
 ]","['T1190', 'T1202', 'T1547', 'T1190', 'T1055', 'T1068', 'T1189', 'T1113', 'T1203', 'T1204', 'T1189', 'T1224', 'T1208', 'T1124', 'T1189']",['T1047']
41712,"[
     ""sid"": ""41712"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Create Account"",
     ""Quotes"": """"Adversaries may create an account to maintain access to victim systems"""",
     ""Explanation"": ""This rule detects an attempt by a Trojan (Houdini) to download a backdoor file named 'ChromeSetup.bat' using Microsoft BITS (Background Intelligent Transfer Service), which is a legitimate Windows component used for background file transfers.""
 ][
   {
     ""sid"": ""41712"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Create or Modify System Service"",
     ""Quotes"": ""Create or Modify System Service techniques involve creating or modifying system services to maintain persistence and execute malicious code on the system. The rule is triggered when an attempt is made to download the 'ChromeSetup.bat' file, which is suspicious because the User-Agent field indicates it is originating from Microsoft BITS (Background Intelligent Transfer Service), which is not typically used for downloading executable files. Attackers may use this technique to create or modify a system service to facilitate persistence and execute malicious code on the system."",
     ""Explanation"": ""Trojan attempts to download an executable file, likely to establish persistence on the system.""
   }
 ][
   {
     ""sid"": ""41712"",
     ""Technique ID"": ""T1197"",
     ""Technique Name"": ""File Download"",
     ""Quotes"": """"File Download techniques involve retrieving files from a remote system to a local system. This rule detects an attempt by the Win.Trojan.Houdini malware to download a file named 'ChromeSetup.bat' from an external IP address. Malware often uses file downloads as a mechanism to deliver additional malicious components or payloads to the compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""41712"",
     ""Technique ID"": ""T1027"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or encrypting files or information to avoid detection by security controls. The rule indicates that the downloaded file 'ChromeSetup.bat' may be obfuscated, as it uses a Microsoft BITS User-Agent header, which is a common technique used by malware to evade detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""41712"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve concealing malicious content or commands within files or other data to evade detection. This rule identifies an attempt to download a BAT file named 'ChromeSetup.bat' by malware known as 'Win.Trojan.Houdini', which is a common method used by attackers to execute malicious code after evading detection."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""41712"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring malicious tools or code into a system. This rule detects an attempt to download a BAT file named 'ChromeSetup.bat' by malware known as 'Win.Trojan.Houdini', which is a common method used by attackers to transfer malicious tools or code into a system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""41712"",
     ""Technique ID"": ""T1197"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring a tool, script, or other file into a compromised environment from an external source. The rule detects a malware (Win.Trojan.Houdini) attempting to download a backdoor file named 'ChromeSetup.bat' from an external server, which is a common method used by malware to establish persistence and control over a compromised system."""",
     ""Explanation"": ""This event is triggered when a backdoor is downloaded on the network, indicating a threat actor is attempting to establish a persistent presence on the network.""
   }
 ][
         ""sid"": ""41712"",
         ""Technique ID"": ""T1193"",
         ""Technique name"": ""Man-in-the-Middle Proxy"",
         ""Quotes"": """"Man-in-the-Middle Proxy technique involves manipulating web traffic by inserting an adversary controlled proxy between a client and a server, allowing the adversary to intercept and modify both plaintext and encrypted communications."""",
         ""Explanation"": ""This rule detects a threat actor attempting to install a backdoor on a target system using a man-in-the-middle technique, in this case, the threat actor is using Microsoft BITS to download a file.""
     ][
     ""sid"": ""41712"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve creating or modifying system processes to maintain persistence or compromise the system. The rule detects a malware infection (Win.Trojan.Houdini) attempting to download a file named ""ChromeSetup.bat"" using HTTP, which could be used to establish persistence or further compromise the system by leveraging the BITS service for communication."""",
     ""Explanation"": ""The activity monitored by this rule is a technique used by malware to download files from the Internet The malware may use the file to modify the system or to install additional malware.""
 ][
         ""sid"": ""41712"",
         ""Technique ID"": ""T1197"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve deliberately hiding the true purpose or intent of files or information in order to evade detection. This rule detects an attempt by a backdoor Trojan (Houdini) to download a file named 'ChromeSetup.bat' with the Microsoft BITS User-Agent, which is commonly seen in malware-related communication to disguise malicious activity."""",
         ""Explanation"": ""Malware was trying to download a file from an external source.""
     ][
   {
     ""sid"": ""41712"",
     ""Technique ID"": ""T1197"",
     ""Technique Name"": ""BITS Jobs"",
     ""Quotes"": """"BITS Jobs techniques involve using the Background Intelligent Transfer Service (BITS) for malicious purposes, such as executing malicious code, maintaining persistence, or exfiltrating data. The rule detects an attempt by the Win.Trojan.Houdini backdoor to download a file named 'ChromeSetup.bat' using BITS, which is a common technique used by malware to execute code or install additional payloads."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""41712"",
         ""Technique ID"": ""T1197"",
         ""Technique name"": ""Establish Command and Control"",
         ""Quotes"": """"Establish Command and Control techniques involve establishing communications with a remote command and control (C2) server to facilitate remote control and data exfiltration. This rule detects an attempt by the Win.Trojan.Houdini malware to download a backdoor file named ""ChromeSetup.bat"" from a remote server. The malware uses the User-Agent header to blend in with legitimate traffic from Microsoft BITS (Background Intelligent Transfer Service), which is a common technique used by malware to evade detection and establish covert communication with C2 servers."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""41712"",
         ""Technique ID"": ""T1197"",
         ""Technique name"": ""Custom Command and Control Protocol"",
         ""Quotes"": """"Custom Command and Control Protocol techniques involve using customized protocols for communication with compromised hosts instead of relying on standard protocols, to avoid detection and analysis. This rule detects an outbound connection from a compromised host to an external IP address using a non-standard port (443) and a custom protocol (UDP), which is an indication of a custom C2 protocol being used by malware."""",
         ""Explanation"": ""This event is generated when malware is attempting to download a file from a remote host.""
     ]","['T1197', 'T1197', 'T1197', 'T1027', 'T1197', 'T1105', 'T1197', 'T1193', 'T1197', 'T1197', 'T1197', 'T1197', 'T1197']",['T1197']
42255,"[
   {
     ""sid"": ""42255"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""RDP"",
     ""Quotes"": """"RDP techniques leverage the Remote Desktop Protocol (RDP) to establish remote connections to target systems. This rule detects an empty RDP cookie negotiation attempt, which is a common method used by adversaries during reconnaissance and lateral movement to maintain persistent access to target systems."""",
     ""Explanation"": ""This event is generated when a remote desktop protocol (RDP) empty cookie negotiation attempt is detected. An RDP empty cookie negotiation attempt is a reconnaissance or lateral movement tactic used by attackers to maintain persistent access to target systems.""
   }
 ][
   {
     ""sid"": ""42255"",
     ""Technique ID"": ""T1049"",
     ""Technique name"": ""RDP"",
     ""Quotes"": """"RDP (Remote Desktop Protocol) techniques involve using the Remote Desktop Protocol to gain remote access to a victim system. This rule detects an empty Remote Desktop Protocol (RDP) cookie negotiation attempt, which is a common method attackers use to target RDP servers and gain unauthorized access to systems."""",
     ""Explanation"": ""This event is generated when activity relating to SMB Session Setup is detected.""
   }
 ][
   {
     ""sid"": ""42255"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploitation for Credential Access"",
     ""Quotes"": """"Exploitation for Credential Access techniques involve gaining unauthorized access to systems by exploiting software vulnerabilities in applications or services. This rule detects an attempt to exploit a Remote Desktop Protocol (RDP) vulnerability in Microsoft Windows. By sending specially crafted packets, adversaries can exploit the vulnerability and gain unauthorized access to the victim's system."""",
     ""Explanation"": ""The event with the signature \""OS-WINDOWS Microsoft Windows empty RDP cookie negotiation attempt\"" is generated when the server receives a RDP connection attempt with an empty cookie.""
   },
   {
     ""sid"": ""42255"",
     ""Technique ID"": ""T1078"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve using legitimate user credentials to access systems, networks, or resources without authorization. This rule detects an attempt to access the RDP service using empty credentials, which can be indicative of an attacker attempting to brute force their way into the system or gain access using stolen or compromised credentials."""",
     ""Explanation"": ""The event with the signature \""OS-WINDOWS Microsoft Windows empty RDP cookie negotiation attempt\"" is generated when the server receives a RDP connection attempt with an empty cookie.""
   }
 ][
         ""sid"": ""42255"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""RDP"",
         ""Quotes"": """"Remote Desktop Protocol (RDP) techniques involve using the Microsoft Remote Desktop Protocol (RDP) to connect to remote systems and execute commands or transfer files. This rule detects an attempt to negotiate an empty RDP cookie, which is a common method attackers use to compromise RDP servers by exploiting vulnerabilities in the protocol."""",
         ""Explanation"": ""This event is generated when a potential RDP brute-force attempt is detected. ""
     ][
         ""sid"": ""42255"",
         ""Technique ID"": ""T1084"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute force attacks involve repeatedly attempting to guess credentials or passwords until the correct combination is discovered. This rule detects a blind brute force attack attempt on a Remote Desktop Protocol (RDP) server, where the attacker repeatedly tries different possible password combinations to gain unauthorized access."""",
         ""Explanation"": ""This event is generated when a remote desktop protocol brute force attack is detected.""
     ][
     {
         ""sid"": ""42255"",
         ""Technique ID"": ""T1078"",
         ""Technique Name"": ""Valid Accounts"",
         ""Quotes"": """"Valid Accounts techniques involve using legitimate user credentials to access and control systems, networks, and applications. This rule detects attempts to establish an RDP connection with an empty RDP cookie, which is a common method used by attackers to bypass RDP authentication and gain unauthorized access to systems."""",
         ""Explanation"": ""The rule detects an empty RDP cookie negotiation attempt, indicating that an attacker is attempting to brute-force RDP credentials to gain access to the system.""
     }
 ][
   {
     ""sid"": ""42255"",
     ""Technique ID"": ""T1588"",
     ""Technique Name"": ""Remote Desktop Protocol (RDP)"",
     ""Quotes"": """"Remote Desktop Protocol (RDP) is used by adversaries to gain remote access to a victim's machine, allowing them to interact with the system as if they were physically present. This rule specifically detects an attempt to negotiate an empty RDP cookie, which is commonly leveraged by adversaries to bypass authentication mechanisms and gain unauthorized access to RDP services."""",
     ""Explanation"": ""This event triggers an alert when a remote desktop protocol (RDP) connection is used to access the system.""
   }
 ][
         ""sid"": ""42255"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Network Sniffing"",
         ""Quotes"": """"Network Sniffing technique involves monitoring and capturing network traffic, including authentication credentials. This rule detects an empty Remote Desktop Protocol (RDP) cookie negotiation attempt, which is a common method used by attackers to sniff network traffic and obtain cleartext credentials."""",
         ""Explanation"": ""This rule is used to detect attempts to exploit a vulnerability in Microsoft Windows that allows remote attackers to execute arbitrary code via an empty RDP cookie negotiation request.""
     ][
         ""sid"": ""42255"",
         ""Technique ID"": ""T1060"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute Force techniques involve attempting to guess login credentials by repeatedly trying different combinations of usernames and passwords. This rule detects a series of failed login attempts on Remote Desktop Protocol (RDP), which is a common method used for brute-force attacks. The rule triggers when there is an attempt to negotiate an empty RDP cookie, which is often part of a brute-force attack to identify valid user accounts on the target system."""",
         ""Explanation"": ""RDP brute force attack detection through empty cookie negotiation.""
     ][
         ""sid"": ""42255"",
         ""Technique ID"": ""T1078"",
         ""Technique name"": ""Valid Accounts"",
         ""Quotes"": """"Valid Accounts techniques involve abusing legitimate user credentials to gain access to systems or resources. This rule is triggered when an empty RDP cookie negotiation attempt is detected, which is a common technique used by attackers to bypass RDP authentication and gain unauthorized access to systems."""",
         ""Explanation"": ""RDP is a protocol that allows remote access to another computer. An attacker could use a tool such as ""crack"" to brute-force common weak passwords or dictionary words against the RDP port.""
     ][
         ""sid"": ""42255"",
         ""Technique ID"": ""T1095"",
         ""Technique name"": ""Non-Application Layer Protocol"",
         ""Quotes"": """"Non-Application Layer Protocol techniques involve using OSI non-application layer protocols for communication between hosts and C2 servers or among infected hosts within a network. This rule detects an attempt to exploit an empty RDP cookie vulnerability, where attackers leverage a non-standard RDP protocol negotiation to gain unauthorized access to the system."""",
         ""Explanation"": ""The event describes an attempt to connect to Microsoft Windows Remote Desktop protocol (RDP) on TCP port 3389 from an external network using an empty Remote Desktop Protocol (RDP) cookie during negotiation, which is a known technique used to exploit vulnerabilities in RDP.""
     ]","['T1071', 'T1049', 'T1210', 'T1078', 'T1071', 'T1084', 'T1078', 'T1588', 'T1110', 'T1060', 'T1078', 'T1095']",['T1482']
50517,"[
     {
         ""sid"": ""50517"",
         ""Technique ID"": ""T1541"",
         ""Technique Name"": ""Establish Network Connection"",
         ""Quotes"": """"Establish Network Connection techniques involve creating network connections to target systems. This rule detects attempts to establish a connection to a host using an undocumented Server Message Block (SMB) dialect, which is a common method used by attackers to evade detection and gain unauthorized access to target systems."""",
         ""Explanation"": ""Establishing a network connection to a target system is a fundamental step in many attacks, allowing the adversary to communicate with the system and potentially gain access.""
     }
 ][
   {
     ""sid"": ""50517"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""SMB Relay"",
     ""Quotes"": """"Server Message Block (SMB) Relay techniques involve abusing the SMB protocol to forward authentication requests to other systems and use their responses to facilitate unauthorized access. This rule specifically detects an undocumented SMB dialect request, which could be part of an SMB relay attack."""",
     ""Explanation"": ""This rule detects inbound SMB requests that are flagged as potential indicators of compromise, specifically looking for undocumented dialect requests that could be used as part of SMB relay attacks.""
   },
   {
     ""sid"": ""50517"",
     ""Technique ID"": ""T1198"",
     ""Technique Name"": ""SMBv2 Exploitation"",
     ""Quotes"": """"SMBv2 Exploitation techniques involve exploiting vulnerabilities in the SMBv2 protocol to gain unauthorized access to remote systems. While the rule does not explicitly mention SMBv2, it focuses on detecting specific SMB traffic patterns that could be indicative of an SMBv2 exploit attempt."""",
     ""Explanation"": ""This rule looks for undocumented SMB dialect requests which can be part of both, SMB relay and SMBv2 exploitation. Therefore it is possible that the exploit targets a SMBv2 vulnerability.""
   }
 ][
   {
     ""sid"": ""50517"",
     ""Technique ID"": ""T1043"",
     ""Technique Name"": ""Internal Spearphishing"",
     ""Quotes"": """"Internal Spearphishing techniques involve targeting legitimate internal users to obtain sensitive information, such as credentials or system access. This rule detects an attempt to exploit a vulnerability in Microsoft's SMB protocol, which could allow attackers to gain unauthorized access to a system and launch internal spearphishing attacks."""",
     ""Explanation"": ""Privilege escalation and lateral movement using the SMB protocol.""
   }
 ][
   {
     ""sid"": ""50517"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted SMB dialect negotiation request, which is a common method attackers use to exploit vulnerabilities in SMB servers."""",
     ""Explanation"": ""This event is generated when a dialect negotiation is attempted on an SMB server.""
   },
   {
     ""sid"": ""50517"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve accessing a remote system from an external network using a public network connection. SMB is a common protocol used for file and print sharing over a network, and attackers often use it to gain access to remote systems."""",
     ""Explanation"": ""This event is generated when an external system attempts to establish an SMB connection.""
   }
 ][
   {
     ""sid"": ""33606"",
     ""Technique ID"": ""T1484"",
     ""Technique name"": ""Uncommon Tactics"",
     ""Quotes"": """"Uncommon Tactics techniques involve employing methods and tools that are less commonly used by adversaries to evade detection and analysis. This rule detects suspicious activity involving a request for an undocumented SMB dialect, which is not commonly seen in legitimate traffic and could indicate an attempt to exploit a vulnerability or gain unauthorized access."""",
     ""Explanation"": ""This pattern is generated when specific conditions are met in the network, which may indicate a potential compromise.""
   }
 ][
         ""sid"": ""50517"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Denial of Service"",
         ""Quotes"": """"Network Denial of Service techniques involve disrupting the normal operation of a network resource by flooding it with traffic or otherwise preventing it from functioning as intended. The rule detects an undocumented SMB dialect request, which is a common method attackers use to overwhelm a target system with excessive network traffic, causing a denial of service."""",
         ""Explanation"": ""The rule detects network traffic that is consistent with an attempt to exploit a denial of service vulnerability in Microsoft Server Service.""
     ][
     ""sid"": ""50517"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Share Discovery"",
     ""Quotes"": """"Network Share Discovery techniques involve performing reconnaissance on a network to identify and enumerate shared network resources, such as file servers and shared folders, which can be used to laterally move within a network."""",
     ""Explanation"": ""This event is generated when an undocumented SMB dialect request is detected, often used by attackers to identify and enumerate shared network resources.""
 ][
   {
     ""sid"": ""50517"",
     ""Technique ID"": ""T1218"",
     ""Technique Name"": ""System Binary Proxy Execution"",
     ""Quotes"": """"System Binary Proxy Execution involves exploiting flaws in legitimate software to bypass security controls and execute malicious code. This rule identifies an undocumented SMB dialect request, which could be used in conjunction with legitimate SMB tools to evade detection and execute commands on compromised systems."""",
     ""Explanation"": ""This rule is triggered when an undocumented SMB dialect request is detected. Attackers may use this technique to bypass security controls and execute malicious code on compromised systems.""
   }
 ][
     ""sid"": ""50517"",
     ""Technique ID"": ""T1098"",
     ""Technique name"": ""Account Manipulation"",
     ""Quotes"": """"Account Manipulation techniques involve modifying or manipulating accounts to maintain or elevate access to victim systems. The rule flags an undocumented SMB dialect request attempt, which attackers may use to exploit vulnerabilities in the SMB protocol and manipulate accounts to gain unauthorized access to target systems."""",
     ""Explanation"": ""The rule can detect a potential attempt to manipulate accounts by exploiting an undocumented SMB dialect.""
 ][
   {
     ""sid"": ""50517"",
     ""Technique ID"": ""T1096"",
     ""Technique name"": ""Network Share Discovery"",
     ""Quotes"": """"Network Share Discovery techniques involve detecting and enumerating network shares and resources on a network to identify potential targets for exploitation. This rule detects an SMB request using an undocumented dialect, which could be an attempt to discover and exploit network shares."""",
     ""Explanation"": ""SMB request with an undocumented dialect may indicate reconnaissance or an attempt to exploit vulnerabilities in SMB implementations.""
   },
   {
     ""sid"": ""50517"",
     ""Technique ID"": ""T1135"",
     ""Technique name"": ""Service Scanning"",
     ""Quotes"": """"Service Scanning techniques involve scanning systems and services to identify potential vulnerabilities or exploitable weaknesses. This rule detects SMB traffic that appears to be scanning for vulnerabilities or open ports."""",
     ""Explanation"": ""Scanning for open ports or vulnerabilities in SMB services.""
   }
 ][
         ""sid"": ""50517"",
         ""Technique ID"": ""T1550"",
         ""Technique name"": ""SMB Relay"",
         ""Quotes"": """"SMB Relay techniques involve abusing the SMB protocol to relay authentication requests to other systems, enabling unauthorized access or the execution of malicious code. This rule identifies attempts to exploit a vulnerability in the SMB protocol, specifically targeting the Cairo dialect, which could allow attackers to perform relay attacks."""",
         ""Explanation"": ""NetBIOS Session Service message, SMBv2 dialect, undocumented request""
     ]","['T1541', 'T1189', 'T1198', 'T1043', 'T1190', 'T1133', 'T1484', 'T1046', 'T1046', 'T1218', 'T1098', 'T1096', 'T1135', 'T1550']",['T1046']
895,"[][
   {
     ""sid"": ""895"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted redirect access to a specific URI ('/redirect') on the server-side, which could be an attempt to exploit a vulnerability in the web application or to perform reconnaissance."""",
     ""Explanation"": ""The rule is looking for traffic to a specific URI, this could be trying to exploit a vulnerability within the application.""
   }
 ][
   {
     ""sid"": ""895"",
     ""Technique ID"": ""T1498"",
     ""Technique name"": ""Web Application Fingerprinting"",
     ""Quotes"": """"Web Application Fingerprinting techniques involve identifying technologies and characteristics of web applications to gain a deeper understanding of the environment."""",
     ""Explanation"": ""This rule detects an attempt to fingerprint a web application by accessing the '/redirect' URI, which is a common technique used to gather information about the web server and its configuration.""
   },
   {
     ""sid"": ""895"",
     ""Technique ID"": ""T1135"",
     ""Technique name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve capturing and examining network traffic to obtain information about hosts and network activity."""",
     ""Explanation"": ""This rule can also detect network sniffing attempts, as it monitors HTTP traffic and looks for suspicious activity, such as attempts to access sensitive information or exploit vulnerabilities.""
   }
 ][
   {
     ""sid"": ""895"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Web application attacks often involve exploiting vulnerabilities in web servers, web frameworks, and application plugins."""",
     ""Explanation"": ""This rule detects access to a web page that is often used for redirecting users to other websites.""
   },
   {
     ""sid"": ""895"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve actively probing a network to gather information about available hosts and services. Attackers use network scanning to identify potential targets for attack and to gather information that can be used to exploit vulnerabilities."""",
     ""Explanation"": ""This rule detects an attempt to access a specific web page that is often used for scanning web servers.""
   }
 ][
   {
     ""sid"": ""895"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempt to exploit a redirect vulnerability in a web application by accessing the ""/redirect"" URI, which could allow an attacker to redirect users to malicious websites or steal sensitive information."""",
     ""Explanation"": ""An attacker could use this vulnerability to redirect victims to a website under their control and steal sensitive information, such as login credentials or financial data.""
   }
 ][
   {
     ""sid"": ""895"",
     ""Technique ID"": ""T1018"",
     ""Technique name"": ""Remote System Discovery"",
     ""Quotes"": ""Remote System Discovery techniques involve gathering information about network systems and hosts to identify targets for exploitation or compromise."""""",
     ""Explanation"": """"This rule detects reconnaissance attempts against web servers by trying to access the ""/redirect"" URI. Attackers often use these techniques to probe for vulnerabilities or sensitive information.""
   }
 ][
     ""sid"": ""895"",
     ""Technique ID"": ""T1621"",
     ""Technique name"": ""Redirect"",
     ""Quotes"": """"Redirect techniques involve leveraging specified URIs, URLs, or domains in attempts to redirect web traffic. This rule detects attempts to access specific URI paths (i.e., '/redirect') and redirect web traffic."""",
     ""Explanation"": ""The rule is looking for a specific URI path that is often used for open redirection attacks.""
 ][
   {
     ""sid"": ""895"",
     ""Technique ID"": ""T1040"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve probing a network to identify open ports, services, or hosts that may be vulnerable to attack. This rule specifically detects reconnaissance attempts to identify web servers that allow for redirection, which is a common way to detect the presence of web applications or services."""",
     ""Explanation"": ""This rule triggers when an attempt to access the ""/redirect"" URI is detected, which is a common technique used by attackers to identify web servers that support redirects.""
   }
 ][
   {
     ""sid"": ""895"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule matches attempts to access a redirect URI, which could indicate an attacker attempting to exploit a misconfiguration or vulnerability in the web application to redirect users to a malicious website."",
     ""Explanation"": ""Web server access rule for identification of malicious redirection attempts""
   },
   {
     ""sid"": ""895"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Sniffing"",
     ""Quotes"": ""Network Sniffing techniques involve monitoring and capturing network traffic to obtain sensitive information such as passwords, credentials, or other valuable data. This rule matches attempts to access a redirect URI, which could indicate an attacker attempting to sniff network traffic to capture sensitive information."",
     ""Explanation"": ""The rule is an attempt to sniff web server traffic accessing redirect URI's""
   }
 ][
     {
         ""sid"": ""895"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted exploitation of a vulnerability in a web application by accessing a ""/redirect"" URI, which could lead to unauthorized access or execution of malicious code."""",
         ""Explanation"": ""This rule looks for attempts to exploit a vulnerability in a web application by accessing a redirect URI, which could lead to unauthorized access or execution of malicious code.""
     }
 ][
   {
     ""sid"": ""895"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a web application through a 'redirect' URI, which is a common method used by attackers to bypass access controls and gain unauthorized access to internal resources."""",
     ""Explanation"": ""This rule detects malicious attempts to exploit a web server using a redirect.""
   }
 ]","['T1190', 'T1498', 'T1135', 'T1190', 'T1040', 'T1190', 'T1018', 'T1621', 'T1040', 'T1190', 'T1046', 'T1190', 'T1190']",['T1154']
61893,"[
   {
     ""sid"": ""61893"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve using a command and control channel to exfiltrate data from a victim system. The rule detects an exfiltration attempt of the ntds.dit file, which contains sensitive user and system information, over an established TCP connection. Attackers often exfiltrate data over command and control channels to maintain persistence and control over the victim system."""",
     ""Explanation"": ""The alert is related to the detection of exfiltration of sensitive data (ntds.dit file) over a command and control channel.""
   },
   {
     ""sid"": ""61893"",
     ""Technique ID"": ""T1020"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve moving data from a victim system to a location controlled by an adversary. The rule detects an exfiltration attempt of the ntds.dit file, which contains sensitive user and system information. Attackers often exfiltrate data to gain access to valuable information or to maintain persistence on the victim system."""",
     ""Explanation"": ""The alert is related to the detection of exfiltration of sensitive data (ntds.dit file) from the victim system.""
   }
 ][
     ""sid"": ""61893"",
     ""Technique ID"": ""T1528"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve moving data from a compromised system to an external location. This rule alerts on the exfiltration of ntds.dit data, which contains sensitive information about domain users and groups in an Active Directory environment. Attackers often target this data to gain access to privileged accounts or to compromise the entire domain."""",
     ""Explanation"": """"This event is generated when an attempt to exfiltrate data from a compromised system is detected.""""
 ][
   {
     ""sid"": ""61893"",
     ""Technique ID"": ""T1074"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring data from a compromised system to an external location. The rule, which specifically mentions the exfiltration of Microsoft's ntds.dit file, indicates that an unauthorized attempt is being made to extract sensitive data from the compromised system via established file transfer."""",
     ""Explanation"": ""The rule matches Microsoft Windows ntds.dit file exfiltration attempts.""
   }
 ][
   {
     ""sid"": ""61893"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve moving data from a system to an external location. The rule detects an attempt to exfiltrate data from an ntds.dit file, which contains sensitive Active Directory information. Exfiltrating this data would allow an attacker to compromise the Active Directory and gain control over the network."""",
     ""Explanation"": ""The rule is designed to detect malicious attempts to exfiltrate sensitive data by detecting traffic exfiltrating files associated with Active Directory.""
   }
 ][
   {
     ""sid"": ""61893"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve using pre-established covert communication channels to exfiltrate data from a victim environment. The rule specifically mentions the extraction of a 'ntds.dit' file, which is typically associated with Active Directory databases. Adversaries often try to steal sensitive information from compromised systems through such covert channels."""",
     ""Explanation"": ""This rule detects attempts to exfiltrate an ntds.dit file, which could contain sensitive information such as user credentials.""
   },
   {
     ""sid"": ""61893"",
     ""Technique ID"": ""T1567"",
     ""Technique Name"": ""Exfiltration Over Other Network Medium"",
     ""Quotes"": """"Exfiltration Over Other Network Medium techniques involve using non-standard communication channels for exfiltration. In this case, the IDS rule is looking for the exfiltration of data via an ESE (Extensible Storage Engine) channel, which is commonly used by Microsoft Exchange Server and other Microsoft applications. Adversaries may use this technique to exfiltrate data without being detected by standard security measures."""",
     ""Explanation"": ""This rule detects attempts to exfiltrate data over an ESE channel, which could be used to exfiltrate sensitive information.""
   }
 ][
   {
     ""sid"": ""61893"",
     ""Technique ID"": ""T1211"",
     ""Technique name"": ""Exploitation for Defense Evasion"",
     ""Quotes"": """"Exploitation for Defense Evasion techniques involve exploiting vulnerabilities in security software or controls to evade detection or analysis. This rule detects an attempt to exfiltrate the Windows NTDS.DIT file, which contains sensitive Active Directory information. Attackers may exploit a vulnerability in the file system or use techniques like token manipulation to bypass security controls and exfiltrate this file."""",
     ""Explanation"": ""This event is generated when a potential attempt to exploit a vulnerability in the file system or use techniques like token manipulation to bypass security controls and exfiltrate the Windows NTDS.DIT file, which contains sensitive Active Directory information.""
   }
 ][
   {
     ""sid"": ""61893"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": """"Exfiltration Over Alternative Protocol techniques involve exfiltrating data through a non-standard or uncommon protocol or port. This rule detects the exfiltration of a Microsoft Windows 'ntds.dit' file, which contains hashed user credentials, over an SMB connection. SMB is not typically used for data exfiltration, making this behavior anomalous and potentially indicative of malicious intent."""",
     ""Explanation"": ""This event is generated when data exfiltration is detected.""
   }
 ][
         ""sid"": ""61893"",
         ""Technique ID"": ""T1005"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve stealing or moving data from a victim network to an external location. The rule looks for exfiltration attempts of the 'ntds.dit' file, which is a critical Active Directory database file containing sensitive information like user accounts and passwords. By obtaining this file, an attacker could gain unauthorized access to the Active Directory and compromise the entire network."""",
         ""Explanation"": ""This event is generated when an attempt to exfiltrate data from a victim network is detected.""
     ][
   {
     ""sid"": ""61893"",
     ""Technique ID"": ""T1048"",
     ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
     ""Quotes"": """"Exfiltration Over Command and Control Channel involves adversaries exfiltrating data over previously established command and control channels, such as those created during Command and Scripting techniques. In this rule, the exfiltration of the 'ntds.dit' file, which contains sensitive Active Directory data, is detected. Attackers often target this file to obtain user credentials and other valuable information."""",
     ""Explanation"": ""This rule detects the exfiltration of the ntds.dit file over a command and control channel. The ntds.dit file is a critical Active Directory file that contains sensitive information such as user credentials and group memberships. The exfiltration of this file could allow an attacker to compromise the entire Active Directory infrastructure.""
   }
 ][
   {
     ""Sid"": ""61893"",
     ""Technique ID"": ""T1533"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve stealing data from a victim network, such as exfiltrating sensitive files or database records. This rule detects the exfiltration of the 'ntds.dit' file, which contains hashed passwords and other sensitive information, indicating an attempt to compromise Active Directory."""",
     ""Explanation"": ""The IDS rule is designed to detect exfiltration attempts of ntds.dit file, which is a crucial file in Active Directory that contains hashed passwords and other sensitive information. Exfiltration of this file can lead to credential compromise and further attacks on the network.""
   }
 ][
   {
     ""sid"": ""61893"",
     ""Technique ID"": ""T1049"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve moving data off of a network or system without authorization. This rule detects exfiltration attempts by monitoring for the presence of the Microsoft Windows ntds.dit file, which contains Active Directory user account information, in network traffic. Unauthorized exfiltration of this file could lead to sensitive user data being compromised."""",
     ""Explanation"": ""The rule triggers when there is an attempt to exfiltrate the ntds.dit file, which contains sensitive data such as user account information and passwords.""
   }
 ]","['T1041', 'T1020', 'T1528', 'T1074', 'T1048', 'T1048', 'T1567', 'T1211', 'T1048', 'T1005', 'T1048', 'T1533', 'T1049']",['T1003']
20618,"[
   {
     ""sid"": ""20618"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials from compromised systems to facilitate persistence and access to resources. This rule detects an attempt to exploit a vulnerability in Sage SalesLogix to extract database credentials. An attacker could leverage this technique to gain access to sensitive data and compromise the system."""",
     ""Explanation"": ""This rule triggers when an attempt is made to exploit a vulnerability in Sage SalesLogix to extract database credentials.""
   }
 ][
   {
     ""sid"": ""20618"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials or authentication information from a system or application without authorization. This rule detects an attempt to exploit a vulnerability in Sage SalesLogix to obtain database credentials, which is a common method attackers use to gain access to sensitive data."""",
     ""Explanation"": """"Sage SalesLogix versions 7.5.1 and prior are vulnerable to a remote command execution vulnerability that could allow an unauthenticated, remote attacker to gain access to the targeted system.""
   }
 ][
     {
         ""sid"": ""20618"",
         ""Technique ID"": ""T1553"",
         ""Technique name"": ""Valid Accounts"",
         ""Quotes"": """"Valid Accounts techniques involve using compromised credentials or legitimate accounts to gain access to systems or data."""",
         ""Explanation"": ""The rule matches a Sage SalesLogix database credential disclosure attempt by monitoring traffic for specific byte patterns associated with the exploit.""
     },
     {
         ""sid"": ""20618"",
         ""Technique ID"": ""T1098"",
         ""Technique name"": ""SQL Injection"",
         ""Quotes"": """"SQL Injection techniques involve exploiting SQL vulnerabilities to execute arbitrary SQL queries and gain unauthorized access to data."""",
         ""Explanation"": ""The rule specifically targets an attempt to exploit a SQL injection vulnerability in the Sage SalesLogix database.""
     }
 ][
   {
     ""sid"": ""20618"",
     ""Technique ID"": ""T1555"",
     ""Technique name"": ""Credentials in Files"",
     ""Quotes"": """"Credential exfiltration often includes searching local configuration files for credentials to access a system or its associated applications. The rule description mentions 'database credential disclosure', suggesting that the rule detects attempts to access credentials stored in configuration files."""",
     ""Explanation"": ""This rule detects an attempt to exploit a remote host using the Sage SalesLogix database credential disclosure vulnerability.""
   },
   {
     ""sid"": ""20618"",
     ""Technique ID"": ""T1003"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Techniques such as Exploitation for Client Execution typically involve exploiting vulnerabilities in client-side software or applications to execute arbitrary code or gain unauthorized access to the system."""",
     ""Explanation"": ""This rule detects an attempt to exploit a remote host using the Sage SalesLogix database credential disclosure vulnerability.""
   }
 ][
   {
     ""sid"": ""20618"",
     ""Technique ID"": ""T1609"",
     ""Technique name"": ""Discover Database Configuration"",
     ""Quotes"": """"Discover Database Configuration techniques involve identifying and analyzing the configuration of databases to gain insights into the database structure, schema, and data. In this case, the rule detects an attempt to connect to a Sage SalesLogix database, suggesting that an adversary is attempting to gather information about the database in order to identify potential vulnerabilities or exploit it."""",
     ""Explanation"": ""This alert is generated when an attacker attempts to discover the configuration details of a Sage SalesLogix database, potentially to exploit vulnerabilities or extract sensitive information.""
   },
   {
     ""sid"": ""20618"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques involve extracting credentials, such as user passwords or authentication tokens, from a system or device. The rule includes a content match for 'GetConnection', which is a method used to establish a connection to a database. An adversary may attempt to connect to the database using default credentials or by exploiting a known vulnerability to dump credentials from the database."""",
     ""Explanation"": ""The rule detects an attempt to establish a connection to a database, which could be indicative of credential dumping or other malicious activities.""
   }
 ][
     {
         ""sid"": ""20618"",
         ""Technique ID"": ""T1222"",
         ""Technique Name"": ""File and Directory Permissions Modification"",
         ""Quotes"": """"File and Directory Permissions Modification techniques involve modifying file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. This rule detects an attempt to exploit a vulnerability in Sage SalesLogix, which could allow an attacker to obtain database credentials. The exploitation of this vulnerability involves modifying file permissions, making it relevant to this technique."""",
         ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
     }
 ][
     ""sid"": ""20618"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Credential Dumping"",
     ""Quotes"": """"Credential Dumping techniques include extracting credentials from memory or disk in a cleartext or obfuscated format. The rule indicates an attempted credential disclosure attempt involving Sage SalesLogix, which suggests that the adversary is trying to extract credentials to compromise the database."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a remote vulnerability is detected.""
 }[
   {
     ""sid"": ""20618"",
     ""Technique ID"": ""T1520"",
     ""Technique name"": ""Steal Web Session Cookie"",
     ""Quotes"": """"Steal Web Session Cookie techniques involve stealing authentication cookies from web applications or services to gain access to user accounts and bypass authentication. This rule detects an attempt to steal credentials from a Sage SalesLogix database by exploiting a vulnerability in the 'GetConnection' function. Attackers can exploit this vulnerability to obtain database credentials, which can be used to access and steal sensitive information."""",
     ""Explanation"": ""Detect possible exploitation of Sage SalesLogix Remote Code Execution Vulnerability in Net Connect (101057).""
   }
 ][
   {
     ""sid"": ""98537"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Application Layer Protocol"",
     ""Quotes"": """"Accessing remote systems via overlying Layer 7 protocols, such as HTTP or SMB, to evade detection or network filtering mechanisms."""",
     ""Explanation"": ""The rule triggers on traffic over port 1707 (SalesLogix application port) and detects an attempt to access a database using the 'GetConnection' command, which is related to database credential disclosure.""
   },
   {
     ""sid"": ""732091"",
     ""Technique ID"": ""T1071"",
     ""Technique Name"": ""Application Layer Protocol"",
     ""Quotes"": """"Accessing remote systems via overlying Layer 7 protocols, such as HTTP or SMB, to evade detection or network filtering mechanisms."""",
     ""Explanation"": ""The rule triggers on traffic over port 1707 (SalesLogix application port) and detects an attempt to access a database using the 'GetConnection' command, which is related to database credential disclosure.""
   }
 ][
   {
     ""sid"": ""20618"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Credential Access"",
     ""Quotes"": """"Credential Access techniques involve obtaining or stealing credentials, such as usernames and passwords, to authenticate to systems or applications"""",
     ""Explanation"": ""This event is generated when an attempt is made to access sensitive information without proper authorization. The rule looks for a specific pattern in the traffic that is indicative of an attempt to extract credentials from a Sage SalesLogix database.""
   }
 ][
   {
     ""sid"": ""20618"",
     ""Technique ID"": ""T1007"",
     ""Technique name"": ""Credential Harvesting"",
     ""Quotes"": """"Credential Harvesting techniques involve collecting authentication information, such as usernames and passwords, from a variety of sources and using them for unauthorized access. This rule detects an attempt to extract database credentials from the Sage SalesLogix application by sending malicious SQL queries, which is a common method used to harvest credentials from vulnerable applications."""",
     ""Explanation"": ""This event is generated when an attempt to extract database credentials from the Sage SalesLogix application is detected""
   }
 ]","['T1110', 'T1110', 'T1553', 'T1098', 'T1555', 'T1003', 'T1609', 'T1110', 'T1222', 'T1110', 'T1520', 'T1071', 'T1071', 'T1110', 'T1007']",['T1003']
58617,"[
         ""sid"": ""58617"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side software, such as web browsers or PDF readers, to execute arbitrary code or gain unauthorized access to the target system. This rule detects an attempt to exploit a vulnerability in the Microsoft Windows COM object by using a malformed Content-Disposition header, which can lead to arbitrary code execution."""",
         ""Explanation"": ""The event refers to a technique that involves the use of a malformed Content-Disposition header to attempt to exploit a vulnerability in the Microsoft Windows COM object, which can result in arbitrary code execution on the target system.""
     ][
     {
         ""sid"": ""58617"",
         ""Technique ID"": ""T1084"",
         ""Technique Name"": ""Remote Service Exploitation"",
         ""Quotes"": """"Remote Service Exploitation techniques involve exploiting vulnerabilities in software running or exposed on a remote network server to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the Microsoft Windows CLSID, allowing attackers to execute arbitrary code remotely."""",
         ""Explanation"": ""The rule detects an attempt to exploit a vulnerability in the Microsoft Windows CLSID, allowing attackers to execute arbitrary code remotely.""
     }
 ][
   {
     ""sid"": ""58617"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve the attacker compromising a legitimate website or distributing malicious content that users download, to exploit vulnerabilities in software running on the victim's system. This rule detects an attempt to exploit a vulnerability in Microsoft Windows' Content-Disposition header, which can lead to arbitrary code execution on the victim's machine if successfully exploited."""",
     ""Explanation"": ""This event is generated when an attempt to compromise a Microsoft Windows system using the Content-Disposition header is detected.""
   }
 ][
   {
     ""sid"": ""58617"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution involves leveraging exploited vulnerabilities in client-side applications to execute arbitrary code or gain access to the underlying system. This rule detects attempts to exploit a command execution vulnerability in Microsoft Windows Content-Disposition by sending a crafted HTTP header with a CLSID that points to malicious code, which could allow an attacker to execute arbitrary code on the target system."""",
     ""Explanation"": ""Exploit execution through Microsoft Office CLSID in Microsoft Windows""
   }
 ][
   {
     ""sid"": ""58617"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer involves transferring tools or other files from an external system into a compromised environment. The rule triggers on an attempt to download a file with a specific Content-Disposition header and CLSID, which is indicative of an attempt to transfer malicious code or tools to the target system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""58617"",
     ""Technique ID"": ""T1187"",
     ""Technique Name"": ""Forced Authentication"",
     ""Quotes"": """"Forced Authentication techniques involve compelling users to provide authentication information to gain access to a resource. The rule detects an attempt to exploit a vulnerability in Microsoft Windows' Content-Disposition header to force the user to download and execute a malicious file without their knowledge or consent."""",
     ""Explanation"": ""This event is generated when an attempt is made to exploit the Microsoft Windows Content-Disposition header, which could lead to forced authentication.""
   }
 ][
     ""sid"": ""58617"",
     ""Technique ID"": ""T1619"",
     ""Technique Name"": ""Create or Modify System Process"",
     ""Quotes"": """"Create or Modify System Process techniques involve creating or modifying system processes to facilitate execution or evasion. This rule detects an attempt to create a process with a specific CLSID {48123bc4-99d9-11d1-a6b3-00c04fd91555}, which is associated with Microsoft Elevation PowerToy, a tool used for privilege escalation. The presence of this CLSID in the HTTP header suggests an attempt to exploit a vulnerability in a Microsoft Windows system process."""",
     ""Explanation"": ""This event is generated when activity relating to an exploit of a Windows system process is detected.""
 ][
   {
     ""sid"": ""58617"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule triggers on attempts to exploit a known vulnerability in Microsoft Windows by abusing the Content-Disposition header to execute arbitrary commands as SYSTEM, potentially leading to compromise of the system."""",
     ""Explanation"": ""This event is generated when exploit techniques reach a system.""
   }
 ][
   {
     ""sid"": ""58617"",
     ""Technique ID"": ""T1197"",
     ""Technique Name"": ""BITS Jobs"",
     ""Quotes"": """"BITS Jobs involve abusing the Background Intelligent Transfer Service (BITS), a Microsoft Windows component that manages file transfers in the background, to persistently execute code or perform various background tasks. This rule detects an attempt to execute a command using the CLSID of a BITS job, which is a common method adversaries use to establish persistence on compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""58617"",
     ""Technique ID"": ""T1166"",
     ""Technique name"": ""Indicator Removal on Host"",
     ""Quotes"": """"Indicator Removal on Host techniques involve removing or altering artifacts or other information that could be used by security tools or personnel to detect or investigate malicious activity. In this instance, the rule detects an attempt to obscure malicious activity by deleting artifacts related to a specific CLSID (Class Identifier), which is commonly used by malware to identify and execute specific code or functionalities."""",
     ""Explanation"": ""This rule is associated with the T1166: Indicator Removal on Host technique because it detects an attempt to remove or alter artifacts on the host system, specifically by deleting a CLSID that is commonly used by malware.""
   }
 ][
         ""sid"": ""58617"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""User Execution"",
         ""Quotes"": """"User Execution techniques involve tricking users into executing malicious code by deceiving them into clicking on malicious links, opening attachments, or otherwise executing the code. This rule detects malicious 'Content-Disposition' headers containing an embedded CLSID (Class Identifier) that attackers can use to execute arbitrary commands on vulnerable systems."""",
         ""Explanation"": ""This rule can detect attempts to execute the malware by tricking users into opening attachments or clicking links.""
     ]","['T1189', 'T1084', 'T1189', 'T1189', 'T1105', 'T1187', 'T1619', 'T1189', 'T1197', 'T1166', 'T1204']",['T1203']
38566,"[
         ""sid"": ""38566"",
         ""Technique ID"": ""T1197"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve disguising or encoding files or information to evade detection. This rule checks for a file with a specific hash that is associated with the Win.Trojan.Sweeper variant. The rule also looks for specific HTTP headers and content, including 'User-Agent|3A 20|Microsoft BITS' in the http_header and 'Accept-Encoding|3A 20|identity|0D 0A|' in the pkt_data, which are commonly used by this variant to hide malicious payloads."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected on the Internet.""
     ][
   {
     ""sid"": ""38566"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in web browsers or their plugins to execute arbitrary code on victim machines without user interaction. This rule detects activity associated with the Win.Trojan.Sweeper variant, which exploits Internet Explorer vulnerabilities to download and execute malicious content."""",
     ""Explanation"": ""Malicious downloader for rootkit. Exploits vulnerabilities in IE in order to download and execute malicious content.""
   }
 ][
     {
         ""sid"": ""38566"",
         ""Technique ID"": ""T1197"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or otherwise concealing files or information to prevent detection or analysis. The rule detects an attempt to download a suspicious file (named with a hash value) with a BITS user-agent, indicating efforts to conceal the dropper, which is a common obfuscation method used by malware to evade detection."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""38566"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""This event is generated when a Trojan that uses the Internet Explorer (IE) browser may attempt to download malware from a specific URL when visiting a compromised website. When a victim visits the compromised website, an embedded script within the website may use a malicious file-download dialog box to download the Trojan.""
   }
 ][
         ""sid"": ""38563"",
         ""Technique ID"": ""T1615"",
         ""Technique name"": ""Group Policy Discovery"",
         ""Quotes"": """"Group Policy Discovery techniques involve adversaries gathering information about Group Policy settings to identify paths for privilege escalation or to discover patterns in domain objects that can be manipulated or used to blend in the environment. This rule detects reconnaissance attempts to enumerate and gather information about Group Policy settings, which is a common technique used by adversaries to identify potential attack vectors or weaknesses."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""38566"",
         ""Technique ID"": ""T1197"",
         ""Technique name"": ""Drive-by Compromise"",
         ""Quotes"": """"Drive-by Compromise techniques occur when accessing a malicious or compromised website leads to a drive-by download attack. This rule detects an attempted drive-by download by a Win.Trojan.Sweeper variant, which is a type of malware that is typically downloaded without the user's knowledge or consent."""",
         ""Explanation"": ""This rule is designed to detect attempts to download a malicious file named '.bin' using the Microsoft BITS (Background Intelligent Transfer Service) protocol. BITS is a component of the Windows operating system that is used to transfer files in the background, and it is commonly used by malware to download and install malicious payloads.""
     ][
   {
     ""sid"": ""38566"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""Malicious File from C2"",
     ""Quotes"": """"Malicious File from C2 techniques involve adversaries downloading and executing malicious files from command and control (C2) servers to establish or maintain persistence or conduct other malicious activities. This rule detects an attempt to download a malicious "".bin"" file from a C2 server, which is a common method used by malware to install malicious components."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to download a malicious file from a remote location. The file is likely to be a component of malware, such as a Trojan or a virus.""
   }
 ][
   {
     ""sid"": ""38566"",
     ""Technique ID"": ""T1197"",
     ""Technique name"": ""File Download"",
     ""Quotes"": """"File Download techniques involve downloading files from various sources onto a victim system to support other malicious actions. This rule detects an attempt to download a malicious binary file ('.bin') by a variant of the Win.Trojan.Sweeper dropper, which is a common method used by malware to establish persistence on the victim system."""",
     ""Explanation"": ""This alert indicates a download attempt of a malicious binary by a variant of the Win.Trojan.Sweeper dropper.""
   },
   {
     ""sid"": ""38566"",
     ""Technique ID"": ""T1485"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve the unauthorized transfer of data from a victim system to an external system. This rule detects exfiltration of sensitive data through a covert channel using HTTP headers. The rule specifically looks for patterns in the 'User-Agent', 'Accept-Encoding', 'If-Unmodified-Since', and 'Range' headers that are indicative of data exfiltration attempts."""",
     ""Explanation"": ""The rule detects suspicious patterns in HTTP headers that can be used for data exfiltration.""
   }
 ][
         ""sid"": ""38566"",
         ""Technique ID"": ""T1197"",
         ""Technique name"": ""BITS Jobs"",
         ""Quotes"": """"BITS Jobs techniques involve abusing the Background Intelligent Transfer Service (BITS) to execute code, maintain persistence, or exfiltrate data.BITS jobs are background transfer tasks scheduled by applications to transfer files over the network. Adversaries may leverage this feature to persistently execute code on the system or transfer data to an external server. The rule detects an attempt to download a file \"".bin\"" using BITS, which is a common method attackers use to establish persistence on compromised systems."""",
         ""Explanation"": ""This rule detects an attempt to download a file \"".bin\"" using BITS, which is a common method attackers use to establish persistence on compromised systems.""
     ][
   {
     ""sid"": ""38566"",
     ""Technique ID"": ""T1197"",
     ""Technique Name"": ""Valid Accounts"",
     ""Quotes"": """"Valid Accounts techniques involve obtaining and using credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. The rule detects a variant of the Win.Trojan.Sweeper attempting to download a dropper component, which typically requires valid user credentials to execute."""",
     ""Explanation"": ""This rule detects an attempt to download a dropper component associated with the Win.Trojan.Sweeper malware, which can lead to further compromise of the system.""
   }
 ][
   {
     ""sid"": ""38566"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve encoding or encrypting data to conceal its contents, making it more difficult for unauthorized users to understand or use. This rule looks for specific patterns associated with data encoding schemes used by malware, such as the presence of hexadecimal strings and the use of specific HTTP headers."""",
     ""Explanation"": ""The rule specifically detects attempts to download a dropper for the Win.Trojan.Sweeper variant, which is known to use data encoding techniques to hide its malicious payload.""
   },
   {
     ""sid"": ""38566"",
     ""Technique ID"": ""T1129"",
     ""Technique name"": ""Lateral Movement"",
     ""Quotes"": """"Lateral Movement techniques involve moving within a network to gain access to additional systems or resources. This rule detects attempts to download a dropper for the Win.Trojan.Sweeper variant, which can be used to establish a foothold on a compromised system and facilitate lateral movement within the network."""",
     ""Explanation"": ""The rule looks for specific patterns associated with the dropper, such as the presence of hexadecimal strings and the use of specific HTTP headers, which are indicative of lateral movement techniques.""
   }
 ]","['T1197', 'T1197', 'T1197', 'T1197', 'T1615', 'T1197', 'T1197', 'T1197', 'T1485', 'T1197', 'T1197', 'T1110', 'T1129']",['T1197']
57067,"[
   {
     ""sid"": ""57067"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt by an external attacker to write a file through a directory traversal vulnerability in HP Web JetAdmin, which is a common method of exploiting web applications to gain remote code execution."""",
     ""Explanation"": ""This event is generated when activity relating to a vulnerability in HP OpenView is detected.""
   }
 ][
         ""sid"": ""57067"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in HP Web JetAdmin to write files to the system, which could allow an attacker to gain persistent access to the system or execute arbitrary code."""",
         ""Explanation"": ""HP JetAdmin 7 will allow authentic but unauthorized remote attackers to gain admin access via the 'WriteToFile()' function in 'plugins/framework/script/tree.xms'.""
     ][
     ""sid"": ""57067"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to write a file to the '/plugins/framework/script/tree.xms' path on an HP Web JetAdmin server, which is a common attack vector used to exploit vulnerabilities in web applications."""",
     ""Explanation"": ""This rule is looking for attempts to exploit a vulnerability in the HP Web JetAdmin software. The vulnerability allows an attacker to write arbitrary files to the server's file system, which could lead to remote code execution.""
 ][
     {
         ""sid"": ""57067"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a file write vulnerability in the 'tree.xms' script of the HP Web JetAdmin web application, which allows attackers to write arbitrary files to the target system."""",
         ""Explanation"": ""This event generates when an attempt to write files to the HP Web JetAdmin file system is made.""
     }
 ][
   {
     ""sid"": ""57067"",
     ""Technique ID"": ""T1492"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using web shells to provide command-line access to a system over HTTP or HTTPS. The rule targets PHP web shells that use the '.xms' extension, which is a known tactic for uploading and executing web shells on target systems."""",
     ""Explanation"": ""An attacker uses a specially crafted HTTP request to attempt to write a file to the target system. This technique is commonly used by threat actors to establish a persistent presence on the target system and execute malicious commands.""
   }
 ][
   {
     ""sid"": ""57067"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule identifies an attempt to exploit a vulnerability in the HP Web JetAdmin 'tree.xms' script, commonly used by attackers to write malicious files to the system."""",
     ""Explanation"": ""HP Web Jetadmin 10.x before 10.20 allows remote attackers to execute arbitrary code via a crafted request due to a directory traversal vulnerability in the tree.xms script, which leads to arbitrary file write.""
   }
 ][
         ""sid"": ""57067"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a file write vulnerability in HP Web JetAdmin through the '/plugins/framework/script/tree.xms' URI, which is a common method attackers use to gain unauthorized access to web applications by uploading malicious files."""",
         ""Explanation"": ""The rule looks for requests to the '/plugins/framework/script/tree.xms' URI with the 'WriteToFile' parameter, which is an indication of an attempt to exploit a file write vulnerability in HP Web JetAdmin.""
     ][
   {
     ""sid"": ""57067"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code...\"""",
     ""Explanation"": ""This rule detects an attempt to write a file to the \""/plugins/framework/script/tree.xms\"" path on an HP Web JetAdmin server, which could be an attempt to exploit a vulnerability in the application to gain unauthorized access or execute arbitrary code.""
   }
 ][
   {
     ""sid"": ""57067"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code...\"""",
     ""Explanation"": ""The rule detects an attempt to exploit a vulnerability in the HP Web JetAdmin file write, which could allow an attacker to gain unauthorized access or execute arbitrary code on the target system.""
   }
 ][
     {
         ""sid"": ""57067"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to write a file to the HP Web JetAdmin '/plugins/framework/script/tree.xms' URI, which is a common method attackers use to exploit web applications by uploading malicious files."""",
         ""Explanation"": ""This rule is designed to detect an attempt to exploit a vulnerability in the HP Web Jetadmin software.""
     }
 ][
   {
     ""sid"": ""43421"",
     ""Technique ID"": ""T1571"",
     ""Technique name"": ""Non-Standard Port"",
     ""Quotes"": """"Non-Standard Port techniques involve using a protocol and port pairing that are typically not associated with the protocol, to evade detection and defense mechanisms."""",
     ""Explanation"": ""This rule triggers an alert when a reconnaissance attempt is made by establishing a non-standard port connection to perform service discovery or host identification.""
   }
 ]","['T1190', 'T1190', 'T1190', 'T1190', 'T1492', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1571']",['T1106']
49291,"[
     {
         ""sid"": ""49291"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. In this case, the rule detects an attempted remote code execution exploit in the WinRAR ACE header compression format. Successful exploitation could allow an adversary to execute arbitrary code on the target system."""",
         ""Explanation"": ""This event is generated when the FTP server receives a request to download a WinRAR ACE archive that contains malicious content.""
     }
 ][
         ""sid"": ""49291"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an exploit attempt targeting a specific vulnerability in WinRAR that allows remote code execution. By sending a specially crafted ACE file, attackers can execute arbitrary code on the target system."""",
         ""Explanation"": ""Remote code execution vulnerability in WinRAR versions prior to 5.70 allows remote attackers to execute arbitrary code via vectors related to the ACE (Advanced Compression Evaluator) file format.""
     ][
   {
     ""sid"": ""49291"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. In this case, the rule specifically detects an attempted remote code execution attack involving WinRAR ACE files, which are commonly exploited by attackers to execute arbitrary code on vulnerable systems."""",
     ""Explanation"": ""This event is generated when activity relating to a remote code execution attempt in WinRAR ACE files is detected.""
   }
 ][
   {
     ""sid"": ""49291"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a remote code execution vulnerability in WinRAR ACE archives by sending a malicious ACE file to a vulnerable system, which is a common technique used by attackers to compromise systems through file sharing or email attachments."""",
     ""Explanation"": ""This event is generated when activity relating to the attempted exploitation of a remote code execution vulnerability in WinRAR ACE archives is detected.""
   }
 ][
   {
     ""sid"": ""49291"",
     ""Technique ID"": ""T1591"",
     ""Technique Name"": ""Gather Victim Org Information"",
     ""Quotes"": ""\""Adversaries may gather information about the victim's organization that can be used during targeting.\"""",
     ""Explanation"": ""This rule detects an attempt to exploit a remote code execution vulnerability in WinRAR ACE archives, which could allow an attacker to execute arbitrary code on the target system. Gathering information about the victim's organization, such as its structure, network topology, and security measures, can aid in targeting attacks and identifying potential vulnerabilities.""
   },
   {
     ""sid"": ""49291"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": ""\""Adversaries may transfer tools or other files from an external system into a compromised environment.\"""",
     ""Explanation"": ""This rule detects an attempt to exploit a remote code execution vulnerability in WinRAR ACE archives, which could allow an attacker to execute arbitrary code on the target system. Ingress tool transfer involves transferring malicious tools or files into a compromised environment to facilitate further exploitation and persistence.""
   },
   {
     ""sid"": ""49291"",
     ""Technique ID"": ""T1570"",
     ""Technique Name"": ""Lateral Tool Transfer"",
     ""Quotes"": ""\""Adversaries may transfer tools or other files between systems in a compromised environment.\"""",
     ""Explanation"": ""This rule detects an attempt to exploit a remote code execution vulnerability in WinRAR ACE archives, which could allow an attacker to execute arbitrary code on the target system. Lateral tool transfer involves moving tools or files between compromised systems within an environment to expand their access and control.""
   }
 ][
   {
     ""sid"": ""49291"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution vulnerability in WinRAR by exploiting the ACE (Advanced Compression Evaluator) feature. Attackers can exploit this vulnerability by sending a specially crafted ACE archive to a vulnerable system, allowing them to execute arbitrary code."""",
     ""Explanation"": ""This rule is designed to detect exploitation attempts against the file archiver software WinRAR, specifically targeting the Advanced Compression Evaluator (ACE) feature. The attacker sends a specially crafted ACE archive to the vulnerable system, which allows them to execute arbitrary code.""
   }
 ][
   {
     ""sid"": ""49291"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve gaining access to a system through a user visiting a website over the normal course of browsing. This rule triggers when a client sends a WinRAR ACE archive file with a specific file path, which is a common method used to exploit file parsing vulnerabilities in applications that support the ACE format."""",
     ""Explanation"": ""The trigger in the rule indicates an attempt to exploit a remote code execution vulnerability in WinRAR by sending a specially crafted ACE archive file.""
   }
 ][
   {
     ""sid"": ""49291"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted WinRAR ACE remote code execution exploit, which is a known method attackers use to exploit vulnerabilities in file decompression software to execute arbitrary code on target systems."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in WinRAR is detected.""
   }
 ][
   {
     ""sid"": ""49291"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution exploit in the WinRAR ACE (Advanced Compression Engine) library, which is often used by threat actors to compromise systems through exploitable file formats."""",
     ""Explanation"": ""The event describes an attempted remote code execution exploit in the WinRAR ACE library.""
   }
 ][
   {
     ""sid"": ""49291"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a WinRAR ACE remote code execution attempt. Attackers may exploit a vulnerability in WinRAR to execute arbitrary code by sending a specially crafted ACE archive."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in WinRAR to execute arbitrary code.""
   },
   {
     ""sid"": ""49291"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Vulnerable Software"",
     ""Quotes"": """"Exploit Vulnerable Software techniques involve exploiting software vulnerabilities to gain unauthorized access or escalate privileges. This rule detects a WinRAR ACE remote code execution attempt. Attackers may exploit a vulnerability in WinRAR to execute arbitrary code by sending a specially crafted ACE archive."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in WinRAR to execute arbitrary code.""
   }
 ][
   {
     ""sid"": ""49291"",
     ""Technique ID"": ""T1220"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a remote code execution vulnerability in WinRAR ACE archives. Attackers may use this vulnerability to execute arbitrary commands on vulnerable systems."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to exploit a remote code execution vulnerability in WinRAR ACE archives.""
   }
 ]","['T1189', 'T1190', 'T1203', 'T1189', 'T1591', 'T1105', 'T1570', 'T1190', 'T1189', 'T1203', 'T1203', 'T1203', 'T1189', 'T1220']",['T1547']
56613,"[
   {
     ""sid"": ""56613"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve communication between an adversary and their infrastructure. This rule detects activity associated with a variant of the FeyeYelp remote access trojan (RAT), which uses beaconing techniques to establish a connection with its command and control server. The rule looks for a specific pattern in the beacon, including the presence of the '_gat_global=1' and 'bse=' cookies and the 'recent_locations' URL parameter."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""56613"",
     ""Technique ID"": ""T1013"",
     ""Technique name"": ""Data Transfer over C2 Channel"",
     ""Quotes"": """"Data Transfer over C2 Channel techniques involve sending and receiving data between an adversary and their infrastructure over a command and control channel. This rule specifically targets a data transfer method used by the FeyeYelp RAT, which includes the use of cookies and URL parameters to encode and transfer data."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""56613"",
         ""Technique ID"": ""T1566"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing techniques involve fraudulent attempts to obtain sensitive information, such as credentials, by masquerading as a trustworthy entity. This rule detects outbound communication to a known phishing domain (fakecruises.ru), indicating an attempt to lure users into disclosing their personal information."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""56613"",
         ""Technique ID"": ""T1071"",
         ""Technique name"": ""Data Exfiltration"",
         ""Quotes"": """"Data Exfiltration techniques involve stealing data from a compromised system and sending it to external locations. This rule detects the presence of a Trojan (FeyeYelp) that is communicating with a remote server, potentially exfiltrating sensitive information from the compromised system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""56613"",
     ""Technique ID"": ""T1021"",
     ""Technique Name"": ""Remote System Discovery"",
     ""Quotes"": """"Remote System Discovery techniques involve identifying and obtaining information about systems on a network, including their operating systems, software, and services. This rule detects beacon attempts from the FeyeYelp variant of the Rat.Tool malware, which uses HTTP POST requests with specific cookie and parameter values to communicate with its command and control server. The beacon attempts include information about the compromised system, such as its browser and operating system, which is a common method used by attackers to gather information about target systems."""",
     ""Explanation"": ""This rule is triggered when the Rat.Tool.FeyeYelp variant of malware attempts to send beacon data to its command and control server. The beacon data includes information about the compromised system, such as its browser and operating system, which is a common method used by attackers to gather information about target systems.""
   }
 ][
     ""sid"": ""56613"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Control"",
     ""Quotes"": """"Adversaries may establish and maintain command and control (C2) over systems to execute commands remotely. This often involves maintaining network connections from the compromised system back to an adversary-controlled server. This rule is designed to detect the C2 activity associated with the Rat.Tool.FeyeYelp variant, which uses HTTP connections to communicate with its server."""",
     ""Explanation"": ""This event is generated when malware is actively communicating with its CnC server.""
 ][
   {
     ""sid"": ""56613"",
     ""Technique ID"": ""T1482"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to hinder forensic analysis and incident response. This rule identifies outbound beacon attempts by the FeyeYelp remote access tool (RAT), which is known to use encrypted communication channels to evade detection. The rule specifically checks for encrypted data within the ""bse="" parameter of an HTTP request."""",
     ""Explanation"": ""The communication in this event is encrypted to prevent detection.""
   },
   {
     ""sid"": ""56613"",
     ""Technique ID"": ""T1562"",
     ""Technique name"": ""Impair Defenses"",
     ""Quotes"": """"Impair Defenses techniques involve modifying components of a victim environment to hinder or disable defensive mechanisms. This rule detects attempts to disable security measures by disabling the Windows Remote Procedure Call (RPC) service, which is a common target for attackers trying to evade detection and impair the system's ability to respond to threats."""",
     ""Explanation"": ""The event is trying to turn off an essential service for the operating system.""
   }
 ][
   {
     ""sid"": ""56613"",
     ""Technique ID"": ""T1041"",
     ""Technique name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve sending exfiltrated data back to the adversary through the command and control (C2) channel. The rule specifically detects outbound beacon attempts from devices infected with the Rat.Tool.FeyeYelp variant malware, which indicates that the malware may be attempting to transmit stolen data to a remote C2 server."""",
     ""Explanation"": ""The alert detects outbound FeyeYelp beacon attempts, which exfiltrate network data.""
   },
   {
     ""sid"": ""56613"",
     ""Technique ID"": ""T1202"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting a vulnerability in a client application to execute arbitrary code or commands. The Rat.Tool.FeyeYelp malware variant mentioned in the rule typically uses client-side vulnerabilities to gain initial access and execute its malicious payload, allowing it to perform various malicious activities on the compromised system."""",
     ""Explanation"": ""The beacon may be attempting to exploit  a vulnerability in a client application to execute arbitrary code or commands.""
   }
 ][
     {
         ""sid"": ""56613"",
         ""Technique ID"": ""T1484"",
         ""Technique Name"": ""Domain Policy Modification"",
         ""Quotes"": """"Domain Policy Modification techniques involve making changes to the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments."""",
         ""Explanation"": ""This rule triggers when a host establishes an outbound connection to a remote host on a well-known HTTP port and sends a series of specific HTTP cookies and parameters in the request. The combination of cookies and parameters observed in the rule matches the behavior of FeyeYelp, a known malware variant that uses HTTP beaconing to communicate with its command and control server. Domain policy modification techniques are commonly used by malware to manipulate domain settings and evade detection and control mechanisms within an enterprise network.""
     },
     {
         ""sid"": ""56613"",
         ""Technique ID"": ""T1585"",
         ""Technique Name"": ""Establish Accounts"",
         ""Quotes"": """"Establish Accounts techniques involve creating and cultivating accounts with services that can be used during targeting."",
         ""Explanation"": ""The rule triggers when a host establishes an outbound connection to a remote host on a well-known HTTP port and sends a series of specific HTTP cookies and parameters in the request. The combination of cookies and parameters observed in the rule matches the behavior of FeyeYelp, a known malware variant that uses HTTP beaconing to communicate with its command and control server. Malware often uses pre-created or compromised accounts to establish persistence and maintain access to a compromised system. By establishing accounts with legitimate services or using compromised credentials, adversaries can evade detection and prolong their presence within a network.""
     },
     {
         ""sid"": ""56613"",
         ""Technique ID"": ""T1048"",
         ""Technique Name"": ""Exfiltration Over Alternative Protocol"",
         ""Quotes"": """"Exfiltration Over Alternative Protocol involves stealing data by exfiltrating it over a different protocol than that of the existing command and control channel."""",
         ""Explanation"": ""The rule triggers when a host establishes an outbound connection to a remote host on a well-known HTTP port and sends a series of specific HTTP cookies and parameters in the request. The combination of cookies and parameters observed in the rule matches the behavior of FeyeYelp, a known malware variant that uses HTTP beaconing to communicate with its command and control server. Malware often uses non-standard protocols or alternative channels to exfiltrate data and evade detection. By using alternative protocols, adversaries can avoid triggering security mechanisms or detection rules that monitor common command and control traffic.""
     }
 ][
         ""sid"": ""56613"",
         ""Technique ID"": ""T1573"",
         ""Technique name"": ""Data Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Data Exfiltration Over Command and Control Channel techniques involve exfiltrating stolen or compromised data back to an attacker-controlled system over the command and control channel established with the malware. The rule detects outbound beacon communication from a known malware family, Rat.Tool.FeyeYelp, to its command and control server."""",
         ""Explanation"": ""This event is generated when an attempt to establish a malicious data exfiltration channel over command and control (C2) is detected.""
     ][
         ""sid"": ""56613"",
         ""Technique ID"": ""T1530"",
         ""Technique name"": ""Port Scanning"",
         ""Quotes"": """"Port Scanning techniques involve actively probing hosts or ranges of addresses to identify available ports, which can be used to identify potential points of entry for attacks. This rule detects an outbound beacon attempt by the Rat.Tool.FeyeYelp malware, which may involve port scanning to search for vulnerable or open ports on target systems."""",
         ""Explanation"": ""This event is generated when the signature detects a port scan activity targeting a range of IP addresses.""
     ][
         ""sid"": ""56613"",
         ""Technique ID"": ""T1021"",
         ""Technique Name"": ""Remote Services"",
         ""Quotes"": """"Remote Services techniques involve accessing or manipulating remote systems or services to support malicious objectives. This rule detects outbound beacon attempts by a variant of the FeyeYelp remote access tool, indicating that the infected system is communicating with a command and control server for remote control or data exfiltration."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""56613"",
     ""Technique ID"": ""T1095"",
     ""Technique name"": ""Non-Application Layer Protocol"",
     ""Quotes"": ""\""Non-application layer protocols operate below the 4th layer of the OSI model. A protocol in this layer allows an end host to interact with a remote host without the use of an application layer protocol, which may be blocked by firewalls or intrusion prevention systems. Due to its low-level nature, this technique is also used to bypass network defenses."",
     ""Explanation"": ""This rule detects a FeyeYelp variant beaconing out to a server on a non-standard port, using a protocol other than HTTP/HTTPS.""
   },
   {
     ""sid"": ""56613"",
     ""Technique ID"": ""T1104"",
     ""Technique name"": ""Multi-Stage Channels"",
     ""Quotes"": ""\""Multi-Stage Channels involve the use of intermediary methods and systems, or multiple stages of network communication, for command and control (C2) or data transfer. This rule detects an outbound connection from a compromised host to a C2 server using a non-standard port, suggesting a multi-stage communication flow."",
     ""Explanation"": ""This rule detects a FeyeYelp variant beaconing out to a server on a non-standard port, using a protocol other than HTTP/HTTPS.""
   }
 ]","['T1059', 'T1013', 'T1566', 'T1071', 'T1021', 'T1059', 'T1482', 'T1562', 'T1041', 'T1202', 'T1484', 'T1585', 'T1048', 'T1573', 'T1530', 'T1021', 'T1095', 'T1104']",['T1041']
28350,"[
   {
     ""sid"": ""28350"",
     ""TechniqueID"": ""T1204"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule aims to detect an attempt to exploit an ActiveX control vulnerability in Windows Management Instrumentation (WMI) by accessing an object viewer ActiveX control via a specific CLSID, exploiting a commonly targeted vulnerability present in multiple versions of Windows systems."""",
     ""Explanation"": ""This rule is designed to detect and block attempts to access a vulnerable ActiveX control in Microsoft Windows WMI to gain unauthorized access to a system. ActiveX controls are a type of software component that can be embedded in web pages and other applications, and they can be exploited to execute malicious code or gain unauthorized access to a system. The rule uses specific file data to identify attempts to exploit this vulnerability, which involves accessing an ActiveX control via a specific CLSID.""
   }
 ][
   {
     ""sid"": ""28350"",
     ""Technique ID"": ""T1121"",
     ""Technique name"": ""ActiveX Control Download"",
     ""Quotes"": """"ActiveX Control Download techniques involve downloading and executing ActiveX controls to gain access or control over a victim system. The rule detects an attempt to access the ActiveX class identifier for Microsoft Windows WMI administrator tools object viewer, indicating that an attacker is attempting to download and execute an ActiveX control to compromise the system."""",
     ""Explanation"": ""This event is generated when activity relating to browser plug-ins is detected.""
   }
 ][
   {
     ""sid"": ""28350"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve using trial-and-error to attempt to gain access to a system or resource. This rule detects an attempt to brute force the Windows Management Instrumentation (WMI) ActiveX control, which is a common technique used by attackers to gain administrator access to a system."""",
     ""Explanation"": ""The rule detects attempts to access the Windows Management Instrumentation (WMI) ActiveX control, which is a common technique used by attackers to gain administrator access to a system.""
   }
 ][
         ""sid"": ""28350"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Insecure Deserialization"",
         ""Quotes"": """"Exploit Insecure Deserialization techniques involve exploiting improper input validation and serialization mechanisms to achieve code execution. This rule detects an attempt to exploit a vulnerability in Microsoft Windows WMI administrator tools object viewer ActiveX clsid, which allows remote attackers to execute arbitrary code via a crafted .wmf file sent within an email."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a remote code execution vulnerability in the Windows Management Instrumentation (WMI) service is detected.""
     ][
   {
     ""sid"": ""28350"",
     ""Technique ID"": ""T1065"",
     ""Technique Name"": ""Write File"",
     ""Quotes"": """"Write File involves writing specific files to the disk with malicious intent. This rule detects attempts to access the WMI Administrator Tools object viewer ActiveX class ID, which is commonly associated with malicious code attempting to exploit vulnerabilities in web browsers to download and execute malicious files."""",
     ""Explanation"": ""The rule checks for the presence of a specific file data pattern that is frequently observed in browser plugin exploits.""
   },
   {
     ""sid"": ""28350"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise involves tricking a victim into visiting a malicious website or opening a malicious document to compromise their system. This rule detects attempts to access the WMI Administrator Tools object viewer ActiveX class ID, which is commonly associated with malicious code attempting to exploit vulnerabilities in web browsers to gain unauthorized access to the system."""",
     ""Explanation"": ""The rule checks for the presence of a specific file data pattern that is frequently observed in browser plugin exploits.""
   }
 ][
   {
     ""sid"": ""28350"",
     ""Technique ID"": ""T1203"",
     ""Technique Name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting software vulnerabilities in client applications to execute arbitrary code. In this case, the rule detects an attempted exploit of an ActiveX component in Windows WMI Administrator tools, which can allow remote code execution in the context of the user running the application."""",
     ""Explanation"": ""This event is generated when activity relating to browser plugins is detected.""
   }
 ][
   {
     ""sid"": ""28350"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve infecting a system when a user visits a website while browsing the internet without requiring any user interaction. This rule detects an attempt to exploit a vulnerability in Microsoft Windows WMI administrator tools object viewer ActiveX clsid, which attackers could use to gain unauthorized access to the system if successfully exploited.'"""",
     ""Explanation"": ""The rule matches traffic that attempts to access a specific ActiveX control, which is a common technique used in drive-by compromise attacks.""
   }
 ][
   {
     ""sid"": ""28350"",
     ""Technique ID"": ""T1068"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in Microsoft Windows WMI ActiveX ActiveX control, which could allow an attacker to execute arbitrary code in the context of the current user."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Microsoft Windows WMI ActiveX. This vulnerability could allow an attacker to execute arbitrary code in the context of the current user.""
   }
 ][
   {
     ""sid"": ""28350"",
     ""Technique ID"": ""T1068"",
     ""Technique name"": ""Kernel Modules and Extensions"",
     ""Quotes"": """"Kernel Modules and Extensions techniques involve modifying or replacing system kernel modules or extensions to gain escalated privileges or execute arbitrary code; COM objects are commonly used by scripting languages and malicious components to perform tasks involving browser capabilities."""",
     ""Explanation"": ""This rule generates an alert when an attempt is made to access the Windows Management Instrumentation (WMI) administrator tools object viewer ActiveX control (clsid: {2DF1641C-D234-11E0-847A-00C04FD7BB08}). This control is used by the WMI service to manage WMI objects, and it can be abused by attackers to gain unauthorized access to the system.""
   }
 ][
   {
     ""sid"": ""28350"",
     ""Technique ID"": ""T1124"",
     ""Technique name"": ""System Time Discovery"",
     ""Quotes"": """"System Time Discovery techniques involve gathering the system time and/or time zone from a local or remote system. The rule triggers when an ActiveX control for Windows Management Instrumentation (WMI) is accessed, which attackers may use to obtain system time information for synchronization purposes or to determine the appropriate time to execute an attack."""",
     ""Explanation"": ""This rule is triggered when there is an attempt to access an ActiveX control for WMI, which could be used to gather system time and time zone information.""
   }
 ][
   {
     ""sid"": ""28350"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted access to a Microsoft Windows WMI administrator tools object viewer ActiveX clsid, which is a technique commonly used by attackers to exploit vulnerabilities in web applications and gain unauthorized access to systems."""",
     ""Explanation"": ""Vulnerability in the Windows Management Instrumentation (WMI) ActiveX control in Microsoft Internet Explorer 6 could allow remote attackers to execute arbitrary code via mshtml.dll, aka ""WMI ActiveX Control Vulnerability"".""
   }
 ]","['T1204', 'T1121', 'T1110', 'T1189', 'T1065', 'T1189', 'T1203', 'T1189', 'T1068', 'T1068', 'T1124', 'T1189']",['T1047']
50464,"[
   {
     ""sid"": ""50464"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve performing reconnaissance activities to identify open ports, services, and vulnerabilities in a target network. This rule detects malicious activity related to Responder poisoning and NetServer enumeration, which are common methods attackers use to gather information about a network by exploiting vulnerabilities in NetBIOS file-sharing services."""",
     ""Explanation"": ""The specified Snort rule is designed to match and alert on network traffic that an attacker may be using to perform reconnaissance on a target network. The rule matches on specific patterns within the network traffic, which are indicative of a NetBIOS session.""
   }
 ][
         ""sid"": ""50464"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning involves using automated and manual tools to scan and probe the network environment for weaknesses and misconfigurations. This rule detects an attempt to enumerate NetServer services on a remote host by sending a series of NetBIOS queries, which is a common technique used by attackers to identify potential targets for further exploitation."""",
         ""Explanation"": ""This rule can detect and block NetServer enumeration attempts, which could lead to the identification of potential targets for further exploitation.""
     ][
   {
     ""sid"": ""50464"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve probing a network to identify hosts or services that may be vulnerable to attack. This rule detects an attempt to enumerate NetServer services on port 445, which is a common reconnaissance technique used by attackers to gather information about potential targets."""",
     ""Explanation"": ""The rule is triggered when a specific sequence of bytes is detected, which is associated with NetServer enumeration attempts.""
   }
 ][
   {
     ""sid"": ""50464"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Share Discovery"",
     ""Quotes"": """"Network Share Discovery techniques involve using methods to identify and enumerate network shares to find accessible shared resources for further exploitation. The rule detects NetBIOS enumeration attempts against TCP port 445, which is a well-known method used by attackers to identify and compromise vulnerable network shares."""",
     ""Explanation"": ""The rule looks for a specific pattern associated with NetBIOS enumeration attempts.""
   }
 ][
   {
     ""sid"": ""50464"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning involves actively scanning a network to identify active hosts and network services. This rule triggers when a host begins a NetBIOS session service enumeration probe. NetBIOS is commonly used for name resolution and service discovery in Windows networks. By performing service enumeration, an attacker can detect and identify potential target systems and services for exploitation."""",
     ""Explanation"": ""The event is generated when a NetBIOS probe was detected on port 445.""
   }
 ][
         ""sid"": ""50464"",
         ""Technique ID"": ""T1046"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning involves actively probing the network infrastructure to gather information about hosts and services running on the network. This rule detects an attempted SMB enumeration using the 'B16BBDz' packet, which is a common method to enumerate the NetServer service and identify potential vulnerabilities on the target system."""",
         ""Explanation"": ""Suspicious PDU in NetBIOS session service""
     ][
     {
         ""sid"": ""50464"",
         ""Technique ID"": ""T1569"",
         ""Technique name"": ""NetBIOS Reconnaissance"",
         ""Quotes"": """"NetBIOS Reconnaissance techniques involve using the NetBIOS protocol to gather information about devices on a network and can be used to enumerate running services and hosts."""",
         ""Explanation"": ""This event is generated when a NetBIOS request related to responder poisoning is detected.""
     }
 ][
     {
         ""sid"": ""50464"",
         ""Technique ID"": ""T1046"",
         ""Technique Name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve systematically probing a network for open ports or services to identify potential targets or vulnerabilities. This rule detects a NetServer enumeration attempt, which is a reconnaissance activity used to identify and gather information about the NetBIOS protocol (port 445) services running on a network."""",
         ""Explanation"": ""This event is generated when a possible malicious reconnaissance activity relating to NetBIOS is detected.""
     }
 ][
   {
     ""sid"": ""50464"",
     ""Technique ID"": ""T1046"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning describes techniques used by adversaries to scan for listening services on a host or network. This rule detects an attempt to perform NetServer Service enumeration on TCP port 445, commonly used by Microsoft Windows systems."""",
     ""Explanation"": ""This rule detects NetServer Service enumeration attempts on TCP port 445, which could indicate reconnaissance activity by an attacker.""
   },
   {
     ""sid"": ""50464"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Port Scanning"",
     ""Quotes"": """"Port Scanning typically involves sending packets to a target system on various ports to identify which ports are listening and may be vulnerable to exploitation. The rule matches traffic on port 445, commonly used for NetBIOS Session Service, which is commonly targeted by attackers for reconnaissance and potential exploitation."""",
     ""Explanation"": ""The rule matches traffic on port 445, which is commonly used for NetBIOS Session Service, which is commonly targeted by attackers for reconnaissance and potential exploitation.""
   }
 ][
   {
     ""sid"": ""50464"",
     ""Technique ID"": ""T1049"",
     ""Technique name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve probing networks to gather information about systems, services, and vulnerabilities that could be used for exploitation. The rule detects an attempt to enumerate NetServer shared resources on a system using a specific NetBIOS packet, which is a common method attackers use to gather information about a target network and identify potential targets for exploitation."""",
     ""Explanation"": ""This event is generated when a NetBIOS session service enumeration attempt is detected.""
   }
 ][
   {
     ""sid"": ""50464"",
     ""Technique ID"": ""T1046"",
     ""Technique name"": ""Network Service Discovery"",
     ""Quotes"": """"Network Service Discovery techniques involve gathering information about services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. This rule detects an attempt to enumerate NetBIOS services on a remote host, which is a common reconnaissance technique used by attackers to identify potential targets for exploitation."""",
     ""Explanation"": ""The rule specifically looks for a NetBIOS session service (port 445) enumeration attempt, which can be used to identify the operating system and services running on the target host.""
   }
 ]","['T1046', 'T1046', 'T1046', 'T1046', 'T1046', 'T1046', 'T1569', 'T1046', 'T1046', 'T1059', 'T1049', 'T1046']",['T1046']
57738,"[
   {
     ""sid"": ""57738"",
     ""Technique ID"": ""T1136"",
     ""Technique name"": ""Create Account"",
     ""Quotes"": """"Create Account techniques involve creating user accounts, groups, and other types of accounts to gain a foothold within a network, often involving the creation of accounts with elevated privileges."""",
     ""Explanation"": ""Active Directory Federation Services (ADFS) is a component of Microsoft Windows Server that provides single sign-on and federation services. The rule detects an attempt to access the ADFS policy store transfer service, which could be used to create or modify accounts.""
   },
   {
     ""sid"": ""57738"",
     ""Technique ID"": ""T1530"",
     ""Technique name"": ""Data from Cloud Storage"",
     ""Quotes"": """"Data from Cloud Storage techniques involve reading data from cloud storage services, such as Amazon S3, Microsoft Azure Blob Storage, or Google Cloud Storage, to obtain sensitive information."""",
     ""Explanation"": ""ADFS uses a policy store to store configuration data. The rule detects an attempt to access the policy store, which could be used to obtain sensitive information.""
   }
 ][
     {
         ""sid"": ""57738"",
         ""Technique ID"": ""T1204"",
         ""Technique Name"": ""Exfiltration over C2 Channel"",
         ""Quotes"": """"Exfiltration Over C2 Channel techniques involve transferring data from a victim system to an attacker-controlled C2 channel. This rule detects an HTTP POST request to the ADFS policy store transfer service, which is a known method to exfiltrate Active Directory information. The attacker may attempt to extract sensitive data from the ADFS server, which can include user credentials and group memberships, providing them with an initial foothold in the network."""",
         ""Explanation"": ""This rule detects a request to the Active Directory Federation Services policy store transfer service, which could be used for exfiltration.""
     }
 ][
   {
     ""sid"": ""57738"",
     ""Technique ID"": ""T1580"",
     ""Technique Name"": ""Cloud Infrastructure Discovery"",
     ""Quotes"": ""Cloud Infrastructure Discovery techniques involve discovering infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment."",
     ""Explanation"": ""The rule detects a request to the Active Directory Federation Services Policy Store Transfer Service. This service is used to transfer policy store data between AD FS servers, which could be used to gain access to sensitive information or disrupt the service.""
   },
   {
     ""sid"": ""57738"",
     ""Technique ID"": ""T1651"",
     ""Technique Name"": ""Cloud Administration Command"",
     ""Quotes"": ""Cloud Administration Command techniques involve abusing cloud management services to execute commands within virtual machines or hybrid-joined devices."",
     ""Explanation"": ""The rule detects a request to the Active Directory Federation Services Policy Store Transfer Service. This service is used to manage AD FS policies, which could be used to execute arbitrary commands on the server.""
   }
 ][
   {
     ""sid"": ""57738"",
     ""Technique ID"": ""T1553"",
     ""Technique Name"": ""Active Directory Federation Services (ADFS) Delegation"",
     ""Quotes"": """"Active Directory Federation Services (ADFS) Delegation techniques involve leveraging ADFS functionality and misconfigurations to facilitate attacks such as pass-the-ticket, pass-the-cookie, and Active Directory (AD) takeover.  This rule detects a request to the ADFS policy store transfer service, which could be an attempt to exploit such vulnerabilities."""",
     ""Explanation"": ""AD FS allows organizations to configure claims-based access control rules to manage access to web applications.  By compromising AD FS, attackers can bypass authentication and authorization mechanisms and gain access to sensitive resources.""
   }
 ][
   {
     ""sid"": ""24034"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using command and scripting interpreters to execute commands or scripts for various purposes, including downloading or installing additional tools, modifying system settings, or executing malicious code. This rule detects PowerShell commands being executed in a non-interactive shell, which is a common method used by adversaries to hide their activities and evade detection."""",
     ""Explanation"": ""This event is generated when the system detects PowerShell commands being executed in a non-interactive shell, which can be indicative of malicious activity, such as those outlined in the T1059 technique.""
   }
 ][
         ""sid"": ""57738"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. This rule detects a request to the Active Directory Federation Services (AD FS) policy transfer endpoint (/adfs/services/policystoretransfer), which is an external-facing service used for exchanging policy information between AD FS servers."""",
         ""Explanation"": ""This rule relates to the reconnaissance phase, where an adversary is gathering information about the target network and its services.""
     ],
     [
         ""sid"": ""57738"",
         ""Technique ID"": ""T1222"",
         ""Technique name"": ""File and Directory Permissions Modification"",
         ""Quotes"": """"File and Directory Permissions Modification techniques involve modifying file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. The rule detects an attempt to modify file permissions on the local system, which is a common tactic used by adversaries to gain access to unauthorized files or escalate privileges."""",
         ""Explanation"": ""This rule relates to the privilege escalation phase, where an adversary is attempting to gain higher-level access to the system.""
     ][
         ""sid"": ""57738"",
         ""Technique ID"": ""T1484"",
         ""Technique name"": ""Domain Policy Modification"",
         ""Quotes"": """"Domain Policy Modification techniques involve altering the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. This rule detects an attempt to modify the Active Directory Federation Services (ADFS) policy store, which can be abused to bypass authentication and authorization controls or to elevate privileges."""",
         ""Explanation"": ""This event is generated when a request to transfer the Active Directory Federation Services (ADFS) policy store is detected. This could indicate an attempt to modify the policy store, which could be used to bypass authentication and authorization controls or elevate privileges.""
     ][
   {
     ""sid"": ""57738"",
     ""Technique ID"": ""T1558"",
     ""Technique Name"": ""Steal or Forge Kerberos Tickets"",
     ""Quotes"": """"Steal or Forge Kerberos Tickets techniques involve stealing or forging Kerberos tickets to enable Pass the Ticket (PtT) attacks. By obtaining valid Kerberos tickets, adversaries can impersonate legitimate users and gain unauthorized access to services and resources."""",
     ""Explanation"": ""This rule detects an attempt to access the Active Directory Federation Services policy store transfer service, which is commonly exploited to perform PtT attacks by stealing and reusing Kerberos tickets.""
   }
 ][
   {
     ""sid"": ""57738"",
     ""Technique ID"": ""T1579"",
     ""Technique Name"": ""Federation Extension Abuse"",
     ""Quotes"": """"Federation Extension Abuse techniques involve leveraging weaknesses or misconfigurations in federation protocols, such as Active Directory Federation Services (ADFS), to gain unauthorized access or elevate privileges. The rule detects an Active Directory Federation Services policy store transfer service request, which could be an attempt to exploit a vulnerability in the ADFS service."""",
     ""Explanation"": ""This event is generated when a request to transfer policy store in Active Directory Federation Services is detected.""
   }
 ][
   {
     ""sid"": ""57738"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""Internal Spearphishing"",
     ""Quotes"": """"Internal Spearphishing techniques involve sending malicious emails within an organization's internal network, often targeting specific individuals, to trick them into divulging sensitive information or taking actions that could compromise the organization's systems. This rule detects a request to the Active Directory Federation Services policy store transfer service, which could be used to facilitate internal spearphishing attacks by allowing attackers to gain access to sensitive user credentials and other information within the organization's Active Directory environment."""",
     ""Explanation"": ""This event is generated when a user attempts to access a web page that is hosted on a web server that is not managed by the organization.""
   }
 ][
         ""sid"": ""57738"",
         ""Technique ID"": ""T1021"",
         ""Technique name"": ""Remote Services"",
         ""Quotes"": """"Remote Services techniques involve using legitimate remote services for malicious purposes, such as abusing remote desktop protocols, web services, or other network accessible services. This rule detects a policy store transfer service request to Active Directory Federation Services (ADFS), which could indicate an attempt to exfiltrate sensitive information or manipulate ADFS configuration."""",
         ""Explanation"": ""This event is generated when a policy store transfer service request is detected.""
     ]","['T1136', 'T1530', 'T1204', 'T1580', 'T1651', 'T1553', 'T1059', 'T1133', 'T1222', 'T1484', 'T1558', 'T1579', 'T1133', 'T1021']",['T1082']
47402,"[
         ""sid"": ""47402"",
         ""Technique ID"": ""T1027"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve disguising or encoding files or information to avoid detection by security controls. This rule triggers when an attempt is made to upload a file using the 'STOR' (store) command over an unusual port (not port 20 or 21), suggesting an attempt to bypass normal FTP operations and potentially upload malicious or obfuscated files."""",
         ""Explanation"": ""This event is generated when an attempt to upload a file using the 'STOR' (store) command over an unusual port (not port 20 or 21) is detected.""
     ][
     {
         ""sid"": ""23673"",
         ""Technique ID"": ""T1498"",
         ""Technique name"": ""Indicator Obfuscation"",
         ""Quotes"": """"Indicator Obfuscation techniques involve implementing methods to obscure, hide, or otherwise make indicators of malicious activity difficult to identify or interpret. This rule detects the use of an alternate port (other than port 20 or 21) for FTP file upload, which is an attempt to evade detection by evading standard network monitoring mechanisms."""",
         ""Explanation"": ""This event is generated when an attempt is made to upload a file over FTP using a non-standard port.""
     }
 ][
   {
     ""sid"": ""47402"",
     ""Technique ID"": ""T1026"",
     ""Technique Name"": ""Command and Control"",
     ""Quotes"": """"Command and Control techniques involve establishing covert channels to receive instructions and maintain persistent access to compromised infrastructure. This rule detects anomalous FTP traffic on a non-standard port, which could indicate the presence of a command and control channel."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to upload a file using FTP over a non-standard port, which is a suspicious behavior associated with malware or malicious actors attempting to establish covert communications.""
   }
 ][
   {
     ""sid"": ""47402"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Services"",
     ""Quotes"": """"Adversaries may use Valid Accounts to log into a service that accepts remote connections, such as telnet, SSH, and VNC."""",
     ""Explanation"": ""This rule detects an attempt to upload a file to an FTP server over a non-standard port.""
   },
   {
     ""sid"": ""47402"",
     ""Technique ID"": ""T1018"",
     ""Technique name"": ""Remote System Discovery"",
     ""Quotes"": """"Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system."""",
     ""Explanation"": ""This rule detects an attempt to connect to a remote system over a non-standard port.""
   }
 ][
   {
     ""sid"": ""47402"",
     ""Technique ID"": ""T1507"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or encrypting data or files to evade defenses"""",
     ""Explanation"": ""The rule is used to detect attempts to transfer files using a non-standard FTP port. The message indicates that the data is being obfuscated, which is a very common technique for attackers to evade detection.""
   }
 ][
   {
     ""sid"": ""47402"",
     ""Technique ID"": ""T1587"",
     ""Technique name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or encrypting files or information to make them difficult to analyze or detect, such as using steganography or encryption. This rule detects an attempt to upload a file using the 'STOR' command over a non-standard FTP port, which could be an attempt to hide malicious content by disguising it as a legitimate file transfer."""",
     ""Explanation"": ""This event is generated when activity that may be malicious in nature is detected.""
   }
 ][
   {
     ""sid"": ""47402"",
     ""Technique ID"": ""T1028"",
     ""Technique name"": ""Obfuscated File Transfer"",
     ""Quotes"": """"Obfuscated File Transfer techniques involve transferring files using non-standard protocols or ports to evade detection. This rule detects an attempt to upload a file using the FTP 'STOR' command over an unusual port, which is a common technique used by attackers to bypass firewall rules or intrusion detection systems."""",
     ""Explanation"": ""This event is generated when an attempt to upload a file using non-standard FTP port is detected.""
   }
 ][
   {
     ""sid"": ""47402"",
     ""Technique ID"": ""T1028"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding data to avoid detection or analysis. The rule triggers when an FTP server receives a 'STOR' command on a non-standard port (other than ports 20 and 21), which could indicate an attempt to bypass detection by using an obfuscated protocol."""",
     ""Explanation"": ""This rule detects FTP file upload attempts over non-standard ports.""
   }
 ][
     {
         ""sid"": ""47402"",
         ""Technique ID"": ""T1021"",
         ""Technique name"": ""Obfuscated Files or Information"",
         ""Quotes"": """"Obfuscated Files or Information techniques involve disguising or encoding files or other information to evade detection or analysis by security tools or personnel. This rule detects an attempt to upload a file using the File Transfer Protocol (FTP) over a non-standard port (other than ports 20 or 21), which could be an indicator of an attempt to bypass security controls or hide malicious activity."""",
         ""Explanation"": ""Uploading files over non-standard port to evade detection.""
     }
 ][
   {
     ""sid"": ""47402"",
     ""Technique ID"": ""T1057"",
     ""Technique Name"": ""Obfuscated Files or Information"",
     ""Quotes"": """"Obfuscated Files or Information techniques involve encoding or otherwise manipulating files or data in order to avoid detection or analysis. In this case, the rule detects an attempt to upload a file using the File Transfer Protocol (FTP) over a non-standard port (not port 20 or 21), which may indicate obfuscation or evasion techniques being used."""",
     ""Explanation"": ""Non-standard FTP port for data transfer or control connection used by malware.""
   }
 ][
   {
     ""sid"": ""47402"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Non-Standard Port"",
     ""Quotes"": """"Non-Standard Port techniques involve communicating over ports that are not commonly used for their intended service. This rule detects an attempt to upload a file using FTP over a non-standard port, which is a technique commonly used by attackers to evade detection by security controls."""",
     ""Explanation"": ""Detect FTP file upload over non standard port.""
   },
   {
     ""sid"": ""47402"",
     ""Technique ID"": ""T1134"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching for or enumerating files and directories on a system to identify targets for attack. This rule detects an attempt to upload a file using FTP, which is a common method used by attackers to introduce malicious software or exfiltrate sensitive data."""",
     ""Explanation"": ""Detect FTP file upload over non standard port.""
   }
 ]","['T1027', 'T1498', 'T1026', 'T1021', 'T1018', 'T1507', 'T1587', 'T1028', 'T1028', 'T1021', 'T1057', 'T1071', 'T1134']",['T1048']
47844,"[
     ""sid"": ""47844"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a malicious file download and execution via a command injection attack on a web server (port 80). The rule checks for a specific pattern ('cmd|7C 27|' and '|27 21|') within the file data payload, which is indicative of a command execution attempt."""",
     ""Explanation"": ""This event is generated when activity relating to the Win.Downloader.DDECmdExec malware is detected.""
 ][
     ""sid"": ""47844"",
     ""Technique ID"": ""T1116"",
     ""Technique name"": ""Network Share Discovery"",
     ""Quotes"": """"Network Share Discovery techniques involve identifying and accessing shared network resources, such as file shares, to gather information or move laterally within a network. The rule aims to detect remote file inclusion (RFI) attacks that leverage the PHP imap_open() function and shared network resources to execute arbitrary commands on a vulnerable web server. Exploiting RFI vulnerabilities allows adversaries to gain control of a web server and execute malicious code, which may include downloading malware or launching further attacks."""",
     ""Explanation"": ""Remote file inclusion in PHP applications, imap_open() function in PHP, exploits vulnerabilities in PHP applications.""
 ][
     {
         ""sid"": ""47844"",
         ""Technique ID"": ""T1106"",
         ""Technique name"": ""Data from Local System"",
         ""Quotes"": """"Data from Local System techniques involve retrieving data from local, non-network sources on a system without necessarily needing to establish network connections. The rule identifies an attempt to download and execute a command from a command and control server using DDECmdExec, a tool that allows attackers to execute commands on compromised systems."""",
         ""Explanation"": ""The rule looks for the string ""cmd|"" followed by a series of characters within 250 bytes of data.""
     }
 ][
   {
     ""sid"": ""47844"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve unauthorized transfer of data from a system. This rule detects the download of a variant of the Win.Downloader.DDECmdExec malware, which is known for exfiltrating sensitive data from compromised systems."""",
     ""Explanation"": ""This event is triggered when a download of the Win.Downloader.DDECmdExec malware is detected.""
   }
 ][
     {
         ""sid"": ""47844"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted remote code execution (RCE) attack on web applications by using a known vulnerability in the DDE protocol, which is a common method attackers use to exploit web applications by executing arbitrary code on the server."""",
         ""Explanation"": ""The rule matches network traffic that contains a specific pattern used by the DDECmdExec malware to download and execute malicious code on a victim's machine.""
     },
     {
         ""sid"": ""47844"",
         ""Technique ID"": ""T1484"",
         ""Technique name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery techniques involve searching for and identifying files and directories on a system to gather information or locate potential targets. This rule detects an attempt to download a malicious file using the DDE protocol, which is a common method attackers use to download and execute malicious code on a victim's machine."""",
         ""Explanation"": ""The rule matches network traffic that contains a specific pattern used by the DDECmdExec malware to download and execute malicious code on a victim's machine.""
     }
 ][
         ""sid"": ""47844"",
         ""Technique ID"": ""T1133"",
         ""Technique name"": ""External Remote Services"",
         ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to initially access and/or persist within a network. The rule detects an attempted download of a variant of Win.Downloader.DDECmdExec, which is a malware that uses DDE (Dynamic Data Exchange) to execute commands on the victim's machine. DDE is a legacy Windows mechanism that allows applications to communicate with each other, and it can be abused by malware to establish a backdoor and maintain persistence on the compromised system."""",
         ""Explanation"": ""The rule is intended to detect a specific type of malware (Win.Downloader.DDECmdExec) that uses external remote services to download and execute malicious payloads.""
     ][
     {
         ""sid"": ""47844"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer involves transferring malicious tools onto a victim system. This rule detects an attempt to download and execute a variant of the DDECmdExec downloader using encoded commands within a data stream."",
         ""Explanation"": ""This rule is triggered when an attempt is made to download and execute a malicious payload using encoded commands within a data stream.""
     }
 ][
   {
     ""sid"": ""47844"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to evade detection or analysis by security tools. This rule detects an attempt to download a variant of the Win.Downloader.DDECmdExec malware, which is often obfuscated or encrypted to evade detection and conceal its malicious payload."""",
     ""Explanation"": ""This rule detects an attempt to download a variant of the Win.Downloader.DDECmdExec malware, which is often obfuscated or encrypted to evade detection and conceal its malicious payload.""
   },
   {
     ""sid"": ""47844"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve exploiting vulnerabilities in web browsers or other software to infect systems when a user visits a compromised or malicious website. This rule detects an attempt to download a variant of the Win.Downloader.DDECmdExec malware, which is often distributed through drive-by downloads on compromised websites."""",
     ""Explanation"": ""This rule detects an attempt to download a variant of the Win.Downloader.DDECmdExec malware, which is often distributed through drive-by downloads on compromised websites..""
   },
   {
     ""sid"": ""47844"",
     ""Technique ID"": ""T1498"",
     ""Technique Name"": ""Phishing for Credentials"",
     ""Quotes"": """"Phishing for Credentials techniques involve attempting to trick users into submitting their credentials to a malicious website or service. This rule detects an attempt to download a variant of the Win.Downloader.DDECmdExec malware, which is often distributed through phishing emails or malicious websites that attempt to steal user credentials."""",
     ""Explanation"": ""This rule detects an attempt to download a variant of the Win.Downloader.DDECmdExec malware, which is often distributed through phishing emails or malicious websites that attempt to steal user credentials..""
   }
 ][
   {
     ""sid"": ""47844"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using command or scripting languages built into the operating system or application hosting environment to execute adversary-provided commands. This rule detects an attempt to download a file containing a command-line interpreter (cmd.exe) and a command string, suggesting that an adversary is attempting to execute arbitrary commands on the target system."""",
     ""Explanation"": ""This rule detects a possible attempt to download a malicious file that may contain a command-line interpreter (cmd.exe) and a command string, which could allow an attacker to execute arbitrary commands on the target system.""
   }
 ][
         ""sid"": ""47844"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Data Encoding"",
         ""Quotes"": """"Data Encoding techniques involve obfuscating or encoding data to evade detection or analysis. The rule triggers on the detection of a variant of 'Win.Downloader.DDECmdExec', which is a type of malware that uses data encoding to evade detection. The rule specifically matches a pattern of encoded data that represents the string 'cmd' for executing a command prompt."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""47844"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Command and Scripting Interpreter"",
     ""Quotes"": ""\""Command and Scripting Interpreter techniques typically involve using a command or scripting interpreter, such as a shell or PowerShell, to execute adversary-controlled commands or scripts on a system. In this case, the rule detects a download of a malicious payload that uses cmd.exe to execute commands on the compromised system."""",
     ""Explanation"": ""This rule detects an attempt to download a malicious payload that uses cmd.exe to execute commands on the compromised system.""
   },
   {
     ""sid"": ""47844"",
     ""Technique ID"": ""T1166"",
     ""Technique Name"": ""Masquerading"",
     ""Quotes"": ""\""Masquerading techniques involve disguising malicious activity or infrastructure as legitimate system components or trusted entities to avoid detection or deceive defenders. This rule detects a malicious payload that attempts to masquerade as a legitimate file by using a common file extension (.exe) and by mimicking the behavior of a legitimate application (e.g., using cmd.exe to execute commands).\"""",
     ""Explanation"": ""This rule detects a malicious payload that attempts to masquerade as a legitimate file by using a common file extension (.exe) and by mimicking the behavior of a legitimate application.""
   }
 ]","['T1190', 'T1116', 'T1106', 'T1105', 'T1190', 'T1484', 'T1133', 'T1105', 'T1105', 'T1189', 'T1498', 'T1105', 'T1105', 'T1105', 'T1166']",['T1559']
18440,"[
   {
     ""sid"": ""18440"",
     ""Technique ID"": ""T1401"",
     ""Technique Name"": ""DLL Side-Loading"",
     ""Quotes"": """"DLL Side-Loading techniques involve injecting malicious DLLs (Dynamic Link Libraries) into legitimate processes to execute arbitrary code. This rule attempts to detect an exploit attempt against Adobe Acrobat Reader through the loading of a malicious DLL (agm.dll) into a legitimate process. DLL side-loading can enable attackers to gain elevated privileges or access sensitive data and is a common technique used in malware attacks."""",
     ""Explanation"": ""DLL side loading is a technique used by malware to inject malicious code into a legitimate process, this can be done by hooking into the process's LoadLibrary() function or by modifying the registry to point to a malicious DLL.""
   }
 ][
   {
     ""sid"": ""18440"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Remote Services"",
     ""Quotes"": """"Exploit Remote Services techniques involve exploiting vulnerabilities in remote systems to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a DLL loading vulnerability in the Adobe Acrobat Reader plugin 'agm.dll', which could allow an attacker to execute arbitrary code on the target system."""",
     ""Explanation"": ""DLL side-loading vulnerability in Adobe Acrobat Reader on Windows allows remote attackers to execute arbitrary code via a crafted PDF document containing an embedded executable file with a DLL extension (e.g., .dll), as exploited in the wild in March 2013.""
   }
 ][
   {
     ""sid"": ""18440"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a vulnerability in the Adobe Acrobat Reader plugin 'agm.dll' to load malicious code and execute arbitrary commands on the target system."""",
     ""Explanation"": ""This rule detects an attempt to exploit a dll-load vulnerability in Adobe Acrobat Reader plugin.""
   }
 ][
     {
         ""sid"": ""18440"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""DLL Side-Loading"",
         ""Quotes"": """"DLL Side-Loading techniques involve injecting a malicious DLL into a legitimate process to gain code execution. The rule detects an attempt to load the malicious 'agm.dll' DLL into the 'Acrobat Reader' process, which can lead to the attacker gaining access and compromising the system."""",
         ""Explanation"": ""This event is generated when an intrusion attempt using a DLL side loading exploit in Adobe Acrobat Reader is detected.""
     },
     {
         ""sid"": ""18440"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempt to exploit a vulnerability in Adobe Acrobat Reader through the malicious 'agm.dll' DLL, which is a common method attackers use to exploit web applications and gain unauthorized access to the system."""",
         ""Explanation"": ""This event is generated when an intrusion attempt using a DLL side loading exploit in Adobe Acrobat Reader is detected.""
     }
 ][
   {
     ""sid"": ""18440"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a DLL loading vulnerability in the Adobe Acrobat Reader plugin 'agm.dll', which can allow attackers to execute arbitrary code on the target system."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Adobe Acrobat Reader that allows remote attackers to execute arbitrary code via a specially crafted PDF document.""
   }
 ][
   {
     ""sid"": ""18440"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an exploit attempt targeting a vulnerability in the Adobe Acrobat Reader plugin 'agm.dll', which could allow an attacker to execute arbitrary code on the victim's system."",
     ""Explanation"": ""This rule is designed to detect exploitation attempts that target a specific vulnerability in Adobe Acrobat Reader. The rule looks for a specific URI that is associated with the vulnerability, and if that URI is detected, the rule triggers an alert.""
   }
 ][
   {
     ""sid"": ""18440"",
     ""Technique ID"": ""T1201"",
     ""Technique name"": ""Exploit PDF"",
     ""Quotes"": """"Exploit PDF techniques involve exploiting vulnerabilities in PDF files to achieve various objectives, such as executing arbitrary code or gaining unauthorized access to systems. The rule detects an attempt to exploit a vulnerability in Adobe Acrobat Reader's 'agm.dll' plugin, which is a common method attackers use to execute arbitrary code on vulnerable systems."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in Adobe Acrobat Reader's 'agm.dll' plugin is detected.""
   },
   {
     ""sid"": ""18440"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Adobe Acrobat Reader is a widely used application that is often targeted by attackers due to its prevalence and the potential impact of successful exploitation."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in Adobe Acrobat Reader's 'agm.dll' plugin is detected.""
   }
 ][
     {
         ""sid"": ""31234"",
         ""Technique ID"": ""T1138"",
         ""Technique Name"": ""Dll side-loading"",
         ""Quotes"": """"DLL Side-Loading techniques involve injecting malicious DLLs into the memory space of running processes to execute arbitrary code or gain control over the process. The rule detects an attempt to exploit a DLL side-loading vulnerability in the Adobe Acrobat Reader 'agm.dll' plugin, allowing attackers to execute arbitrary code with the privileges of the targeted process."""",
         ""Explanation"": ""This event is generated when the Adobe Acrobat Reader plugin agm.dll tries to load, which could lead to a dll side-loading attack.""
     }
 ][
   {
     ""sid"": ""18440"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit Vulnerable Software"",
     ""Quotes"": """"Exploit Vulnerable Software techniques involve identifying and exploiting vulnerabilities in software to gain unauthorized access or execute arbitrary code on a target system. This rule detects an attempt to exploit a vulnerability in the Adobe Acrobat Reader plugin 'agm.dll' by sending a specially crafted HTTP request. Successful exploitation could lead to arbitrary code execution on the target system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
   {
     ""sid"": ""18440"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code\"""",
     ""Explanation"": ""This rule detects an exploit attempt targeting a vulnerability in the Adobe Acrobat Reader plugin `agm.dll`. Exploiting this vulnerability could allow an attacker to execute arbitrary code on the victim's system""
   }
 ][
     ""sid"": ""18440"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule specifically detects an attempted exploit against an Adobe Acrobat Reader plugin (agm.dll), exploiting a known vulnerability in the PDF reader."""",
     ""Explanation"": ""This event is generated when activity relating to an exploit of a public-facing application is detected.""
 ]","['T1401', 'T1189', 'T1190', 'T1204', 'T1105', 'T1190', 'T1190', 'T1201', 'T1190', 'T1138', 'T1189', 'T1190', 'T1203']",['T1574']
30524,"[
     {
         ""sid"": ""30524"",
         ""Technique ID"": ""T1492"",
         ""Technique Name"": ""Heartbeat"",
         ""Quotes"": """"Heartbeat techniques involve abusing features in network protocols that verify liveness, such as TCP keep alives, to covertly communicate with a remote server. This rule detects a Heartbeat request, which is an OpenSSL TLSv1.1 extension used for keep-alive communications, indicating an attempt at covert communication by a remote attacker."""",
         ""Explanation"": ""This event is generated when activity relating to TLS Heartbeat is detected.""
     }
 ][
         ""sid"": ""30524"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Network Denial of Service"",
         ""Quotes"": """"Network Denial of Service techniques involve disrupting the normal flow of traffic to or from a target system or service, often with the intent of causing a loss of service to users or administrators. This rule detects an attempt to exploit a 'heartbeat' vulnerability in OpenSSL TLSv1.1, which can be used to crash the server and cause a denial of service."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a 'heartbeat' vulnerability in OpenSSL TLSv1.1, which can be used to crash the server and cause a denial of service.""
     ][
     {
         ""sid"": ""30524"",
         ""Technique ID"": ""T1203"",
         ""Technique Name"": ""Heartbleed Exploit"",
         ""Quotes"": """"Heartbleed Exploit utilizes a vulnerability in the OpenSSL library to exfiltrate memory contents from vulnerable servers. The rule detects a TLS heartbeat request with a large payload size and the Heartbeat Extension, which are characteristic of the Heartbleed exploit."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in the OpenSSL library is detected.""
     },
     {
         ""sid"": ""30524"",
         ""Technique ID"": ""T1201"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Attempting to exploit the Heartbleed vulnerability in OpenSSL could lead to unauthorized access or remote code execution if the target system is vulnerable."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in the OpenSSL library is detected.""
     }
 ][
   {
     ""sid"": ""30524"",
     ""Technique ID"": ""T1440"",
     ""Technique name"": ""Discovery of Software Components"",
     ""Quotes"": """"Discovery of Software Component techniques involve obtaining information about software components and their versions to aid in targeting and exploitation, such as performing reconnaissance on a system to determine which services and applications are running."""",
     ""Explanation"": ""The Snort rule identifies an attempt to exploit a heartbeat read overrun vulnerability in OpenSSL TLSv1.1, which could allow an attacker to obtain information about the target system and its software components.""
   }
 ][
         ""sid"": ""30524"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted OpenSSL TLSv1.1 heartbeat read overrun vulnerability exploit, which is a well-known technique used by attackers to compromise vulnerable servers by sending specially crafted packets to trigger a buffer overflow."""",
         ""Explanation"": ""An attacker could exploit this issue to crash a vulnerable application or execute arbitrary code with system privileges. ""
     ][
     {
         ""sid"": ""30524"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects a TLS/SSL heartbeat read overrun attempt, which is a technique used to exploit vulnerabilities in OpenSSL implementations to cause a denial of service (DoS) condition or potentially execute arbitrary code on the target system."""",
         ""Explanation"": ""The event describes an attempted TLS heartbeat read overrun against a server. A remote attacker could exploit this issue to cause a denial of service condition or potentially execute arbitrary code on the target system.""
     }
 ][
   {
     ""sid"": ""30524"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an OpenSSL TLSv1.1 heartbeat read overrun attempt, which is a known vulnerability that attackers could exploit to remotely execute arbitrary code on a vulnerable system. Attackers may leverage this vulnerability to gain unauthorized access to the target system and execute malicious code."""",
     ""Explanation"": ""This is related to the OpenSSL TLSv1.1 heartbeat, it is an attempt to exploit vulnerabilities in public facing applications.""
   }
 ][
   {
     ""sid"": ""30524"",
     ""Technique ID"": ""T1059"",
     ""Technique Name"": ""Modify Registry"",
     ""Quotes"": """"Modify Registry techniques involve altering the system registry to change settings, disable security features, or otherwise modify the system's behavior. This rule detects an attempt to exploit a vulnerability in the OpenSSL TLS library's heartbeat function, which could allow an attacker to trigger a heap-based buffer overflow and execute arbitrary code on the target system."""",
     ""Explanation"": ""This event is generated when OpenSSL TLSv1.1 heartbeat read overrun attempt is detected.""
   },
   {
     ""sid"": ""30524"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploit Remote Services"",
     ""Quotes"": """"Exploit Remote Services techniques involve targeting vulnerabilities in network services to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in the OpenSSL TLS library's heartbeat function, which could allow an attacker to trigger a heap-based buffer overflow and execute arbitrary code on the target system."""",
     ""Explanation"": ""This event is generated when OpenSSL TLSv1.1 heartbeat read overrun attempt is detected.""
   }
 ][
         ""sid"": ""30524"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted Heartbleed attack on a server, which is a known vulnerability in OpenSSL that allows attackers to steal data from vulnerable systems."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in the OpenSSL TLS heartbeat implementation is detected.""
     ][
   {
     ""sid"": ""30524"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted OpenSSL TLSv1.1 heartbeat read overrun vulnerability exploit, which could allow attackers to cause a denial of service (DoS) condition or execute arbitrary code on the target system. This technique is commonly used to exploit misconfigured web servers and other network-facing applications."""",
     ""Explanation"": ""This event is generated when a vulnerability in OpenSSL TLSv1.1 heartbeat read overrun is being exploited.""
   }
 ][
   {
     ""sid"": ""30524"",
     ""Technique ID"": ""T1482"",
     ""Technique Name"": ""Heartbeat"",
     ""Quotes"": """"The Heartbeat technique involves sending periodic heartbeat messages to a command-and-control server to maintain a connection and allow for remote control. This rule specifically detects an attempt to exploit a vulnerability in OpenSSL's implementation of the TLS heartbeat extension, which could allow an attacker to trigger a buffer overflow and execute arbitrary code on the target system."""",
     ""Explanation"": ""OpenSSL TLSv1.1 heartbeat read overrun attempt""
   }
 ]","['T1492', 'T1040', 'T1203', 'T1201', 'T1440', 'T1190', 'T1190', 'T1190', 'T1059', 'T1210', 'T1190', 'T1190', 'T1482']",['T1005']
28351,"[
         ""sid"": ""28351"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a vulnerability in Microsoft Windows Management Instrumentation (WMI) by accessing a specific ActiveX control through an object viewer, which could allow an attacker to gain elevated privileges or execute arbitrary code."""",
         ""Explanation"": ""This event is generated when activity relating to accessing the ActiveX control in Windows WMI is detected, which can be used for exploitation.""
     ][
         ""sid"": ""28351"",
         ""Technique ID"": ""T1123"",
         ""Technique name"": ""Native API"",
         ""Quotes"": """"Native API techniques involve interacting with the underlying native application programming interfaces (APIs) of an operating system or application to perform malicious actions. The rule detects an attempt to access the Windows Management Instrumentation (WMI) object viewer ActiveX control through a browser plugin, which can be part of an attack chain involving the exploitation of browser plugins to execute arbitrary code."""",
         ""Explanation"": ""This event is generated when an application accesses the Windows Management Instrumentation (WMI) object viewer ActiveX control through a browser plugin.""
     ][
   {
     ""sid"": ""28351"",
     ""Technique ID"": ""T1118"",
     ""Technique name"": ""Browser ActiveX Control Exploitation"",
     ""Quotes"": """"Browser ActiveX Control Exploitation involves exploiting vulnerabilities in ActiveX controls, often within browsers, to execute code on targeted systems."""",
     ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in Microsoft Windows WMI administrator tools object viewer ActiveX (CLSID: 745E2F95-D234-11D0-847A-00C04FD905E0), which could allow an attacker to execute arbitrary code on the target system.""
   },
   {
     ""sid"": ""28351"",
     ""Technique ID"": ""T1208"",
     ""Technique name"": ""ActiveX Control Download"",
     ""Quotes"": """"ActiveX Control Download techniques involve downloading ActiveX controls from a remote server and then executing them on the target system."""",
     ""Explanation"": ""This rule detects an attempt to download an ActiveX control from a remote server, which could be used as part of a Browser ActiveX Control Exploitation technique.""
   }
 ][
     ""sid"": ""28351"",
     ""Technique ID"": ""T1543"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of the Windows Management Instrumentation (WMI) ActiveX control in a web browser, which is a common method attackers use to compromise systems by exploiting vulnerabilities in browser plugins."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in a browser plugin is detected.""
 ][
   {
     ""sid"": ""28351"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or data from an external system into a compromised environment. This rule detects an attempt to access the Windows Management Instrumentation (WMI) administrator tools object viewer ActiveX class identifier (CLSID), which is a common method for attackers to gain remote access to a system by transferring malicious tools or scripts."""",
     ""Explanation"": ""This event is generated when an attempt to access the Windows Management Instrumentation (WMI) administrator tools object viewer ActiveX class identifier (CLSID) is detected.""
   }
 ][
         ""sid"": ""28351"",
         ""Technique ID"": ""T1203"",
         ""Technique name"": ""Exploitation for Client Execution"",
         ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client-side applications to execute arbitrary code or gain unauthorized access. This rule detects an attempt to exploit a vulnerability in the Microsoft Windows WMI administrator tools object viewer ActiveX control, which could allow an attacker to execute arbitrary code in the context of the user's browser."""",
         ""Explanation"": ""This rule triggers when attempts to access the Microsoft Windows WMI administrator tools object viewer ActiveX control are detected. Active X is a legacy technology and is subject to exploitation.""
     ][
     {
         ""sid"": ""28351"",
         ""Technique ID"": ""T1068"",
         ""Technique Name"": ""Browser Extensions"",
         ""Quotes"": """"Browser Extensions techniques involve abusing legitimate browser extensions to perform malicious activities, such as providing unauthorized access to sensitive data or executing arbitrary code. This rule detects an attempt to exploit a vulnerability in the Microsoft Windows WMI administrator tools object viewer ActiveX control via a browser plugin, which could allow attackers to gain unauthorized access to the system."""",
         ""Explanation"": ""Browser Extensions techniques involve abusing legitimate browser extensions to perform malicious activities, such as providing unauthorized access to sensitive data or executing arbitrary code.""
     },
     {
         ""sid"": ""28351"",
         ""Technique ID"": ""T1201"",
         ""Technique Name"": ""Use Alternate Communication Channel"",
         ""Quotes"": """"Use Alternate Communication Channel techniques involve using a method of communication that is different from the typical protocol for the underlying system or service. This rule detects an attempt to exploit a vulnerability in the Microsoft Windows WMI administrator tools object viewer ActiveX control via a browser plugin, which could allow attackers to establish a covert communication channel to exfiltrate sensitive data or issue commands."""",
         ""Explanation"": ""Use Alternate Communication Channel techniques involve using a method of communication that is different from the typical protocol for the underlying system or service.""
     }
 ][
     ""sid"": ""28351"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. ActiveX controls are often used to provide interactive features on web pages, but they can also be a source of security vulnerabilities. This rule detects an attempt to access the Windows Management Instrumentation (WMI) administrator tools object viewer ActiveX control, which could potentially be exploited by an attacker."""",
     ""Explanation"": ""This event is generated when an exploit is detected against Microsoft Windows WMI administrator tools object viewer ActiveX clsid access. This may be an attempt to exploit a vulnerability in the software.""
 ][
     {
         ""sid"": ""28351"",
         ""Technique ID"": ""T1114"",
         ""Technique Name"": ""Access Token Manipulation"",
         ""Quotes"": """"Access Token Manipulation techniques involve modifying an access token to operate under a different user or system security context to perform actions and bypass access controls. This rule detects manipulation of the Windows Management Instrumentation (WMI) registry key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\WBEM\\Scripting\\AllowAccess', which is often exploited to modify access tokens and gain elevated privileges."""",
         ""Explanation"": ""This event is a detection of an access token manipulation in a registry key that is used for the Windows Management Instrumentation scripting interface. This is a security risk because it could allow an attacker to gain unauthorized access to the system.""
     }
 ][
     {
         ""sid"": ""28351"",
         ""Technique ID"": ""T1124"",
         ""Technique Name"": ""System Time Discovery"",
         ""Quotes"": """""", ""Explanation"": ""This rule detects attempts to access the Windows Management Instrumentation (WMI) service, which can be used to obtain system time and other system information.""
     }
 ][
   {
     ""sid"": ""28351"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in the Microsoft Windows WMI administrator tools object viewer ActiveX control, which could allow an attacker to gain control of the system."""",
     ""Explanation"": ""Exploitation of vulnerability in the Microsoft Windows WMI administrator tools object viewer ActiveX control could allow remote attackers to execute arbitrary code.""
   }
 ]","['T1189', 'T1123', 'T1118', 'T1208', 'T1543', 'T1105', 'T1203', 'T1068', 'T1201', 'T1190', 'T1114', 'T1124', 'T1190']",['T1047']
1292,"[
   {
     ""sid"": ""1292"",
     ""Technique ID"": ""T1104"",
     ""Technique Name"": ""Directory Listing"",
     ""Quotes"": """"Directory Listing techniques involve attackers using specific commands to list files and directories on target systems to gather information about the system and identify potential targets for exploitation."""",
     ""Explanation"": ""This rule detects attempts to obtain a directory listing, which can be a sign of reconnaissance or unauthorized access. Attackers may use directory listing techniques to identify files and directories of interest or to gather information about the system's structure.""
   }
 ][][
   {
     ""sid"": ""1292"",
     ""Technique ID"": ""T1062"",
     ""Technique Name"": ""Directory Listing"",
     ""Quotes"": """"Directory Listing techniques involve using commands or APIs to list the contents of a directory on a system. This rule detects attempts to obtain directory listings, which can be used by adversaries to identify files and directories of interest, such as sensitive data or system configuration files."""",
     ""Explanation"": ""This rule detects the presence of unauthorized directory listing activity, which could be indicative of an attacker attempting to gather information about the system.""
   }
 ][
     {
         ""sid"": ""1292"",
         ""Technique ID"": ""T1127"",
         ""Technique name"": ""Directory Listing"",
         ""Quotes"": """"Directory Listing involves obtaining and using file and directory listings as a way of information gathering and data traversal. This rule detects an attempt to list directories on a remote system, as evidenced by the presence of the 'Volume Serial Number' string in the packet payload, which is commonly used as part of directory listing operations."""",
         ""Explanation"": ""This event is generated when an attempt to list directories on a remote system is detected.""
     }
 ][
     ""sid"": ""1292"",
     ""Technique ID"": ""T1056"",
     ""Technique name"": ""Input Capture"",
     ""Quotes"": """"Input Capture techniques involve intercepting and capturing user input data, such as keystrokes, to obtain sensitive information. This rule detects an attempt to perform directory listing, which could be used to gather information about the system and identify potential targets for exploitation."""",
     ""Explanation"": ""Directory listing attempts to collect information from a system's file system.""
 ][
   {
     ""sid"": ""1292"",
     ""Technique ID"": ""T1083"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching or enumerating files and directories to find information that might aid in targeting, lateral movement, or data exfiltration. This rule detects attempts to retrieve directory listings, which can reveal sensitive information such as file names and directory structures, aiding attackers in reconnaissance and planning further attacks."""",
     ""Explanation"": ""This rule detects directory listing attempts, which may be indicative of an attacker performing reconnaissance to identify sensitive information.""
   }
 ][
   {
     ""sid"": ""1292"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Drive-by Compromise"",
     ""Quotes"": """"Drive-by Compromise techniques involve attackers compromising a third-party website or service and hosting malicious content or exploiting vulnerabilities within the site or service to infect users who visit the site"""",
     ""Explanation"": ""This IDS rule is designed to detect an attempt to retrieve a directory listing from a remote host, which could be an indication of an attacker attempting to gather information about the system or to identify potential vulnerabilities.""
   },
   {
     ""sid"": ""1292"",
     ""Technique ID"": ""T1585"",
     ""Technique name"": ""Establish Accounts"",
     ""Quotes"": """"Establish Accounts techniques involve creating accounts on a target system to establish a foothold and facilitate persistence, privilege escalation, and other post-exploitation activities"""",
     ""Explanation"": ""This IDS rule could also be used to detect attackers attempting to create new accounts on the system, as part of their efforts to establish persistence and expand their access.""
   },
   {
     ""sid"": ""1292"",
     ""Technique ID"": ""T1114"",
     ""Technique name"": ""Email Collection"",
     ""Quotes"": """"Email Collection techniques involve collecting email messages or attachments for the purpose of intelligence gathering and/or data exfiltration"""",
     ""Explanation"": ""This IDS rule could also be used to detect attackers attempting to collect email messages or attachments from the system, as part of their efforts to gather sensitive information.""
   }
 ][
   {
     ""sid"": ""1292"",
     ""Technique ID"": ""T1518"",
     ""Technique name"": ""Software Discovery"",
     ""Quotes"": """"Software Discovery techniques involve actively or passively collecting information about software versions, updates, and service packs installed on a system. This rule detects the presence of a directory listing, which can reveal information about software and versions installed on a system."""",
     ""Explanation"": ""This event is related to directory listing. Directory listing is a technique that allows an attacker to view the files and directories on a remote server.""
   }
 ][
   {
     ""sid"": ""1292"",
     ""Technique ID"": ""T1042"",
     ""Technique name"": ""Directory Service Discovery"",
     ""Quotes"": """"Directory Service Discovery techniques involve enumerating or querying directory services to gather information about users, groups, and shared resources. The rule detects an 'ls' command being used to list directory contents, which could indicate an attempt to gather information about the system's file structure."""",
     ""Explanation"": ""This rule detects an 'ls' command being used to list directory contents, which could indicate an attempt to gather information about the system's file structure.""
   }
 ][
   {
     ""sid"": ""1292"",
     ""Technique ID"": ""T1564"",
     ""Technique name"": ""Obtain User/System Information"",
     ""Quotes"": """"Obtain User/System Information techniques involve gathering information about the system or user to gain situational awareness. This rule detects an attempt to obtain a directory listing, which can provide information about the system's files and structure."""",
     ""Explanation"": ""An attacker might attempt to obtain a directory listing of a system to gather information about the system's files and structure.""
   }
 ][
     {
         ""sid"": ""1292"",
         ""Technique ID"": ""T1075"",
         ""Technique name"": ""File and Directory Discovery"",
         ""Quotes"": """"An adversary may attempt to gain visibility into the file structure or specific directory listings of a host. Many compromised systems are compromised because of the inadvertent exposure of sensitive information about the system.  Obtaining information about a file structure may help the adversary with the ability to quickly interact with the system or pivot to other systems."""",
         ""Explanation"": ""The rule is triggered when an attempt is made to list directories on a remote host. Directory listing can reveal sensitive information about the host, such as the presence of sensitive files or the location of other vulnerable systems.""
     }
 ]","['T1104', 'T1062', 'T1127', 'T1056', 'T1083', 'T1189', 'T1585', 'T1114', 'T1518', 'T1042', 'T1564', 'T1075']",['T1592']
22034,"[
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1136"",
     ""Technique name"": ""Create Account"",
     ""Quotes"": """"Create Account techniques involve creating user accounts to maintain access to victim systems."""",
     ""Explanation"": ""This rule detects an outbound connection from a compromised host to a remote server, which is used by the OSX Flashback malware to create a new user account on the infected system, allowing the attacker to maintain persistent access.""
   },
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1074"",
     ""Technique name"": ""Data Staged"",
     ""Quotes"": """"Data Staged techniques involve staging collected data in a central location or directory prior to exfiltration."""",
     ""Explanation"": ""The malware variant stages the collected data, which includes information such as system configuration, installed applications, and user data, in a specific location before exfiltrating it to the attacker's server.""
   },
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1030"",
     ""Technique name"": ""Data Transfer Size Limits"",
     ""Quotes"": """"Data Transfer Size Limits techniques involve exfiltrating data in fixed size chunks instead of whole files or limiting packet sizes below certain thresholds."""",
     ""Explanation"": ""The malware uses a technique to limit the packet size below a certain threshold, making it harder for IDS and firewalls to detect the exfiltration.""
   }
 ][
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1003"",
     ""Technique Name"": ""OS Credential Dumping"",
     ""Quotes"": """"OS Credential Dumping techniques involve extracting credentials from an operating system, typically in the form of hashes or cleartext passwords. This rule detects an outbound connection from a compromised host to a malicious domain, indicating the potential exfiltration of stolen credentials."""",
     ""Explanation"": ""The rule detects an outbound connection from a compromised host to a malicious domain, indicating the potential exfiltration of stolen credentials.""
   },
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1566"",
     ""Technique Name"": ""Phishing"",
     ""Quotes"": """"Phishing techniques involve sending fraudulent messages to trick users into revealing sensitive information or taking actions that could compromise their systems. This rule detects malicious emails containing attachments that attempt to trick users into opening them, potentially leading to the installation of malware or the theft of sensitive information."""",
     ""Explanation"": ""The rule detects malicious emails that attempt to trick users into opening attachments, potentially leading to the installation of malware or the theft of sensitive information.""
   }
 ][
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1565"",
     ""Technique name"": ""Impair Defenses"",
     ""Quotes"": [
       """"""Impair Defenses techniques involve impairing security controls and defenses to make other attack techniques more effective.""""""
     ],
     ""Explanation"": ""This rule detects outbound connections made by the OSX Flashback malware variant, which is known to disable security features such as Gatekeeper and XProtect to evade detection and remain persistent on the system.""
   },
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1490"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": [
       """"""Web Shell techniques involve using a web shell, which is malicious code that provides attackers with a remote command execution capability on a web server, to interact with the underlying operating system.""""""
     ],
     ""Explanation"": ""The rule detects a connection to a specific URI and User-Agent string that is commonly used by attackers to establish a web shell on compromised web servers.""
   }
 ][
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1021"",
     ""Technique name"": ""Remote Services"",
     ""Quotes"": """"Remote Services techniques involve using valid accounts to log into a service that accepts remote connections, such as telnet, SSH, and VNC."""",
     ""Explanation"": ""This event is generated when malware establishes an outbound connection to a command and control (C2) server. The malware uses HTTP to communicate with the C2 server, and the URI (/auupdate/) and User-Agent header (x86_64|10.) are indicators of the Flashback malware variant.""
   },
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1496"",
     ""Technique name"": ""Resource Hijacking"",
     ""Quotes"": """"Resource Hijacking techniques involve leveraging the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability."""",
     ""Explanation"": ""The malware establishes an outbound connection to a C2 server, which could indicate that it is attempting to perform resource-intensive tasks, such as downloading and executing additional malware or exfiltrating data.""
   }
 ][
     {
         ""sid"": ""22034"",
         ""Technique ID"": ""T1559"",
         ""Technique name"": ""Inter-Process Communication"",
         ""Quotes"": """"Inter-Process Communication (IPC) techniques involve using operating system provided mechanisms to communicate between processes without the need for direct network access. The rule checks for a malware variant that uses HTTP headers to send data to a server, suggesting the use of HTTP IPC mechanisms to facilitate command and control communication."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     },
     {
         ""sid"": ""22034"",
         ""Technique ID"": ""T1070"",
         ""Technique name"": ""Indicator Removal"",
         ""Quotes"": """"Indicator Removal techniques are used to erase or manipulate artifacts that could point to malicious activity on a system, including logs, files, and registry entries. The rule monitors for suspicious activity that involves modifying HTTP headers, which might be an attempt to conceal malicious communications or evade detection."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching or enumerating files and directories within a host or network share to locate specific information."",
     ""Explanation"": ""The rule detects outbound connections to a specific URI (""/auupdate/"") and an HTTP header (""User-Agent"") containing a base64-encoded string that decodes to ""x86_64|10."". This behavior is associated with the Apple OSX Flashback malware, which attempts to connect to a remote server to retrieve additional components or exfiltrate data after initial infection.""
   },
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve abusing functionality provided by external-facing remote services, such as web servers, to access or manipulate systems or data."",
     ""Explanation"": ""The rule detects outbound connections to a remote server over HTTP, indicating the malware is attempting to communicate with a command and control server or exfiltrate data.""
   },
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1495"",
     ""Technique Name"": ""Firmware Corruption"",
     ""Quotes"": """"Firmware Corruption techniques involve modifying or overwriting the firmware of devices or systems to disrupt their normal operation or render them inoperable."",
     ""Explanation"": ""The rule does not directly relate to firmware corruption, but the malware (Flashback) has been known to modify system files and settings, which could potentially impact the firmware or boot process.""
   }
 ][
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1499"",
     ""Technique name"": ""Endpoint Denial of Service"",
     ""Quotes"": """"Endpoint Denial of Service (DoS) techniques involve actions taken by adversaries to temporarily or indefinitely disrupt the normal operation of a host, service, or network device, often with the goal of disrupting an organization's service delivery or business operations. This rule detects outbound connections from compromised hosts to a known command and control server associated with the Flashback malware, which is known to disrupt system functionality and steal sensitive information."""",
     ""Explanation"": ""Infection of Flashback malware which can cause denial of service by destroying processes""
   }
 ][
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1064"",
     ""Technique name"": ""Outbound Command and Control Communication"",
     ""Quotes"": """"Outbound Command and Control Communication techniques involve establishing communications with a remote command and control server to send information and receive commands. This rule detects outbound connections to a known command and control server used by the Flashback malware, which is a common method attackers use to establish a backdoor connection with infected systems."""",
     ""Explanation"": ""This event is generated when the Flashback malware is detected.""
   }
 ][
         ""sid"": ""22034"",
         ""Technique ID"": ""T1531"",
         ""Technique name"": ""Account Access Removal"",
         ""Quotes"": """"Account Access Removal techniques involve disabling or interrupting access to accounts and resources to impede an adversary's ability to access or operate within a system. This rule detects an attempt by malware to disable access to the system's security settings, such as disabling Windows Defender, which could allow the malware to evade detection and gain persistence on the system."""",
         ""Explanation"": ""This event is generated when the Protected Service Account (PSA) creation fails in Windows 10.""
     ][
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1497"",
     ""Technique Name"": ""Virtualization/Sandbox Evasion"",
     ""Quotes"": """"Virtualization/Sandbox Evasion techniques involve employing various means to detect and avoid virtualization and analysis environments. This rule detects an attempt to determine whether the system is running in a virtualized environment by checking for the presence of certain virtualization-related files and directories."""",
     ""Explanation"": ""This event is generated when communication with a known malicious host is detected.""
   }
 ][
   {
     ""sid"": ""22034"",
     ""Technique ID"": ""T1071"",
     ""Technique name"": ""Data Exfiltration"",
     ""Quotes"": """"Data Exfiltration techniques involve transferring data from a compromised system to an external location. The rule detects an outbound connection made by the OSX Flashback malware variant, which is known to exfiltrate data by sending it to a remote server. This behavior matches the definition of data exfiltration, where an attacker transfers data from a compromised system to an external location."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1136', 'T1074', 'T1030', 'T1003', 'T1566', 'T1565', 'T1490', 'T1021', 'T1496', 'T1559', 'T1070', 'T1083', 'T1133', 'T1495', 'T1499', 'T1064', 'T1531', 'T1497', 'T1071']",['T1001']
1122,"[
   {
     ""sid"": ""1122"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Credential Harvesting: Web"",
     ""Quotes"": """"Credential Harvesting: Web techniques involve collecting credentials from websites or web services where users authenticate. This rule specifically looks for access attempts to '/etc/passwd', which is a sensitive file containing system user information and credentials. Attackers may attempt to access this file to obtain user credentials or identify potential targets for further exploitation."""",
     ""Explanation"": ""Recon from a remote host.""
   }
 ][
     ""sid"": ""1122"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""System Information Discovery"",
     ""Quotes"": """"System Information Discovery techniques involve gathering information about a system's configuration, hardware, and software to identify potential vulnerabilities or establish a baseline for future attacks. This rule detects an attempt to access the '/etc/passwd' file, which contains sensitive user account information, over the HTTP protocol."""",
     ""Explanation"": ""This event is generated when a web service is accessed.""
 ][
   {
     ""sid"": ""1122"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching for interesting files or directory listings to learn more about the target environment. The rule detects an attempt to access the '/etc/passwd' file, which contains system user account information, indicating an attempt by adversaries to gather information about the system."""",
     ""Explanation"": ""This event is generated when an attempt to access the '/etc/passwd' file, which contains system user account information is detected, this may be an attempt by adversaries to gather information about the system.""
   }
 ][
   {
     ""sid"": ""1122"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve identifying files and directories of interest on a system for the purpose of locating and accessing data, programs, or other assets. The rule indicates an attempt to access the '/etc/passwd' file, which is a common target for attackers as it contains system user account information."""",
     ""Explanation"": ""This rule is triggered when an attacker tries to access the '/etc/passwd' file, which contains sensitive information about system user accounts.""
   }
 ][
   {
     ""sid"": ""1122"",
     ""Technique ID"": ""T1591"",
     ""Technique Name"": ""Gather Victim Org Information"",
     ""Quotes"": """"Gather Victim Org Information techniques involve adversaries gathering information about the victim's organization that can be used during targeting. This rule detects an attempt to access the '/etc/passwd' file, which contains sensitive information about user accounts and system settings."""",
     ""Explanation"": ""This event is generated when activity relating to web application reconnaissance is detected.""
   }
 ][
   {
     ""sid"": ""1122"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve searching for directories and files with specific characteristics that are likely to contain sensitive information, such as passwords or configuration files. This rule detects attempts to access the '/etc/passwd' file on a web server, which may indicate an attempt to gather valid user account information for subsequent attacks."""",
     ""Explanation"": ""The rule detects a web server attempt to access '/etc/passwd', a common location for storing user account data, including usernames and hashed passwords.""
   }
 ][
   {
     ""sid"": ""1122"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve identifying and locating files and directories of interest on a system to gather information about the environment and identify potential targets for exploitation."""",
     ""Explanation"": ""This rule triggers when a user attempts to access the '/etc/passwd' file through HTTP, which is a common reconnaissance technique for gathering information about the operating system and user accounts.""
   }
 ][
     ""sid"": ""1122"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques allow adversaries to obtain a listing of directories and files within a system as well as detailed information about these files (e.g., file attributes, file hashes, or file permissions). This rule is designed to detect remote access to the '/etc/passwd' password file, which contains usernames and other user account information, indicating an attempt to gather information for potential exploitation."""",
     ""Explanation"": ""It is a special file that stores a list of system passwords and login information for the users. An attacker could use this file to gather information about the system's users and their privileges, which can be useful in planning further attacks.""
 ][
   {
     ""sid"": ""1122"",
     ""Technique ID"": ""T1087"",
     ""Technique Name"": ""Account Discovery"",
     ""Quotes"": ""\""Account Discovery techniques involve obtaining a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This rule detects an attempt to access the '/etc/passwd' file, which contains a list of system user accounts and their associated information."",
     ""Explanation"": ""The rule is triggered when an attempt to access the '/etc/passwd' file is detected, indicating an attempt to gather information about valid user accounts on the system.""
   }
 ][
     ""sid"": ""1122"",
     ""Technique ID"": ""T1087"",
     ""Technique name"": ""File and Directory Discovery"",
     ""Quotes"": """"File and Directory Discovery techniques involve attempts to identify all files and directories within a system to find files that may be accessible or contain sensitive information. This rule detects an HTTP request for '/etc/passwd', which is a common target for attackers to obtain usernames and password hashes on Unix systems, demonstrating an attempt to identify and access sensitive files."""",
     ""Explanation"": ""The rule generates an alert when an HTTP request is made to access the '/etc/passwd' file, which contains sensitive information about user accounts.""
 ][
     {
         ""sid"": ""1122"",
         ""Technique ID"": ""T1087"",
         ""Technique name"": ""File and Directory Discovery"",
         ""Quotes"": """"File and Directory Discovery involves identifying useful files and directories on a target system to assist in compromise or as objectives to attack. The rule detects an attempt to access the /etc/passwd file via an HTTP request, a common method for attackers to gather information about the system and its users."""",
         ""Explanation"": ""This event is generated when an attempt to access the /etc/passwd file is detected, which can be an indication of reconnaissance activity.""
     }
 ]","['T1087', 'T1087', 'T1087', 'T1087', 'T1591', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087', 'T1087']",['T1087']
42331,"[
     {
         ""sid"": ""42331"",
         ""Technique ID"": ""T1055"",
         ""Technique Name"": ""Process Injection"",
         ""Quotes"": """"Process Injection techniques involve injecting malicious code into a legitimate process, often to gain elevated privileges or execute arbitrary commands. This rule specifically detects an attempt to inject a Trojan (Doublepulsar variant) into a process using Server Message Block (SMB) protocol, which is a common method used by attackers to achieve persistence on compromised systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""42331"",
     ""Technique ID"": ""T1055"",
     ""Technique Name"": ""Process Injection"",
     ""Quotes"": """"Process Injection techniques involve injecting malicious code into a legitimate process to execute arbitrary code or elevate privileges. The rule detects an attempt by a Doublepulsar variant to inject itself into a process using a SMB Trans2 request (SMB mid 66), which is a common method attackers use to gain persistence on a system by injecting malicious code into a running process."""",
     ""Explanation"": ""The rule triggers when a SMB Trans2 request containing specific patterns is detected, indicating an attempt to inject malicious code into a process. The rule specifically targets a variant of the Doublepulsar malware, which is known for its process injection capabilities.""
   }
 ][
   {
     ""sid"": ""42331"",
     ""Technique ID"": ""T1055"",
     ""Technique Name"": ""Process Injection"",
     ""Quotes"": """"Process Injection techniques involve injecting malicious code into a running process in order to gain control of that process. The rule detects suspicious SMB traffic, specifically a sequence of SMB commands used by the Doublepulsar Trojan to inject malicious code into a process, indicating an attempt to gain unauthorized access and control of the system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""42331"",
         ""Technique ID"": ""T1055"",
         ""Technique name"": ""Process Injection"",
         ""Quotes"": """"Process Injection techniques involve injecting malicious code into a legitimate running process in order to gain control of that process and execute arbitrary code. This rule detects an attempt by the Win.Trojan.Doublepulsar malware to inject code into a legitimate process, specifically by sending a malicious SMB packet with a 'Type 2 - Trans2 Response' header and a 'MID 66' flag."""",
         ""Explanation"": ""This rule detects an attempt by the Win.Trojan.Doublepulsar malware to inject code into a legitimate process, specifically by sending a malicious SMB packet with a 'Type 2 - Trans2 Response' header and a 'MID 66' flag.""
     },
     {
         ""sid"": ""42331"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using an adversary-controlled web shell to execute arbitrary commands on a system. This can be achieved by uploading a web shell to a vulnerable web server and then accessing it via a web request. The web shell can then be used to perform actions such as uploading and executing malware, or modifying system files."""",
         ""Explanation"": ""This rule also detects the use of a web shell to execute arbitrary commands on a system.""
     }
 ][
   {
     ""sid"": ""42331"",
     ""Technique ID"": ""T1055"",
     ""Technique Name"": ""Process Injection"",
     ""Quotes"": """"Process Injection techniques involve injecting malicious code into a running process to gain control of that process and execute arbitrary code. This rule detects an attempt to inject shellcode into a process using the SMB protocol, which is a common method used by malware to establish persistence on a system."""",
     ""Explanation"": ""This alert is generated when a client system attempts to inject malicious code into a process on the local network""
   }
 ][
   {
     ""sid"": ""42331"",
     ""Technique ID"": ""T1055"",
     ""Technique Name"": ""Process Injection"",
     ""Quotes"": """"Process Injection techniques involve injecting malicious code into a legitimate process to gain control or manipulate its behavior. This rule detects an attempt to inject a Win.Trojan.Doublepulsar variant into the Microsoft Server Message Block (SMB) service, which is a common method attackers use to gain unauthorized access and execute arbitrary code on target systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""42331"",
     ""Technique ID"": ""T1068"",
     ""Technique Name"": ""Exploitation for Privilege Escalation"",
     ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting software vulnerabilities to elevate privileges or gain unauthorized access to sensitive information. This rule detects an attempt to exploit a vulnerability in the SMB service to gain elevated privileges on the target system, which is a common method attackers use to escalate their access and perform malicious activities."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability in the SMB service is detected.""
   }
 ][
   {
     ""sid"": ""42331"",
     ""Technique ID"": ""T1055"",
     ""Technique name"": ""Process Injection"",
     ""Quotes"": """"Process injection involves injecting malicious code into a running process to execute it with the privileges of that process. This rule detects a malicious packet targeting Samba (SMB) servers that attempts to inject shellcode into a running process."",
     ""Explanation"": ""This event is generated when a malicious code tries to use a legitimate process to inject into it to gain access in the system.""
   }
 ][
         ""sid"": ""42331"",
         ""Technique ID"": ""T1055"",
         ""Technique name"": ""Process Injection"",
         ""Quotes"": """"Process Injection involves injecting malicious code into a running process on a target system. This rule detects a technique used by the Win.Trojan.Doublepulsar variant, in which it injects malicious code into a legitimate process (in this case, svchost.exe) to gain control of the system and execute its malicious payload."""",
         ""Explanation"": ""Possible Process Injection: Doublepulsar sends some data to legitimate processes (e.g. svchost.exe) to inject shellcode into them through memory corruption.""
     ][
   {
     ""sid"": ""42331"",
     ""techniqueId"": ""T1055"",
     ""techniqueName"": ""Process Injection"",
     ""quotes"": [
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""",
       """"""""Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""""",
       """"Process injection involves injecting malicious code into a legitimate process in order to gain control of that process' execution. This technique can be used to elevate privileges, execute arbitrary code, or bypass security controls."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a compromised process."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a legitimate process."""",
       """"Process Injection involves injecting malicious code into a legitimate process in order to gain control of that process' execution. This technique can be used to elevate privileges, execute arbitrary code, or bypass security controls."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""",
       """"Process injection involves injecting malicious code into a legitimate process in order to gain control of that process' execution. This technique can be used to elevate privileges, execute arbitrary code, or bypass security controls."""",
       """"Process Injection involves injecting malicious code into a legitimate process in order to gain control of that process' execution. This technique can be used to elevate privileges, execute arbitrary code, or bypass security controls."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a compromised process."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a legitimate process."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""""",
       """"Process injection involves injecting malicious code into a legitimate process in order to gain control of that process' execution. This technique can be used to elevate privileges, execute arbitrary code, or bypass security controls."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a compromised process."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a legitimate process."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""""",
       """"Process injection involves injecting malicious code into a legitimate process in order to gain control of that process' execution. This technique can be used to elevate privileges, execute arbitrary code, or bypass security controls."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a compromised process."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a legitimate process."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""""",
       """"Process injection involves injecting malicious code into a legitimate process in order to gain control of that process' execution. This technique can be used to elevate privileges, execute arbitrary code, or bypass security controls."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a compromised process."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a legitimate process."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""""",
       """"Process injection involves injecting malicious code into a legitimate process in order to gain control of that process' execution. This technique can be used to elevate privileges, execute arbitrary code, or bypass security controls."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a compromised process."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a legitimate process."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""""",
       """"Process injection involves injecting malicious code into a legitimate process in order to gain control of that process' execution. This technique can be used to elevate privileges, execute arbitrary code, or bypass security controls."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a compromised process."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a legitimate process."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""""",
       """"Process injection involves injecting malicious code into a legitimate process in order to gain control of that process' execution. This technique can be used to elevate privileges, execute arbitrary code, or bypass security controls."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a compromised process."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a legitimate process."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""""",
       """"Process injection involves injecting malicious code into a legitimate process in order to gain control of that process' execution. This technique can be used to elevate privileges, execute arbitrary code, or bypass security controls."""",
       """"Process Injection techniques involve injecting malicious code into a legitimate process, such as via a vulnerability in the process' memory, to gain control of the process' execution flow."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a compromised process."""",
       """"Process injection is a technique used by attackers to execute malicious code in the context of a legitimate process.""""
     ],
     ""explanation"": ""The rule detects the injection of malicious code into the SMB service (port 445).""
   }
 ][
   {
     ""sid"": ""42331"",
     ""Technique ID"": ""T1055"",
     ""Technique name"": ""Process Injection"",
     ""Quotes"": """"Process Injection is a technique commonly used by malware to execute malicious code in the memory space of a legitimate process. In this example, the rule detects a Win.Trojan.Doublepulsar variant using process injection to establish a command and control connection. The rule looks for specific SMB protocol sequences and patterns that indicate a malicious process injection attempt."""",
     ""Explanation"": ""This Snort rule is looking for a specific SMB pattern that is associated with the Win.Trojan.Doublepulsar variant of the Doublepulsar malware. Doublepulsar is a backdoor that uses process injection to gain access to a system. The rule will trigger an alert if this pattern is detected in network traffic, indicating that the malware is attempting to establish a connection with a command and control server.""
   }
 ][
   {
     ""sid"": ""42331"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve using an operating system shell to execute commands or scripts that enable interaction with the underlying system for various purposes, such as executing binaries, modifying files, and running scripts. This rule detects an SMB variant of the 'Doublepulsar' backdoor that injects a malicious DLL into memory using the 'rundll32' utility, which is a common method attackers use to execute commands and scripts on compromised systems."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""42331"",
     ""Technique ID"": ""T1055"",
     ""Technique name"": ""Process Injection"",
     ""Quotes"": """"Process Injection techniques involve injecting code into a running process in order to gain control of that process and execute arbitrary code. This rule detects an SMB variant of the 'Doublepulsar' backdoor that injects a malicious DLL into memory using the 'rundll32' utility, which is a common method attackers use to inject malicious code into running processes."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   },
   {
     ""sid"": ""42331"",
     ""Technique ID"": ""T1074"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data, such as configuration files or credentials, to evade detection and analysis. This rule detects an SMB variant of the 'Doublepulsar' backdoor that uses encryption to protect its communications, making it more difficult to detect and analyze."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ]","['T1055', 'T1055', 'T1055', 'T1055', 'T1105', 'T1055', 'T1055', 'T1068', 'T1055', 'T1055', 'T1055', 'T1055', 'T1059', 'T1055', 'T1074']","['T1189', 'T1055']"
19559,"[
   {
     ""sid"": ""19559"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Brute Force"",
     ""Quotes"": """"Brute force is a trial-and-error method for guessing valid credentials. The rule detects multiple SSH login attempts from a single source IP within a short time frame, which is indicative of a brute force attack."""",
     ""Explanation"": ""SSH brute force login attempt.""
   }
 ][
   {
     ""sid"": ""19559"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""SSH Brute Force"",
     ""Quotes"": """"SSH Brute Force techniques involve brute-forcing credentials to gain unauthorized access to SSH servers. The rule triggers when multiple failed login attempts are detected, indicating a potential brute-force attack."""",
     ""Explanation"": ""SSH brute force attack targeting an SSH server.""
   }
 ][
     {
         ""sid"": ""19559"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute Force techniques involve attempting to access a system or account using a series of guesses for credentials. This rule detects an SSH brute force attempt, where multiple login attempts are made in a short period of time, indicating the potential use of automated tools to guess the password."""",
         ""Explanation"": ""SSH login attempt detected.""
     }
 ][
         ""sid"": ""19559"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": "" Brute Force"",
         ""Quotes"": """"Brute Force techniques involve repeatedly trying combinations of known or potential passwords or keys until arriving at the correct one. This rule detects attempts to brute force SSH logins by monitoring for repeated failed SSH login attempts within a short time frame, which is a common method attackers use to guess legitimate credentials."""",
         ""Explanation"": ""This rule detects a brute force login attempt over an SSH protocol, where an attacker tries multiple combinations of known or potential passwords or keys to gain access""
     ][
         ""sid"": ""19559"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute force techniques involve using automated tools to try a very large number of possible combinations to guess credentials or other secrets. In this rule, the detection of repeated SSH login attempts, potentially involving a large number of username and password combinations, suggests an attempt to brute-force SSH credentials."""",
         ""Explanation"": ""This event is generated when an SSH brute force login attempt is detected.""
     ][
     ""sid"": ""19559"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute force techniques involve using or generating credentials through repeated attempts, often using automated tools to test numerous combinations of usernames and passwords or exploit weak password policies."""",
     ""Explanation"": ""This rule triggers when an SSH brute force login attempt is detected. The content field indicates the presence of the string ""SSH-"", which is a common indicator of SSH protocol communication. The rule also employs flow tracking and a detection filter to detect repeated login attempts from the same source IP address within a short time frame.""
 ][
     {
         ""sid"": ""19559"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted brute force attack on an SSH server, which is a common method attackers use to exploit weak passwords and gain access to systems."""",
         ""Explanation"": ""This event is generated when activity relating to brute force is detected.""
     }
 ][
   {
     ""sid"": ""19559"",
     ""Technique ID"": ""T1110"",
     ""Technique name"": ""Brute Force"",
     ""Quotes"": """"Brute Force techniques involve repeatedly attempting different combinations of usernames and passwords to gain unauthorized access to a system. This rule detects brute-force login attempts via SSH by monitoring for repeated 'SSH-' messages, indicating multiple login attempts within a short period of time."""",
     ""Explanation"": ""SSH brute force attack is a common method attackers use to gain unauthorized access to systems by repeatedly trying different combinations of usernames and passwords.""
   }
 ][
         ""sid"": ""19559"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute force techniques involve systematically guessing user credentials until a valid combination is found, often using automated tools to increase the number of guesses per second."""",
         ""Explanation"": ""The rule detects SSH brute force attacks, where an attacker attempts to guess valid user credentials by trying multiple combinations in a short period of time.""
     ][
     {
         ""sid"": ""19559"",
         ""Technique ID"": ""T1110"",
         ""Technique Name"": ""Brute Force"",
         ""Quotes"": """"Brute force techniques involve attempting to gain access to a system, account, or other resource by trying numerous combinations of usernames, passwords, PINs, or other credentials. The rule detects multiple SSH login attempts from a single source IP address within a short time frame, indicating a potential brute-force attack."""",
         ""Explanation"": ""This rule detects an attempt by an external IP address to log into the SSH service on a host within the internal network. The rule triggers when the external IP address sends an SSH login request to the internal host, and the login attempt fails. The rule also includes a detection filter that tracks the number of login attempts from the same source IP address within a one-minute period. If the number of login attempts exceeds 5 within the one-minute period, the rule triggers and generates an alert.""
     }
 ][
         ""sid"": ""19559"",
         ""Technique ID"": ""T1110"",
         ""Technique name"": ""Brute Force"",
         ""Quotes"": """"Brute force is a technique used to discover valid credentials through automated and repeated attempts to login using common or guessed credentials. The rule pertains to a SSH brute force login attempt originating from outside the network, where repeated SSH login attempts are detected, which aligns with the characteristics of a brute force attack."""",
         ""Explanation"": ""This rule looks for SSH brute force login attempts.""
     ]","['T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1110', 'T1190', 'T1110', 'T1110', 'T1110', 'T1110']",['T1018']
408,"[
   {
     ""sid"": ""408"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This event is triggered when an ICMP echo reply is received from an external source. This can be part of a reconnaissance technique or an attempt to map out the network infrastructure.""
   }
 ][
   {
     ""sid"": ""408"",
     ""Technique ID"": ""T1492"",
     ""Technique Name"": ""ICMP Information Gathering"",
     ""Quotes"": """"ICMP Information Gathering techniques involve sending crafted ICMP packets to elicit information about a targeted system. This rule specifically detects ICMP Echo Reply messages with ICMP code 0 and type 0, which are used for network discovery and mapping. By sending these packets, adversaries can gather information about the network topology and identify potential targets."""",
     ""Explanation"": ""This event is generated when ICMP Echo Reply messages are detected.""
   }
 ][
   {
     ""sid"": ""408"",
     ""Technique ID"": ""T1040"",
     ""Technique Name"": ""Network Service Scanning"",
     ""Quotes"": """"Network Service Scanning techniques involve using tools and techniques to gather information about network services, such as their availability, capabilities, and vulnerabilities. This rule detects ICMP echo reply packets, which are used for network service scanning to determine which hosts are alive and responding to requests."""",
     ""Explanation"": ""This rule is used to detect ICMP echo reply packets, which are commonly used for network service scanning to identify active hosts on a network.""
   },
   {
     ""sid"": ""408"",
     ""Technique ID"": ""T1595"",
     ""Technique Name"": ""Network Share Discovery"",
     ""Quotes"": """"Network Share Discovery techniques involve searching for and identifying network shares, such as SMB, NFS, and AFP, within a network. This rule detects ICMP echo reply packets, which can be used for network share discovery by probing for SMB services, which are commonly used for file sharing in Windows environments."""",
     ""Explanation"": ""This rule is used to detect ICMP echo reply packets, which can be used for network share discovery by probing for SMB services.""
   }
 ][
   {
     ""sid"": ""408"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted SQL injection attack on a Microsoft IIS web server, using a specific pattern in the HTTP request to exploit a known vulnerability."""",
     ""Explanation"": ""This event is generated when a potential exploit of a web application vulnerability is detected.""
   }
 ][
   {
     ""sid"": ""408"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
   }
 ][
   {
     ""sid"": ""408"",
     ""Technique ID"": ""T1133"",
     ""Technique name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging external-facing remote services to gain initial access to and/or persist within a network. This rule detects ICMP echo replies from an external network, which could indicate an attacker using ICMP to probe the network for potential entry points or to maintain persistence by establishing covert communication channels."""",
     ""Explanation"": ""ICMP is a protocol used for network troubleshooting. It can be used to send echo requests to see if a host is alive and to measure the round-trip time of a packet.""
   }
 ][
   {
     ""sid"": ""408"",
     ""Technique ID"": ""T1194"",
     ""Technique name"": ""Ping"",
     ""Quotes"": """"Ping techniques involve sending ICMP echo request messages to a target host to determine its reachability and collect information about its network configuration. This rule detects ICMP echo reply messages, which are typically used for network reconnaissance and discovery purposes. By sending ping requests, adversaries can identify and map the network infrastructure, including active hosts and their IP addresses."""",
     ""Explanation"": ""This rule is meant for detecting ping activity""
   }
 ][][
         ""sid"": ""408"",
         ""Technique ID"": ""T1584"",
         ""Technique name"": ""ICMP Network Reconnaissance"",
         ""Quotes"": """"ICMP Network Reconnaissance techniques involve using Internet Control Message Protocol (ICMP) packets to gather information about a network's structure and connectivity. This rule detects ICMP echo reply packets, which can be used by attackers to map out the network's topology, identify active hosts, and pinpoint potential targets for further exploitation."""",
         ""Explanation"": ""ICMP echo request and response packets used for reconnaissance of a network.""
     ][
         ""sid"": ""408"",
         ""Technique ID"": ""T1040"",
         ""Technique name"": ""Network Service Scanning"",
         ""Quotes"": """"Network Service Scanning techniques involve gathering information about network services and hosts, such as operating systems, software, and open ports. This rule matches ICMP echo reply packets (ping), which can be used to identify and fingerprint systems by determining their availability and responsiveness."""",
         ""Explanation"": ""This event is generated when ping traffic is detected.""
     ][
   {
     ""sid"": ""408"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""SQL injection vulnerability in the management console in Symantec Web Gateway 5.0.x before 5.0.3.18 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, related to a ""blind SQL injection"" issue.""
   }
 ]","['T1190', 'T1492', 'T1040', 'T1595', 'T1190', 'T1190', 'T1133', 'T1194', 'T1584', 'T1040', 'T1190']",['T1018']
1071,"[
   {
     ""sid"": ""1071"",
     ""Technique ID"": ""T1110"",
     ""Technique Name"": ""Harvesting Passwords"",
     ""Quotes"": """"Harvesting Passwords techniques involve retrieving plaintext passwords from target systems, often via malicious code or by exploiting vulnerabilities in web applications to access password storage mechanisms."""",
     ""Explanation"": ""This event is generated when an attempt is made to access a password file on the webserver.""
   }
 ][
     {
         ""sid"": ""1071"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted access to a '.htpasswd' file, which is commonly used to store hashed passwords for web applications. Attackers often target '.htpasswd' files to obtain credentials that can be used to compromise the underlying web application."""",
         ""Explanation"": ""Rule detects an attempt to access a .htpasswd file, which typically contains hashed passwords.""
     },
     {
         ""sid"": ""1071"",
         ""Technique ID"": ""T1588"",
         ""Technique name"": ""Obtain Capabilities"",
         ""Quotes"": """"Obtain Capabilities techniques involve acquiring capabilities that can be used during targeting. This rule detects an attempted access to a '.htpasswd' file, which is a common target for attackers seeking to obtain credentials that can be used to compromise a web application. Obtaining these credentials would provide the attacker with the capability to impersonate legitimate users and access sensitive data."""",
         ""Explanation"": ""Rule detects an attempt to access a .htpasswd file, which typically contains hashed passwords.""
     }
 ][
   {
     ""sid"": ""1071"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted access to the '.htpasswd' file, which contains usernames and encrypted passwords for a web application, indicating an attempt to gain unauthorized access to the application."""",
     ""Explanation"": ""This rule detects access to .htpasswd files, which contain hashed credentials and allow attackers to gain access to the application.""
   }
 ][
     ""sid"": ""1071"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access '.htpasswd' files, which are commonly used to store hashed credentials for web applications, indicating that an attacker is trying to exploit a vulnerability in the web application to gain access to user credentials."""",
     ""Explanation"": """"
 ][
   {
     ""sid"": ""1071"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Attackers often exploit publicly known vulnerabilities to gain access to web applications"",
     ""Explanation"": ""This rule detects an access attempt to the '.htpasswd' file, which is commonly used for HTTP authentication.""
   }
 ][
     {
         ""sid"": ""1071"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted access to a '.htpasswd' file, which is a common file used to store hashed credentials for web applications. Attackers often target such files to obtain unauthorized access to web applications."""",
         ""Explanation"": ""This rule detects an attempt to access a '.htpasswd' file, which is a common file used to store hashed credentials for web applications. Attackers often target such files to obtain unauthorized access to web applications.""
     }
 ][
   {
     ""sid"": ""1071"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""This rule detects attempts to access a "".htpasswd"" file, which is commonly used for HTTP authentication. Attackers may attempt to exploit vulnerabilities in the web application to gain unauthorized access to the "".htpasswd"" file and obtain user credentials.""
   }
 ][
   {
     ""sid"": ""1071"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""Enumerate Password Policies"",
     ""Quotes"": """"Enumerate Password Policies techniques involve discovering information about an organization's password policies, such as password length, complexity requirements, and lockout thresholds."""",
     ""Explanation"": ""The rule flags an attempt to access .htpasswd, a file commonly used for password storage in web servers. Attackers often attempt to access this file to gather information about password policies and identify weak passwords.""
   }
 ][
   {
     ""sid"": ""1071"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access a '.htpasswd' file, which is commonly used to store usernames and passwords for accessing a web application. Attackers may target this file to obtain credentials and gain unauthorized access to the application."""",
     ""Explanation"": ""This rule detects .htpasswd file access attempts, which can be used to gain unauthorized access to a web application.""
   }
 ][
     ""sid"": ""1071"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. Web applications are a common target for attackers, as they often contain vulnerabilities that can be exploited to gain access to sensitive data or compromise the system. This rule detects an attempt to access a '.htpasswd' file, which is a common file used to store usernames and passwords for web applications."""",
     ""Explanation"": ""This rule is triggered when an attempt is made to access a '.htpasswd' file, which is a common file used to store usernames and passwords for web applications.""
 ][
         ""sid"": ""1071"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted HTTP access to '.htpasswd' file, which contains authentication credentials for a web application. Attackers often target this file to gain unauthorized access to the application."""",
         ""Explanation"": ""This rule triggers when someone tries to access the '.htpasswd' file, which contains the password for a web server.""
     ],
     [
         ""sid"": ""1071"",
         ""Technique ID"": ""T1581"",
         ""Technique name"": ""Credential Harvesting: Application"",
         ""Quotes"": """"Credential Harvesting techniques involve obtaining credentials from applications, such as web servers, email clients, and other software. This rule specifically detects an attempt to access the '.htpasswd' file, which is a common target for attackers to obtain credentials for web applications."""",
         ""Explanation"": ""This rule triggers when someone tries to access the '.htpasswd' file, which contains the password for a web server.""
     ]","['T1110', 'T1190', 'T1588', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190', 'T1133', 'T1190', 'T1190', 'T1190', 'T1581']",['T1081']
1434,"[
   {
     ""sid"": ""1434"",
     ""Technique ID"": ""T1139"",
     ""Technique Name"": ""Access .bash_history"",
     ""Quotes"": """"Access .bash_history techniques involve retrieving the '.bash_history' file to obtain details about previously executed commands and arguments, providing insight into user activity and potentially revealing sensitive information."""",
     ""Explanation"": ""This event is generated when .bash_history file is accessed.""
   }
 ][
     {
         ""sid"": ""1434"",
         ""Technique ID"": ""T1139"",
         ""Technique name"": ""Access Web Server Configuration Files"",
         ""Quotes"": """"Access Web Server Configuration Files techniques involve accessing and modifying web server configuration files, such as '.htaccess' and '.web.config', to gain unauthorized access or bypass security controls."""",
         ""Explanation"": ""This rule detects an attempt to access the '.bash_history' file on a web server, which contains a history of executed commands, potentially allowing an attacker to gain insights into user activity and system commands.""
     }
 ][
     {
         ""sid"": ""1434"",
         ""Technique ID"": ""T1139"",
         ""Technique name"": ""Access Web Server Root Directory"",
         ""Quotes"": """"Access Web Server Root Directory techniques involve accessing the root directory of a web server to identify files or directories that may contain sensitive information or to gain additional access to the system. This rule detects an attempt to access the '.bash_history' file, which contains a history of commands executed by users, indicating an attempt to obtain sensitive information."""",
         ""Explanation"": ""This event is generated when the system detects an attempt to access the root directory of a web server.""
     }
 ][
   {
     ""sid"": ""1434"",
     ""Technique ID"": ""T1139"",
     ""Technique name"": ""Access Web Service"",
     ""Quotes"": """"Access Web Service techniques involve accessing web services to obtain information or to execute actions. \""Access\"" in this context refers to accessing web service APIs and does not necessarily involve accessing web service frontends through a web browser (e.g., via GUI or web interface). This rule detects an attempt to access a '.bash_history' file, which could indicate unauthorized access to a web-based shell or command injection."""",
     ""Explanation"": ""In this case, the rule triggers due to detection of an attempt to access a .bash_history file, which may indicate the attacker is attempting to compromise the web server by exploiting a command injection vulnerability in the application.""
   }
 ][
     {
         ""sid"": ""1434"",
         ""Technique ID"": ""T1139"",
         ""Technique name"": ""Access .bash_history"",
         ""Quotes"": """"Access .bash_history techniques involve reading the .bash_history file to obtain a list of previously executed commands. This rule detects an attempt to access the '.bash_history' file, which can provide attackers with valuable information about user activity and system configurations."""",
         ""Explanation"": ""This event is generated when an attempt to access the .bash_history file is detected.""
     }
 ][
   {
     ""sid"": ""1434"",
     ""Technique ID"": ""T1139"",
     ""Technique Name"": ""Access Web Application Files"",
     ""Quotes"": """"Access Web Application Files techniques involve accessing and possibly modifying web application files to gain insights into the application's functionality or to compromise sensitive data. This rule specifically detects attempts to access the '/.bash_history' file on a web server, which contains a history of commands executed by users. Attackers can leverage such information to identify potential vulnerabilities or gain unauthorized access."""",
     ""Explanation"": """"The rule is designed to detect attempts to access the '.bash_history' file, which contains a history of executed commands.""
   }
 ][
         {
             ""sid"": ""1434"",
             ""Technique ID"": ""T1139"",
             ""Technique name"": ""Access Token Manipulation"",
             ""Quotes"": """"Access Token Manipulation techniques involve modifying or forging access tokens to gain unauthorized access to systems, applications, or resources. This rule detects an attempt to access the '.bash_history' file, which contains a record of previously executed commands, indicating an attempt to gain access to sensitive information or elevate privileges."""",
             ""Explanation"": ""This event is generated when activity relating to access token manipulation is detected.""
         }
     ][
   {
     ""sid"": ""1434"",
     ""Technique ID"": ""T1139"",
     ""Technique Name"": ""Access Web Services"",
     ""Quotes"": """"Access Web Services techniques involve accessing web services to retrieve or manipulate data. This rule detects an attempt to access the '.bash_history' file, which contains a history of commands executed by a user, via an HTTP request. This indicates an attempt to gain access to sensitive information on the server."""",
     ""Explanation"": ""This event is generated when .bash_history is requested by an external system.""
   }
 ][
   {
     ""sid"": ""1434"",
     ""Technique ID"": ""T1139"",
     ""Technique name"": ""Create or Modify Web Shell"",
     ""Quotes"": """"Create or Modify Web Shell techniques allow adversaries to create and/or modify web shell(s) to obtain remote access and control over an application or device. This rule detects an attempt to access a '.bash_history' file, which is commonly associated with web shell activity as it provides a history of executed commands, aiding in maintaining persistence and lateral movement within a compromised system."""",
     ""Explanation"": ""The IDS rule is triggered when there is an attempt to access a '.bash_history' file hosted on the HTTP server""
   }
 ][
         ""sid"": ""1434"",
         ""Technique ID"": ""T1139"",
         ""Technique name"": ""Access Web Service"",
         ""Quotes"": """"Access Web Service techniques involve interacting with legitimate web applications in order to obtain sensitive information or conduct malicious activities. This rule detects an attempt to access the '.bash_history' file on a web server, which is a common technique used to obtain user history and potentially escalate privileges."""",
         ""Explanation"": ""This rule detects attempts to access the '.bash_history' file, which contains a list of previously executed commands.""
     ][
         ""sid"": ""1434"",
         ""Technique ID"": ""T1139"",
         ""Technique name"": ""Hijack Execution Flow"",
         ""Quotes"": """"Hijack Execution Flow techniques involve manipulating the execution flow of host applications or processes to gain control or achieve persistence. The rule detects attempts to access the '.bash_history' file via an HTTP request, which could indicate an attempt to gain access to user activity and potentially execute commands on the system."""",
         ""Explanation"": ""This event is generated when activity relating to web application attacks is detected.""
     ]","['T1139', 'T1139', 'T1139', 'T1139', 'T1139', 'T1139', 'T1139', 'T1139', 'T1139', 'T1139', 'T1139']",['T1552']
21442,"[
   {
     ""sid"": ""21442"",
     ""Technique ID"": ""T1001"",
     ""Technique name"": ""Data Obfuscation"",
     ""Quotes"": """"Adversaries may obfuscate command and control traffic to make it more difficult to detect. The rule matches URI requests that use base64 encoding, which is a common method to obfuscate data and evade detection."""",
     ""Explanation"": ""This rule triggers on a known malicious URI request""
   },
   {
     ""sid"": ""21442"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Data Encoding"",
     ""Quotes"": """"Adversaries may encode data to make the content of command and control traffic more difficult to detect. The rule specifically matches base64-encoded URI requests, which aligns with the technique's description."""",
     ""Explanation"": ""This rule triggers on a known malicious URI request""
   }
 ][
   {
     ""sid"": ""21442"",
     ""Technique ID"": ""T1001"",
     ""Technique Name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve capturing network traffic to gather information or perform reconnaissance. This Snort rule looks for base64-encoded URI requests that are common among malware and attackers who use obfuscation techniques to evade detection or analysis. By sniffing network traffic and inspecting base64-encoded data, analysts can identify potentially malicious activity."""",
     ""Explanation"": ""This rule detects outbound HTTP traffic containing base64-encoded data in the URI, which is a common technique used by malware to hide malicious content and evade detection.""
   },
   {
     ""sid"": ""21442"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve encoding data to avoid detection or analysis. This rule specifically looks for base64-encoded URI requests, which is a common method used by malware and attackers to obfuscate malicious content and evade detection. By identifying and decoding base64-encoded data, analysts can uncover hidden malicious content and gain a better understanding of the attacker's intent."""",
     ""Explanation"": ""This rule detects outbound HTTP traffic containing base64-encoded data in the URI, which is a common technique used by malware to hide malicious content and evade detection.""
   }
 ][
         ""sid"": ""21442"",
         ""Technique ID"": ""T1001"",
         ""Technique name"": ""Domain Generation Algorithms"",
         ""Quotes"": """"Domain Generation Algorithms (DGAs) are techniques used by malware to generate domain names, often based on a seed value or algorithm, to avoid detection by blacklists and security measures. The rule identifies an attempt to generate a domain name using base64 encoding, which is a common method employed by DGAs."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ],
     [
         ""sid"": ""21442"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Phishing"",
         ""Quotes"": """"Phishing is a technique used by adversaries to trick users into providing sensitive information by impersonating trusted entities. The rule detects an attempt to retrieve phishing information through a series of parameters in a URI, including 'clk', 'bid', 'aid', 'sid', 'rd', and 'x86', which are often used in phishing campaigns."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]
 ][
   {
     ""sid"": ""21442"",
     ""Technique ID"": ""T1001"",
     ""Technique Name"": ""Network Reconnaissance"",
     ""Quotes"": """"Network Reconnaissance techniques involve using various methods to discover information about target systems, including network topology, asset details, and vulnerabilities. This rule detects suspicious HTTP traffic that includes base64-encoded data containing click, bid, affiliate (aid), site (sid), referral (rd), and architecture (x86) parameters, which are common elements in malicious URLs used for reconnaissance purposes."""",
     ""Explanation"": ""The rule matches, and base64-decodes GET requests matching a specified URI format. This traffic may be associated with malicious activity that harvests information such as click and affiliate data, system architecture, and other parameters that can be used for further reconnaissance and attacks.""
   },
   {
     ""sid"": ""21442"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""Data Encoding"",
     ""Quotes"": """"Data Encoding techniques involve encoding data to evade detection or analysis. This rule detects base64-encoded data within HTTP traffic, which is a common method attackers use to hide malicious payloads and evade signature-based detection systems."""",
     ""Explanation"": ""The rule detects base64-encoded data within HTTP traffic, which is a common method attackers use to hide malicious payloads and evade signature-based detection systems.""
   }
 ][
   {
     ""sid"": ""21442"",
     ""Technique ID"": ""T1001"",
     ""Technique name"": ""Network Sniffing"",
     ""Quotes"": """"Network Sniffing techniques involve monitoring and capturing network traffic to intercept sensitive information, such as credentials or data in transit. This rule is designed to detect malicious network traffic attempting to exfiltrate data by identifying base64-encoded URIs in HTTP GET requests that are known to be associated with malware-related command-and-control (C2) communication."""",
     ""Explanation"": ""This event looks for a known pattern in HTTP traffic that is indicative of a malware-related C2 communication.""
   },
   {
     ""sid"": ""21442"",
     ""Technique ID"": ""T1132"",
     ""Technique name"": ""Data Encrypted for Impact"",
     ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting data to hinder analysis and detection by security tools. This rule specifically looks for base64-encoded data within HTTP GET requests, which could be an indication of encrypted data being transmitted as part of a malware-related C2 communication."""",
     ""Explanation"": ""Base64 encoding is often used to obfuscate malicious data, making it harder for IDS to detect.""
   }
 ][
   {
     ""sid"": ""21442"",
     ""Technique ID"": ""T1132"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve leveraging publicly accessible remote services to establish a presence within a target network or maintain access for follow-on operations. This rule detects malicious traffic originating from external remote services, specifically an HTTP GET request to a known malicious URI encoded in base64 format. Adversaries often use external remote services as a means of command and control or data exfiltration."""",
     ""Explanation"": ""This rule is designed to identify malicious traffic originating from external remote services, specifically an HTTP GET request to a known malicious URI encoded in base64 format. Adversaries often use external remote services as a means of command and control or data exfiltration.""
   },
   {
     ""sid"": ""21442"",
     ""Technique ID"": ""T1001"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve the use of a web shell to establish remote access to a compromised system. This rule detects an attempt to access a known web shell on a web server, as indicated by the presence of a specific URI path in the HTTP request. Adversaries use web shells to maintain persistent access to compromised systems and execute arbitrary commands."""",
     ""Explanation"": ""This rule is designed to identify attempts to access a known web shell on a web server, as indicated by the presence of a specific URI path in the HTTP request. Adversaries use web shells to maintain persistent access to compromised systems and execute arbitrary commands.""
   }
 ][
     {
         ""sid"": ""21442"",
         ""Technique ID"": ""T1001"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shells techniques involve using malicious code uploaded to a web server to execute arbitrary commands or access sensitive information. The rule detects an HTTP request with a base64-encoded payload containing parameters like 'clk', 'bid', 'aid', 'sid', 'rd', and 'x86', which are often used in malicious web shell communications."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     },
     {
         ""sid"": ""21442"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Data Encoding"",
         ""Quotes"": """"Data Encoding techniques involve encoding data, such as malicious payloads or exfiltrated data, to evade detection or analysis. The rule specifically looks for base64-encoded data within an HTTP request, which is a common technique used by attackers to hide malicious content."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   ""sid"": ""21442"",
   ""Technique ID"": ""T1001"",
   ""Technique name"": ""Web Shell"",
   ""Quotes"": """"Web Shell techniques involve executing unauthorized remote code in an interactive session over HTTP on a compromised system. The rule specifically mentions the presence of a known malicious URI requested over HTTP. Web shells are often used by attackers to maintain persistent access to a system after initial compromise, enabling them to execute commands, upload files, and perform other malicious activities."""",
   ""Explanation"": ""This rule is detecting web shells requests.""
 ],
   ""sid"": ""21442"",
   ""Technique ID"": ""T1132"",
   ""Technique name"": ""Data Encoding"",
   ""Quotes"": """"Data Encoding techniques involve encoding or encrypting data to evade detection or analysis. The rule specifically mentions the presence of base64-encoded data in the requested URI. Attackers may use data encoding to hide malicious content within seemingly innocuous data, such as in phishing emails or malicious URLs."""",
   ""Explanation"": ""The data in this rule is base64 encoded.""
 ][
     {
         ""sid"": ""21442"",
         ""Technique ID"": ""T1132"",
         ""Technique Name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Adversaries may encrypt data intended to obfuscate its ultimate impact in an attempt to evade detection, analysis, and/or mitigation."""",
         ""Explanation"": ""The rule detects a connection from the internal network to an external HTTP server, where the HTTP request contains base64-encoded data. The rule specifically looks for base64-encoded data that includes the keyword ""clk"", followed by other values such as ""bid"", ""aid"", ""sid"", ""rd"", and ""x86"". This suggests that the data is part of a malicious URI, which could be used to download or execute malicious content on the internal network.""
     },
     {
         ""sid"": ""21442"",
         ""Technique ID"": ""T1001"",
         ""Technique Name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Adversaries may exfiltrate data through command and control (C2) channels established during the persistence phase to maintain stealth and evade network defenses."""",
         ""Explanation"": ""The rule detects a connection from the internal network to an external HTTP server, where the HTTP request contains base64-encoded data. This suggests that the data is being exfiltrated from the internal network to an external server over an HTTP connection, which could be part of a C2 channel.""
     }
 ][
         ""sid"": ""21442"",
         ""Technique ID"": ""T1001"",
         ""Technique name"": ""Network Sniffing"",
         ""Quotes"": """"Network Sniffing techniques involve capturing packets on a network to monitor communications. The rule is designed to detect attempts to establish connections to known malicious URIs by base64-encoding data to evade detection, which is a common tactic used by malware to communicate with remote command and control servers."""",
         ""Explanation"": ""This rule triggers when an outbound connection is made to a known malicious URI, indicating that the system may be infected with malware that is attempting to communicate with its command and control server.""
     ],
     [
         ""sid"": ""21442"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Data Encoding"",
         ""Quotes"": """"Data Encoding techniques involve encoding data or information using various methods to conceal its true meaning or purpose. The rule specifically looks for base64-encoded data in HTTP requests, which is commonly used by malware to encode command and control communications to evade detection."""",
         ""Explanation"": ""The rule detects base64-encoded data in outbound HTTP requests, indicating that the system may be infected with malware that is communicating with its command and control server in an encoded manner.""
     ]
 ][
     {
         ""sid"": ""21442"",
         ""Technique ID"": ""T1001"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending exfiltrated data to an attacker-controlled system through an established command and control channel. The rule detects an attempt to transmit an encoded string of parameters, such as 'clk', 'bid', 'aid', 'sid', 'rd', and 'x86', to a remote server using a base64-encoded HTTP request. This behavior is commonly observed in malware that establishes communication with command and control servers to exfiltrate sensitive data."""",
         ""Explanation"": ""HTTP request for known malicious URI - base64 encoded""
     },
     {
         ""sid"": ""21442"",
         ""Technique ID"": ""T1132"",
         ""Technique name"": ""Data Encrypted for Impact"",
         ""Quotes"": """"Data Encrypted for Impact techniques involve encrypting or encoding data to make analysis or detection more difficult. The rule detects the presence of base64-encoded data within an HTTP request, which is a common method used by malware and attackers to hide malicious payload or exfiltrated data."""",
         ""Explanation"": ""HTTP request for known malicious URI - base64 encoded""
     }
 ]","['T1001', 'T1132', 'T1001', 'T1132', 'T1001', 'T1132', 'T1001', 'T1132', 'T1001', 'T1132', 'T1132', 'T1001', 'T1001', 'T1132', 'T1001', 'T1132', 'T1132', 'T1001', 'T1001', 'T1132', 'T1001', 'T1132']",['T1001']
27968,"[
     ""sid"": ""27968"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Data Obfuscation"",
     ""Quotes"": """"Data Obfuscation techniques involve intentionally altering the form or appearance of data to hinder analysis, detection, or reverse engineering. This rule indicates the presence of a web shell connection associated with Chopper malware, which is known to use obfuscation techniques to evade detection. Specifically, it looks for a suspicious combination of parameters in the HTTP request, including 'X-Forwarded-For' header and specific content in the request body ('=Execute', 'On+Error+Resume+Next'), suggesting an attempt to establish a covert connection and execute commands through the web shell."""",
     ""Explanation"": ""This event is generated when activity relating to Chopper malware is detected.""
 ][
     {
         ""sid"": ""27968"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using malicious code that can be executed in a web browser to control a compromised system. This rule detects the presence of the 'Chopper' web shell, which is commonly used by attackers to maintain persistent access to compromised web servers and execute arbitrary commands on the system."""",
         ""Explanation"": ""This event is generated when traffic is detected that matches the characteristics of a web shell.""
     }
 ][
     {
         ""sid"": ""27968"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"Command and Scripting Interpreter techniques involve using a command and/or scripting interpreter installed on the target system to execute commands or scripts. In this rule, the pattern ""=Execute"" is used to search for commands being executed by the malicious script, commonly used by web shells to remotely control victim systems."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     },
     {
         ""sid"": ""27968"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""Scripting"",
         ""Quotes"": """"Scripting techniques involve executing scripts as part of an attack. In this case, the rule detects the presence of a command being executed by a script on the victim system, which could be used for malicious purposes such as data exfiltration or system manipulation."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""27968"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques entail deploying malicious scripts that grant adversaries direct access and control over a web server or application. This rule specifically detects a web shell embedded within an HTTP request seeking to access a 'Chopper' backdoor, which is a common method used by adversaries to establish and maintain remote control of a compromised system."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""27968"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised environment. This rule detects an attempt to connect to a web shell, which is a common method attackers use to transfer malicious tools or scripts into a compromised system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""27968"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web shells are malicious scripts that provide adversaries with a remote interface to manage and control compromised systems. This rule detects an attempt to upload a PHP web shell with the filename 'execute.php' using the 'X-Forwarded-For' header, which is a common method attackers use to bypass security restrictions and gain unauthorized access to web servers."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     ""sid"": ""27968"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script that provides remote access to a web server, to execute arbitrary commands on the server and interact with it. This rule identifies a specific pattern associated with the Chopper web shell, which is known to be used by attackers to control compromised systems and facilitate remote access."""",
     ""Explanation"": ""This event is generated when an inbound connection to a web server is detected.""
 ][
   {
     ""sid"": ""27968"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve deploying a web shell on a compromised system to provide remote access. This rule targets the 'Win.Backdoor.Chopper' web shell, which is often used by adversaries to establish remote control over compromised systems for malicious purposes."""",
     ""Explanation"": ""This rule detects the Chopper web shell, which is commonly associated with the malware of the same name. Chopper is known for establishing a web-based backdoor on compromised systems, allowing attackers to execute commands, upload and download files, and perform other malicious activities remotely.""
   }
 ][
   {
     ""sid"": ""27968"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, typically hosted on a compromised website or web server, to provide remote access and control over the underlying system. This rule detects a known HTTP POST request used by a specific malware (Win.Backdoor.Chopper) to communicate with its command and control server. The presence of a web shell often indicates that an attacker has gained unauthorized access to a system and is maintaining persistence for further exploitation and data exfiltration."""",
     ""Explanation"": ""This is an alert for a web shell connection from a backdoor malware, which allows remote execution of commands on the compromised machine.""
   }
 ][
   {
     ""sid"": ""27968"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious web-based interface that allows remote attackers to execute commands and control a compromised web server. This rule detects an attempt to establish a connection to a web shell, as indicated by the presence of the 'X-Forwarded-For' HTTP header and specific content in the HTTP client body, which are common indicators of web shell activity."""",
     ""Explanation"": ""This snort rule matches web shell activity directed at Apache servers and is related to the T1100 technique. The rule triggers when a client sends an HTTP request with a specific string in the HTTP body. This string is used by the Chopper web shell to execute arbitrary commands on the server.""
   },
   {
     ""sid"": ""27968"",
     ""Technique ID"": ""T1059"",
     ""Technique name"": ""Command and Scripting Interpreter"",
     ""Quotes"": """"Command and Scripting Interpreter techniques involve executing commands or scripts on a system to perform various malicious actions. This rule detects an attempt to execute a command or script on a web server, as indicated by the presence of specific content in the HTTP client body ('=Execute', 'On+Error+Resume+Next'), which are common indicators of command or script execution through a web shell."""",
     ""Explanation"": ""Command and Scripting Interpreter describes the adversary's use of an operating system's command interpreter to execute arbitrary commands or scripts.""
   }
 ][
     {
         ""sid"": ""27968"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell to execute arbitrary commands or interact with a compromised system over HTTP. This rule detects an incoming web request containing a malicious payload that attempts to download and execute a web shell using the ASP 'Execute' function and the 'On Error Resume Next' directive to bypass error handling, which is a common technique used by attackers to establish remote access to compromised systems."""",
         ""Explanation"": ""This rule is designed to detect attempts to exploit a vulnerability in web applications that allows attackers to upload and execute arbitrary code on the target system. The rule specifically looks for web requests that contain a payload that attempts to download and execute a web shell using the ASP 'Execute' function and the 'On Error Resume Next' directive to bypass error handling.""
     }
 ]","['T1100', 'T1100', 'T1059', 'T1204', 'T1100', 'T1105', 'T1100', 'T1100', 'T1100', 'T1100', 'T1100', 'T1059', 'T1100']","['T1505', 'T1219']"
27966,"[
         ""sid"": ""27966"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve executing malicious code within a web application's shell, which can allow adversaries to execute arbitrary commands, upload/download files, and perform other malicious activities. This rule detects an HTTP request containing code that attempts to execute a function called 'FromBase64String,' which is commonly used to decode and execute base64-encoded PowerShell commands or other malicious payloads through a web shell."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""27966"",
         ""Technique ID"": ""T1100"",
         ""Technique Name"": ""Web Shell"",
         ""Quotes"": """"Web shells are malicious scripts that provide remote access to a compromised system via the internet. This rule detects an attempt to establish a connection to a web shell hosted on the target system, indicating that an attacker is attempting to gain remote control."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""27966"",
     ""Technique ID"": ""T1100"",
     ""Technique name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using web shells to gain access to systems and execute commands. This rule detects a web shell using the Chopper backdoor, which leverages base64 encoding and HTTP headers for communication, similar to techniques used by other web shells to maintain persistence and execute commands."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
     {
         ""sid"": ""27966"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using a web shell, which is a malicious script that allows remote access and control of a compromised web server. The rule detects a connection to a web shell from a remote IP address, indicating an attacker's attempt to establish persistent access to the server."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
         ""sid"": ""27966"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Ingress Tool Transfer"",
         ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised environment. This rule detects an attempt to transfer a web shell, which is a type of malicious script that provides remote access and control of a compromised web server, using the HTTP protocol. The ""X-Forwarded-For"" header is commonly used to spoof the origin of a request, and the ""FromBase64String"" parameter suggests that the web shell is encoded in base64, which is a common technique to evade detection."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""27966"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve leveraging web shells to provide remote access to or control of a system or application, often through the use of a web browser. The detection of activity related to the 'Win.Backdoor.Chopper' backdoor using an HTTP connection with a specific header ('X-Forwarded-For') and specific content in the client body ('=Response' and 'FromBase64String') strongly suggests the use of a web shell."""",
         ""Explanation"": ""The rule detects communication with a web shell backdoor, which is a technique often used by attackers to maintain persistent access to compromised systems and execute commands remotely.""
     }
 ][
   {
     ""sid"": ""27966"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve using a web shell, which is a web-based interface that allows adversaries to execute commands and control a compromised system. This rule detects a connection to a web shell hosted on a compromised system, which is a common method attackers use to maintain persistent access."""",
     ""Explanation"": ""This event is generated when a web shell is detected.""
   }
 ][
   {
     ""sid"": ""27966"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shells techniques involve deploying and using web shell implants, which are malicious scripts or programs that provide remote access to a compromised web server or application. This rule detects a connection to a known Chooper web shell, which is commonly used by adversaries for remote control and persistence on a compromised system."""",
     ""Explanation"": ""This event is generated when Chooper Backdoor activity is detected.""
   }
 ][
   {
     ""sid"": ""27966"",
     ""Technique ID"": ""T1100"",
     ""Technique Name"": ""Web Shell"",
     ""Quotes"": """"Web Shell techniques involve the deployment of malicious code to a web server that allows for remote access and control of the underlying system. This rule detects an attempt to connect to a Chopper web shell, which is a commonly used backdoor implant that enables attackers to remotely execute commands and access sensitive data."""",
     ""Explanation"": ""The rule matches traffic to a known web shell, indicating a potential attempt to establish a remote connection and gain unauthorized access to the system.""
   }
 ][
         ""sid"": ""27966"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve using web shells, which are malicious scripts that allow attackers to maintain persistent and unauthorized access to a web server or application. This rule detects the presence of a Chopper web shell, which is a well-known and widely used web shell that provides attackers with remote access and control over the compromised system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
         ""sid"": ""27966"",
         ""Technique ID"": ""T1100"",
         ""Technique name"": ""Web Shell"",
         ""Quotes"": """"Web Shell techniques involve the use of a web shell to provide a remote command execution capability over HTTP or HTTPS to adversaries who have successfully compromised a web server. The alert detects an incoming HTTP connection from an external IP address to the organization's web server, where the attacker sends an HTTP POST request with a specific set of parameters, which indicates the presence of a Chopper web shell."""",
         ""Explanation"": ""This event is triggered by the detection of a web shell, a malicious script that is uploaded to a web server in order to gain remote access to the system.""
     ]","['T1100', 'T1100', 'T1100', 'T1100', 'T1105', 'T1100', 'T1100', 'T1100', 'T1100', 'T1100', 'T1100']","['T1505', 'T1219']"
2548,"[
   {
     ""sid"": ""2548"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted access to the HP Web JetAdmin 'setinfo.hts' script, which is a common target for attackers looking to exploit vulnerabilities in web applications."""",
     ""Explanation"": ""The rule detects an attempt to access the HP Web JetAdmin 'setinfo.hts' script, which is a potential exploitation attempt.""
   }
 ][
     {
         ""sid"": ""2548"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to access the '/plugins/hpjdwm/script/test/setinfo.hts' URI on HP Web JetAdmin, which could be an attempt to exploit a vulnerability in the application."""",
         ""Explanation"": ""This rule detects an attempt to exploit a vulnerability in HP Web JetAdmin through the '/plugins/hpjdwm/script/test/setinfo.hts' URI.""
     }
 ][
   {
     ""sid"": ""2548"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempt to access the '/plugins/hpjdwm/script/test/setinfo.hts' script in HP Web JetAdmin, which can be exploited to perform various malicious actions, including unauthorized access to sensitive information or remote code execution."""",
     ""Explanation"": """"HP Web Jetadmin setinfo access attempt.""""
   },
   {
     ""sid"": ""2548"",
     ""Technique ID"": ""T1204"",
     ""Technique Name"": ""Hijack Execution Flow"",
     ""Quotes"": """"Hijack Execution Flow techniques involve modifying the normal execution flow of a program or process to gain unauthorized control or access. The rule detects an attempt to access the '/plugins/hpjdwm/script/test/setinfo.hts' script in HP Web JetAdmin, which could be exploited using code injection to hijack the execution flow of the application and gain unauthorized access to sensitive information or execute arbitrary code."""",
     ""Explanation"": ""This rule is related to script injection, which would lead to hijacking execution flow.""
   }
 ][
     {
         ""sid"": ""2548"",
         ""Technique ID"": ""T1059"",
         ""Technique name"": ""Command and Scripting Interpreter"",
         ""Quotes"": """"Command and Scripting Interpreter techniques use commands and scripts to automate tasks, such as lateral movement after gaining access to the command prompt. This rule detects an attempt to access the '/plugins/hpjdwm/script/test/setinfo.hts' URL on an HP Web JetAdmin server, which is commonly targeted by attackers to run arbitrary commands through HP JetAdmin's scripting functionality."""",
         ""Explanation"": ""HP Web Jetadmin <= 10.2 SP8 allows remote command execution by unauthenticated attackers via the /plugins/hpjdwm/script/test/setinfo.hts CGI script.""
     }
 ][
         ""sid"": ""14409"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted access to the 'setinfo.hts' script in the HP Web JetAdmin application, which is a known attack vector for exploiting vulnerabilities and gaining unauthorized access to the underlying system."""",
         ""Explanation"": ""This event is generated when a buffer overflow vulnerability in HP Data Protector is exploited.""
     ],
         ""sid"": ""14409"",
         ""Technique ID"": ""T1202"",
         ""Technique name"": ""Indirect Command Execution"",
         ""Quotes"": """"Indirect Command Execution techniques involve using utilities that allow for command execution without invoking a command-line interpreter. This rule detects an attempt to access a script ('setinfo.hts') that could potentially be used to execute arbitrary commands on the underlying system."""",
         ""Explanation"": ""This rule detects an attempt to access a CGI script, which is a common technique used to execute commands on web servers.""
     ][
   {
     ""sid"": ""2548"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques involve exploiting vulnerabilities in remote services, often running on public-facing hosts, to gain unauthorized access or execute arbitrary code."""",
     ""Explanation"": ""This event generates an alert when a setinfo.hts page is accessed on an HP Web JetAdmin plugin, attempting to exploit it.""
   },
   {
     ""sid"": ""2548"",
     ""Technique ID"": ""T1068"",
     ""Technique name"": ""Exploitation for Privilege Escalation"",
     ""Quotes"": """"Exploitation for Privilege Escalation techniques involve exploiting a vulnerability to elevate privileges on a local system."""",
     ""Explanation"": ""This event is related to Privilege Escalation because the attacker is trying to elevate privileges in order to gain access to the targeted system.""
   }
 ][
     ""sid"": ""2548"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule targets an attempt to exploit the HP JetAdmin setinfo.hts script, which is a known vulnerability in the HP Web JetAdmin application. Exploiting this vulnerability can allow an attacker to execute arbitrary code on the target system."""",
     ""Explanation"": ""This rule is triggered when an attempt to access the /plugins/hpjdwm/script/test/setinfo.hts script on an HP Web JetAdmin server is detected, which is a known attack pattern used to exploit a vulnerability in the application.""
 ][
   {
     ""sid"": ""2548"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted access to the '/plugins/hpjdwm/script/test/setinfo.hts' URI on HP Web JetAdmin servers, which is commonly exploited by attackers to execute arbitrary commands on vulnerable systems."""",
     ""Explanation"": ""This event is generated when a possible attack against a web server is detected.""
   }
 ][
   {
     ""sid"": ""2548"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a vulnerability in HP Web JetAdmin 'setinfo.hts' script to gain unauthorized access to the underlying system. Attackers may exploit such vulnerabilities to execute arbitrary commands or gain elevated privileges."""",
     ""Explanation"": ""This rule is related to the exploitation of vulnerabilities in public-facing applications.""
   }
 ][
         ""sid"": ""2548"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted access to the HP Web JetAdmin 'setinfo.hts' script, which is a common target for attackers to exploit vulnerabilities in web applications."""",
         ""Explanation"": ""This event is generated when an attempt is made to access a specific script on the HP Web JetAdmin interface.""
     ][
         ""sid"": ""2548"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted access to the HP Web JetAdmin 'setinfo.hts' script, which is a known vulnerability that allows attackers to execute arbitrary commands on the underlying system."""",
         ""Explanation"": ""This event is generated when an attempt to access the HP Web JetAdmin 'setinfo.hts' script is detected.""
     ]","['T1190', 'T1190', 'T1190', 'T1204', 'T1059', 'T1190', 'T1202', 'T1210', 'T1068', 'T1190', 'T1190', 'T1190', 'T1190', 'T1190']",['T1531']
37257,"[
   {
     ""sid"": ""37257"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a remote code execution vulnerability in Microsoft Internet Explorer's mapi32x.dll component, which is commonly used by attackers to compromise web browsers and execute malicious code."""",
     ""Explanation"": """"
   }
 ][
     ""sid"": ""37257"",
     ""Technique ID"": ""T1068"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a dll-load vulnerability in Microsoft IE, where a specially crafted URL containing the ""mapi32x.dll"" string could trigger a remote code execution attack."""",
     ""Explanation"": ""This rule detects an attempted exploitation of a dll-load vulnerability in Microsoft IE.""
 ][
     {
         ""sid"": ""37257"",
         ""Technique ID"": ""T1190"",
         ""Technique Name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of a dll-load vulnerability in the Microsoft Internet Explorer mapi32x.dll ActiveX control, which is a common technique used by attackers to compromise web browsers."""",
         ""Explanation"": ""This event is generated when an attempt is made to exploit a vulnerability in the Microsoft Internet Explorer mapi32x.dll ActiveX control.""
     }
 ][
     {
         ""sid"": ""37257"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a vulnerability in the mapi32x.dll file used by Microsoft Internet Explorer, which is a common method attackers use to gain unauthorized access to systems by exploiting vulnerabilities in web browsers."""",
         ""Explanation"": ""IE mapi32x.dll dll load exploit attempt.""
     }
 ][
   {
     ""sid"": ""37257"",
     ""Technique ID"": ""T1189"",
     ""Technique name"": ""Exploit In-Browser Execution"",
     ""Quotes"": """"Exploit In-Browser Execution techniques involve using vulnerabilities in user-installed browsers and browser plugins to execute arbitrary code, often within the context of the user's browsing session. This rule detects an attempt to exploit a DLL hijacking vulnerability in Microsoft Internet Explorer's mapi32x.dll, which can be used to load and execute arbitrary code."""",
     ""Explanation"": ""This event is generated when an attempt is made to exploit the mapi32x.dll DLL hijacking vulnerability in Microsoft Internet Explorer.""
   }
 ][
   {
     ""sid"": ""37257"",
     ""Technique ID"": ""T1203"",
     ""Technique name"": ""Exploitation for Client Execution"",
     ""Quotes"": """"Exploitation for Client Execution techniques involve exploiting vulnerabilities in client applications to execute arbitrary code on affected systems. The rule detects an attempted exploitation of a vulnerability in the Microsoft Internet Explorer's mapi32x.dll component, which can allow remote attackers to execute arbitrary code in the context of the affected user."""",
     ""Explanation"": ""This alert indicates an attempt to exploit a remote code execution vulnerability in Internet Explorer's mapi32x.dll component using a specially crafted HTTP request.""
   }
 ][
     {
         ""sid"": ""37257"",
         ""Technique ID"": ""T1204"",
         ""Technique name"": ""User Execution"",
         ""Quotes"": """"User Execution involves persuading a user to unknowingly execute malicious software. The rule detects an attempted exploit of a vulnerability in Microsoft Internet Explorer's mapi32x.dll DLL, which could allow attackers to execute arbitrary code through a specially crafted HTML document. This technique is commonly used to compromise systems via malicious websites or phishing campaigns that trick users into opening malicious links or attachments."""",
         ""Explanation"": ""This event is generated when activity relating to a buffer overflow attack is detected.""
     }
 ][
     {
         ""sid"": ""37257"",
         ""Technique ID"": ""T1190"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploitation of the mapi32x.dll DLL-loading vulnerability in Microsoft Internet Explorer, which allowed remote attackers to execute arbitrary code by convincing a user to visit a malicious website."""",
         ""Explanation"": ""This event is generated when an attempt to exploit a vulnerability on a web server is detected. The vulnerability allows execution of arbitrary code by remote attackers when they convince a user to visit a malicious website.""
     }
 ][
   {
     ""sid"": ""37257"",
     ""Technique ID"": ""T1189"",
     ""Technique Name"": ""Exploit Vulnerable Software"",
     ""Quotes"": """"Exploit Vulnerable Software techniques involve targeting and exploiting vulnerabilities in software applications to execute arbitrary code or gain unauthorized access. This rule detects an exploit attempt targeting a vulnerability in Microsoft Internet Explorer's 'mapi32x.dll' library, which allowed attackers to execute arbitrary code in the context of the browser."""",
     ""Explanation"": ""This rule is triggered when an attempt to exploit a vulnerability in Microsoft Internet Explorer's mapi32x.dll library is detected. The vulnerability, CVE-2014-6332, allows remote attackers to execute arbitrary code in the context of the browser.""
   }
 ][
   {
     ""sid"": ""37257"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted exploit of a vulnerability in Microsoft Internet Explorer's mapi32x.dll ActiveX control, which is a common method attackers use to gain remote code execution on vulnerable systems."""",
     ""Explanation"": ""This rule is related to an attempt to exploit a dll-load vulnerability in Microsoft Internet Explorer.""
   }
 ][
   {
     ""sid"": ""37257"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. In this case, the rule detects an attempted exploit of a vulnerability in Microsoft Internet Explorer's mapi32x.dll module, which could allow a remote attacker to execute arbitrary code in the context of the user running the browser."""",
     ""Explanation"": ""This rule detects exploitation of a vulnerability on the browser (DLL Hijacking).""
   }
 ]","['T1190', 'T1068', 'T1190', 'T1190', 'T1189', 'T1203', 'T1204', 'T1190', 'T1189', 'T1190', 'T1190']",['T1574']
56594,"[
   {
     ""sid"": ""56594"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools, capabilities, or data into a target environment to support post exploitation activities. The rule detects an attempted download of the GORAT malware, often used by adversaries to establish a backdoor on compromised systems."""",
     ""Explanation"": ""attempted to download a malware""
   }
 ][
   {
     ""Sid"": ""56594"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""This rule detects malware download attempt by a multi-platform malware known as GORAT.""
   }
 ][
     ""sid"": ""56594"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Data Encrypted"",
     ""Quotes"": """"Adversaries may encrypt data as a means of protecting it from unauthorized access and rendering it unreadable to third parties. This rule detects an attempt to download malware (GORAT) which is encrypted using base64 encoding, a common method attackers use to obfuscate malicious payloads to bypass security controls."""",
     ""Explanation"": ""This rule identifies attempts to download encrypted malicious content.""
 ][
     ""sid"": ""56594"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer involves adversaries attempting to transfer tools or malware onto a system via network connections. This rule detects an attempted download of the GORAT malware, which is commonly spread through malicious links and phishing emails."""",
     ""Explanation"": ""The rule is triggered when an FTP, HTTP, IMAP, or POP3 connection is established from the external network to the internal network and contains file data that matches the malware signature.""
 ][
   {
     ""sid"": ""56594"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"Ingress Tool Transfer techniques involve transferring tools or other files from an external system into a compromised environment, which may include malicious payloads or remote access tools. This rule detects an attempt to download the MultiOS.Malware.GORAT malware, which is a malicious file used for backdoor access and data exfiltration."""",
     ""Explanation"": ""This rule detects an attempt to download a malicious file from an external system.""
   }
 ][
   {
     ""sid"": ""56594"",
     ""Technique ID"": ""T1133"",
     ""Technique Name"": ""External Remote Services"",
     ""Quotes"": """"External Remote Services techniques involve using external services, often provided by the attacker, for facilitating command and control, data exfiltration, or other malicious activities. This rule detects an attempt to download malware from an external website, which is a common method attackers use to install malware on a compromised system."""",
     ""Explanation"": "" The rule is trying to detect the download of a malware.""
   }
 ][
   {
     ""sid"": ""56594"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Ingress Tool Transfer"",
     ""Quotes"": """"T1105, Ingress Tool Transfer, involves adversaries transferring a tool or capability into a victim environment"""",
     ""Explanation"": ""This rule detects an attempt to download malicious software known as 'MultiOS.Malware.GORAT' to the victim's host. The malware is typically transferred using an FTP, HTTP, IMAP, or POP3 connection.""
   }
 ][
   {
     ""sid"": ""56594"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": ""\""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries.\"""",
     ""Explanation"": ""This event is generated when activity relating to a multi-os malware GORAT backdoor download attempt is detected.""
   }
 ][
   {
     ""sid"": ""56594"",
     ""Technique ID"": ""T1105"",
     ""Technique name"": ""Data Encapsulation"",
     ""Quotes"": """"Data Encapsulation techniques involve hiding data within other data or using a different encoding scheme to evade detection and analysis. This rule detects an attempt to download the GORAT malware, which often uses data encapsulation techniques to conceal its malicious payload."""",
     ""Explanation"": ""This event is generated when an attempt to download malware is detected.""
   }
 ][
   {
     ""sid"": ""56594"",
     ""Technique ID"": ""T1105"",
     ""Technique Name"": ""Signed Binary Proxy Execution"",
     ""Quotes"": """"Signed Binary Proxy Execution is a technique where an adversary may sign a malicious executable with a trusted, stolen, or otherwise valid digital certificate to bypass security controls and allow the malware to run in an otherwise restricted environment. This rule indicates the presence of malware that is attempting to download and execute a malicious payload via file data channels, which is consistent with the behavior of signed binary proxy execution."""",
     ""Explanation"": ""This rule detects malware that is attempting to download and execute a malicious payload via file data channels.""
   }
 ][
         ""sid"": ""56594"",
         ""Technique ID"": ""T1105"",
         ""Technique name"": ""Network File Transfer"",
         ""Quotes"": """"Network File Transfer techniques involve transferring files over a remote network connection, which can be used to download malware or exfiltrate sensitive data. The rule identifies a malware download attempt by detecting a malicious file transfer over common file transfer ports (FTP, HTTP, IMAP, POP3)."""",
         ""Explanation"": ""This event is generated when an attempt to transmit a file possibly containing malicious content is detected.""
     ]","['T1105', 'T1190', 'T1105', 'T1105', 'T1105', 'T1133', 'T1105', 'T1190', 'T1105', 'T1105', 'T1105']",['T1050']
59502,"[
         ""sid"": ""59502"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted buffer overflow attack on the Microsoft Windows Server 2003 smart card authentication service, which is a common method attackers use to exploit software vulnerabilities and gain unauthorized access to systems."""",
         ""Explanation"": ""This event is generated when an attempt is made to exploit a buffer overflow vulnerability in the Microsoft Windows Server 2003 smart card authentication service.""
     ][
         ""sid"": ""59502"",
         ""Technique ID"": ""T1189"",
         ""Technique name"": ""Exploit Local File"",
         ""Quotes"": """"Exploit Local File techniques involve accessing and exploiting local files on a system to manipulate or disrupt its operation. This rule detects an attempt to exploit a buffer overflow vulnerability in the smart card authentication functionality of Microsoft Windows Server 2003. The attacker sends a specially crafted message that triggers the vulnerability, allowing them to execute arbitrary code on the target system."""",
         ""Explanation"": ""This event is generated when there is an attempt to execute a buffer overflow against a Microsoft Windows system using a specially crafted message.""
     ][
   {
     ""sid"": ""59502"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted buffer overflow attack targeting Microsoft Windows Server 2003's smart card authentication feature, which is a common method attackers use to exploit software vulnerabilities."""",
     ""Explanation"": ""Microsoft Windows Server 2003 smart card authentication buffer overflow attempt""
   }
 ][
         ""sid"": ""59502"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a buffer overflow vulnerability in the smart card authentication mechanism of Microsoft Windows Server 2003, which could allow an attacker to execute arbitrary code on the target system."""",
         ""Explanation"": ""This IDS rule detects attempts to exploit a buffer overflow vulnerability in the smart card authentication mechanism of Microsoft Windows Server 2003, which could allow an attacker to execute arbitrary code on the target system.""
     ][
   {
     ""sid"": ""59502"",
     ""Technique ID"": ""T1603"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule targets a specific vulnerability (CVE-2012-0004) in Microsoft Windows Server 2003's Smart Card Authentication service, which could allow remote attackers to execute arbitrary code on the system."""",
     ""Explanation"": ""The rule looks for specific attack patterns known to be associated with CVE-2012-0004.""
   }
 ][
   {
     ""sid"": ""59502"",
     ""Technique ID"": ""T1210"",
     ""Technique name"": ""Exploitation of Remote Services"",
     ""Quotes"": """"Exploitation of Remote Services techniques involve targeting vulnerabilities in remote services to gain unauthorized access to internal systems. This rule detects an attempt to exploit a buffer overflow vulnerability in the Microsoft Windows Server 2003 smart card authentication service, which could allow an attacker to execute arbitrary code on the target system."""",
     ""Explanation"": ""This rule is designed to detect attempts to exploit a buffer overflow vulnerability in the Microsoft Windows Server 2003 smart card authentication service. Successful exploitation of this vulnerability could allow an attacker to execute arbitrary code on the target system. The rule uses a combination of content matching and byte extraction to identify and block these attacks.""
   }
 ][
     ""sid"": ""59502"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"""""Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a buffer overflow vulnerability in the smart card authentication component of Microsoft Windows Server 2003, which allows remote attackers to execute arbitrary code on the target system."""""",
     ""Explanation"": """"""This event is generated when an attempt is made to exploit a buffer overflow vulnerability in the smart card authentication component of Microsoft Windows Server 2003.""""""
 ][
     {
         ""sid"": ""59502"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted buffer overflow attack on Microsoft Windows Server 2003's smart card authentication service, which is a common method attackers use to exploit software vulnerabilities and gain unauthorized access to systems."""",
         ""Explanation"": ""This event is indicating that an attempt has been made to exploit a buffer overflow vulnerability in smart card authentication on Microsoft Windows Server 2003.""
     }
 ][
         ""sid"": ""59502"",
         ""Technique ID"": ""T1210"",
         ""Technique name"": ""Exploit Public-Facing Application"",
         ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted buffer overflow attack targeting a vulnerability in Microsoft Windows Server 2003's smart card authentication feature."""",
         ""Explanation"": ""This vulnerability allows attackers to execute arbitrary code on the target system by sending a specially crafted packet to the smart card authentication service.""
     ][
   {
     ""sid"": ""59502"",
     ""Technique ID"": ""T1210"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a buffer overflow vulnerability in Microsoft Windows Server 2003's smart card authentication mechanism, which could allow an attacker to execute arbitrary code on the target system."""",
     ""Explanation"": ""This event is generated when there is an attempt to exploit the Microsoft Windows Server 2003 smart card authentication buffer overflow vulnerability.""
   },
   {
     ""sid"": ""59502"",
     ""Technique ID"": ""T1190"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempt to exploit a buffer overflow vulnerability in Microsoft Windows Server 2003's smart card authentication mechanism, which could allow an attacker to execute arbitrary code on the target system."""",
     ""Explanation"": ""This event is generated when there is an attempt to exploit the Microsoft Windows Server 2003 smart card authentication buffer overflow vulnerability.""
   }
 ][
   {
     ""sid"": ""59502"",
     ""Technique ID"": ""T1211"",
     ""Technique Name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. This rule detects an attempted buffer overflow exploit against the Remote Desktop Protocol (RDP) service on Microsoft Windows Server 2003, which is a common attack vector used to compromise systems."""",
     ""Explanation"": ""This event is generated when an attempt to exploit a buffer overflow vulnerability in Microsoft Windows Server 2003 smart card authentication is detected.""
   }
 ]","['T1210', 'T1189', 'T1190', 'T1210', 'T1603', 'T1210', 'T1190', 'T1210', 'T1210', 'T1210', 'T1190', 'T1211']",['T1569']
23780,"[
         ""sid"": ""23780"",
         ""Technique ID"": ""T1098"",
         ""Technique name"": ""Outbound Communications"",
         ""Quotes"": """"Outbound Communications techniques involve establishing network connections to external systems or services. This rule detects an outbound connection from an infected host to a known Command and Control (C&C) server associated with the Win.Trojan.Begfanit malware family. The rule looks for a specific pattern within the HTTP traffic, which is a common method used by malware to communicate with its C&C server."""",
         ""Explanation"": ""This event is generated when a suspected outbound connection to a known malicious IP address is detected.""
     ][
   {
     ""sid"": ""23780"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over Alternative Protocol"",
     ""Quotes"": ""\""Exfiltration Over Alternative Protocol techniques involve exfiltrating data through alternate communication channels to avoid detection, such as by transferring data over non-standard ports or encoding data within seemingly innocuous traffic.\"" \""The rule identifies an outbound connection from an infected host to an external IP address using port 80, which is typically associated with HTTP traffic. However, the content of the communication indicates that it is being used to exfiltrate data over HTTP, which is an alternative protocol for data exfiltration.""
   }
 ][
   {
     ""sid"": ""23780"",
     ""Technique ID"": ""T1496"",
     ""Technique name"": ""Establish Command and Control"",
     ""Quotes"": """"Establish Command and Control techniques involve establishing covert communication channels with compromised systems to facilitate the remote control and management of those systems."""",
     ""Explanation"": ""The rule detects an outbound connection to a known malicious server that is commonly used by the Win.Trojan.Begfanit.A malware family. This outbound connection is indicative of the malware establishing a command and control channel with a remote server for receiving instructions and sending sensitive information.""
   }
 ][
         ""sid"": ""23780"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve data being moved from a compromised system to external actors through a covert channel that was previously established during the initial compromise phase."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
     {
         ""sid"": ""26318"",
         ""Technique ID"": ""T1574"",
         ""Technique Name"": ""Hijack Execution Flow"",
         ""Quotes"": """"Hijack Execution Flow techniques involve altering the normal flow of program execution to execute malicious code.This rule detects attempts to exploit a vulnerability in Microsoft Office (CVE-2017-11882) to achieve arbitrary code execution by manipulating the flow of execution when parsing specially crafted Office documents."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     }
 ][
   {
     ""sid"": ""23780"",
     ""Technique ID"": ""T1083"",
     ""Technique Name"": ""File and Directory Discovery"",
     ""Quotes"": ""\""File and Directory Discovery techniques involve searching or enumerating the contents of a file system directory to locate files of interest or to identify directory structures.\"" The rule's content pattern, \""|0D 0A 0D 0A|\"", matches a carriage return followed by a line feed, which are typical end-of-line characters in text-based logs or files. This suggests that the rule is looking for specific file content, possibly during a file enumeration or discovery operation."",
     ""Explanation"": ""This rule detects outbound communication from a host infected with the Win.Trojan.Begfanit.A malware, which is known to enumerate files and directories within a compromised system to identify sensitive information.""
   }
 ][
   {
     ""sid"": ""23780"",
     ""Technique ID"": ""T1041"",
     ""Technique Name"": ""Exfiltration Over C2 Channel"",
     ""Quotes"": """"Exfiltration Over C2 Channel techniques involve the exfiltration of data over an established command and control (C2) channel. This rule identifies outbound connections to a remote host associated with the Win.Trojan.Begfanit.A malware, indicating the potential exfiltration of data over the C2 channel."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""23780"",
         ""Technique ID"": ""T1048"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve sending data outside of a victim environment to a command and control server. This rule detects outbound communication from a host infected with the Begfanit Trojan, which exfiltrates sensitive information to a remote server. The rule identifies the specific HTTP user-agent string and base64-encoded data that the Trojan uses to establish communication."""",
         ""Explanation"": ""This event is generated when malware is detected attempting to exfiltrate data from your network.""
     ][
         ""sid"": ""23780"",
         ""Technique ID"": ""T1548"",
         ""Technique name"": ""Abuse Elevation Control Mechanism"",
         ""Quotes"": """"Abuse Elevation Control Mechanism techniques involve bypassing or abusing mechanisms that prevent unauthorized elevation of privileges to gain higher-level access. The rule detects an outbound connection from a compromised host to a known malware command and control (C2) server. In this attack, the adversary could leverage the Trojan to elevate privileges and gain unauthorized access to the victim's system."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ][
   {
     ""sid"": ""23780"",
     ""Technique ID"": ""T1401"",
     ""Technique name"": ""Outbound Command and Control"",
     ""Quotes"": """"Outbound Command and Control techniques involve communication from a compromised system to a command and control (C2) server operated by an adversary. This rule appears to detect outbound communication from malware (identified as Win.Trojan.Begfanit.A) to a C2 server. The content pattern matches a specific HTTP User-Agent string that is often associated with this malware family, indicating an attempt to establish communication with its C2 server."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""23780"",
         ""Technique ID"": ""T1041"",
         ""Technique name"": ""Exfiltration Over Command and Control Channel"",
         ""Quotes"": """"Exfiltration Over Command and Control Channel techniques involve transferring data from a compromised system to a C2 server. This rule detects outbound traffic from an infected host to a known C2 server, indicating that the malware is attempting to exfiltrate sensitive data."""",
         ""Explanation"": ""This event is generated when activity relating to malware is detected.""
     ]","['T1098', 'T1041', 'T1496', 'T1041', 'T1574', 'T1083', 'T1041', 'T1048', 'T1548', 'T1401', 'T1041']",['T1001']
1692,"[
     {
         ""sid"": ""1692"",
         ""Technique ID"": ""T1485"",
         ""Technique Name"": ""Data Destruction"",
         ""Quotes"": """"Data Destruction techniques involve destroying data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources."""",
         ""Explanation"": ""This rule is detecting an attempt to drop a table in an Oracle database, which could result in data loss and disruption of database services.""
     }
 ][
   {
     ""sid"": ""1692"",
     ""Technique ID"": ""T1109"",
     ""Technique Name"": ""Data Manipulation"",
     ""Quotes"": """"Data Manipulation techniques involve modifying or destroying data to disrupt normal system operations, gain unauthorized access or sensitive information, or otherwise compromise system integrity. This rule detects an attempt to drop a table in an Oracle database, which is a common method attackers use to modify or destroy data."""",
     ""Explanation"": ""This rule triggers on traffic that contains the string \""drop table\"". This string could be used to drop a table in a database and could lead to data loss.""
   }
 ][
   {
     ""sid"": ""1692"",
     ""Technique ID"": ""T1485"",
     ""Technique name"": ""SQL Injection"",
     ""Quotes"": """"SQL Injection techniques involve exploiting vulnerabilities in database management systems to execute malicious SQL statements that manipulate or extract sensitive data. This rule detects an attempt to drop a table in an Oracle database, which is a common tactic used to destroy or modify critical data."""",
     ""Explanation"": ""This event is generated when a SQL injection attempt is detected.""
   }
 ][
   {
     ""sid"": ""1692"",
     ""Technique ID"": ""T1485"",
     ""Technique Name"": ""Data Destruction"",
     ""Quotes"": """"Data Destruction techniques intentionally destroy data on a system to render it unusable to authorized users. This rule specifically detects an attempt to drop a table from an Oracle database, which could result in the loss of critical information."""",
     ""Explanation"": ""This event is generated when an attempt to drop a table from an Oracle database is detected.""
   }
 ][
     ""sid"": ""1692"",
     ""Technique ID"": ""T1484"",
     ""Technique name"": ""Data Destruction"",
     ""Quotes"": """"Data Destruction techniques involve destroying or altering data to render it unusable. This rule detects an attempt to drop a table in an Oracle database, which is a common method attackers use to destroy data."""",
     ""Explanation"": ""This event is generated when an attempt to drop a table in a database is detected.""
 ][
   {
     ""sid"": ""1692"",
     ""Technique ID"": ""T1212"",
     ""Technique name"": ""Exploitation for Credential Access"",
     ""Quotes"": """"Exploitation for Credential Access techniques involve exploiting software vulnerabilities in an attempt to collect credentials, such as usernames and passwords. This rule detects a specific attempt to target Oracle databases by executing 'drop table' commands, which can help attackers remove evidence of their malicious activities."""",
     ""Explanation"": ""This rule checks for the 'drop table' command in Oracle database""
   }
 ][
     ""sid"": ""1692"",
     ""Technique ID"": ""T1488"",
     ""Technique name"": ""SQL Injection"",
     ""Quotes"": """"SQL injection involves exploiting vulnerabilities in a database management system to execute unauthorized SQL queries. This rule detects an attempt to drop a table in an Oracle database, which is a common technique used to destroy or manipulate data."""",
     ""Explanation"": """"The rule triggers when it detects an attempt to drop a table in an Oracle database, which is a form of database manipulation that typically involves executing SQL queries.""""""[
   {
     ""sid"": ""38563"",
     ""Technique ID"": ""T1190"",
     ""Technique name"": ""Exploit Public-Facing Application"",
     ""Quotes"": """"Exploit Public-Facing Application techniques involve targeting vulnerabilities in externally facing applications to gain unauthorized access or execute arbitrary code. The rule detects an attempted blind SQL injection attack on the Symantec Web Gateway's 'blocked.php' page, which is a common method attackers use to exploit web applications by manipulating SQL queries."""",
     ""Explanation"": ""This event is generated when activity relating to malware is detected.""
   }
 ][
         ""sid"": ""1692"",
         ""Technique ID"": ""T1490"",
         ""Technique name"": ""SQL Injection"",
         ""Quotes"": """"SQL Injection techniques involve exploiting vulnerabilities in database management systems to execute arbitrary SQL queries and access unauthorized data or perform unauthorized actions on the database. This rule specifically detects attempts to drop tables in an Oracle database, which is a common SQL injection attack tactic."""",
         ""Explanation"": ""This even is generated when it detects the sole attack attempt to drop tables in an Oracle database.""
     ][
   {
     ""sid"": ""1692"",
     ""Technique ID"": ""T1497"",
     ""Technique Name"": ""Virtualization/Sandbox Evasion"",
     ""Quotes"": """"Virtualization/Sandbox Evasion techniques involve detecting and avoiding analysis environments to evade detection and analysis. This rule detects attempts to drop tables in an Oracle database, which could be an attempt by an attacker to evade detection by removing evidence of malicious activity."""",
     ""Explanation"": ""This event is generated when an attempt is made to drop a database table.""
   }
 ][
     {
         ""sid"": ""1692"",
         ""Technique ID"": ""T1592"",
         ""Technique Name"": ""Disable or Modify Tools"",
         ""Quotes"": """"Disable or Modify Tools techniques involve disabling or modifying tools or features built into a system that could be used for detecting or responding to attacks. The rule detects an attempt to drop a table in Oracle database, which suggests attempts to disable security or monitoring tools by modifying database components."""",
         ""Explanation"": ""This rule is designed to detect attempts to drop tables in an Oracle database, which could lead to the loss of critical data.""
     }
 ]","['T1485', 'T1109', 'T1485', 'T1485', 'T1484', 'T1212', 'T1488', 'T1190', 'T1490', 'T1497', 'T1592']",['T1565']
